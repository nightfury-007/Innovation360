<?xml version="1.0" encoding="utf-8"?>
<bpr:release xmlns:bpr="http://www.blueprism.co.uk/product/release">
    <bpr:name>utilities-obj</bpr:name>
    <bpr:release-notes />
    <bpr:created>2024-10-31 09:42:12Z</bpr:created>
    <bpr:package-id>-1</bpr:package-id>
    <bpr:package-name>&lt;Adhoc Package&gt;</bpr:package-name>
    <bpr:user-created-by>TN500240</bpr:user-created-by>
    <bpr:contents count="60">
        <object id="9fc19dda-3610-454f-8713-a55af212d309" name="Data - OLEDB" xmlns="http://www.blueprism.co.uk/product/process"><process name="Data - OLEDB" version="5.0.11" bpversion="7.0.1.49890" narrative="A SQL interface for interacting with OLEDB data sources" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>ed09581b-7493-46ed-8dfa-8f00d46356b0</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><endpoint narrative="&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;" /><subsheet subsheetid="cfb6da91-518b-40a3-8e0e-115ff0252ea7" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-161</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="90429413-7792-4513-8bc0-d6d079aa08b9" type="Normal" published="True"><name>Set Connection</name><view><camerax>20</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="459569f2-c792-4948-8884-5c2a0917cc16" type="Normal" published="True"><name>Open</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5" type="Normal" published="True"><name>Close</name><view><camerax>86</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="780529b8-393d-4d1d-bc5f-34f383fe53ec" type="Normal" published="True"><name>Get Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f3bf5e12-d2cf-4c5d-bda5-0deae3c26316" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d16cc64f-d5d1-4aaf-bea5-f814e1f2657b</onsuccess></stage><stage stageid="d16cc64f-d5d1-4aaf-bea5-f814e1f2657b" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0efcc61e-6916-4463-ae94-c24edb2adc75" name="Stage1" type="ProcessInfo"><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.XML.dll</reference></references><imports><import>System</import><import>System.Data</import><import>System.Data.OLEDB</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[Private moConnection As OLEDBConnection]]></code></stage><stage stageid="fd95e8ae-614b-4bae-a0f9-cbd04cef37ce" name="Clean Up" type="SubSheetInfo"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e91da0c2-e60f-4eae-a108-bd99aaff046f" name="Start" type="Start"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>88b89098-8bb2-42fc-8e43-bad5b1e4f400</onsuccess></stage><stage stageid="91836284-14a0-4c0f-b9d5-8cd74b4d1632" name="End" type="End"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf7a7a0d-0c2b-4a9e-8a52-19bdf46ef4cc" name="Set Connection" type="SubSheetInfo"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>Sets the connection details for the database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5395eb12-61a3-4005-88a3-ceda307cf9b1" name="Start" type="Start"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Database" narrative="The path to the oledb database file" stage="Database" /><input type="password" name="Password" narrative="Optional. The password if required to open the oledb database." stage="Password" /><input type="text" name="Provider" narrative="Optional. Allows the database provider to be overridden." stage="Provider" /></inputs><onsuccess>16cd8677-ab9b-4269-9a0b-1e4956f4d103</onsuccess></stage><stage stageid="823a5018-5ad8-483c-a6c1-8c527bf7bc00" name="End" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78309214-2fb3-4bd9-8433-ca0f0fc31bd4" name="new" type="Note"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically by Automate immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7bb7dcd7-acf2-4a7a-a96d-756830b2e54f" name="new" type="Note"><loginhibit /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically by Automate immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b9720411-39cf-4e79-8fe9-af8e7581970a" name="Database" type="Data"><loginhibit /><display x="180" y="-60" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="d1d97b89-18c2-40ab-8f43-0cd0ce45f5b7" name="User" type="Data"><loginhibit /><display x="180" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1c8bc019-fa8a-4593-b435-81216f908452" name="Password" type="Data"><loginhibit /><display x="180" y="30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc></stage><stage stageid="c9568fbf-1fca-4ce7-aa27-2309731df7f5" name="Connection String" type="Data"><loginhibit /><display x="180" y="75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="db11541e-1f1d-48f5-a64e-e1d44d23ecf6" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;Provider=&quot; &amp; [Provider] &amp; &quot;; Data Source=&quot; &amp; [Database] &amp; &quot;; Jet OLEDB:Database Password=&quot; &amp; [Password] &amp;&quot;;&quot;" stage="Connection String" /></stage><stage stageid="8ed153e9-383f-4acf-9e86-3d058f27a895" name="Open" type="SubSheetInfo"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><narrative>Opens a connection to the OLEDB database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c501978-f53e-419d-ab66-c3cbef5cf598" name="Start" type="Start"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c57babb2-f4b2-42dd-95c7-a8155b854975</onsuccess></stage><stage stageid="7295054b-4d97-4891-ab69-23416df80d09" name="End" type="End"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c57babb2-f4b2-42dd-95c7-a8155b854975" name="Open" type="Code"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ConnectionString" expr="[Connection String]" /></inputs><onsuccess>7295054b-4d97-4891-ab69-23416df80d09</onsuccess><code><![CDATA[If moConnection Is Nothing Then
	moConnection = New OLEDBConnection(ConnectionString)
	moConnection.Open()
End If]]></code></stage><stage stageid="22e10c68-07d1-4cc4-9072-7c9b0b0c97cf" name="SQL" type="Data"><loginhibit /><display x="180" y="120" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="4a78a3ea-35e5-4496-bfe0-509900dc5137" name="Close" type="SubSheetInfo"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Closes the connection to the OLEDB database.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6bd7feeb-d610-4f7b-9646-df99afade77a" name="Start" type="Start"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="b9924b3b-5eea-41f5-9d73-8f4624ba22fe" name="End" type="End"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5aab680-3f4a-4cb2-9873-7c2aa718133f" name="Close" type="Code"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b9924b3b-5eea-41f5-9d73-8f4624ba22fe</onsuccess><code><![CDATA[moConnection.Close()
moConnection.Dispose()
moConnection = Nothing]]></code></stage><stage stageid="88b89098-8bb2-42fc-8e43-bad5b1e4f400" name="Close" type="SubSheet"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>91836284-14a0-4c0f-b9d5-8cd74b4d1632</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="221cc4f2-f3b6-4a62-985a-350066ad7c79" name="Get Collection" type="SubSheetInfo"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="76ba8075-200c-47f3-a5b0-81d2a545b93b" name="Start" type="Start"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="An SQL query to fetch the data. In most cases this will be a 'select' query." stage="SQL" /></inputs><onsuccess>98267e1e-20b7-4ce9-a0b8-847c18c1976f</onsuccess></stage><stage stageid="469b68e3-523f-4723-ab11-b47348bbdf33" name="End" type="End"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Results" stage="Results" /></outputs></stage><stage stageid="897f736f-bc15-4938-9d97-b4c1065dd5e1" name="Get Data Table" type="Code"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="collection" name="Results" stage="Results" /></outputs><onsuccess>469b68e3-523f-4723-ab11-b47348bbdf33</onsuccess><code><![CDATA[Dim oDataAdapter As New OLEDBDataAdapter(SQL,moConnection)

Dim oDataSet As New DataSet		
oDataAdapter.Fill(oDataset)

Results = oDataSet.Tables(0)]]></code></stage><stage stageid="98267e1e-20b7-4ce9-a0b8-847c18c1976f" name="Open" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>897f736f-bc15-4938-9d97-b4c1065dd5e1</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="71604ec6-dbf3-40c1-b400-8a5eea8eda3f" name="Results" type="Collection"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-180" y="30" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4ca0da-93ad-492e-af65-ff637c54b37a" name="Password Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>If the password is set use password in connection string.</narrative><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[PasswordText]&lt;&gt;&quot;&quot;" /><ontrue>db11541e-1f1d-48f5-a64e-e1d44d23ecf6</ontrue><onfalse>fbf4d6d4-763b-41f2-926a-ce6745964763</onfalse></stage><stage stageid="fbf4d6d4-763b-41f2-926a-ce6745964763" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;Provider=&quot; &amp; [Provider] &amp; &quot;; Data Source='&quot; &amp; [Database] &amp; &quot;'; Extended Properties=Excel 12.0;&quot;" stage="Connection String" /></stage><stage stageid="b0dbeba0-75c2-479b-9d5d-bde261b4db20" name="Provider" type="Data"><display x="180" y="165" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="16cd8677-ab9b-4269-9a0b-1e4956f4d103" name="Provider Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Provider]&lt;&gt;&quot;&quot;" /><ontrue>35e769d9-71b0-43da-8bda-6e4cbd3d0e55</ontrue><onfalse>8b21c0e2-f0c8-4c89-8636-f648382b8c37</onfalse></stage><stage stageid="8b21c0e2-f0c8-4c89-8636-f648382b8c37" name="Set Provider" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="120" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4eb62611-4eee-4ad8-9ffd-bf789ac796ad</onsuccess><calculation expression="&quot;Microsoft.Jet.OLEDB.4.0&quot;" stage="Provider" /></stage><stage stageid="4eb62611-4eee-4ad8-9ffd-bf789ac796ad" name="anchor1" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="120" y="-15" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>35e769d9-71b0-43da-8bda-6e4cbd3d0e55</onsuccess></stage><stage stageid="35e769d9-71b0-43da-8bda-6e4cbd3d0e55" name="Get Password Text" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3f4ca0da-93ad-492e-af65-ff637c54b37a</onsuccess><calculation expression="[Password]" stage="PasswordText" /></stage><stage stageid="8cc8ad2a-2fa6-41ee-abc4-def727b8035c" name="PasswordText" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-60" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="29192c0f-d13c-4769-bed3-9c51217efab4" name="Data - SQL Server" xmlns="http://www.blueprism.co.uk/product/process"><process name="Data - SQL Server" version="5.0.11" bpversion="7.0.1.49890" narrative="SQL Server interaction object." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>86c30a1c-12a4-44c4-9674-b287d0dfa70d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>50</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="cfb6da91-518b-40a3-8e0e-115ff0252ea7" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-50</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3eacbbb6-d03e-4df7-9904-a3b1ac67c882" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="88d8d9e5-f97e-40d6-b049-bb643eb06852" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="90429413-7792-4513-8bc0-d6d079aa08b9" type="Normal" published="True"><name>Set Connection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="459569f2-c792-4948-8884-5c2a0917cc16" type="Normal" published="False"><name>Open</name><view><camerax>-41</camerax><cameray>-57</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="109afac8-f6b2-467f-971c-c6141124b87a" type="Normal" published="False"><name>Close</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3842f7c4-4df2-4e6a-bedd-6dacf01a6db4" type="Normal" published="False"><name>Is Open</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5" type="Normal" published="False"><name>Internal Close</name><view><camerax>-40</camerax><cameray>-90</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3ee937ec-012f-445c-9b2b-ebbcb6d3614d" type="Normal" published="True"><name>Begin Transaction</name><view><camerax>50</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ba712d56-697c-48af-bc96-85e49eb968fc" type="Normal" published="True"><name>Commit Transaction</name><view><camerax>43</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4b6e35c6-8ec4-4fbe-b9d7-d43c48492695" type="Normal" published="True"><name>Rollback Transaction</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c07ae8a2-a04f-46f2-8919-ec4da73d5b25" type="Normal" published="True"><name>Execute</name><view><camerax>283</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a45f6098-73e2-4639-a002-31592645bfa5" type="Normal" published="True"><name>Get Records Affected</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0576c81-ddec-4662-b437-1c88357d78cf" type="Normal" published="True"><name>Procedure Call for Arabic Database</name><view><camerax>-26</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12d7c91f-29ac-4711-9614-7ab992dc4b1f" type="Normal" published="True"><name>Get Number</name><view><camerax>26</camerax><cameray>48</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="18349d7d-79b1-4397-a8a0-490ab27f459f" type="Normal" published="True"><name>Get Text</name><view><camerax>0</camerax><cameray>24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="780529b8-393d-4d1d-bc5f-34f383fe53ec" type="Normal" published="True"><name>Get Collection</name><view><camerax>-49.5</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13b6c91d-68e8-46e9-bcab-9261446dc0af" type="Normal" published="True"><name>Get CSV File</name><view><camerax>-49.5</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e50a93aa-11fe-4457-a16d-0237560fff18" type="Normal" published="True"><name>Get CSV</name><view><camerax>20</camerax><cameray>-38</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f3bf5e12-d2cf-4c5d-bda5-0deae3c26316" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d16cc64f-d5d1-4aaf-bea5-f814e1f2657b</onsuccess></stage><stage stageid="d16cc64f-d5d1-4aaf-bea5-f814e1f2657b" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0efcc61e-6916-4463-ae94-c24edb2adc75" name="Stage1" type="ProcessInfo"><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.XML.dll</reference></references><imports><import>System</import><import>System.Data</import><import>System.Data.SqlClient</import><import>System.IO</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[
Private moConnection As SqlConnection
Private moTransaction As SqlTransaction

Private Sub WriteCsv(ByVal sql As String, ByVal out As TextWriter)

	' The target data set
	Dim ds As New DataSet()

	' Build and execute the command, dumping the data into the above set
    Using cmd As New SqlCommand()
        cmd.Connection = moConnection
        cmd.Transaction = moTransaction
        cmd.CommandText = sql
        
        Using da As New SqlDataAdapter()
            da.SelectCommand = cmd
            da.Fill(ds)
        End Using
	End Using

	' Go through the data, escaping and outputting to the writer
	Dim quotesRequiredChars() As Char = {","c, """"c}
	For Each tab As DataTable In ds.Tables
		' Column headers first
		Dim first As Boolean = True
		For Each col As DataColumn In tab.Columns
			If first Then first = False Else out.Write(",")
			Dim val As String = col.ColumnName
			If val.IndexOfAny(quotesRequiredChars) >= 0 Then _
			 val = """" & val.Replace("""", """""") & """"
			out.Write(val)
		Next
		out.WriteLine()
		' Then a line for each row
		For Each row As DataRow in tab.Rows
			first = True
			For Each col As DataColumn in tab.Columns
				If first Then first = False Else out.Write(",")
				If row.IsNull(col) Then Continue For
				Dim val As String = row(col).ToString()
				If val.IndexOfAny(quotesRequiredChars) >= 0 Then _
				 val = """" & val.Replace("""", """""") & """"
				out.Write(val)
			Next
			out.WriteLine()
		Next
		' Separate each table with a couple of blank lines
		out.WriteLine()
		out.WriteLine()                
	Next
	
	out.Flush()

End Sub

Private Function GetScalar(Of T)(ByVal sql As String, _
 ByRef success As Boolean, ByRef msg As String) As T

	' Assume Success
	success = True
	msg = ""

	Try
		Using cmd As New SqlCommand()
			cmd.Connection = moConnection
			cmd.CommandText = SQL
			cmd.Transaction = moTransaction
			Return CType(cmd.ExecuteScalar(), T)
		End Using
	Catch ex As Exception
		success = False
		msg = ex.Message
		Return Nothing
	End Try

End Function]]></code></stage><stage stageid="fd95e8ae-614b-4bae-a0f9-cbd04cef37ce" name="Clean Up" type="SubSheetInfo"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e91da0c2-e60f-4eae-a108-bd99aaff046f" name="Start" type="Start"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>88b89098-8bb2-42fc-8e43-bad5b1e4f400</onsuccess></stage><stage stageid="91836284-14a0-4c0f-b9d5-8cd74b4d1632" name="End" type="End"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf7a7a0d-0c2b-4a9e-8a52-19bdf46ef4cc" name="Set Connection" type="SubSheetInfo"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5395eb12-61a3-4005-88a3-ceda307cf9b1" name="Start" type="Start"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Server" narrative="The name of the server and, if necessary, instance name of the SQL Server instance to connect to" stage="Server" /><input type="text" name="Database" narrative="The name of the database to connect to" stage="Database" /><input type="text" name="User" narrative="If appropriate, the login name to use to connect to SQL Server. If left empty, windows authentication using the current user will be used instead of SQL Server authentication" stage="User" /><input type="text" name="Password" narrative="If appropriate, the password to use with the above login name to access SQL Server. Unused for windows authentication" stage="Password" /></inputs><onsuccess>66c19ef6-3007-4fa0-af27-b52892a9671c</onsuccess></stage><stage stageid="823a5018-5ad8-483c-a6c1-8c527bf7bc00" name="End" type="End"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78309214-2fb3-4bd9-8433-ca0f0fc31bd4" name="new" type="Note"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically by Automate immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7bb7dcd7-acf2-4a7a-a96d-756830b2e54f" name="new" type="Note"><loginhibit /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically by Automate immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d666ce88-be59-4711-8698-025945395207" name="Server" type="Data"><loginhibit /><display x="180" y="-105" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="b9720411-39cf-4e79-8fe9-af8e7581970a" name="Database" type="Data"><loginhibit /><display x="180" y="-60" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="d1d97b89-18c2-40ab-8f43-0cd0ce45f5b7" name="User" type="Data"><loginhibit /><display x="180" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="1c8bc019-fa8a-4593-b435-81216f908452" name="Password" type="Data"><loginhibit /><display x="180" y="30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="c9568fbf-1fca-4ce7-aa27-2309731df7f5" name="Connection String" type="Data"><loginhibit /><display x="180" y="75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /></stage><stage stageid="db11541e-1f1d-48f5-a64e-e1d44d23ecf6" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;database=&quot; &amp; [Database] &amp; &quot;;data source=&quot; &amp; [Server] &amp; &quot;; user id=&quot; &amp; [User] &amp; &quot;;password=&quot; &amp; [Password]" stage="Connection String" /></stage><stage stageid="8ed153e9-383f-4acf-9e86-3d058f27a895" name="Open" type="SubSheetInfo"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c501978-f53e-419d-ab66-c3cbef5cf598" name="Start" type="Start"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c57babb2-f4b2-42dd-95c7-a8155b854975</onsuccess></stage><stage stageid="7295054b-4d97-4891-ab69-23416df80d09" name="End" type="End"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="c57babb2-f4b2-42dd-95c7-a8155b854975" name="Open" type="Code"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ConnectionString" expr="[Connection String]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1c7fc106-01f3-4a2a-aa7e-44c44875fb04</onsuccess><code><![CDATA[Success = True
Message = ""

If moConnection IsNot Nothing Then Return
Try
	moConnection = New SqlConnection(ConnectionString)
	moConnection.Open()

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="24f2742e-2541-4680-a355-1783c4e2f2f2" name="Execute" type="SubSheetInfo"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05448135-b8ce-4a88-9d5c-eb85fea9d352" name="Start" type="Start"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>3753873b-7231-4b1f-947e-e6b87deac3d8</onsuccess></stage><stage stageid="3810933f-d93a-482c-a0d8-20796ecd3049" name="Execute" type="Code"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Records Affected" stage="Records Affected" /></outputs><onsuccess>2631d241-e7fb-4a03-87f8-846c6443206f</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	Using cmd As New SqlCommand()
		cmd.Connection = moConnection
		cmd.CommandText = SQL
		cmd.Transaction = moTransaction
		Records_Affected = cmd.ExecuteNonQuery()
	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="3753873b-7231-4b1f-947e-e6b87deac3d8" name="Open" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1ac9d798-c898-4a5a-8b07-f435dc0500d4</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="1ac9d798-c898-4a5a-8b07-f435dc0500d4" name="Success?" type="Decision"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="75" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>3810933f-d93a-482c-a0d8-20796ecd3049</ontrue><onfalse>dbe6faa5-9cd8-4ead-a98d-1880a84975af</onfalse></stage><stage stageid="4a78a3ea-35e5-4496-bfe0-509900dc5137" name="Internal Close" type="SubSheetInfo"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5aab680-3f4a-4cb2-9873-7c2aa718133f" name="Close" type="Code"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="clearPool" expr="[Clear Pool]" /><input type="text" name="connString" expr="[Connection String]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>274a1082-2d15-4bf8-84f2-043aae4e60e7</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	' If we're clearing the pool, we need a
	' connection so that we can specify the pool
	' we want to clear, so, somewhat obscenely,
	' we must create a connection if one does not
	' currently exist. Then close it immediately
	If clearPool Then
		If moConnection Is Nothing Then _
		 moConnection = New SqlConnection(connString)
		SqlConnection.ClearPool(moConnection)
	End If
	If moConnection IsNot Nothing Then
		moConnection.Close()
		moConnection.Dispose()
		moConnection = Nothing
	End If

Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="b0d71d51-0e09-4333-a7e8-e16c11d5cc2c" name="Internal Close" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="75" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>28719a2d-9d55-4414-8a91-4f3c8ce10cba</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="2f46d078-5aeb-4c4a-a493-e807b2c7a995" name="Get Number" type="SubSheetInfo"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2d1ef6c-115c-4900-9a62-d8bac04b0b09" name="Start" type="Start"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>05b0b107-7095-4e9d-bc37-924f6b11869d</onsuccess></stage><stage stageid="3098273a-9d5f-43bd-8f67-dd5fa306c621" name="End" type="End"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Result" narrative="The numeric result from the SQL query provided - if multiple results were generated, this will be the first result from the first result set" stage="Number Result" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="17da1b91-9f66-4fe1-b2e3-ff423f3f827a" name="Execute Return Number" type="Code"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Result" stage="Number Result" /></outputs><onsuccess>12f14b00-5eb3-4995-afa2-e3eeeadcb5c0</onsuccess><code><![CDATA[
Result = GetScalar(Of Decimal)( _
 SQL, Success, Message)
]]></code></stage><stage stageid="05b0b107-7095-4e9d-bc37-924f6b11869d" name="Open" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>4f04e547-353a-4b31-9d76-06f4a406e438</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="4f04e547-353a-4b31-9d76-06f4a406e438" name="Success?" type="Decision"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="90" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>17da1b91-9f66-4fe1-b2e3-ff423f3f827a</ontrue><onfalse>0da291c6-e906-4852-b112-79384aafeb77</onfalse></stage><stage stageid="06bce91a-1f23-4c23-acdf-19564c453382" name="Number Result" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /></stage><stage stageid="1e9d4de5-9638-4bec-a23c-dda3f743abd2" name="Get Records Affected" type="SubSheetInfo"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bc1e722-9f5a-4ca8-becb-07c73ba5427b" name="Start" type="Start"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>ec1e523c-2d7f-49ab-bdbf-97c9629d4f0b</onsuccess></stage><stage stageid="5c3b4cc9-288d-4fae-b9d3-dca1f01d452c" name="End" type="End"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Records Affected" narrative="The number of records which matched the constraints specified in the SQL provided" stage="Records Affected" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="98ced6bf-c219-4b6f-8788-428ae730dffa" name="Records Affected" type="Data"><loginhibit /><display x="180" y="165" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue></stage><stage stageid="ec1e523c-2d7f-49ab-bdbf-97c9629d4f0b" name="Execute" type="SubSheet"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="0" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>5c3b4cc9-288d-4fae-b9d3-dca1f01d452c</onsuccess><processid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</processid></stage><stage stageid="b302f1fb-5a49-4ea5-a4f3-1dadc0ab9051" name="Get Text" type="SubSheetInfo"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1841a582-8544-4daa-ace7-1e0e40837056" name="Start" type="Start"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Query" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>eb060128-54bc-417e-9d48-71beda3e0d4d</onsuccess></stage><stage stageid="281eca77-1f39-4ace-8815-a8145727a1e3" name="End" type="End"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The text result from the SQL query provided - if multiple results were generated, this will be the first result from the first result set" stage="Text Result" /><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9f94c434-d4c4-43a6-9393-df126ab0c0ca" name="Execute Return Text" type="Code"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Result" stage="Text Result" /></outputs><onsuccess>d689a9ea-0ae1-4208-b0ca-ece39ddd838f</onsuccess><code><![CDATA[
Result = GetScalar(Of String)( _
 SQL, Success, Message)
]]></code></stage><stage stageid="eb060128-54bc-417e-9d48-71beda3e0d4d" name="Open" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9c17dfa7-6435-4b40-a7db-533bfe76902f</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="9c17dfa7-6435-4b40-a7db-533bfe76902f" name="Success?" type="Decision"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>9f94c434-d4c4-43a6-9393-df126ab0c0ca</ontrue><onfalse>8e6271bb-9473-4b6c-b90d-6832537a8075</onfalse></stage><stage stageid="8fa93518-b432-4252-bf80-0a9c96171faa" name="Text Result" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="88b89098-8bb2-42fc-8e43-bad5b1e4f400" name="Internal Close" type="SubSheet"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="True" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>91836284-14a0-4c0f-b9d5-8cd74b4d1632</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="8eebcae5-eab4-4d0d-98ac-60bb9a4f645c" name="Begin Transaction" type="SubSheetInfo"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="110c04fd-0f65-422a-ad21-bdb7db8a4a96" name="Start" type="Start"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="A transaction will be started on the currently open connection" /></postconditions><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6a763136-0514-4c6d-9dff-0a0c4a1d10e7</onsuccess></stage><stage stageid="eac4efa0-7168-4dee-a333-0923f422d458" name="Begin Transaction" type="Code"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a0610c45-e0f3-48ce-86be-2d9fe00d5faf</onsuccess><code><![CDATA[' Assume Success
Success = True
Message = ""

Try
	moTransaction = moConnection.BeginTransaction()
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="faff14a4-e148-47ec-8e4d-fc4e4bc1519d" name="Commit Transaction" type="SubSheetInfo"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-285" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dcca40c4-f5b7-4875-b4b4-1c8c50a4be99" name="Start" type="Start"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>175695ba-0b55-4490-b99a-7c5fa1e95899</onsuccess></stage><stage stageid="01c9256c-c4e8-47d0-8bce-cbb4f916399d" name="Commit Transaction" type="Code"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>f26aaae6-36b1-4739-9465-1e208144a8bf</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	moTransaction.Commit()
	moTransaction = Nothing
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="e2cc64c2-12bd-4614-bca3-0650718ccfee" name="Rollback Transaction" type="SubSheetInfo"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-225" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="245c9f37-0f51-4fd3-aaa9-480630d4ac3f" name="Start" type="Start"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>093c958e-ad24-4cb8-bfd6-e9f7dba49311</onsuccess></stage><stage stageid="921f479a-2714-4314-b394-c5c941b281e8" name="Rollback Transaction" type="Code"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7c11fab5-28c4-48fd-b752-cbeac0598534</onsuccess><code><![CDATA[
Success = True
Message = ""

Try
	moTransaction.Rollback()
	moTransaction = Nothing
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="2631d241-e7fb-4a03-87f8-846c6443206f" name="In Transaction?" type="Decision"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>ac70463c-d9f4-44cc-8427-004224405a91</ontrue><onfalse>b0d71d51-0e09-4333-a7e8-e16c11d5cc2c</onfalse></stage><stage stageid="f3d61e3c-3094-4c38-9370-3d142d7448c1" name="In Transaction" type="Data"><loginhibit /><display x="180" y="210" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue></stage><stage stageid="0441a51b-0a7c-49e6-8305-4a877c32cc8a" name="In Transaction" type="Calculation"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5705d9af-28ea-4c05-832b-4f40d34a3511</onsuccess><calculation expression="True" stage="In Transaction" /></stage><stage stageid="f26aaae6-36b1-4739-9465-1e208144a8bf" name="Not In Transaction" type="Calculation"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6cc92a8f-1561-462a-8eaf-bbd32e32a936</onsuccess><calculation expression="False" stage="In Transaction" /></stage><stage stageid="7c11fab5-28c4-48fd-b752-cbeac0598534" name="Not In Transaction" type="Calculation"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>876d7128-a56d-4c53-8fde-3713a1c173f5</onsuccess><calculation expression="False" stage="In Transaction" /></stage><stage stageid="28719a2d-9d55-4414-8a91-4f3c8ce10cba" name="anchor1" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>63e4c694-de67-4b39-a04c-5af3186af635</onsuccess></stage><stage stageid="269b8cc6-856b-426a-ba48-b362a98fc752" name="Internal Close" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="90" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>047bee83-bd7d-43b1-aeb3-6f4183c42c63</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="12f14b00-5eb3-4995-afa2-e3eeeadcb5c0" name="In Transaction?" type="Decision"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>8173e4d5-0932-4184-b3e8-01a761341966</ontrue><onfalse>269b8cc6-856b-426a-ba48-b362a98fc752</onfalse></stage><stage stageid="ffd23eb7-b1b9-4f82-ad2f-05d4db50bcd2" name="Internal Close" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="75" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>61bf908d-c640-41f1-921e-fbac0bc44b57</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="d689a9ea-0ae1-4208-b0ca-ece39ddd838f" name="In Transaction?" type="Decision"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa</ontrue><onfalse>ffd23eb7-b1b9-4f82-ad2f-05d4db50bcd2</onfalse></stage><stage stageid="221cc4f2-f3b6-4a62-985a-350066ad7c79" name="Get Collection" type="SubSheetInfo"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="76ba8075-200c-47f3-a5b0-81d2a545b93b" name="Start" type="Start"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>98267e1e-20b7-4ce9-a0b8-847c18c1976f</onsuccess></stage><stage stageid="469b68e3-523f-4723-ab11-b47348bbdf33" name="End" type="End"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="collection" name="Results" narrative="The collection of results from the query" stage="Results" /></outputs></stage><stage stageid="897f736f-bc15-4938-9d97-b4c1065dd5e1" name="Get Data Table" type="Code"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Results" stage="Results" /></outputs><onsuccess>d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	Using cmd As New SqlCommand()
		cmd.Connection = moConnection
		cmd.Transaction = moTransaction
		cmd.CommandText = SQL

		Using adapter As New SqlDataAdapter()
			adapter.SelectCommand = cmd
			Dim ds As New DataSet()
			adapter.Fill(ds)
			Results = ds.Tables(0)
		End Using
	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try]]></code></stage><stage stageid="98267e1e-20b7-4ce9-a0b8-847c18c1976f" name="Open" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1c0c847f-0d0a-4f0d-9c66-25a64b4c477f</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="1c0c847f-0d0a-4f0d-9c66-25a64b4c477f" name="Success?" type="Decision"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>897f736f-bc15-4938-9d97-b4c1065dd5e1</ontrue><onfalse>6247786f-c914-40c2-9acb-156178f5b62d</onfalse></stage><stage stageid="71604ec6-dbf3-40c1-b400-8a5eea8eda3f" name="Results" type="Collection"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6247786f-c914-40c2-9acb-156178f5b62d" name="anchor2" type="Anchor"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="30" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d</onsuccess></stage><stage stageid="99f0a166-b905-44ab-ba9d-1fa79b71f6f6" name="Success" type="Data"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="60" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e981674b-56d4-4624-8c36-d156009e2a52" name="Message" type="Data"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="60" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f81f3fe8-65f8-4b08-928d-1e9b3a2d8db1" name="Success" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="728d45f7-0717-4872-ab22-b9ae8a142957" name="Message" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-195" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67c3cea7-7915-4e88-9e86-a1355e251b7d" name="Success" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="345" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="71de5830-7d23-4ba9-8354-30f54dacdff4" name="Message" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="345" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d5b51384-618c-4c4a-8510-baa7b99b6e20" name="Success" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="150" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="29a89d90-a1e6-4a7d-8586-d40cb4c63a97" name="Message" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="235b42fd-91d3-4351-bef7-4e7407a29ffe" name="Success" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="150" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="92878142-4175-4d93-90d4-7ea4dd84f1da" name="Message" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b50d625f-a5cd-464b-bc26-3a94288c485e" name="Success" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8eeb44dd-6e76-4f9d-9988-c3638cc5916c" name="Message" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1938177-269a-461e-b3fa-7cb2714659a8" name="Success" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="079adbce-1d95-4720-b83f-0567741a0749" name="Message" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8ac84956-cd26-456e-a622-6b3426601f4a" name="Success" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c40edd8e-a34c-49ad-ad39-9025a0f9b946" name="Message" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34a8e2f0-1a6b-4bdc-b2d2-46fed237de50" name="Success" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f2ebc91f-7722-42d3-907c-6bf37b0cd1e7" name="Message" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20e595a2-0799-4731-b244-c3cf6be8d791" name="Success" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="97efd2f3-8f58-454f-b7ef-db9e6bef8aea" name="Message" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95a4ec5c-e0ae-43f8-958e-c44907def3f0" name="Get CSV File" type="SubSheetInfo"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="518048a9-d28c-48bd-889f-30dab7f502e0" name="Start" type="Start"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /><input type="text" name="File" narrative="The full path of the file to which the CSV result should be written" stage="File" /></inputs><onsuccess>8d11deee-1ae6-42be-8726-53fb6cc7e117</onsuccess></stage><stage stageid="f82dbcac-aaf6-4e85-ada7-e7f28d96bb97" name="End" type="End"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9af3a6f4-53d9-4e14-9e1e-9c161160fec6" name="Get File" type="Code"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /><input type="text" name="File" expr="[File]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7dc1a88f-716e-4f2b-80dd-dd6306d6db07</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	' Write it out using the method in Global Code
	Using sw As New StreamWriter(File, False)
		WriteCsv(SQL, sw)
	End Using
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="8d11deee-1ae6-42be-8726-53fb6cc7e117" name="Open" type="SubSheet"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be5bca8d-64c2-4521-a293-b1a736a543bf</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="be5bca8d-64c2-4521-a293-b1a736a543bf" name="Success?" type="Decision"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>9af3a6f4-53d9-4e14-9e1e-9c161160fec6</ontrue><onfalse>8ee4a00c-f248-4c89-8c4b-4b86cb50ad50</onfalse></stage><stage stageid="8ee4a00c-f248-4c89-8c4b-4b86cb50ad50" name="anchor2" type="Anchor"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="30" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7dc1a88f-716e-4f2b-80dd-dd6306d6db07</onsuccess></stage><stage stageid="47d47b05-34f0-49f6-b703-f594ecee8108" name="Success" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c26f4e3a-832a-4e80-a4b5-cf864ee7abb4" name="Message" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bb45052-f59c-4af2-866e-d7973096bc2a" name="File" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d3515fc-4af8-451d-96e6-cc2d4c6808c7" name="Get CSV" type="SubSheetInfo"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="70f8039e-4af2-4364-b7d2-483c6d3260a4" name="Start" type="Start"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" narrative="The SQL query to use to perform this action" stage="SQL" /></inputs><onsuccess>e1bfc556-cb0c-49cf-8cfd-2767e9516e59</onsuccess></stage><stage stageid="029dc82b-e289-4579-8a43-d8b9c93158be" name="End" type="End"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="text" name="CSV" narrative="The CSV output from the query" stage="CSV" /></outputs></stage><stage stageid="584fab2b-6e03-4169-8b6f-2032ad3893b3" name="Get CSV" type="Code"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SQL" expr="[SQL]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="CSV" stage="CSV" /></outputs><onsuccess>69fcc128-f010-4628-a2ca-291756ca05b9</onsuccess><code><![CDATA[
' Assume success
Success = True
Message = ""

Try
	' Write it out using the method in Global Code
	Using sw As New StringWriter()
		WriteCsv(SQL, sw)
		CSV = sw.ToString()
	End Using
Catch ex As Exception
	Success = False
	Message = ex.Message
End Try
]]></code></stage><stage stageid="e1bfc556-cb0c-49cf-8cfd-2767e9516e59" name="Open" type="SubSheet"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0288c100-557c-4271-8753-82f7651c876c</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="0288c100-557c-4271-8753-82f7651c876c" name="Success?" type="Decision"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="90" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>584fab2b-6e03-4169-8b6f-2032ad3893b3</ontrue><onfalse>1303eb98-48c5-438c-aa5a-54fe90868c4f</onfalse></stage><stage stageid="1303eb98-48c5-438c-aa5a-54fe90868c4f" name="anchor2" type="Anchor"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="90" y="30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>69fcc128-f010-4628-a2ca-291756ca05b9</onsuccess></stage><stage stageid="233b888b-7601-4969-8205-7513d73f088d" name="Success" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5723f6bf-aa06-451d-a08a-e92cdfdf9013" name="Message" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1458d90-c2cf-4c78-879a-d30165d35480" name="CSV" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f4ca0da-93ad-492e-af65-ff637c54b37a" name="User Set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>If the user is not set than this must be LAN connection</narrative><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[User]&lt;&gt;&quot;&quot;" /><ontrue>db11541e-1f1d-48f5-a64e-e1d44d23ecf6</ontrue><onfalse>fbf4d6d4-763b-41f2-926a-ce6745964763</onfalse></stage><stage stageid="fbf4d6d4-763b-41f2-926a-ce6745964763" name="Set connection" type="Calculation"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="60" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>823a5018-5ad8-483c-a6c1-8c527bf7bc00</onsuccess><calculation expression="&quot;database=&quot; &amp; [Database] &amp; &quot;;data source=&quot; &amp; [Server] &amp; &quot;;Trusted_Connection=Yes&quot;" stage="Connection String" /></stage><stage stageid="68cc3f0e-e762-450c-921f-2cfbccedfead" name="Close Success" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><display x="195" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5b2f24bf-84b2-4292-8cb3-df7286ec6cee" name="Close Message" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><display x="195" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8365b22c-f9dd-44ac-9bdf-968ef941b1b7" name="Close Success" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a546aa36-ad70-4a81-9648-1de977e52ea0" name="Close Message" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><display x="-195" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e75dc2f8-ea07-48f4-b2a7-245ca2da63bd" name="Close Success" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><display x="-195" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4049cd6d-bffc-4414-abba-d9c2c426354a" name="Close Message" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><display x="-195" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c16520e0-e8d3-41c0-ae96-6254e954bc1a" name="In A Transaction?" type="Decision"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>e52851c8-abcd-46d9-b76a-921773c5cbb4</ontrue><onfalse>f185afb3-9c52-4c13-81d3-55a11480cf64</onfalse></stage><stage stageid="e52851c8-abcd-46d9-b76a-921773c5cbb4" name="Rollback Transaction" type="SubSheet"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess><processid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</processid></stage><stage stageid="f185afb3-9c52-4c13-81d3-55a11480cf64" name="anchor3" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-75" y="-105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>384bb280-cd20-4a3c-b8b0-9a97e61f7010</onsuccess></stage><stage stageid="384bb280-cd20-4a3c-b8b0-9a97e61f7010" name="anchor4" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-75" y="15" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="20f109d0-a273-44a5-b964-b45248511186" name="Is Open" type="SubSheetInfo"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cc3b1970-2275-44bb-8cfd-176166531993" name="Start" type="Start"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>42ae3b51-badc-419e-9609-b0ce24dc7fe3</onsuccess></stage><stage stageid="8992da0e-f17e-401d-81a4-cf0dbeaf3af1" name="End" type="End"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Is Open" narrative="Flag indicating if a connection is currently open in this VBO" stage="IsOpen" /></outputs></stage><stage stageid="42ae3b51-badc-419e-9609-b0ce24dc7fe3" name="Check Connection" type="Code"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="IsOpen" stage="IsOpen" /></outputs><onsuccess>8992da0e-f17e-401d-81a4-cf0dbeaf3af1</onsuccess><code><![CDATA[IsOpen = ( _
  moConnection IsNot Nothing AndAlso _
  moConnection.State = ConnectionState.Open _
)]]></code></stage><stage stageid="aafe4270-a6b3-4607-878e-86975da9c5cf" name="IsOpen" type="Data"><subsheetid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0a7585ee-e2b5-4c76-893e-f1c483a97130" name="Is Open?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Is Open]" /><ontrue>a06c1db3-79bd-492a-8c88-aca6b858c053</ontrue><onfalse>9eb59433-0a23-4cdd-bd25-7ae10e31947e</onfalse></stage><stage stageid="330a716e-6d2d-495c-9921-2660dfeb6210" name="Is Open" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Is Open" narrative="Flag indicating if a connection is currently open in this VBO" stage="Is Open" /></outputs><onsuccess>0a7585ee-e2b5-4c76-893e-f1c483a97130</onsuccess><processid>3842f7c4-4df2-4e6a-bedd-6dacf01a6db4</processid></stage><stage stageid="2a427672-1805-4178-8c75-5c94c4b82f09" name="Is Open" type="Data"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a06c1db3-79bd-492a-8c88-aca6b858c053" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-60" y="-45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6ff75f66-de9a-4114-98e6-f985272a313b</onsuccess></stage><stage stageid="6ff75f66-de9a-4114-98e6-f985272a313b" name="anchor6" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="-60" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eac4efa0-7168-4dee-a333-0923f422d458</onsuccess></stage><stage stageid="9eb59433-0a23-4cdd-bd25-7ae10e31947e" name="Open" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9a9f6e74-7cd8-4580-af73-041602ccba94</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="9a9f6e74-7cd8-4580-af73-041602ccba94" name="Success?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="120" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>eac4efa0-7168-4dee-a333-0923f422d458</ontrue><onfalse>62fbd57b-30bc-4365-9fcb-62860030332f</onfalse></stage><stage stageid="62fbd57b-30bc-4365-9fcb-62860030332f" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>52f9aedd-8666-495d-a007-ef3c02028ee7</onsuccess></stage><stage stageid="c0d90f91-927f-45e0-84a0-0d6b4e823f6c" name="anchor6" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="135" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5705d9af-28ea-4c05-832b-4f40d34a3511</onsuccess></stage><stage stageid="175695ba-0b55-4490-b99a-7c5fa1e95899" name="In Transaction?" type="Decision"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>01c9256c-c4e8-47d0-8bce-cbb4f916399d</ontrue><onfalse>7b32c515-605e-41e1-ae0c-9ad7c7ee6dab</onfalse></stage><stage stageid="7b32c515-605e-41e1-ae0c-9ad7c7ee6dab" name="Error Message" type="Calculation"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c20b6f48-8689-4164-9435-7d9f6f5f2aa7</onsuccess><calculation expression="&quot;There is no open transaction to commit&quot;" stage="Message" /></stage><stage stageid="c20b6f48-8689-4164-9435-7d9f6f5f2aa7" name="anchor7" type="Anchor"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="-105" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6cc92a8f-1561-462a-8eaf-bbd32e32a936</onsuccess></stage><stage stageid="093c958e-ad24-4cb8-bfd6-e9f7dba49311" name="In Transaction?" type="Decision"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>921f479a-2714-4314-b394-c5c941b281e8</ontrue><onfalse>d5c94e05-a642-4107-b7b6-15ce461428e7</onfalse></stage><stage stageid="d5c94e05-a642-4107-b7b6-15ce461428e7" name="Error Message" type="Calculation"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ae90029d-81d2-4ae3-b27a-f7a302533401</onsuccess><calculation expression="&quot;There is no open transaction to rollback&quot;" stage="Message" /></stage><stage stageid="6cc92a8f-1561-462a-8eaf-bbd32e32a936" name="Internal Close" type="SubSheet"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>63aeb2d7-aeb8-41f2-9ea1-0fd0cea0da8d</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="10757947-9682-4dcb-b789-93777cb333b1" name="Close Success" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><display x="150" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b41ab6-a52b-45ff-874e-ffece3292e4b" name="Close Message" type="Data"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><display x="150" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae90029d-81d2-4ae3-b27a-f7a302533401" name="anchor7" type="Anchor"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="-105" y="30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>876d7128-a56d-4c53-8fde-3713a1c173f5</onsuccess></stage><stage stageid="876d7128-a56d-4c53-8fde-3713a1c173f5" name="Internal Close" type="SubSheet"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>375d6173-3de9-4f72-bee6-b4ff132e1287</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="2e2a27c5-d63d-44b0-b693-e673844e664e" name="Close Success" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><display x="135" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e5cc1d8-b2a7-45b7-a8eb-7dbedcfb4f2b" name="Close Message" type="Data"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><display x="135" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e652ce3f-f9fc-414a-9006-2616854cb925" name="Start" type="Start"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" stage="Clear Pool" /></inputs><onsuccess>8c118cde-3b9a-4ed9-861d-f48b007e1200</onsuccess></stage><stage stageid="382d3006-4861-4bfe-a57e-3f65fbce6c2c" name="Clear Pool" type="Data"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><display x="-195" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="96ed6cdf-d202-4b37-b3e4-ae598756fb96" name="Close" type="SubSheetInfo"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30b5ba60-22d3-4fe6-9e92-9269372d1a6c" name="Start" type="Start"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>25dfab67-8902-4f2a-8a18-a776aead1331</onsuccess></stage><stage stageid="25dfab67-8902-4f2a-8a18-a776aead1331" name="Internal Close" type="SubSheet"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>042dd86c-3c68-4015-83b1-dcf5b036fc90</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="6c042b25-556f-4563-9663-c41aecc77a31" name="Success" type="Data"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1d7e2ef-771a-4001-922b-fd1f3881328f" name="Message" type="Data"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><display x="75" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a763136-0514-4c6d-9dff-0a0c4a1d10e7" name="In Transaction?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="-135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>32130444-6454-4780-80fd-2b005ed696a4</ontrue><onfalse>330a716e-6d2d-495c-9921-2660dfeb6210</onfalse></stage><stage stageid="32130444-6454-4780-80fd-2b005ed696a4" name="Transaction Already Open Error" type="Calculation"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>62fbd57b-30bc-4365-9fcb-62860030332f</onsuccess><calculation expression="&quot;A transaction is already open in this connection&quot;" stage="Message" /></stage><stage stageid="c8303f15-a646-4677-8a63-2f0904ef1815" name="Close Success" type="Data"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="165" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="17c8449f-6f6b-4cba-a705-ce95ef3e49e0" name="Close Message" type="Data"><subsheetid>cfb6da91-518b-40a3-8e0e-115ff0252ea7</subsheetid><loginhibit /><display x="165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba273a3e-4b65-4f6b-8ec6-6676a2bede70" name="Configure" type="SubSheetInfo"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b1167043-5e4b-4cbf-bfdc-347fcdc34981" name="End" type="End"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce5d2c13-15b8-4abc-99e1-0c32e44cc795" name="Raise exception on any failure" type="Data"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="23fa0822-2b63-4407-87f4-9b37ce869e58" name="Start" type="Start"><subsheetid>3eacbbb6-d03e-4df7-9904-a3b1ac67c882</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>b1167043-5e4b-4cbf-bfdc-347fcdc34981</onsuccess></stage><stage stageid="0b2ebe92-b578-4aa3-b255-b75a73c135d8" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0ef42cb2-e5a9-47c2-9845-2471b9f41643" name="Start" type="Start"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>9a7620f2-75fe-4415-a778-45b839268e52</onsuccess></stage><stage stageid="5e8228c7-ac43-4b93-986b-e5fb23a3e572" name="End" type="End"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9a7620f2-75fe-4415-a778-45b839268e52" name="Should Raise Exception?" type="Decision"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><loginhibit /><display x="-45" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>c161d6a7-6f02-4f29-8c41-2d93471ae952</ontrue><onfalse>5e8228c7-ac43-4b93-986b-e5fb23a3e572</onfalse></stage><stage stageid="c161d6a7-6f02-4f29-8c41-2d93471ae952" name="FAIL" type="Exception"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="30" y="-90" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="1c7fc106-01f3-4a2a-aa7e-44c44875fb04" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>459569f2-c792-4948-8884-5c2a0917cc16</subsheetid><loginhibit /><display x="-60" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>7295054b-4d97-4891-ab69-23416df80d09</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="5705d9af-28ea-4c05-832b-4f40d34a3511" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>dd554ab9-61de-4d37-bee5-c25e1a5c74f1</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="a0610c45-e0f3-48ce-86be-2d9fe00d5faf" name="Success?" type="Decision"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>0441a51b-0a7c-49e6-8305-4a877c32cc8a</ontrue><onfalse>52f9aedd-8666-495d-a007-ef3c02028ee7</onfalse></stage><stage stageid="52f9aedd-8666-495d-a007-ef3c02028ee7" name="anchor5" type="Anchor"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="180" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c0d90f91-927f-45e0-84a0-0d6b4e823f6c</onsuccess></stage><stage stageid="63aeb2d7-aeb8-41f2-9ea1-0fd0cea0da8d" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>9ccac2c0-2efd-4399-8d02-c71ac4d7e812</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="375d6173-3de9-4f72-bee6-b4ff132e1287" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>b17027f1-8559-430b-9f36-724b3097e487</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="dbe6faa5-9cd8-4ead-a98d-1880a84975af" name="anchor8" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>28719a2d-9d55-4414-8a91-4f3c8ce10cba</onsuccess></stage><stage stageid="ac70463c-d9f4-44cc-8427-004224405a91" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>7906b7ac-88bd-4971-991d-46bf74ab7207</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="63e4c694-de67-4b39-a04c-5af3186af635" name="anchor9" type="Anchor"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="135" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ac70463c-d9f4-44cc-8427-004224405a91</onsuccess></stage><stage stageid="8173e4d5-0932-4184-b3e8-01a761341966" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="0" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3098273a-9d5f-43bd-8f67-dd5fa306c621</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="0da291c6-e906-4852-b112-79384aafeb77" name="anchor10" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>047bee83-bd7d-43b1-aeb3-6f4183c42c63</onsuccess></stage><stage stageid="047bee83-bd7d-43b1-aeb3-6f4183c42c63" name="anchor11" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b565deea-e08d-4195-b081-ab4f2eaad4ad</onsuccess></stage><stage stageid="b565deea-e08d-4195-b081-ab4f2eaad4ad" name="anchor12" type="Anchor"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8173e4d5-0932-4184-b3e8-01a761341966</onsuccess></stage><stage stageid="8e6271bb-9473-4b6c-b90d-6832537a8075" name="anchor13" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61bf908d-c640-41f1-921e-fbac0bc44b57</onsuccess></stage><stage stageid="61bf908d-c640-41f1-921e-fbac0bc44b57" name="anchor14" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="60" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>63cca0a5-90a1-4eb5-9daa-65633aa5c6d3</onsuccess></stage><stage stageid="63cca0a5-90a1-4eb5-9daa-65633aa5c6d3" name="anchor15" type="Anchor"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="120" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa</onsuccess></stage><stage stageid="8ecc58ce-889b-4d69-8dbd-43f4c4cb11aa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-15" y="105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>281eca77-1f39-4ace-8815-a8145727a1e3</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="ab15b6c7-3e1d-417a-9750-8ca92fb7924e" name="Note1" type="Note"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Note that we don't throw an exception here even if a failure is encountered - this is probably being called as part of a wider action, and the caller has the context with which to decide where the exception should be raised.</narrative><display x="-195" y="75" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess></stage><stage stageid="d5771181-59a5-4bfd-b8f1-01bd7b7dbb3d" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>469b68e3-523f-4723-ab11-b47348bbdf33</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="7dc1a88f-716e-4f2b-80dd-dd6306d6db07" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-45" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>f82dbcac-aaf6-4e85-ada7-e7f28d96bb97</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="69fcc128-f010-4628-a2ca-291756ca05b9" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>029dc82b-e289-4579-8a43-d8b9c93158be</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="470e696c-742e-49d7-9421-f2a1544972f9" name="Success" type="Data"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4576bffa-323c-45f4-9233-9905d56e85ee" name="Error Message" type="Data"><subsheetid>88d8d9e5-f97e-40d6-b049-bb643eb06852</subsheetid><display x="-195" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95b31d93-f94b-416b-84da-6fe8337d8feb" name="Closing" type="Data"><loginhibit /><narrative>Flag indicating that the connection wrapped by this VBO is currently in the process of closing</narrative><display x="180" y="255" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e85c42a3-de4b-461c-8b38-c5f6f44cd4ce" name="Closing:=True" type="Calculation"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-150" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c16520e0-e8d3-41c0-ae96-6254e954bc1a</onsuccess><calculation expression="True" stage="Closing" /></stage><stage stageid="8c118cde-3b9a-4ed9-861d-f48b007e1200" name="Already Closing?" type="Decision"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="-195" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Closing]" /><ontrue>34659a52-f242-427f-988d-763542f1f33f</ontrue><onfalse>e85c42a3-de4b-461c-8b38-c5f6f44cd4ce</onfalse></stage><stage stageid="34659a52-f242-427f-988d-763542f1f33f" name="Note2" type="Note"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><narrative>Ensure that we're not being called by 'Rollback' which was called by this action - infinite loops are bad.</narrative><display x="150" y="-195" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>adf47186-7a7b-4396-b1cb-e994400f72c9</onsuccess></stage><stage stageid="adf47186-7a7b-4396-b1cb-e994400f72c9" name="anchor16" type="Anchor"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="150" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess></stage><stage stageid="274a1082-2d15-4bf8-84f2-043aae4e60e7" name="Closing:=False" type="Calculation"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8fcd4c90-9846-476a-a7f4-05a7edc6e62b</onsuccess><calculation expression="False" stage="Closing" /></stage><stage stageid="56def720-71ec-4d7b-9e58-17b4f23dc6fc" name=" " type="Block"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="-60" y="-75" w="195" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="aa70afba-b9df-48a6-a0c2-beb7fa5cdc82" name="Ignore" type="Recover"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>92889732-12eb-4041-ac27-8a9a20af1cf5</onsuccess></stage><stage stageid="92889732-12eb-4041-ac27-8a9a20af1cf5" name=" " type="Resume"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5aab680-3f4a-4cb2-9873-7c2aa718133f</onsuccess></stage><stage stageid="22e10c68-07d1-4cc4-9072-7c9b0b0c97cf" name="SQL" type="Data"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47ca5361-bb0f-4f18-9c74-7d5d09f239dd" name="SQL" type="Data"><subsheetid>a45f6098-73e2-4639-a002-31592645bfa5</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3616b67e-fe87-422b-b9ea-6180525fddc3" name="SQL" type="Data"><subsheetid>12d7c91f-29ac-4711-9614-7ab992dc4b1f</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="46a7daee-e5e4-441f-92fc-39a696518e79" name="SQL" type="Data"><subsheetid>18349d7d-79b1-4397-a8a0-490ab27f459f</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1d6948f-3783-4b3f-afa7-bef3378cafc3" name="SQL" type="Data"><subsheetid>e50a93aa-11fe-4457-a16d-0237560fff18</subsheetid><loginhibit /><display x="-195" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae6e30b2-099e-4fd8-9481-75eeccea424a" name="SQL" type="Data"><subsheetid>780529b8-393d-4d1d-bc5f-34f383fe53ec</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="540222b0-7793-476e-a330-59f84b93108c" name="SQL" type="Data"><subsheetid>13b6c91d-68e8-46e9-bcab-9261446dc0af</subsheetid><loginhibit /><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66c19ef6-3007-4fa0-af27-b52892a9671c" name="Connection String already set?" type="Decision"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Connection String] &lt;&gt; &quot;&quot;" /><ontrue>5d9aed4f-c61b-40dc-9104-e0720a324d22</ontrue><onfalse>cb1901f1-02a7-4e86-8618-cef7a98b283f</onfalse></stage><stage stageid="90d7c944-c618-41dd-bfe2-5da022f3353a" name="Internal Close" type="SubSheet"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="150" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="True" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>cb1901f1-02a7-4e86-8618-cef7a98b283f</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="5d9aed4f-c61b-40dc-9104-e0720a324d22" name="Note3" type="Note"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><narrative>Close and clear the connection pool</narrative><display x="150" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>90d7c944-c618-41dd-bfe2-5da022f3353a</onsuccess></stage><stage stageid="fbf49160-dd35-4922-a2f3-6b17985bfb74" name="Close Success" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f81af5a5-7d4a-4f5d-b914-0b008c1273ec" name="Close Message" type="Data"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb1901f1-02a7-4e86-8618-cef7a98b283f" name="anchor17" type="Anchor"><subsheetid>90429413-7792-4513-8bc0-d6d079aa08b9</subsheetid><loginhibit /><display x="15" y="-75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3f4ca0da-93ad-492e-af65-ff637c54b37a</onsuccess></stage><stage stageid="042dd86c-3c68-4015-83b1-dcf5b036fc90" name="End" type="End"><subsheetid>109afac8-f6b2-467f-971c-c6141124b87a</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="8fcd4c90-9846-476a-a7f4-05a7edc6e62b" name="End" type="End"><subsheetid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</subsheetid><loginhibit /><display x="0" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="dd554ab9-61de-4d37-bee5-c25e1a5c74f1" name="End" type="End"><subsheetid>3ee937ec-012f-445c-9b2b-ebbcb6d3614d</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="9ccac2c0-2efd-4399-8d02-c71ac4d7e812" name="End" type="End"><subsheetid>ba712d56-697c-48af-bc96-85e49eb968fc</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="b17027f1-8559-430b-9f36-724b3097e487" name="End" type="End"><subsheetid>4b6e35c6-8ec4-4fbe-b9d7-d43c48492695</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="7906b7ac-88bd-4971-991d-46bf74ab7207" name="End" type="End"><subsheetid>c07ae8a2-a04f-46f2-8919-ec4da73d5b25</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /></outputs></stage><stage stageid="c1746193-3894-420d-a4fd-2679e3a8d7b1" name="Procedure Call for Arabic Database" type="SubSheetInfo"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a50c522-75e2-4e3f-8cc5-c0b9891646d7" name="Start" type="Start"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ProcedureName" stage="ProcedureName" /><input type="text" name="ArabicName" stage="ArabicName" /></inputs><onsuccess>4e24011d-73ee-4213-8115-f6fbdaacf768</onsuccess></stage><stage stageid="49c6d800-236d-49ec-82a1-d30e9c9b2ff2" name="Execute proceduer" type="Code"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="ProcedureName" expr="[ProcedureName]" /><input type="text" name="ArabicName" expr="[ArabicName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="EnglishName" stage="EnglishName" /><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>a84cf132-d9a0-498e-a4bb-da1745ed3fab</onsuccess><code><![CDATA[Success = True
Message = ""
Try


	Using command As New SqlCommand()
	command.Connection = moConnection
        command.CommandText = ProcedureName
        command.CommandType = CommandType.StoredProcedure
        ' Add the input parameter and set its properties.
        Dim parameter1 As New SqlParameter()
        parameter1.ParameterName = "@ARABIC_NAME"
        parameter1.SqlDbType = SqlDbType.NVarChar
        parameter1.Direction = ParameterDirection.Input
        parameter1.Value = ArabicName 
        command.Parameters.Add(parameter1)
		
		' Add the OUTPUT parameter and set its properties.
        Dim parameter2 As New SqlParameter("@ENGLISH_NAME",SqlDbType.NVarChar,200)
        'parameter2.ParameterName = "@ENGLISH_NAME"
        'parameter2.SqlDbType = SqlDbType.NVarChar
        parameter2.Direction = ParameterDirection.Output
        'parameter2.Value = "" 
        command.Parameters.Add(parameter2)
		
        Dim parameter3 As New SqlParameter()
        parameter3.ParameterName = "@FOUND"
        parameter3.SqlDbType = SqlDbType.BIT
        parameter3.Direction = ParameterDirection.Output
        'parameter3.Value = 0
        command.Parameters.Add(parameter3)
		
		
		command.ExecuteNonQuery()
		EnglishName=command.Parameters("@ENGLISH_NAME").Value
		Found=command.Parameters("@FOUND").Value
		
	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="4e24011d-73ee-4213-8115-f6fbdaacf768" name="Open" type="SubSheet"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d52a22b5-63e2-435f-852a-afb665316c7a</onsuccess><processid>459569f2-c792-4948-8884-5c2a0917cc16</processid></stage><stage stageid="d52a22b5-63e2-435f-852a-afb665316c7a" name="Success?" type="Decision"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="75" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>49c6d800-236d-49ec-82a1-d30e9c9b2ff2</ontrue><onfalse>4bb20b21-d375-4d12-8386-4ab80490c404</onfalse></stage><stage stageid="d8fad6ab-3316-4b7c-8a1c-2465e41562c8" name="Internal Close" type="SubSheet"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="75" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Clear Pool" narrative="True to clear the connection pool when closing the connection; False to just release the connection back into the pool" expr="False" /></inputs><outputs><output type="flag" name="Success" stage="Close Success" /><output type="text" name="Message" stage="Close Message" /></outputs><onsuccess>d0ed0e76-6bed-4333-96ab-4e903fc9a8a6</onsuccess><processid>7ee7ad42-e017-40ff-92aa-3cfc5c6dd0e5</processid></stage><stage stageid="a84cf132-d9a0-498e-a4bb-da1745ed3fab" name="In Transaction?" type="Decision"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[In Transaction]" /><ontrue>24608918-5092-44d9-9248-64dbbbf0ed20</ontrue><onfalse>d8fad6ab-3316-4b7c-8a1c-2465e41562c8</onfalse></stage><stage stageid="d0ed0e76-6bed-4333-96ab-4e903fc9a8a6" name="anchor1" type="Anchor"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1533a2d4-d97b-4c44-8149-2b316d9b8d05</onsuccess></stage><stage stageid="9e31817e-d867-441c-a7e0-29b6f623293e" name="Success" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3b0c94f8-7b36-4c0b-a5d1-5bc73020f661" name="Message" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f47f457e-6905-40bb-a57d-5ce00afacffb" name="Close Success" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><display x="-240" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="657044aa-7568-436e-99ca-4d827bccb6ac" name="Close Message" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><display x="-255" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4bb20b21-d375-4d12-8386-4ab80490c404" name="anchor8" type="Anchor"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="135" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0ed0e76-6bed-4333-96ab-4e903fc9a8a6</onsuccess></stage><stage stageid="24608918-5092-44d9-9248-64dbbbf0ed20" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>5210992b-e953-4618-b562-79804388f810</onsuccess><processid>88d8d9e5-f97e-40d6-b049-bb643eb06852</processid></stage><stage stageid="1533a2d4-d97b-4c44-8149-2b316d9b8d05" name="anchor9" type="Anchor"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="135" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24608918-5092-44d9-9248-64dbbbf0ed20</onsuccess></stage><stage stageid="bdb4017a-6948-4cc9-afd5-c468cddce815" name="SQL" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5210992b-e953-4618-b562-79804388f810" name="End" type="End"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="Flag indicating success (True) or failure (False)" stage="Success" /><output type="text" name="Message" narrative="Error message giving detail regarding why this action failed" stage="Message" /><output type="text" name="EnglishName" stage="EnglishName" /><output type="flag" name="Found" stage="Found" /></outputs></stage><stage stageid="fb7d420a-7c77-4acc-9f36-7bc1c36ad6a4" name="EnglishName" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><display x="60" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="92c33f32-17e6-4b0c-b603-5b166be459d2" name="Found" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><display x="-90" y="-45" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7f0a859-81e1-40b8-b43c-39ab20a53f7f" name="ProcedureName" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><display x="60" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28b383f2-0a33-4c42-b8e2-94b469fd8699" name="ArabicName" type="Data"><subsheetid>e0576c81-ddec-4662-b437-1c88357d78cf</subsheetid><display x="-90" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="1aa49fca-ab90-46cf-a662-a0489a0aa41b" name="Mail-EWS" xmlns="http://www.blueprism.co.uk/product/process"><process name="Mail-EWS" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>66dafbc2-d0e4-4bf5-8117-af849d923122</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>27</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="f841c047-7ebe-47c0-9c04-dd5bf856e840" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="959486b7-5a0c-409a-9326-9b63d25d0389" type="Normal" published="True"><name>unread mails</name><view><camerax>234</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ce9e28e-3623-4c0a-93d5-b59bb4d62d38" type="Normal" published="True"><name>Read and mark read</name><view><camerax>0</camerax><cameray>-18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dfca2984-d08a-4e01-999b-d1c065f54791" type="Normal" published="True"><name>download Attachment</name><view><camerax>145</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="400abdb4-9180-4c8a-a8d6-f0a824e3016e" type="Normal" published="True"><name>move mail</name><view><camerax>0</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39d2d9b3-acbf-4ab2-a151-ea453e397ca8" type="Normal" published="True"><name>Read message from specific mail ID</name><view><camerax>283</camerax><cameray>-25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c8dcee8-d212-436c-95eb-9e998f0ce29d" type="Normal" published="True"><name>Read msg using domain</name><view><camerax>255</camerax><cameray>-76</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="086ce0cc-9275-46d8-98bc-3d81f747c86b" type="Normal" published="True"><name>master</name><view><camerax>74</camerax><cameray>264</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8c532263-e1ee-4ae5-a82f-2623eacbaaa2" type="Normal" published="False"><name>Check</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8" type="Normal" published="True"><name>forward mail</name><view><camerax>129</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35" type="Normal" published="True"><name>date and time of mail</name><view><camerax>173</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60424c58-dfd0-4881-b552-c1468d6c7360" type="Normal" published="True"><name>Connect Different User</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6b6c017a-419f-4bde-8d34-338a87bd4ff2" type="Normal" published="True"><name>Connect Default User</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a3ce040d-d6d9-4816-9dfa-6066364f5284" type="Normal" published="True"><name>Send mail</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="15346e33-5748-4bb8-94df-17ffca2f9281" type="Normal" published="True"><name>Send to Many</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="25c6e5dd-9276-449b-aadd-a44514084cd3" type="Normal" published="True"><name>Get Folder Names</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40125ab5-fb73-4e75-afe1-21922c7279ad" type="Normal" published="True"><name>Create Folder</name><view><camerax>0</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7a509b8-d7a4-4cb3-b354-30db15008c71" type="Normal" published="True"><name>reply</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="7fa6f74d-bd7c-498f-94a2-ccbd7ae6056d" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>c2d3878c-532b-40d0-8c38-5a9b82b0a2a7</onsuccess></stage><stage stageid="c2d3878c-532b-40d0-8c38-5a9b82b0a2a7" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="ea2edc7c-d9ac-4293-8a61-8409845ad815" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.Auth.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.dll</reference><reference>System.Net.dll</reference><reference>System.dll</reference><reference>System.Web.Services.dll</reference><reference>mscorlib.dll</reference><reference>system.core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.Exchange.WebServices.Data</import><import>System.Net</import><import>System.Web.Services</import><import>System.Data</import><import>System.Text.RegularExpressions</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[private void AddRow(DataTable table)
{
    DataRowCollection rowCollection = table.Rows;
    // Instantiate a new row using the NewRow method.

    DataRow newRow = table.NewRow();
    // Insert code to fill the row with values.
	//newRow = "Arjun";
    // Add the row to the DataRowCollection.
    table.Rows.Add(newRow);
}

private void MakeDataTableAndDisplay()
{
	 DataTable table = new DataTable();
	 DataColumn column;
    DataRow row; 
    DataView view;
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "item";
    table.Columns.Add(column);
	
	//row["item"] = "item ";
	
	
	row = table.NewRow();
	row["item"] = "item ";
	table.Rows.Add(row);
	
	//Return table;

}


private static bool RedirectionUrlValidationCallback(string redirectionUrl)
    {
      // The default for the validation callback is to reject the URL.
      bool result = false;

      Uri redirectionUri = new Uri(redirectionUrl);

      // Validate the contents of the redirection URL. In this simple validation
      // callback, the redirection URL is considered valid if it is using HTTPS
      // to encrypt the authentication credentials. 
      if (redirectionUri.Scheme == "https://")
      {
        result = true;
      }
      return result;
    }
]]></code></stage><stage stageid="d92773aa-aea5-4b84-97b9-e157fe22ef74" name="Clean Up" type="SubSheetInfo"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4a9c692e-5cba-4621-8901-bcddea180cf5" name="Start" type="Start"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa</onsuccess></stage><stage stageid="9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa" name="End" type="End"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="82de04cf-1042-4b70-9ce0-f37346694643" name="Note1" type="Note"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="20e1b213-4555-4211-8eab-9f336621a991" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="949e8652-f281-4ac6-b738-d3212262a45c" name="unread mails" type="SubSheetInfo"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3c2d5a4d-d17a-4fef-b2b5-1981afcb3d89" name="Start" type="Start"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>0efed21b-db8c-4821-886b-87dab85ba221</onsuccess></stage><stage stageid="a362798e-e7ef-4d27-a2de-9afd7dab4ada" name="End" type="End"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="unread messages" stage="Call3" /></outputs></stage><stage stageid="0efed21b-db8c-4821-886b-87dab85ba221" name="Code4" type="Code"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Coll" expr="[Coll]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="text" name="asub" stage="asub" /><output type="text" name="aTo" stage="aTo" /><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>a362798e-e7ef-4d27-a2de-9afd7dab4ada</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
 asub="";
 aTo="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
	//row["item"] = "item ";
	/*	
	row = table.NewRow();
	row["item"] = "item ";
	table.Rows.Add(row);
 */
 Call3=table;
 //ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2007_SP1);
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


//service.Credentials = new WebCredentials("tp.devtest14@xe04.ey.com", "", "xdtd01.ey.net");

//service.Credentials = new WebCredentials("", "", "xdtd01.ey.net");
//service.Credentials = new NetworkCredential(userEmailAddress, userPassword);





////////////service.Credentials = new WebCredentials("arjun.lal@xe04.ey.com", "*********", "outlook-xi.ey.net");

//service.Credentials = new WebCredentials("arjun.lal@xe04.ey.com", "*********", "outlook-xi.ey.net");


 //service.AutodiscoverUrl( "tp.devtest14@xe04.ey.com" );
 
 // service.Credentials = new NetworkCredential("Arjun.Lal@xe04.ey.com", "");

//service.Credentials = new NetworkCredential("Arjun.Lal@xe04.ey.com", "History_05");

//service.Credentials = new NetworkCredential("tp.devtest14@xe04.ey.com", "");
 
 //************************************
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 
 //service.AutodiscoverUrl("tp.devtest14@xe04.ey.com" );
 
 //service.AutodiscoverUrl("https://xdtd01.ey.net/EWS/Exchange.asmx");
 
 //service.AutodiscoverUrl("Balasubramanian.C@xe04.ey.com" );
 
 //service.Url = new Uri("https://xdtd01.ey.net/EWS/Exchange.asmx");
 
 
// service.Url = new Uri("https://outlook-xi.ey.net/EWS/Exchange.asmx");
 
 
 
//service.AutodiscoverUrl(userEmailAddress, RedirectionCallback);
//service.AutodiscoverUrl("Arjun.Lal@xe04.ey.com", RedirectionCallback);

   // Console.WriteLine("EWS Endpoint: {0}", service.Url);

//service.Url = new Uri("https://outlook-xi.ey.net/ews/Services.wsdl");


//************************************


/*

PropertySet itemProperty = new PropertySet();
 itemProperty.RequestedBodyType = BodyType.Text;
 itemProperty.Add(ItemSchema.Body);
 
 SearchFilter searchFilter = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

        PropertySet FindItemPropertySet = new PropertySet(BasePropertySet.IdOnly);

        ItemView view = new ItemView(999);
       // view.PropertySet = FindItemPropertySet;
        PropertySet GetItemsPropertySet = new PropertySet(BasePropertySet.FirstClassProperties);
        GetItemsPropertySet.RequestedBodyType = BodyType.Text;


        FindItemsResults<Item> emailMessages = null;
        do
        {
            emailMessages = service.FindItems(WellKnownFolderName.Inbox, searchFilter, view);
            if (emailMessages.Items.Count > 0)
            {
                service.LoadPropertiesForItems(emailMessages.Items, GetItemsPropertySet);
                foreach (Item Item in emailMessages.Items)
                {
                    Console.WriteLine(Item.Body.Text);
                }
            }
        } while (emailMessages.MoreAvailable);
 
 
*/




/*
IsEqualTo restriction = new IsEqualTo(MessagePropertyPath.IsRead, false);

                FindItemResponse response = service.FindItem(StandardFolder.Inbox, MessagePropertyPath.AllPropertyPaths, restriction);

*/


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, "subject:TODO", itemview);


//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, "Subject:Fwd: THESIS PRESENTATION", new ItemView( 1000 ));

/**/ //
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


/*
FindItemsResults<Item> findResults = service.FindItems(
   WellKnownFolderName.Inbox,
   new ItemView( 10 ));

 */
   
   FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
   
//Item item = findResults.FirstOrDefault();
//Item item = findResults.Item;

//_________________________________









//___________________________________


foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);

body_h=item.Body;

sub=item.Subject;
asub=sub;

	//if( sub=="Fwd: THESIS PRESENTATION")
{
	body_h=item.Body;
row = table.NewRow();

	//row["Subject"] = body_h;
	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;

]]></code></stage><stage stageid="399f4cd9-df44-4f53-be8f-c8f0f30f47ec" name="asub" type="Data"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="210" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b9a7dab8-8e6f-4754-a8a5-48b8856d9b15" name="aTo" type="Data"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="150" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43b83227-db94-4ba9-b6aa-41fe65fa52de" name="Coll" type="Collection"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="270" y="-75" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject123" type="text" /></collectioninfo><initialvalue><row><field name="Subject123" type="text" value="" /></row></initialvalue></stage><stage stageid="3537e082-8e13-484a-9370-1f9fde83eae1" name="Call3" type="Collection"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="195" y="0" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d6542589-db62-461d-a468-a5c6974e9211" name="Read and mark read" type="SubSheetInfo"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="28439a79-26f9-42d2-9a0f-c5023fe3aaf1" name="Start" type="Start"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>4fafb0ad-cc45-4edc-bdf7-cbb54e162594</onsuccess></stage><stage stageid="23f13cec-c0e6-4af4-b45b-6aff4fa0ab23" name="End" type="End"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4fafb0ad-cc45-4edc-bdf7-cbb54e162594" name="Code5" type="Code"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Coll" expr="[Coll]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="text" name="asub" stage="asub" /><output type="text" name="aTo" stage="aTo" /><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>23f13cec-c0e6-4af4-b45b-6aff4fa0ab23</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
 asub="";
 aTo="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 
 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
body_h=item.Body;

sub=item.Subject;
asub=sub;
mes.IsRead = true;
mes.Update(ConflictResolutionMode.AlwaysOverwrite);

{
	body_h=item.Body;
	row = table.NewRow();
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="b8a3a05b-a249-41e2-96d1-e5f68f7de9d9" name="asub" type="Data"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="270" y="-45" w="150" h="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11402f0a-076c-476a-848e-4f072230c0af" name="aTo" type="Data"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="255" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aaa55966-669e-46a9-b67a-09494c26362c" name="Coll" type="Collection"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="225" y="45" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject123" type="text" /></collectioninfo><initialvalue><row><field name="Subject123" type="text" value="" /></row></initialvalue></stage><stage stageid="cebf8656-2c1c-4267-8e0c-454565c23d19" name="Call3" type="Collection"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="180" y="-60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="bc4e5bb8-41eb-4f30-bc1a-707006561c46" name="download Attachment" type="SubSheetInfo"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8d8a01d6-cfb6-4ad6-ae0e-6d7730863bdf" name="Start" type="Start"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>c79c44bc-11e2-411b-8ee4-cd9116e93d44</onsuccess></stage><stage stageid="0b3cd6f8-fdb8-4d12-854f-148ec0f0e669" name="End" type="End"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="b1c0565f-2613-46cc-b49a-c2daef43d2c0" name="asub" type="Data"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="315" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b792028b-b699-45ea-b147-4a559c6d1ac1" name="Call3" type="Collection"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="165" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c79c44bc-11e2-411b-8ee4-cd9116e93d44" name="Code8" type="Code"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><narrative>ghgfCBTS1184288kuoiuoui </narrative><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>0b3cd6f8-fdb8-4d12-854f-148ec0f0e669</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
 
//asub="";
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);

body_h=item.Body;

sub=item.Subject;
//asub=sub;
var m=Regex.Match(sub.ToUpper(), ".*(CBTS[0-9]{7}).*");
if (m.Success)

{
	body_h=item.Body;
row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                        foreach (Attachment attachment in message.Attachments)
                        {	
							int b=attachment.Name.IndexOf(".");	
                            if (attachment is FileAttachment)
                            if (attachment.Name.Contains(".xlsx"))
                            {	
								count=count+1;
                                FileAttachment fileAttachment = attachment as FileAttachment;
                                //fileAttachment.Load("c:\\folder\\" + fileAttachment.Name);
								fileAttachment.Load("c:\\folder\\" + m.Groups[1].Value+"_"+count+".xlsx");
                                Console.WriteLine("Attachment name: " + fileAttachment.Name);
                            }
                        }
						mes.IsRead = true;
						mes.Update(ConflictResolutionMode.AlwaysOverwrite);

	
	table.Rows.Add(row);
}

}
Call3=table;



]]></code></stage><stage stageid="8e081871-eade-4a43-995b-262dea3db839" name="move mail" type="SubSheetInfo"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><narrative>new
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a2133868-b7b0-4444-a368-0806103b4bc7" name="Start" type="Start"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Move To" stage="MoveToFolder" /></inputs><onsuccess>53ea2a68-7b0f-4d7d-94c1-0912ca0e0d44</onsuccess></stage><stage stageid="02083c3c-b31c-4a84-961b-74cbf89bf152" name="End" type="End"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="53ea2a68-7b0f-4d7d-94c1-0912ca0e0d44" name="Code7" type="Code"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>02083c3c-b31c-4a84-961b-74cbf89bf152</onsuccess><code><![CDATA[string fid;
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}  
 if(fid!="NA")
{
	foreach ( Item item in findResults.Items )
	{
		EmailMessage mes = (EmailMessage)item;
		item.Load(itempropertyset);
		item.Move(fid);
	 }
}
]]></code></stage><stage stageid="4350e711-e6eb-4b4a-af47-19c74f2f4d0a" name="MoveToFolder" type="Data"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4de96794-0749-4723-a307-76fca2b09a65" name="Read message from specific mail ID" type="SubSheetInfo"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ab63ff26-6487-45de-ad2f-c442cebde6fe" name="Start" type="Start"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From address" stage="From" /></inputs><onsuccess>e7f18c7d-1465-4363-8284-45f80903d3e4</onsuccess></stage><stage stageid="3edbe809-6240-4776-b4d8-4ba41def1798" name="End" type="End"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="e7f18c7d-1465-4363-8284-45f80903d3e4" name="Code9" type="Code"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>3edbe809-6240-4776-b4d8-4ba41def1798</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}






PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
if(from_m.ToLower()==From.ToLower())
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="68102a29-1d10-405f-8670-877e8df03d66" name="Call3" type="Collection"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><display x="165" y="-60" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0c4231c1-2da5-4afb-89a3-114f095e398c" name="From" type="Data"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="165" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c58bc5c9-f6e8-404c-b519-c8932f0a6f7b" name="Read msg using domain" type="SubSheetInfo"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b0d18479-f11f-4d2b-a23d-af85d86f8295" name="Start" type="Start"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Domain name" narrative="@&quot;Domain name&quot;" stage="Domain" /></inputs><onsuccess>0a595572-0b8d-4acc-b0e6-4dca9156dc38</onsuccess></stage><stage stageid="190f4407-aeb3-4e3b-b044-a15770dba485" name="End" type="End"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="0a595572-0b8d-4acc-b0e6-4dca9156dc38" name="Code10" type="Code"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Domain" expr="[Domain]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>190f4407-aeb3-4e3b-b044-a15770dba485</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 




PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
var m=Regex.Match(from_m, ".*@"+Domain+"$");
if (m.Success)

{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="4d03f08b-e766-42f1-9e5b-46d9f46f4033" name="Call3" type="Collection"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="85e410bb-e1ca-4f65-93fc-6e950f7776fd" name="Domain" type="Data"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="165" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb769a21-cd46-4bf8-b102-f2a388778b10" name="master" type="SubSheetInfo"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7d26c61a-0cb2-4cd6-8b07-fe1953fc9e58" name="Start" type="Start"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-180" /><inputs><input type="text" name="Subject" narrative="filter with subject string" stage="sub" /><input type="text" name="Filter Mail" narrative="Filter email" stage="mailid" /><input type="text" name="Filter Domain" narrative="Filter Domain" stage="domain" /><input type="date" name="Filter From Date" narrative="dd/mm/yyyy" stage="Date" /><input type="time" name="Filter Time" narrative="hh:mm:ss" stage="time" /><input type="text" name="Save Attachment Path*" narrative="Path" stage="save attachment path" /><input type="text" name="Attachment Type" narrative="Download the specific tipe of attachment only" stage="AttachmentType" /><input type="text" name="Move to Folder" narrative="Move selected mails to the folder" stage="MoveToFolder" /><input type="flag" name="Mark as Read" stage="Mark as Read" /><input type="flag" name="Forward Mail" stage="Forward" /><input type="text" name="Forward To" stage="SendTo" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /><input type="text" name="Forward Note" stage="ForwardNote" /></inputs><onsuccess>5cb41b5c-41d4-4143-8c7e-c375fb4c9898</onsuccess></stage><stage stageid="2a819f53-9a67-42bd-bb27-06bf6ab685d6" name="End" type="End"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="450" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="4ea39d57-dfd0-438e-a860-4d3c3c8e663d" name="Call3" type="Collection"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="450" y="-60" w="180" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="973a7fb2-1761-4d22-a7ff-4b0d2a99ff1a" name="no filter" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master</narrative><display x="15" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}        
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                        foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
Call3=table;



]]></code></stage><stage stageid="cea3f098-9c47-47c4-9637-afd6b55ac187" name="sub" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="345" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43974740-0272-4949-9895-072c6977da83" name="Mark as Read" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-255" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ec8b659a-fd69-4072-8459-efc4f0eeb53a" name="MoveToFolder" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="585" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e562cda9-7416-4960-9650-2b33fced21d3" name="Check" type="SubSheetInfo"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="04be6661-595f-4178-b954-3651d6b176da" name="Start" type="Start"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MoveTo" stage="MoveTo" /></inputs><onsuccess>23730f66-9da9-40b7-bfe9-61d14e7caff8</onsuccess></stage><stage stageid="f55f859d-95e2-40fd-96b0-10d31cb3ca92" name="End" type="End"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="23730f66-9da9-40b7-bfe9-61d14e7caff8" name="Move mail Flag" type="Decision"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[MoveTo]=&quot;&quot;" /><ontrue>9a184c17-58ff-45bb-9d82-19b820ba52fd</ontrue><onfalse>24429790-93d2-4de4-84eb-b76e6087badb</onfalse></stage><stage stageid="b3d4ad3b-0596-4e3b-9a76-369897dcea79" name="To Folder Flag" type="Decision"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[ToFolderFlag]=True" /><ontrue>f55f859d-95e2-40fd-96b0-10d31cb3ca92</ontrue><onfalse>e223973c-c529-4f81-ae45-23d9437d2caf</onfalse></stage><stage stageid="e223973c-c529-4f81-ae45-23d9437d2caf" name="Exception1" type="Exception"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="150" y="30" /><exception type="MoveToFolder" detail="&quot;Folder not found&quot;" /></stage><stage stageid="5cb41b5c-41d4-4143-8c7e-c375fb4c9898" name="Check" type="SubSheet"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="text" name="MoveTo" expr="[MoveToFolder]" /></inputs><onsuccess>56fbab6e-834b-4ce6-9dd8-67013eed48f6</onsuccess><processid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</processid></stage><stage stageid="88cad3c8-a6bb-4a90-a6df-fc955f9111e2" name="MoveTo" type="Data"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">"cvc"</initialvalue><private /><alwaysinit /></stage><stage stageid="24429790-93d2-4de4-84eb-b76e6087badb" name="Code2" type="Code"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MoveToFolder" expr="[MoveTo]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="flag" name="ToFolderFlag" stage="ToFolderFlag" /></outputs><onsuccess>b3d4ad3b-0596-4e3b-9a76-369897dcea79</onsuccess><code><![CDATA[string fid;
ToFolderFlag=Convert.ToBoolean(0);
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}  
 if(fid!="NA")
{
	ToFolderFlag=Convert.ToBoolean(1);
}
]]></code></stage><stage stageid="01be89c6-87f2-4a5b-bc30-9392866254df" name="ToFolderFlag" type="Data"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="210" y="-105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a184c17-58ff-45bb-9d82-19b820ba52fd" name="Anchor1" type="Anchor"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="-60" y="-60" w="10" h="10" /><onsuccess>4080317f-bce9-44d9-8c52-10db6f65d190</onsuccess></stage><stage stageid="4080317f-bce9-44d9-8c52-10db6f65d190" name="Anchor2" type="Anchor"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="-60" y="90" w="10" h="10" /><onsuccess>f55f859d-95e2-40fd-96b0-10d31cb3ca92</onsuccess></stage><stage stageid="e369f710-e2d8-4808-a2eb-01d029891b49" name="save attachment path" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="615" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56fbab6e-834b-4ce6-9dd8-67013eed48f6" name="path" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-75" /><onsuccess>98bd3593-bdd8-4e07-88c9-77785ee839ee</onsuccess><calculation expression="Replace([save attachment path], &quot;\&quot;, &quot;\\&quot;)" stage="save attachment path" /></stage><stage stageid="e9184a69-537e-4f27-8088-7b4752f134c3" name="Recover1" type="Recover"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="240" y="30" /><onsuccess>4aba0743-4c45-46cd-9138-8da5f45bfde2</onsuccess></stage><stage stageid="4aba0743-4c45-46cd-9138-8da5f45bfde2" name="Resume1" type="Resume"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="240" y="90" /><onsuccess>f55f859d-95e2-40fd-96b0-10d31cb3ca92</onsuccess></stage><stage stageid="d2cdff91-91da-4f9b-b406-cb69a3762dc7" name="Stage2" type="Block"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="90" y="-15" w="225" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="64acbfba-b46c-4843-b35f-5df334e24794" name="mailid" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="555" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="723c16e1-5944-4d74-a938-252b38492443" name="domain" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="420" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2437ad06-6ad4-4715-adc9-c37a101b7313" name="domain and mail" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain and mail</narrative><display x="-135" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="domain" expr="[domain]" /><input type="text" name="from" expr="[mailid]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
from_m="";

DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}    
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{

if(from_m.ToLower()==from.ToLower())
{
	var x=Regex.Match(from_m, ".*@"+domain+"$");
	if (x.Success & from_m==from)
	{
	//	var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
	//	if (m.Success)
		if(sub.ToUpper().Contains(Sub.ToUpper()))
		{	
			body_h=item.Body;
			row = table.NewRow();	
			row["Subject"] =sub;
			row["Sender"] =from_m;
			row["Body"] =body_h;
			EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
			foreach (Attachment attachment in message.Attachments)
            {
				if (attachment is FileAttachment)
					if(AttachmentType=="")
					{
						FileAttachment fileAttachment = attachment as FileAttachment;
						fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
					}
					else
					{
						if (attachment.Name.Contains(AttachmentType))
						{	
							count=count+1;
							FileAttachment fileAttachment = attachment as FileAttachment;
							if(Sub=="")
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
							else
								fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
						}
					}
            }
			if(MarkAsRead)
			{
				mes.IsRead = true;
				mes.Update(ConflictResolutionMode.AlwaysOverwrite);
			}
			if(fid!="NA")
			{
				item.Load(itempropertyset);
				item.Move(fid);
			}
			if(Forward)
			{
				message = item as EmailMessage;
				ResponseMessage responseMessage = message.CreateForward();
				responseMessage.BodyPrefix = messageBodyPrefix;
				// Add the recipients who are to receive the forwarded email message.
				responseMessage.ToRecipients.Add(SendTo);
				if(Cc!="")
					responseMessage.CcRecipients.Add(Cc);
				if(Bcc!="")
					responseMessage.BccRecipients.Add(Bcc);

				// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
				responseMessage.SendAndSaveCopy();
			}

			table.Rows.Add(row);
		}

	}
}
}
}
Call3=table;
]]></code></stage><stage stageid="db9a59d0-de56-42af-9111-f6ed2a8945a2" name="domain filtering" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain </narrative><display x="105" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="domain" expr="[domain]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}        
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
var x=Regex.Match(from_m, ".*@"+domain+"$");
if (x.Success)
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
 foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									//if(m.Groups[1].Value=="")
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
}
Call3=table;



]]></code></stage><stage stageid="d563612c-94e2-49d2-a881-1f39c813325c" name="mail filtering" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain and mail</narrative><display x="-60" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="from" expr="[mailid]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote; 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 
 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}       
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
if(from_m.ToLower()==from.ToLower())
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                       foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
}
Call3=table;



]]></code></stage><stage stageid="98bd3593-bdd8-4e07-88c9-77785ee839ee" name="Decision1" type="Decision"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-30" /><decision expression="[mailid]=&quot;&quot;" /><ontrue>322f508b-a81c-4aaa-b06f-0e8a9ad743fd</ontrue><onfalse>9c3bb8da-7079-4819-87a1-a2b7766a4318</onfalse></stage><stage stageid="9c3bb8da-7079-4819-87a1-a2b7766a4318" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="90" y="15" /><onsuccess>ea719a3f-b455-4caa-a965-4ce4afa4033d</onsuccess><calculation expression="True" stage="frommail" /></stage><stage stageid="1c3b51a2-3126-41e6-b09b-d5efd5215861" name="frommail" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="300" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="322f508b-a81c-4aaa-b06f-0e8a9ad743fd" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-60" y="15" /><onsuccess>ea719a3f-b455-4caa-a965-4ce4afa4033d</onsuccess><calculation expression="False" stage="frommail" /></stage><stage stageid="ea719a3f-b455-4caa-a965-4ce4afa4033d" name="Decision1" type="Decision"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="60" /><decision expression="[domain]=&quot;&quot;" /><ontrue>a1273316-a69e-4f85-9adb-152598a4de9d</ontrue><onfalse>7451a1ce-f9c5-4b58-a8f9-19bc84d88ab4</onfalse></stage><stage stageid="7451a1ce-f9c5-4b58-a8f9-19bc84d88ab4" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="90" y="105" /><onsuccess>1471313f-7b62-4c39-bb8b-70197ef4118f</onsuccess><calculation expression="True" stage="domainflag" /></stage><stage stageid="a1273316-a69e-4f85-9adb-152598a4de9d" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-60" y="105" /><onsuccess>1471313f-7b62-4c39-bb8b-70197ef4118f</onsuccess><calculation expression="False" stage="domainflag" /></stage><stage stageid="540c0a57-32f5-4cab-b365-4ce239b2e0cb" name="domainflag" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="285" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1471313f-7b62-4c39-bb8b-70197ef4118f" name="Choice1" type="ChoiceStart"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="150" /><groupid>37c6ac08-b89a-4472-81f4-e3ba4d21e178</groupid><choices><choice expression="([domainflag] AND [frommail])=True"><name>domain and mail</name><distance>30</distance><ontrue>2437ad06-6ad4-4715-adc9-c37a101b7313</ontrue></choice><choice expression="[domainflag]=True"><name>domain</name><distance>60</distance><ontrue>db9a59d0-de56-42af-9111-f6ed2a8945a2</ontrue></choice><choice expression="[frommail]=True"><name>mail</name><distance>90</distance><ontrue>d563612c-94e2-49d2-a881-1f39c813325c</ontrue></choice></choices></stage><stage stageid="24c39994-0c79-4abb-add9-21720e141c7e" name="Otherwise1" type="ChoiceEnd"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>973a7fb2-1761-4d22-a7ff-4b0d2a99ff1a</onsuccess><groupid>37c6ac08-b89a-4472-81f4-e3ba4d21e178</groupid></stage><stage stageid="1cdd0482-9060-431e-8ce0-26ea95b4930b" name="forward mail" type="SubSheetInfo"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8f5773a5-4797-4107-a6fd-a040ef1776e2" name="Start" type="Start"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From" narrative="mail from" stage="From" /><input type="text" name="Subject" narrative="Filter with subject" stage="Sub" /><input type="text" name="To" stage="SendTo" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>62f8c97f-aa32-4a33-a634-c76ad59face4</onsuccess></stage><stage stageid="0ffb6a8a-3c63-4bfa-a162-03e0a12b839d" name="End" type="End"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="62f8c97f-aa32-4a33-a634-c76ad59face4" name="Code1" type="Code"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Sub" expr="[Sub]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>0ffb6a8a-3c63-4bfa-a162-03e0a12b839d</onsuccess><code><![CDATA[string sub;
 string body_h;
 string from_m;
 //string messageBodyPrefix = "This is a message that was forwarded by using the EWS Managed API";
string messageBodyPrefix = "";

// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
EmailMessage message = new EmailMessage(service); 
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;

if(from_m.ToLower()==From.ToLower())
{
	if(sub.ToUpper().Contains(Sub.ToUpper()))
	{
		message = item as EmailMessage;
		ResponseMessage responseMessage = message.CreateForward();
		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		
		responseMessage.BodyPrefix = messageBodyPrefix;

	// Add the recipients who are to receive the forwarded email message.
	responseMessage.ToRecipients.Add(SendTo);
	if(Cc!="")
		responseMessage.CcRecipients.Add(Cc);
	if(Bcc!="")
		responseMessage.BccRecipients.Add(Bcc);

	// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
	responseMessage.SendAndSaveCopy();


		
		table.Rows.Add(row);
	}
}
}
Call3=table;
]]></code></stage><stage stageid="022d833b-1422-47cb-b20b-c3cd2fb6e3e0" name="Call3" type="Collection"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e9b46b30-4d2c-48a8-9f62-35bc299f59b7" name="SendTo" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="255" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2b9de2f-0239-4e52-b4f6-da67ce01c280" name="Cc" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="165" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3757c201-e218-4994-9aff-e0485686e852" name="Bcc" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="255" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764e2eca-6f76-4fdb-b421-aadebbd9dbe1" name="date and time of mail" type="SubSheetInfo"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1aabe3e8-aaa7-4046-bd6b-9a9d9ebc48fd" name="Start" type="Start"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="date" name="Date" stage="Date" /><input type="time" name="Time" stage="time" /></inputs><onsuccess>e493e0ac-ce7f-4041-94ab-d7ab11b21e55</onsuccess></stage><stage stageid="c082afa0-143a-4a17-9901-f512eab0928f" name="End" type="End"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="b1979ee9-017f-43b2-8b2c-9223403b5c57" name="Call3" type="Collection"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><display x="225" y="15" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="00f55e8c-0318-4961-b1e4-f1097cb0ce54" name="Date" type="Data"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="315" y="-75" /><datatype>date</datatype><initialvalue>2000/01/01</initialvalue><private /><alwaysinit /></stage><stage stageid="f4c87a20-0af5-4513-89c7-da405f99c3c4" name="time" type="Data"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="360" y="-75" /><datatype>time</datatype><initialvalue>00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="f5dc8135-b7e4-4fd7-bf2b-add9b365c186" name="Connect Different User" type="SubSheetInfo"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4cf6fd6a-88b7-4410-94e4-80d06b5c7085" name="Start" type="Start"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="User Name" stage="UserName" /><input type="password" name="Password" stage="Password" /><input type="text" name="Mail ID" stage="mailID" /><input type="text" name="ServiceUrl" stage="ServerUrl" /></inputs><onsuccess>2b62fd9d-e510-4c18-8f77-bcf7d994bb96</onsuccess></stage><stage stageid="f7ba08ff-992b-455e-8a7f-fd3ffb1061c1" name="End" type="End"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="d2d5f11a-0c6e-496b-a5b9-72a047bba8f4" name="UserName" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><narrative>Domain\username</narrative><display x="105" y="-75" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="2210b089-5042-486b-9e2a-d2473239dcf1" name="Password" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="165" y="-75" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="2b62fd9d-e510-4c18-8f77-bcf7d994bb96" name="Code6" type="Code"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>f7ba08ff-992b-455e-8a7f-fd3ffb1061c1</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	service.Credentials = new WebCredentials(UserName, Password );
	service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );	 
}
catch
{
	service.Url = new Uri(SUrl);
}
//service.Url = new Uri("https://mail-xi.ey.net/ews/exchange.asmx");


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;
/*
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox,sf, new ItemView(1000));
*/]]></code></stage><stage stageid="0433cef4-1c76-43ee-8c26-1cc42330e5f8" name="mailID" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="225" y="-75" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="ccb69b6f-c88a-4c71-bb66-b4792be0e2fc" name="Connect Default User" type="SubSheetInfo"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="79ecfa5f-af40-43ac-8f43-4b233062e272" name="Start" type="Start"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MailID" stage="mailID" /><input type="text" name="ServiceUrl" stage="ServerUrl" /></inputs><onsuccess>09d03470-9fee-4a3e-870c-824ffca00840</onsuccess></stage><stage stageid="5866ed9f-8c89-4956-b1e4-170ed2f549a7" name="End" type="End"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="22375ac0-789c-4d27-9941-0f16ef91c98d" name="Code11" type="Code"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="ServerUrl" expr="[ServerUrl]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>5866ed9f-8c89-4956-b1e4-170ed2f549a7</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

 
//service.AutodiscoverUrl( MailID );
//service.Url = new Uri("https://mail-xi.ey.net/ews/exchange.asmx"); 
try
{
	service.AutodiscoverUrl( MailID );
}
catch
{
	service.Url = new Uri(ServerUrl);
}
try
{
PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

/*SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   */
Success= true;
	Message = "Success";
}

	
catch (Exception e)
	{
	Message = e.ToString();
	Success= false;
	}   ]]></code></stage><stage stageid="09d03470-9fee-4a3e-870c-824ffca00840" name="Multi1" type="MultipleCalculation"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>22375ac0-789c-4d27-9941-0f16ef91c98d</onsuccess><steps><calculation expression="&quot;&quot;" stage="UserName" /><calculation expression="&quot;&quot;" stage="Password" /></steps></stage><stage stageid="b6ded37c-7705-41ce-b932-fa12741a7ec8" name="Send mail" type="SubSheetInfo"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="78f95592-30d8-4c25-a37a-e8f4364892a7" name="Start" type="Start"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" stage="SendTo" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="text" name="Attachment" stage="Attachment" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>01d385d4-de51-460c-b827-0b04ee0fe500</onsuccess></stage><stage stageid="f7a4c604-d945-456f-a21b-99312bad8e5a" name="End" type="End"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e014c20c-ffec-40ee-8a77-2fca52ac2f0c" name="SendTo" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="135" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="01d385d4-de51-460c-b827-0b04ee0fe500" name="Code12" type="Code"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Attachment" expr="[Attachment]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /></inputs><onsuccess>f7a4c604-d945-456f-a21b-99312bad8e5a</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


EmailMessage message = new EmailMessage(service);

message.Subject = Subject;
message.Body = Body;
message.ToRecipients.Add(SendTo);
if(Cc!="")
	message.CcRecipients.Add(Cc);
if(Bcc!="")
	message.BccRecipients.Add(Bcc);
if(Attachment!="")
	message.Attachments.AddFileAttachment(Attachment);
message.SendAndSaveCopy();
]]></code></stage><stage stageid="aca97485-cadb-4b93-b9fa-a100f3ffff61" name="Get Folder Names" type="SubSheetInfo"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4202cf9-ed59-4f6f-a264-6598d982f070" name="End" type="End"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="File name" stage="Call3" /></outputs></stage><stage stageid="2022634f-97a9-497b-882d-283dc3188d2b" name="Start" type="Start"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>597ace65-31f3-4ff7-a621-8ee0611947df</onsuccess></stage><stage stageid="ac542ce9-534d-4b3f-acc2-d6684d8fd87b" name="End" type="End"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="File name" stage="Call3" /></outputs></stage><stage stageid="597ace65-31f3-4ff7-a621-8ee0611947df" name="Code13" type="Code"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>ac542ce9-534d-4b3f-acc2-d6684d8fd87b</onsuccess><code><![CDATA[ DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Folder";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "ID";
    table.Columns.Add(column);
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

// Get all the folders in the message's root folder.
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);

Console.WriteLine("The " + rootfolder.DisplayName + " has " + rootfolder.ChildFolderCount + " child folders.");
// A GetFolder operation has been performed.
// Now do something with the folder, such as display each child folder's name and ID.
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
    
	row = table.NewRow();

	
	row["Folder"] =folder.DisplayName;
	row["ID"] =folder.Id;
	
	
	table.Rows.Add(row);
}

Call3=table;
]]></code></stage><stage stageid="f862a67e-dabe-4c15-af62-baac3684f56e" name="Call3" type="Collection"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e6c1af67-ea92-4eec-82f0-2095c6ea75bb" name="AttachmentType" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="645" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b10f5cd9-d0e5-4fb8-9c80-4e360cc3760e" name="SendTo" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="405" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd2ad58d-9a71-401f-bdaf-a55cc8abb4c4" name="Cc" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="255" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10c0699e-1e79-43db-b809-1d81dc76cac0" name="Bcc" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="330" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a77d5878-da24-4c45-a6c8-296c03bebe4e" name="Forward" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-360" y="-15" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="72caebfe-0a08-43d8-aa1b-07eb6f395333" name="ForwardNote" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="495" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e493e0ac-ce7f-4041-94ab-d7ab11b21e55" name="Code14" type="Code"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>c082afa0-143a-4a17-9901-f512eab0928f</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 // asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Date&Time";
    table.Columns.Add(column);
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}




PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		row["Date&Time"]=item.DateTimeCreated.ToString();
		table.Rows.Add(row);
}
}

Call3=table;
]]></code></stage><stage stageid="3b6aa8b0-c326-4477-a6fe-364a733538ca" name="Date" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-345" y="75" /><datatype>date</datatype><initialvalue>2000/01/01</initialvalue><private /><alwaysinit /></stage><stage stageid="6f3b2eb2-1938-444e-bec0-5946c815446c" name="time" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-300" y="75" /><datatype>time</datatype><initialvalue>00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="bca38678-d108-44f1-827f-1402f3f76dd1" name="From" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="120" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7460e82-a9d6-49ba-8742-e02ca11b395a" name="Subject" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c2b2cb2-5538-4b6a-9864-491a2c1afff3" name="Body" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-135" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f26e43a-5272-4c89-96d7-2df75d624d34" name="Attachment" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d099d0a9-5310-428a-98db-92fcb0ead86f" name="Sub" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6b2169f-f332-4483-9f86-3007fd15f672" name="Create Folder" type="SubSheetInfo"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><narrative>new
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="19be3c25-40ec-4ae9-bbac-2b5a13df11f7" name="Start" type="Start"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Folder Name" narrative="Folder is created inside Inbox" stage="FolderName" /></inputs><onsuccess>72023ccb-0958-4d30-b20f-4b690f903dfc</onsuccess></stage><stage stageid="d2b32e65-5ee9-4caa-a67a-8365bb2e07ed" name="End" type="End"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="72023ccb-0958-4d30-b20f-4b690f903dfc" name="Code16" type="Code"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="FolderName" expr="[FolderName]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>d2b32e65-5ee9-4caa-a67a-8365bb2e07ed</onsuccess><code><![CDATA[string fid;
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

//SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
Folder folder = new Folder(service);
folder.DisplayName = FolderName;
//folder.FolderClass = "IPF.MyCustomFolderClass"; 
folder.Save(WellKnownFolderName.Inbox); ]]></code></stage><stage stageid="d4630024-b84a-4ca5-80a0-25d56bf3a23f" name="FolderName" type="Data"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ec1a7f1-092c-4331-8fba-d0c7564f0aee" name="reply" type="SubSheetInfo"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5e200078-e9bb-460a-8ffc-bee70d34128e" name="Start" type="Start"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From" narrative="mail from" stage="From" /><input type="text" name="Subject" narrative="Filter with subject" stage="Sub" /><input type="text" name="Reply" narrative="Reply Body" stage="Body" /></inputs><onsuccess>a0e21dbc-a62f-427f-a66d-e0b07aada017</onsuccess></stage><stage stageid="5c8eec16-83ec-4457-8c33-6d8d0b5ec416" name="End" type="End"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="a0e21dbc-a62f-427f-a66d-e0b07aada017" name="Code30" type="Code"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Sub" expr="[Sub]" /><input type="text" name="Body" expr="[Body]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>5c8eec16-83ec-4457-8c33-6d8d0b5ec416</onsuccess><code><![CDATA[bool replyToAll = true;
string sub;
 string body_h;
 string from_m;
 //string messageBodyPrefix = "This is a message that was forwarded by using the EWS Managed API";
string messageBodyPrefix = "";

// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
EmailMessage message = new EmailMessage(service); 
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;

if(from_m.ToLower()==From.ToLower())
{
	if(sub.ToUpper().Contains(Sub.ToUpper()))
	{
		message = item as EmailMessage;

		ResponseMessage responseMessage = message.CreateReply(replyToAll);

		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		
		responseMessage.BodyPrefix=Body ;
		

		responseMessage.SendAndSaveCopy();


		
		table.Rows.Add(row);
	}
}
}
Call3=table;
]]></code></stage><stage stageid="0405bad6-d015-4f09-97e9-46f764a5eded" name="Call3" type="Collection"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2cc622d0-d892-4fe9-9b4a-f5ae934db1e2" name="From" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="120" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed91b332-1cff-4142-94c7-059e4e26b1c5" name="Sub" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="180" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d2fa7b54-9673-47b4-a14d-3f2de9a9cba8" name="Body" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="359ec8ef-c711-47cb-ba03-67a68118e174" name="Cc" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-150" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1554bf4-d8f9-427b-9fb0-57e98368479d" name="Bcc" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-75" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="19bfb23b-664c-4bec-adb2-a6a1c8affdbd" name="Send to Many" type="SubSheetInfo"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-210" y="-135" w="150" h="90" /></stage><stage stageid="6742889c-e2f6-4c3d-856f-bfc9dcf523dd" name="Start" type="Start"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" stage="SendTo" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="collection" name="Attachment" stage="Attachments" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>a82c3c23-acee-4c91-979c-4b01487a6db7</onsuccess></stage><stage stageid="ba75195c-a471-4311-b3b2-d1874562e084" name="End" type="End"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="e28c8c79-f516-490a-9e56-19dc913df361" name="SendTo" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="-240" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a82c3c23-acee-4c91-979c-4b01487a6db7" name="Send Mail with Multiple " type="Code"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="text" name="cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ba75195c-a471-4311-b3b2-d1874562e084</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

try
{
EmailMessage message = new EmailMessage(service);

message.Subject = Subject;
message.Body = Body;
if ( SendTo!= "")
		 {
		
			 foreach (var address1 in SendTo.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.ToRecipients.Add(address1);    
			 }
		 } 
if ( cc!= "")
		 {
		
			 foreach (var address2 in cc.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.CcRecipients.Add(address2);    
			 }
			
		 } 
if(Bcc!="")
//	message.BccRecipients.Add(Bcc);
{
		
			 foreach (var address3 in Bcc.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.BccRecipients.Add(address3);    
			 }
						
		 }
if ( Attachments != null )
	{	
	 message.Body = Body ; 
	 
	 foreach (DataRow row in Attachments.Rows)
     {
          message.Attachments.AddFileAttachment(row["Path"].ToString());  
     }
	}
	//message.Attachments.AddFileAttachment(Attachment);
message.SendAndSaveCopy();
Success= true;
	Message = "Success";
}

	
catch (Exception e)
	{
	Message = e.ToString();
	Success= false;
	}]]></code></stage><stage stageid="bc287de9-d2a6-4a3a-b1f4-5c6e4e7b51ec" name="Subject" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd529f69-4a6b-415c-af8b-04d716c11dc4" name="Body" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14d5fbf9-8cfb-4b01-9cb6-d5d8b803481f" name="Cc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc373ca1-02e6-4517-b78b-2470d2456609" name="Bcc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41bd8bcf-1fe8-4e7b-9120-f9f8250e6ab3" name="Attachments" type="Collection"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f65cdaf6-ec68-4506-8928-8745e89716d9" name="Message" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="180" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="670c8141-5d02-4c24-bd65-970fdf0a84f7" name="Success" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="120" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e613418-945b-47d3-8893-875ae5d94c3c" name="Success" type="Data"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-105" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6eb3601-c1e0-4be4-b6b5-41a451a9a793" name="Message" type="Data"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-105" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87a70972-feeb-46e5-b996-efc51c9468d2" name="ServerUrl" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="285" y="-75" /><datatype>text</datatype><initialvalue xml:space="preserve">https://webmail.alrajhibank.com.sa/ews/exchange.asmx</initialvalue><alwaysinit /></stage></process></object>
        <object id="4c6f1aa0-20bf-43bf-a994-2e956c35c4e9" name="Mail-EWS_ART" xmlns="http://www.blueprism.co.uk/product/process"><process name="Mail-EWS_ART" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>66dafbc2-d0e4-4bf5-8117-af849d923122</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>27</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="f841c047-7ebe-47c0-9c04-dd5bf856e840" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="959486b7-5a0c-409a-9326-9b63d25d0389" type="Normal" published="True"><name>unread mails</name><view><camerax>234</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ce9e28e-3623-4c0a-93d5-b59bb4d62d38" type="Normal" published="True"><name>Read and mark read</name><view><camerax>0</camerax><cameray>-18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dfca2984-d08a-4e01-999b-d1c065f54791" type="Normal" published="True"><name>download Attachment</name><view><camerax>145</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e79a75d8-f5db-462e-86e2-608b859bcccb" type="Normal" published="True"><name>Download Attachment from Specific MailID</name><view><camerax>145</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="400abdb4-9180-4c8a-a8d6-f0a824e3016e" type="Normal" published="True"><name>move mail</name><view><camerax>0</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39d2d9b3-acbf-4ab2-a151-ea453e397ca8" type="Normal" published="True"><name>Read message from specific mail ID</name><view><camerax>283</camerax><cameray>-25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c8dcee8-d212-436c-95eb-9e998f0ce29d" type="Normal" published="True"><name>Read msg using domain</name><view><camerax>255</camerax><cameray>-76</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="086ce0cc-9275-46d8-98bc-3d81f747c86b" type="Normal" published="True"><name>master</name><view><camerax>74</camerax><cameray>264</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8c532263-e1ee-4ae5-a82f-2623eacbaaa2" type="Normal" published="False"><name>Check</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8" type="Normal" published="True"><name>forward mail</name><view><camerax>129</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35" type="Normal" published="True"><name>date and time of mail</name><view><camerax>173</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60424c58-dfd0-4881-b552-c1468d6c7360" type="Normal" published="True"><name>Connect Different User</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6b6c017a-419f-4bde-8d34-338a87bd4ff2" type="Normal" published="True"><name>Connect Default User</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a3ce040d-d6d9-4816-9dfa-6066364f5284" type="Normal" published="True"><name>Send mail</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="15346e33-5748-4bb8-94df-17ffca2f9281" type="Normal" published="True"><name>Send to Many</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="25c6e5dd-9276-449b-aadd-a44514084cd3" type="Normal" published="True"><name>Get Folder Names</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40125ab5-fb73-4e75-afe1-21922c7279ad" type="Normal" published="True"><name>Create Folder</name><view><camerax>0</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7a509b8-d7a4-4cb3-b354-30db15008c71" type="Normal" published="True"><name>reply</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="7fa6f74d-bd7c-498f-94a2-ccbd7ae6056d" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>c2d3878c-532b-40d0-8c38-5a9b82b0a2a7</onsuccess></stage><stage stageid="c2d3878c-532b-40d0-8c38-5a9b82b0a2a7" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="ea2edc7c-d9ac-4293-8a61-8409845ad815" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.Auth.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.dll</reference><reference>System.Net.dll</reference><reference>System.dll</reference><reference>System.Web.Services.dll</reference><reference>mscorlib.dll</reference><reference>system.core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.Exchange.WebServices.Data</import><import>System.Net</import><import>System.Web.Services</import><import>System.Data</import><import>System.Text.RegularExpressions</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[private void AddRow(DataTable table)
{
    DataRowCollection rowCollection = table.Rows;
    // Instantiate a new row using the NewRow method.

    DataRow newRow = table.NewRow();
    // Insert code to fill the row with values.
	//newRow = "Arjun";
    // Add the row to the DataRowCollection.
    table.Rows.Add(newRow);
}

private void MakeDataTableAndDisplay()
{
	 DataTable table = new DataTable();
	 DataColumn column;
    DataRow row; 
    DataView view;
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "item";
    table.Columns.Add(column);
	
	//row["item"] = "item ";
	
	
	row = table.NewRow();
	row["item"] = "item ";
	table.Rows.Add(row);
	
	//Return table;

}


private static bool RedirectionUrlValidationCallback(string redirectionUrl)
    {
      // The default for the validation callback is to reject the URL.
      bool result = false;

      Uri redirectionUri = new Uri(redirectionUrl);

      // Validate the contents of the redirection URL. In this simple validation
      // callback, the redirection URL is considered valid if it is using HTTPS
      // to encrypt the authentication credentials. 
      if (redirectionUri.Scheme == "https://")
      {
        result = true;
      }
      return result;
    }
]]></code></stage><stage stageid="d92773aa-aea5-4b84-97b9-e157fe22ef74" name="Clean Up" type="SubSheetInfo"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4a9c692e-5cba-4621-8901-bcddea180cf5" name="Start" type="Start"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa</onsuccess></stage><stage stageid="9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa" name="End" type="End"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="82de04cf-1042-4b70-9ce0-f37346694643" name="Note1" type="Note"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="20e1b213-4555-4211-8eab-9f336621a991" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="949e8652-f281-4ac6-b738-d3212262a45c" name="unread mails" type="SubSheetInfo"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3c2d5a4d-d17a-4fef-b2b5-1981afcb3d89" name="Start" type="Start"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>0efed21b-db8c-4821-886b-87dab85ba221</onsuccess></stage><stage stageid="a362798e-e7ef-4d27-a2de-9afd7dab4ada" name="End" type="End"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="unread messages" stage="Call3" /></outputs></stage><stage stageid="0efed21b-db8c-4821-886b-87dab85ba221" name="Code4" type="Code"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Coll" expr="[Coll]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="text" name="asub" stage="asub" /><output type="text" name="aTo" stage="aTo" /><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>a362798e-e7ef-4d27-a2de-9afd7dab4ada</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
 asub="";
 aTo="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
	//row["item"] = "item ";
	/*	
	row = table.NewRow();
	row["item"] = "item ";
	table.Rows.Add(row);
 */
 Call3=table;
 //ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2007_SP1);
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


//service.Credentials = new WebCredentials("tp.devtest14@xe04.ey.com", "", "xdtd01.ey.net");

//service.Credentials = new WebCredentials("", "", "xdtd01.ey.net");
//service.Credentials = new NetworkCredential(userEmailAddress, userPassword);





////////////service.Credentials = new WebCredentials("arjun.lal@xe04.ey.com", "*********", "outlook-xi.ey.net");

//service.Credentials = new WebCredentials("arjun.lal@xe04.ey.com", "*********", "outlook-xi.ey.net");


 //service.AutodiscoverUrl( "tp.devtest14@xe04.ey.com" );
 
 // service.Credentials = new NetworkCredential("Arjun.Lal@xe04.ey.com", "");

//service.Credentials = new NetworkCredential("Arjun.Lal@xe04.ey.com", "History_05");

//service.Credentials = new NetworkCredential("tp.devtest14@xe04.ey.com", "");
 
 //************************************
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 
 //service.AutodiscoverUrl("tp.devtest14@xe04.ey.com" );
 
 //service.AutodiscoverUrl("https://xdtd01.ey.net/EWS/Exchange.asmx");
 
 //service.AutodiscoverUrl("Balasubramanian.C@xe04.ey.com" );
 
 //service.Url = new Uri("https://xdtd01.ey.net/EWS/Exchange.asmx");
 
 
// service.Url = new Uri("https://outlook-xi.ey.net/EWS/Exchange.asmx");
 
 
 
//service.AutodiscoverUrl(userEmailAddress, RedirectionCallback);
//service.AutodiscoverUrl("Arjun.Lal@xe04.ey.com", RedirectionCallback);

   // Console.WriteLine("EWS Endpoint: {0}", service.Url);

//service.Url = new Uri("https://outlook-xi.ey.net/ews/Services.wsdl");


//************************************


/*

PropertySet itemProperty = new PropertySet();
 itemProperty.RequestedBodyType = BodyType.Text;
 itemProperty.Add(ItemSchema.Body);
 
 SearchFilter searchFilter = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

        PropertySet FindItemPropertySet = new PropertySet(BasePropertySet.IdOnly);

        ItemView view = new ItemView(999);
       // view.PropertySet = FindItemPropertySet;
        PropertySet GetItemsPropertySet = new PropertySet(BasePropertySet.FirstClassProperties);
        GetItemsPropertySet.RequestedBodyType = BodyType.Text;


        FindItemsResults<Item> emailMessages = null;
        do
        {
            emailMessages = service.FindItems(WellKnownFolderName.Inbox, searchFilter, view);
            if (emailMessages.Items.Count > 0)
            {
                service.LoadPropertiesForItems(emailMessages.Items, GetItemsPropertySet);
                foreach (Item Item in emailMessages.Items)
                {
                    Console.WriteLine(Item.Body.Text);
                }
            }
        } while (emailMessages.MoreAvailable);
 
 
*/




/*
IsEqualTo restriction = new IsEqualTo(MessagePropertyPath.IsRead, false);

                FindItemResponse response = service.FindItem(StandardFolder.Inbox, MessagePropertyPath.AllPropertyPaths, restriction);

*/


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, "subject:TODO", itemview);


//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, "Subject:Fwd: THESIS PRESENTATION", new ItemView( 1000 ));

/**/ //
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


/*
FindItemsResults<Item> findResults = service.FindItems(
   WellKnownFolderName.Inbox,
   new ItemView( 10 ));

 */
   
   FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
   
//Item item = findResults.FirstOrDefault();
//Item item = findResults.Item;

//_________________________________









//___________________________________


foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);

body_h=item.Body;

sub=item.Subject;
asub=sub;

	//if( sub=="Fwd: THESIS PRESENTATION")
{
	body_h=item.Body;
row = table.NewRow();

	//row["Subject"] = body_h;
	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;

]]></code></stage><stage stageid="399f4cd9-df44-4f53-be8f-c8f0f30f47ec" name="asub" type="Data"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="210" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b9a7dab8-8e6f-4754-a8a5-48b8856d9b15" name="aTo" type="Data"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="150" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43b83227-db94-4ba9-b6aa-41fe65fa52de" name="Coll" type="Collection"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="270" y="-75" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject123" type="text" /></collectioninfo><initialvalue><row><field name="Subject123" type="text" value="" /></row></initialvalue></stage><stage stageid="3537e082-8e13-484a-9370-1f9fde83eae1" name="Call3" type="Collection"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="195" y="0" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d6542589-db62-461d-a468-a5c6974e9211" name="Read and mark read" type="SubSheetInfo"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="28439a79-26f9-42d2-9a0f-c5023fe3aaf1" name="Start" type="Start"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>4fafb0ad-cc45-4edc-bdf7-cbb54e162594</onsuccess></stage><stage stageid="23f13cec-c0e6-4af4-b45b-6aff4fa0ab23" name="End" type="End"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4fafb0ad-cc45-4edc-bdf7-cbb54e162594" name="Code5" type="Code"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Coll" expr="[Coll]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="text" name="asub" stage="asub" /><output type="text" name="aTo" stage="aTo" /><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>23f13cec-c0e6-4af4-b45b-6aff4fa0ab23</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
 asub="";
 aTo="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 
 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
body_h=item.Body;

sub=item.Subject;
asub=sub;
mes.IsRead = true;
mes.Update(ConflictResolutionMode.AlwaysOverwrite);

{
	body_h=item.Body;
	row = table.NewRow();
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="b8a3a05b-a249-41e2-96d1-e5f68f7de9d9" name="asub" type="Data"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="270" y="-45" w="150" h="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11402f0a-076c-476a-848e-4f072230c0af" name="aTo" type="Data"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="255" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aaa55966-669e-46a9-b67a-09494c26362c" name="Coll" type="Collection"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="225" y="45" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject123" type="text" /></collectioninfo><initialvalue><row><field name="Subject123" type="text" value="" /></row></initialvalue></stage><stage stageid="cebf8656-2c1c-4267-8e0c-454565c23d19" name="Call3" type="Collection"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="180" y="-60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="bc4e5bb8-41eb-4f30-bc1a-707006561c46" name="download Attachment" type="SubSheetInfo"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8d8a01d6-cfb6-4ad6-ae0e-6d7730863bdf" name="Start" type="Start"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>c79c44bc-11e2-411b-8ee4-cd9116e93d44</onsuccess></stage><stage stageid="0b3cd6f8-fdb8-4d12-854f-148ec0f0e669" name="End" type="End"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="b1c0565f-2613-46cc-b49a-c2daef43d2c0" name="asub" type="Data"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="315" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b792028b-b699-45ea-b147-4a559c6d1ac1" name="Call3" type="Collection"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="165" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c79c44bc-11e2-411b-8ee4-cd9116e93d44" name="Code8" type="Code"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><narrative>ghgfCBTS1184288kuoiuoui </narrative><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>0b3cd6f8-fdb8-4d12-854f-148ec0f0e669</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
 
//asub="";
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);

body_h=item.Body;

sub=item.Subject;
//asub=sub;
var m=Regex.Match(sub.ToUpper(), ".*(CBTS[0-9]{7}).*");
if (m.Success)

{
	body_h=item.Body;
row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                        foreach (Attachment attachment in message.Attachments)
                        {	
							int b=attachment.Name.IndexOf(".");	
                            if (attachment is FileAttachment)
                            if (attachment.Name.Contains(".xlsx"))
                            {	
								count=count+1;
                                FileAttachment fileAttachment = attachment as FileAttachment;
                                //fileAttachment.Load("c:\\folder\\" + fileAttachment.Name);
								fileAttachment.Load("c:\\folder\\" + m.Groups[1].Value+"_"+count+".xlsx");
                                Console.WriteLine("Attachment name: " + fileAttachment.Name);
                            }
                        }
						mes.IsRead = true;
						mes.Update(ConflictResolutionMode.AlwaysOverwrite);

	
	table.Rows.Add(row);
}

}
Call3=table;



]]></code></stage><stage stageid="8e081871-eade-4a43-995b-262dea3db839" name="move mail" type="SubSheetInfo"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><narrative>new
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a2133868-b7b0-4444-a368-0806103b4bc7" name="Start" type="Start"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Move To" stage="MoveToFolder" /></inputs><onsuccess>53ea2a68-7b0f-4d7d-94c1-0912ca0e0d44</onsuccess></stage><stage stageid="02083c3c-b31c-4a84-961b-74cbf89bf152" name="End" type="End"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="53ea2a68-7b0f-4d7d-94c1-0912ca0e0d44" name="Code7" type="Code"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>02083c3c-b31c-4a84-961b-74cbf89bf152</onsuccess><code><![CDATA[string fid;
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}  
 if(fid!="NA")
{
	foreach ( Item item in findResults.Items )
	{
		EmailMessage mes = (EmailMessage)item;
		item.Load(itempropertyset);
		item.Move(fid);
	 }
}
]]></code></stage><stage stageid="4350e711-e6eb-4b4a-af47-19c74f2f4d0a" name="MoveToFolder" type="Data"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4de96794-0749-4723-a307-76fca2b09a65" name="Read message from specific mail ID" type="SubSheetInfo"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ab63ff26-6487-45de-ad2f-c442cebde6fe" name="Start" type="Start"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From address" stage="From" /></inputs><onsuccess>e7f18c7d-1465-4363-8284-45f80903d3e4</onsuccess></stage><stage stageid="3edbe809-6240-4776-b4d8-4ba41def1798" name="End" type="End"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="e7f18c7d-1465-4363-8284-45f80903d3e4" name="Code9" type="Code"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>3edbe809-6240-4776-b4d8-4ba41def1798</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}






PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
if(from_m.ToLower()==From.ToLower())
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="68102a29-1d10-405f-8670-877e8df03d66" name="Call3" type="Collection"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><display x="165" y="-60" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0c4231c1-2da5-4afb-89a3-114f095e398c" name="From" type="Data"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="165" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c58bc5c9-f6e8-404c-b519-c8932f0a6f7b" name="Read msg using domain" type="SubSheetInfo"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b0d18479-f11f-4d2b-a23d-af85d86f8295" name="Start" type="Start"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Domain name" narrative="@&quot;Domain name&quot;" stage="Domain" /></inputs><onsuccess>0a595572-0b8d-4acc-b0e6-4dca9156dc38</onsuccess></stage><stage stageid="190f4407-aeb3-4e3b-b044-a15770dba485" name="End" type="End"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="0a595572-0b8d-4acc-b0e6-4dca9156dc38" name="Code10" type="Code"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Domain" expr="[Domain]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>190f4407-aeb3-4e3b-b044-a15770dba485</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 




PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
var m=Regex.Match(from_m, ".*@"+Domain+"$");
if (m.Success)

{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="4d03f08b-e766-42f1-9e5b-46d9f46f4033" name="Call3" type="Collection"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="85e410bb-e1ca-4f65-93fc-6e950f7776fd" name="Domain" type="Data"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="165" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb769a21-cd46-4bf8-b102-f2a388778b10" name="master" type="SubSheetInfo"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7d26c61a-0cb2-4cd6-8b07-fe1953fc9e58" name="Start" type="Start"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-180" /><inputs><input type="text" name="Subject" narrative="filter with subject string" stage="sub" /><input type="text" name="Filter Mail" narrative="Filter email" stage="mailid" /><input type="text" name="Filter Domain" narrative="Filter Domain" stage="domain" /><input type="date" name="Filter From Date" narrative="dd/mm/yyyy" stage="Date" /><input type="time" name="Filter Time" narrative="hh:mm:ss" stage="time" /><input type="text" name="Save Attachment Path*" narrative="Path" stage="save attachment path" /><input type="text" name="Attachment Type" narrative="Download the specific tipe of attachment only" stage="AttachmentType" /><input type="text" name="Move to Folder" narrative="Move selected mails to the folder" stage="MoveToFolder" /><input type="flag" name="Mark as Read" stage="Mark as Read" /><input type="flag" name="Forward Mail" stage="Forward" /><input type="text" name="Forward To" stage="SendTo" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /><input type="text" name="Forward Note" stage="ForwardNote" /></inputs><onsuccess>5cb41b5c-41d4-4143-8c7e-c375fb4c9898</onsuccess></stage><stage stageid="2a819f53-9a67-42bd-bb27-06bf6ab685d6" name="End" type="End"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="450" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="4ea39d57-dfd0-438e-a860-4d3c3c8e663d" name="Call3" type="Collection"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="450" y="-60" w="180" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="973a7fb2-1761-4d22-a7ff-4b0d2a99ff1a" name="no filter" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master</narrative><display x="15" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}        
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                        foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
Call3=table;



]]></code></stage><stage stageid="cea3f098-9c47-47c4-9637-afd6b55ac187" name="sub" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="345" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43974740-0272-4949-9895-072c6977da83" name="Mark as Read" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-255" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ec8b659a-fd69-4072-8459-efc4f0eeb53a" name="MoveToFolder" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="585" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e562cda9-7416-4960-9650-2b33fced21d3" name="Check" type="SubSheetInfo"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="04be6661-595f-4178-b954-3651d6b176da" name="Start" type="Start"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MoveTo" stage="MoveTo" /></inputs><onsuccess>23730f66-9da9-40b7-bfe9-61d14e7caff8</onsuccess></stage><stage stageid="f55f859d-95e2-40fd-96b0-10d31cb3ca92" name="End" type="End"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="23730f66-9da9-40b7-bfe9-61d14e7caff8" name="Move mail Flag" type="Decision"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[MoveTo]=&quot;&quot;" /><ontrue>9a184c17-58ff-45bb-9d82-19b820ba52fd</ontrue><onfalse>24429790-93d2-4de4-84eb-b76e6087badb</onfalse></stage><stage stageid="b3d4ad3b-0596-4e3b-9a76-369897dcea79" name="To Folder Flag" type="Decision"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[ToFolderFlag]=True" /><ontrue>f55f859d-95e2-40fd-96b0-10d31cb3ca92</ontrue><onfalse>e223973c-c529-4f81-ae45-23d9437d2caf</onfalse></stage><stage stageid="e223973c-c529-4f81-ae45-23d9437d2caf" name="Exception1" type="Exception"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="150" y="30" /><exception type="MoveToFolder" detail="&quot;Folder not found&quot;" /></stage><stage stageid="5cb41b5c-41d4-4143-8c7e-c375fb4c9898" name="Check" type="SubSheet"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="text" name="MoveTo" expr="[MoveToFolder]" /></inputs><onsuccess>56fbab6e-834b-4ce6-9dd8-67013eed48f6</onsuccess><processid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</processid></stage><stage stageid="88cad3c8-a6bb-4a90-a6df-fc955f9111e2" name="MoveTo" type="Data"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">"cvc"</initialvalue><private /><alwaysinit /></stage><stage stageid="24429790-93d2-4de4-84eb-b76e6087badb" name="Code2" type="Code"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MoveToFolder" expr="[MoveTo]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="flag" name="ToFolderFlag" stage="ToFolderFlag" /></outputs><onsuccess>b3d4ad3b-0596-4e3b-9a76-369897dcea79</onsuccess><code><![CDATA[string fid;
ToFolderFlag=Convert.ToBoolean(0);
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}  
 if(fid!="NA")
{
	ToFolderFlag=Convert.ToBoolean(1);
}
]]></code></stage><stage stageid="01be89c6-87f2-4a5b-bc30-9392866254df" name="ToFolderFlag" type="Data"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="210" y="-105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a184c17-58ff-45bb-9d82-19b820ba52fd" name="Anchor1" type="Anchor"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="-60" y="-60" w="10" h="10" /><onsuccess>4080317f-bce9-44d9-8c52-10db6f65d190</onsuccess></stage><stage stageid="4080317f-bce9-44d9-8c52-10db6f65d190" name="Anchor2" type="Anchor"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="-60" y="90" w="10" h="10" /><onsuccess>f55f859d-95e2-40fd-96b0-10d31cb3ca92</onsuccess></stage><stage stageid="e369f710-e2d8-4808-a2eb-01d029891b49" name="save attachment path" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="615" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56fbab6e-834b-4ce6-9dd8-67013eed48f6" name="path" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-75" /><onsuccess>98bd3593-bdd8-4e07-88c9-77785ee839ee</onsuccess><calculation expression="Replace([save attachment path], &quot;\&quot;, &quot;\\&quot;)" stage="save attachment path" /></stage><stage stageid="e9184a69-537e-4f27-8088-7b4752f134c3" name="Recover1" type="Recover"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="240" y="30" /><onsuccess>4aba0743-4c45-46cd-9138-8da5f45bfde2</onsuccess></stage><stage stageid="4aba0743-4c45-46cd-9138-8da5f45bfde2" name="Resume1" type="Resume"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="240" y="90" /><onsuccess>f55f859d-95e2-40fd-96b0-10d31cb3ca92</onsuccess></stage><stage stageid="d2cdff91-91da-4f9b-b406-cb69a3762dc7" name="Stage2" type="Block"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="90" y="-15" w="225" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="64acbfba-b46c-4843-b35f-5df334e24794" name="mailid" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="555" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="723c16e1-5944-4d74-a938-252b38492443" name="domain" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="420" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2437ad06-6ad4-4715-adc9-c37a101b7313" name="domain and mail" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain and mail</narrative><display x="-135" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="domain" expr="[domain]" /><input type="text" name="from" expr="[mailid]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
from_m="";

DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}    
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{

if(from_m.ToLower()==from.ToLower())
{
	var x=Regex.Match(from_m, ".*@"+domain+"$");
	if (x.Success & from_m==from)
	{
	//	var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
	//	if (m.Success)
		if(sub.ToUpper().Contains(Sub.ToUpper()))
		{	
			body_h=item.Body;
			row = table.NewRow();	
			row["Subject"] =sub;
			row["Sender"] =from_m;
			row["Body"] =body_h;
			EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
			foreach (Attachment attachment in message.Attachments)
            {
				if (attachment is FileAttachment)
					if(AttachmentType=="")
					{
						FileAttachment fileAttachment = attachment as FileAttachment;
						fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
					}
					else
					{
						if (attachment.Name.Contains(AttachmentType))
						{	
							count=count+1;
							FileAttachment fileAttachment = attachment as FileAttachment;
							if(Sub=="")
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
							else
								fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
						}
					}
            }
			if(MarkAsRead)
			{
				mes.IsRead = true;
				mes.Update(ConflictResolutionMode.AlwaysOverwrite);
			}
			if(fid!="NA")
			{
				item.Load(itempropertyset);
				item.Move(fid);
			}
			if(Forward)
			{
				message = item as EmailMessage;
				ResponseMessage responseMessage = message.CreateForward();
				responseMessage.BodyPrefix = messageBodyPrefix;
				// Add the recipients who are to receive the forwarded email message.
				responseMessage.ToRecipients.Add(SendTo);
				if(Cc!="")
					responseMessage.CcRecipients.Add(Cc);
				if(Bcc!="")
					responseMessage.BccRecipients.Add(Bcc);

				// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
				responseMessage.SendAndSaveCopy();
			}

			table.Rows.Add(row);
		}

	}
}
}
}
Call3=table;
]]></code></stage><stage stageid="db9a59d0-de56-42af-9111-f6ed2a8945a2" name="domain filtering" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain </narrative><display x="105" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="domain" expr="[domain]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}        
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
var x=Regex.Match(from_m, ".*@"+domain+"$");
if (x.Success)
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
 foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									//if(m.Groups[1].Value=="")
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
}
Call3=table;



]]></code></stage><stage stageid="d563612c-94e2-49d2-a881-1f39c813325c" name="mail filtering" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain and mail</narrative><display x="-60" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="from" expr="[mailid]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote; 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 
 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}       
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
if(from_m.ToLower()==from.ToLower())
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                       foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
}
Call3=table;



]]></code></stage><stage stageid="98bd3593-bdd8-4e07-88c9-77785ee839ee" name="Decision1" type="Decision"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-30" /><decision expression="[mailid]=&quot;&quot;" /><ontrue>322f508b-a81c-4aaa-b06f-0e8a9ad743fd</ontrue><onfalse>9c3bb8da-7079-4819-87a1-a2b7766a4318</onfalse></stage><stage stageid="9c3bb8da-7079-4819-87a1-a2b7766a4318" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="90" y="15" /><onsuccess>ea719a3f-b455-4caa-a965-4ce4afa4033d</onsuccess><calculation expression="True" stage="frommail" /></stage><stage stageid="1c3b51a2-3126-41e6-b09b-d5efd5215861" name="frommail" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="300" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="322f508b-a81c-4aaa-b06f-0e8a9ad743fd" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-60" y="15" /><onsuccess>ea719a3f-b455-4caa-a965-4ce4afa4033d</onsuccess><calculation expression="False" stage="frommail" /></stage><stage stageid="ea719a3f-b455-4caa-a965-4ce4afa4033d" name="Decision1" type="Decision"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="60" /><decision expression="[domain]=&quot;&quot;" /><ontrue>a1273316-a69e-4f85-9adb-152598a4de9d</ontrue><onfalse>7451a1ce-f9c5-4b58-a8f9-19bc84d88ab4</onfalse></stage><stage stageid="7451a1ce-f9c5-4b58-a8f9-19bc84d88ab4" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="90" y="105" /><onsuccess>1471313f-7b62-4c39-bb8b-70197ef4118f</onsuccess><calculation expression="True" stage="domainflag" /></stage><stage stageid="a1273316-a69e-4f85-9adb-152598a4de9d" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-60" y="105" /><onsuccess>1471313f-7b62-4c39-bb8b-70197ef4118f</onsuccess><calculation expression="False" stage="domainflag" /></stage><stage stageid="540c0a57-32f5-4cab-b365-4ce239b2e0cb" name="domainflag" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="285" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1471313f-7b62-4c39-bb8b-70197ef4118f" name="Choice1" type="ChoiceStart"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="150" /><groupid>37c6ac08-b89a-4472-81f4-e3ba4d21e178</groupid><choices><choice expression="([domainflag] AND [frommail])=True"><name>domain and mail</name><distance>30</distance><ontrue>2437ad06-6ad4-4715-adc9-c37a101b7313</ontrue></choice><choice expression="[domainflag]=True"><name>domain</name><distance>60</distance><ontrue>db9a59d0-de56-42af-9111-f6ed2a8945a2</ontrue></choice><choice expression="[frommail]=True"><name>mail</name><distance>90</distance><ontrue>d563612c-94e2-49d2-a881-1f39c813325c</ontrue></choice></choices></stage><stage stageid="24c39994-0c79-4abb-add9-21720e141c7e" name="Otherwise1" type="ChoiceEnd"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>973a7fb2-1761-4d22-a7ff-4b0d2a99ff1a</onsuccess><groupid>37c6ac08-b89a-4472-81f4-e3ba4d21e178</groupid></stage><stage stageid="1cdd0482-9060-431e-8ce0-26ea95b4930b" name="forward mail" type="SubSheetInfo"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8f5773a5-4797-4107-a6fd-a040ef1776e2" name="Start" type="Start"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From" narrative="mail from" stage="From" /><input type="text" name="Subject" narrative="Filter with subject" stage="Sub" /><input type="text" name="To" stage="SendTo" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>62f8c97f-aa32-4a33-a634-c76ad59face4</onsuccess></stage><stage stageid="0ffb6a8a-3c63-4bfa-a162-03e0a12b839d" name="End" type="End"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="62f8c97f-aa32-4a33-a634-c76ad59face4" name="Code1" type="Code"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Sub" expr="[Sub]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>0ffb6a8a-3c63-4bfa-a162-03e0a12b839d</onsuccess><code><![CDATA[string sub;
 string body_h;
 string from_m;
 //string messageBodyPrefix = "This is a message that was forwarded by using the EWS Managed API";
string messageBodyPrefix = "";

// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
EmailMessage message = new EmailMessage(service); 
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;

if(from_m.ToLower()==From.ToLower())
{
	if(sub.ToUpper().Contains(Sub.ToUpper()))
	{
		message = item as EmailMessage;
		ResponseMessage responseMessage = message.CreateForward();
		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		
		responseMessage.BodyPrefix = messageBodyPrefix;

	// Add the recipients who are to receive the forwarded email message.
	responseMessage.ToRecipients.Add(SendTo);
	if(Cc!="")
		responseMessage.CcRecipients.Add(Cc);
	if(Bcc!="")
		responseMessage.BccRecipients.Add(Bcc);

	// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
	responseMessage.SendAndSaveCopy();


		
		table.Rows.Add(row);
	}
}
}
Call3=table;
]]></code></stage><stage stageid="022d833b-1422-47cb-b20b-c3cd2fb6e3e0" name="Call3" type="Collection"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e9b46b30-4d2c-48a8-9f62-35bc299f59b7" name="SendTo" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="255" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2b9de2f-0239-4e52-b4f6-da67ce01c280" name="Cc" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="165" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3757c201-e218-4994-9aff-e0485686e852" name="Bcc" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="255" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764e2eca-6f76-4fdb-b421-aadebbd9dbe1" name="date and time of mail" type="SubSheetInfo"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1aabe3e8-aaa7-4046-bd6b-9a9d9ebc48fd" name="Start" type="Start"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="date" name="Date" stage="Date" /><input type="time" name="Time" stage="time" /></inputs><onsuccess>e493e0ac-ce7f-4041-94ab-d7ab11b21e55</onsuccess></stage><stage stageid="c082afa0-143a-4a17-9901-f512eab0928f" name="End" type="End"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="b1979ee9-017f-43b2-8b2c-9223403b5c57" name="Call3" type="Collection"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><display x="225" y="15" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="00f55e8c-0318-4961-b1e4-f1097cb0ce54" name="Date" type="Data"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="315" y="-75" /><datatype>date</datatype><initialvalue>2000/01/01</initialvalue><private /><alwaysinit /></stage><stage stageid="f4c87a20-0af5-4513-89c7-da405f99c3c4" name="time" type="Data"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="360" y="-75" /><datatype>time</datatype><initialvalue>00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="f5dc8135-b7e4-4fd7-bf2b-add9b365c186" name="Connect Different User" type="SubSheetInfo"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4cf6fd6a-88b7-4410-94e4-80d06b5c7085" name="Start" type="Start"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="User Name" stage="UserName" /><input type="password" name="Password" stage="Password" /><input type="text" name="Mail ID" stage="mailID" /><input type="text" name="ServiceUrl" stage="ServerUrl" /></inputs><onsuccess>2b62fd9d-e510-4c18-8f77-bcf7d994bb96</onsuccess></stage><stage stageid="f7ba08ff-992b-455e-8a7f-fd3ffb1061c1" name="End" type="End"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="d2d5f11a-0c6e-496b-a5b9-72a047bba8f4" name="UserName" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><narrative>Domain\username</narrative><display x="105" y="-75" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="2210b089-5042-486b-9e2a-d2473239dcf1" name="Password" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="165" y="-75" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="2b62fd9d-e510-4c18-8f77-bcf7d994bb96" name="Code6" type="Code"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>f7ba08ff-992b-455e-8a7f-fd3ffb1061c1</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	service.Credentials = new WebCredentials(UserName, Password );
	service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );	 
}
catch
{
	service.Url = new Uri(SUrl);
}
//service.Url = new Uri("https://mail-xi.ey.net/ews/exchange.asmx");


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;
/*
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox,sf, new ItemView(1000));
*/]]></code></stage><stage stageid="0433cef4-1c76-43ee-8c26-1cc42330e5f8" name="mailID" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="225" y="-75" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="ccb69b6f-c88a-4c71-bb66-b4792be0e2fc" name="Connect Default User" type="SubSheetInfo"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="79ecfa5f-af40-43ac-8f43-4b233062e272" name="Start" type="Start"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MailID" stage="mailID" /><input type="text" name="ServiceUrl" stage="ServerUrl" /></inputs><onsuccess>09d03470-9fee-4a3e-870c-824ffca00840</onsuccess></stage><stage stageid="5866ed9f-8c89-4956-b1e4-170ed2f549a7" name="End" type="End"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="22375ac0-789c-4d27-9941-0f16ef91c98d" name="Code11" type="Code"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="ServerUrl" expr="[ServerUrl]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>5866ed9f-8c89-4956-b1e4-170ed2f549a7</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

 
//service.AutodiscoverUrl( MailID );
//service.Url = new Uri("https://mail-xi.ey.net/ews/exchange.asmx"); 
try
{
	service.AutodiscoverUrl( MailID );
}
catch
{
	service.Url = new Uri(ServerUrl);
}
try
{
PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

/*SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   */
Success= true;
	Message = "Success";
}

	
catch (Exception e)
	{
	Message = e.ToString();
	Success= false;
	}   ]]></code></stage><stage stageid="09d03470-9fee-4a3e-870c-824ffca00840" name="Multi1" type="MultipleCalculation"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>22375ac0-789c-4d27-9941-0f16ef91c98d</onsuccess><steps><calculation expression="&quot;&quot;" stage="UserName" /><calculation expression="&quot;&quot;" stage="Password" /></steps></stage><stage stageid="b6ded37c-7705-41ce-b932-fa12741a7ec8" name="Send mail" type="SubSheetInfo"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="78f95592-30d8-4c25-a37a-e8f4364892a7" name="Start" type="Start"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" stage="SendTo" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="text" name="Attachment" stage="Attachment" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>01d385d4-de51-460c-b827-0b04ee0fe500</onsuccess></stage><stage stageid="f7a4c604-d945-456f-a21b-99312bad8e5a" name="End" type="End"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e014c20c-ffec-40ee-8a77-2fca52ac2f0c" name="SendTo" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="135" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="01d385d4-de51-460c-b827-0b04ee0fe500" name="Code12" type="Code"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Attachment" expr="[Attachment]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /></inputs><onsuccess>f7a4c604-d945-456f-a21b-99312bad8e5a</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


EmailMessage message = new EmailMessage(service);

message.Subject = Subject;
message.Body = Body;
message.ToRecipients.Add(SendTo);
if(Cc!="")
	message.CcRecipients.Add(Cc);
if(Bcc!="")
	message.BccRecipients.Add(Bcc);
if(Attachment!="")
	message.Attachments.AddFileAttachment(Attachment);
message.SendAndSaveCopy();
]]></code></stage><stage stageid="aca97485-cadb-4b93-b9fa-a100f3ffff61" name="Get Folder Names" type="SubSheetInfo"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4202cf9-ed59-4f6f-a264-6598d982f070" name="End" type="End"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="File name" stage="Call3" /></outputs></stage><stage stageid="2022634f-97a9-497b-882d-283dc3188d2b" name="Start" type="Start"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>597ace65-31f3-4ff7-a621-8ee0611947df</onsuccess></stage><stage stageid="ac542ce9-534d-4b3f-acc2-d6684d8fd87b" name="End" type="End"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="File name" stage="Call3" /></outputs></stage><stage stageid="597ace65-31f3-4ff7-a621-8ee0611947df" name="Code13" type="Code"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>ac542ce9-534d-4b3f-acc2-d6684d8fd87b</onsuccess><code><![CDATA[ DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Folder";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "ID";
    table.Columns.Add(column);
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

// Get all the folders in the message's root folder.
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);

Console.WriteLine("The " + rootfolder.DisplayName + " has " + rootfolder.ChildFolderCount + " child folders.");
// A GetFolder operation has been performed.
// Now do something with the folder, such as display each child folder's name and ID.
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
    
	row = table.NewRow();

	
	row["Folder"] =folder.DisplayName;
	row["ID"] =folder.Id;
	
	
	table.Rows.Add(row);
}

Call3=table;
]]></code></stage><stage stageid="f862a67e-dabe-4c15-af62-baac3684f56e" name="Call3" type="Collection"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e6c1af67-ea92-4eec-82f0-2095c6ea75bb" name="AttachmentType" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="645" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b10f5cd9-d0e5-4fb8-9c80-4e360cc3760e" name="SendTo" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="405" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd2ad58d-9a71-401f-bdaf-a55cc8abb4c4" name="Cc" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="255" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10c0699e-1e79-43db-b809-1d81dc76cac0" name="Bcc" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="330" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a77d5878-da24-4c45-a6c8-296c03bebe4e" name="Forward" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-360" y="-15" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="72caebfe-0a08-43d8-aa1b-07eb6f395333" name="ForwardNote" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="495" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e493e0ac-ce7f-4041-94ab-d7ab11b21e55" name="Code14" type="Code"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>c082afa0-143a-4a17-9901-f512eab0928f</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 // asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Date&Time";
    table.Columns.Add(column);
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}




PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		row["Date&Time"]=item.DateTimeCreated.ToString();
		table.Rows.Add(row);
}
}

Call3=table;
]]></code></stage><stage stageid="3b6aa8b0-c326-4477-a6fe-364a733538ca" name="Date" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-345" y="75" /><datatype>date</datatype><initialvalue>2000/01/01</initialvalue><private /><alwaysinit /></stage><stage stageid="6f3b2eb2-1938-444e-bec0-5946c815446c" name="time" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-300" y="75" /><datatype>time</datatype><initialvalue>00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="bca38678-d108-44f1-827f-1402f3f76dd1" name="From" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="120" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7460e82-a9d6-49ba-8742-e02ca11b395a" name="Subject" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c2b2cb2-5538-4b6a-9864-491a2c1afff3" name="Body" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-135" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f26e43a-5272-4c89-96d7-2df75d624d34" name="Attachment" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d099d0a9-5310-428a-98db-92fcb0ead86f" name="Sub" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6b2169f-f332-4483-9f86-3007fd15f672" name="Create Folder" type="SubSheetInfo"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><narrative>new
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="19be3c25-40ec-4ae9-bbac-2b5a13df11f7" name="Start" type="Start"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Folder Name" narrative="Folder is created inside Inbox" stage="FolderName" /></inputs><onsuccess>72023ccb-0958-4d30-b20f-4b690f903dfc</onsuccess></stage><stage stageid="d2b32e65-5ee9-4caa-a67a-8365bb2e07ed" name="End" type="End"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="72023ccb-0958-4d30-b20f-4b690f903dfc" name="Code16" type="Code"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="FolderName" expr="[FolderName]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>d2b32e65-5ee9-4caa-a67a-8365bb2e07ed</onsuccess><code><![CDATA[string fid;
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

//SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
Folder folder = new Folder(service);
folder.DisplayName = FolderName;
//folder.FolderClass = "IPF.MyCustomFolderClass"; 
folder.Save(WellKnownFolderName.Inbox); ]]></code></stage><stage stageid="d4630024-b84a-4ca5-80a0-25d56bf3a23f" name="FolderName" type="Data"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ec1a7f1-092c-4331-8fba-d0c7564f0aee" name="reply" type="SubSheetInfo"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5e200078-e9bb-460a-8ffc-bee70d34128e" name="Start" type="Start"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From" narrative="mail from" stage="From" /><input type="text" name="Subject" narrative="Filter with subject" stage="Sub" /><input type="text" name="Reply" narrative="Reply Body" stage="Body" /></inputs><onsuccess>a0e21dbc-a62f-427f-a66d-e0b07aada017</onsuccess></stage><stage stageid="5c8eec16-83ec-4457-8c33-6d8d0b5ec416" name="End" type="End"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="a0e21dbc-a62f-427f-a66d-e0b07aada017" name="Code30" type="Code"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Sub" expr="[Sub]" /><input type="text" name="Body" expr="[Body]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>5c8eec16-83ec-4457-8c33-6d8d0b5ec416</onsuccess><code><![CDATA[bool replyToAll = true;
string sub;
 string body_h;
 string from_m;
 //string messageBodyPrefix = "This is a message that was forwarded by using the EWS Managed API";
string messageBodyPrefix = "";

// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
EmailMessage message = new EmailMessage(service); 
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;

if(from_m.ToLower()==From.ToLower())
{
	if(sub.ToUpper().Contains(Sub.ToUpper()))
	{
		message = item as EmailMessage;

		ResponseMessage responseMessage = message.CreateReply(replyToAll);

		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		
		responseMessage.BodyPrefix=Body ;
		

		responseMessage.SendAndSaveCopy();


		
		table.Rows.Add(row);
	}
}
}
Call3=table;
]]></code></stage><stage stageid="0405bad6-d015-4f09-97e9-46f764a5eded" name="Call3" type="Collection"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2cc622d0-d892-4fe9-9b4a-f5ae934db1e2" name="From" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="120" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed91b332-1cff-4142-94c7-059e4e26b1c5" name="Sub" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="180" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d2fa7b54-9673-47b4-a14d-3f2de9a9cba8" name="Body" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="359ec8ef-c711-47cb-ba03-67a68118e174" name="Cc" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-150" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1554bf4-d8f9-427b-9fb0-57e98368479d" name="Bcc" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-75" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="19bfb23b-664c-4bec-adb2-a6a1c8affdbd" name="Send to Many" type="SubSheetInfo"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-210" y="-135" w="150" h="90" /></stage><stage stageid="6742889c-e2f6-4c3d-856f-bfc9dcf523dd" name="Start" type="Start"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" stage="SendTo" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="collection" name="Attachment" stage="Attachments" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>a82c3c23-acee-4c91-979c-4b01487a6db7</onsuccess></stage><stage stageid="ba75195c-a471-4311-b3b2-d1874562e084" name="End" type="End"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="e28c8c79-f516-490a-9e56-19dc913df361" name="SendTo" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="-240" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a82c3c23-acee-4c91-979c-4b01487a6db7" name="Send Mail with Multiple " type="Code"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="text" name="cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ba75195c-a471-4311-b3b2-d1874562e084</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

try
{
EmailMessage message = new EmailMessage(service);

message.Subject = Subject;
message.Body = Body;
if ( SendTo!= "")
		 {
		
			 foreach (var address1 in SendTo.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.ToRecipients.Add(address1);    
			 }
		 } 
if ( cc!= "")
		 {
		
			 foreach (var address2 in cc.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.CcRecipients.Add(address2);    
			 }
		 } 
if(Bcc!="")
	message.BccRecipients.Add(Bcc);
if ( Attachments != null )
	{	
	 message.Body = Body ; 
	 
	 foreach (DataRow row in Attachments.Rows)
     {
          message.Attachments.AddFileAttachment(row["Path"].ToString());  
     }
	}
	//message.Attachments.AddFileAttachment(Attachment);
message.SendAndSaveCopy();
Success= true;
	Message = "Success";
}

	
catch (Exception e)
	{
	Message = e.ToString();
	Success= false;
	}]]></code></stage><stage stageid="bc287de9-d2a6-4a3a-b1f4-5c6e4e7b51ec" name="Subject" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd529f69-4a6b-415c-af8b-04d716c11dc4" name="Body" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14d5fbf9-8cfb-4b01-9cb6-d5d8b803481f" name="Cc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc373ca1-02e6-4517-b78b-2470d2456609" name="Bcc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41bd8bcf-1fe8-4e7b-9120-f9f8250e6ab3" name="Attachments" type="Collection"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f65cdaf6-ec68-4506-8928-8745e89716d9" name="Message" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="180" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="670c8141-5d02-4c24-bd65-970fdf0a84f7" name="Success" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="120" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e613418-945b-47d3-8893-875ae5d94c3c" name="Success" type="Data"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-105" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6eb3601-c1e0-4be4-b6b5-41a451a9a793" name="Message" type="Data"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-105" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87a70972-feeb-46e5-b996-efc51c9468d2" name="ServerUrl" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="285" y="-75" /><datatype>text</datatype><initialvalue xml:space="preserve">https://webmail.alrajhibank.com.sa/ews/exchange.asmx</initialvalue><alwaysinit /></stage><stage stageid="ff56923f-e772-48e3-a08d-97d7d4011bcd" name="Download Attachment from Specific MailID" type="SubSheetInfo"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><display x="-150" y="-75" w="150" h="90" /></stage><stage stageid="877b53a6-0c7e-4c36-964f-a2d6bb0095ae" name="Start" type="Start"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><loginhibit /><narrative>Inputs: Folder to Save the File, mailID</narrative><display x="15" y="-105" /><inputs><input type="text" name="Folder to Save the File" narrative="Folder to Save the File" stage="Folder to Save the File" /><input type="text" name="From" narrative="From" stage="From" /></inputs><onsuccess>63f51073-c8ae-42a8-aee6-05764b2644c7</onsuccess></stage><stage stageid="1c4ba3d0-2165-4aea-a58e-280e8ef33e72" name="End" type="End"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="a8a963bb-449d-44a8-b79a-e9b91106a7ee" name="asub" type="Data"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><display x="315" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da6e839d-da6b-4a1c-93ee-048622f231a4" name="Call3" type="Collection"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><display x="165" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="63f51073-c8ae-42a8-aee6-05764b2644c7" name="CodeDuplicate" type="Code"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><loginhibit /><narrative>ghgfCBTS1184288kuoiuoui </narrative><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="folder" expr="[Folder to Save the File]" /><input type="text" name="From" expr="[From]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>1c4ba3d0-2165-4aea-a58e-280e8ef33e72</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
string t = "2";
 
//asub="";
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
	
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);

body_h=item.Body;

sub=item.Subject;
//asub=sub;
var m=Regex.Match(sub.ToUpper(), ".*(CBTS[0-9]{7}).*");
if (from_m.ToLower()==From.ToLower())

{
	body_h=item.Body;
row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                        foreach (Attachment attachment in message.Attachments)
                        {	
							int b=attachment.Name.IndexOf(".");	
                            if (attachment is FileAttachment)
                            if (attachment.Name.Contains(".xlsx"))
                            {	
								count=count+1;
                                FileAttachment fileAttachment = attachment as FileAttachment;
                                //fileAttachment.Load("c:\\folder\\" + fileAttachment.Name);
								fileAttachment.Load(folder + fileAttachment.Name);
								//fileAttachment.Load("c:\\folder\\" + m.Groups[1].Value+"_"+count+".xlsx");
                                //fileAttachment.Load();
								Console.WriteLine("Attachment name: " + fileAttachment.Name);
                            }
                        }
						mes.IsRead = true;
						mes.Update(ConflictResolutionMode.AlwaysOverwrite);

	
	table.Rows.Add(row);
}

}
Call3=table;



]]></code></stage><stage stageid="b2e35fd6-0b6e-4f8a-acab-e9e0a29b200b" name="Folder to Save the File" type="Data"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><loginhibit /><display x="-210" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="854ceb9d-72e4-48d1-ab0a-6a8e6a04ec32" name="From" type="Data"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><display x="-120" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7919f0f1-18bf-4962-ba82-11d0841d1458" name="Inputs" type="Block"><subsheetid>e79a75d8-f5db-462e-86e2-608b859bcccb</subsheetid><loginhibit /><display x="-255" y="0" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="57b9b8f7-57c8-43b2-984d-a656fd40ec9a" name="Mail-EWS_Nafith" xmlns="http://www.blueprism.co.uk/product/process"><process name="Mail-EWS_Nafith" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>66dafbc2-d0e4-4bf5-8117-af849d923122</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>27</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="f841c047-7ebe-47c0-9c04-dd5bf856e840" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="15346e33-5748-4bb8-94df-17ffca2f9281" type="Normal" published="True"><name>Send to Many</name><view><camerax>-85</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="7fa6f74d-bd7c-498f-94a2-ccbd7ae6056d" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>c2d3878c-532b-40d0-8c38-5a9b82b0a2a7</onsuccess></stage><stage stageid="c2d3878c-532b-40d0-8c38-5a9b82b0a2a7" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="ea2edc7c-d9ac-4293-8a61-8409845ad815" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.Auth.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.dll</reference><reference>System.Net.dll</reference><reference>System.dll</reference><reference>System.Web.Services.dll</reference><reference>mscorlib.dll</reference><reference>system.core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.Exchange.WebServices.Data</import><import>System.Net</import><import>System.Web.Services</import><import>System.Data</import><import>System.Text.RegularExpressions</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[private void AddRow(DataTable table)
{
    DataRowCollection rowCollection = table.Rows;
    // Instantiate a new row using the NewRow method.

    DataRow newRow = table.NewRow();
    // Insert code to fill the row with values.
	//newRow = "Arjun";
    // Add the row to the DataRowCollection.
    table.Rows.Add(newRow);
}

private void MakeDataTableAndDisplay()
{
	 DataTable table = new DataTable();
	 DataColumn column;
    DataRow row; 
    DataView view;
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "item";
    table.Columns.Add(column);
	
	//row["item"] = "item ";
	
	
	row = table.NewRow();
	row["item"] = "item ";
	table.Rows.Add(row);
	
	//Return table;

}


private static bool RedirectionUrlValidationCallback(string redirectionUrl)
    {
      // The default for the validation callback is to reject the URL.
      bool result = false;

      Uri redirectionUri = new Uri(redirectionUrl);

      // Validate the contents of the redirection URL. In this simple validation
      // callback, the redirection URL is considered valid if it is using HTTPS
      // to encrypt the authentication credentials. 
      if (redirectionUri.Scheme == "https://")
      {
        result = true;
      }
      return result;
    }
]]></code></stage><stage stageid="d92773aa-aea5-4b84-97b9-e157fe22ef74" name="Clean Up" type="SubSheetInfo"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4a9c692e-5cba-4621-8901-bcddea180cf5" name="Start" type="Start"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa</onsuccess></stage><stage stageid="9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa" name="End" type="End"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="82de04cf-1042-4b70-9ce0-f37346694643" name="Note1" type="Note"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="20e1b213-4555-4211-8eab-9f336621a991" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="19bfb23b-664c-4bec-adb2-a6a1c8affdbd" name="Send to Many" type="SubSheetInfo"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-210" y="-135" w="150" h="90" /></stage><stage stageid="6742889c-e2f6-4c3d-856f-bfc9dcf523dd" name="Start" type="Start"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" stage="SendTo" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="collection" name="Attachment" stage="Attachments" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>a82c3c23-acee-4c91-979c-4b01487a6db7</onsuccess></stage><stage stageid="ba75195c-a471-4311-b3b2-d1874562e084" name="End" type="End"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="e28c8c79-f516-490a-9e56-19dc913df361" name="SendTo" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="-240" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a82c3c23-acee-4c91-979c-4b01487a6db7" name="Send Mail with Multiple " type="Code"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="text" name="cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ba75195c-a471-4311-b3b2-d1874562e084</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

try
{
EmailMessage message = new EmailMessage(service);

message.Subject = Subject;
message.Body = Body;
if ( SendTo!= "")
		 {
		
			 foreach (var address1 in SendTo.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.ToRecipients.Add(address1);    
			 }
		 } 
if ( cc!= "")
		 {
		
			 foreach (var address2 in cc.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.CcRecipients.Add(address2);    
			 }
		 } 
if(Bcc!="")
	message.BccRecipients.Add(Bcc);
if ( Attachments != null )
	{	
	 message.Body = Body ; 
	 
	 foreach (DataRow row in Attachments.Rows)
     {
          message.Attachments.AddFileAttachment(row["Attachments"].ToString());  
     }
	}
	//message.Attachments.AddFileAttachment(Attachment);
message.SendAndSaveCopy();
Success= true;
	Message = "Success";
}

	
catch (Exception e)
	{
	Message = e.ToString();
	Success= false;
	}]]></code></stage><stage stageid="bc287de9-d2a6-4a3a-b1f4-5c6e4e7b51ec" name="Subject" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd529f69-4a6b-415c-af8b-04d716c11dc4" name="Body" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14d5fbf9-8cfb-4b01-9cb6-d5d8b803481f" name="Cc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc373ca1-02e6-4517-b78b-2470d2456609" name="Bcc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41bd8bcf-1fe8-4e7b-9120-f9f8250e6ab3" name="Attachments" type="Collection"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f65cdaf6-ec68-4506-8928-8745e89716d9" name="Message" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="180" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="670c8141-5d02-4c24-bd65-970fdf0a84f7" name="Success" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="120" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad195342-9d7c-4f37-99a5-ab687d707d3e" name="ServerUrl" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">https://webmail.alrajhibank.com.sa/ews/exchange.asmx</initialvalue><private /><alwaysinit /></stage><stage stageid="f18248e9-f0f3-4145-96d8-e4d85487994e" name="mailID" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="120" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="63a68464-de68-4425-b932-1d01dd1d0516" name="UserName" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="120" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d664d840-dad7-4d55-b46f-a3185a1e7d0b" name="Password" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="255" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" name="MS Excel VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Excel VBO" version="5.0.999.999" bpversion="7.0.1.49890" narrative="The VBO replacement for the Common Automation Excel business object" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ca515603-8af2-4608-8a70-31028a7d9a0b</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>39</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="421962f9-f7a5-4ab3-8737-7cfd31ba5d78" type="Normal" published="True"><name>Remove Duplicates</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="488e2387-02b2-4f25-a8b6-ba9633d1c19c" type="Normal" published="True"><name>Highlight Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67651307-0389-47bf-ae8d-fd94364e808f" type="Normal" published="True"><name>Remove Blank Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aef25d68-c6e7-447c-99d2-56885d72b172" type="Normal" published="True"><name>AbhiProcess</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="492548e8-2fa5-473e-9061-df8326d46e4c" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>62</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f7a4a91-68c9-4871-bb65-417e96cc4ad1" type="Normal" published="False"><name>CheckInstanceAndWorkbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a07606-d51b-4fe3-a076-7a77a4ca2cde" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>-22</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99e648cc-a136-471c-8424-19071c0fd9e7" type="Normal" published="True"><name>Create Instance</name><view><camerax>-60</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec281dc5-ed57-4b8b-9bf5-212e314657aa" type="Normal" published="True"><name>Open Instance</name><view><camerax>209</camerax><cameray>-94</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ad81501-44a1-48ab-94fd-9b2c35ed20b8" type="Normal" published="True"><name>Attach</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2b3544ad-af96-4f40-9b50-16dfbe0600f1" type="Normal" published="True"><name>Attach to workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ec3006a-6553-4526-b522-32526c4aa3cc" type="Normal" published="True"><name>Close Instance</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4fb11e41-83d8-461d-8c0d-04cdd2f670e2" type="Normal" published="True"><name>Release Instance</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc33871a-9aec-4a29-b811-3ab205ddf41e" type="Normal" published="True"><name>Exit</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="feb8ce9f-299e-4152-85a1-354a5f9d995c" type="Normal" published="True"><name>Close All Instances</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859e3c31-acbc-48dd-8535-ef2ce9385d70" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>-36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69db5cf5-4908-49c7-9027-8f48e26e5b27" type="Normal" published="True"><name>Set Events Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="268628ce-c0f3-492a-be5c-87b432e16d1d" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef10421c-e1ff-4227-b367-c53059a6766d" type="Normal" published="True"><name>Hide</name><view><camerax>-62</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="73b8ddb4-b679-4697-b3c4-79ce833a9456" type="Normal" published="True"><name>Create Workbook</name><view><camerax>-117</camerax><cameray>-246</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2fb01e3f-e275-43bc-83eb-579001da335b" type="Normal" published="True"><name>Open Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6632ed99-8751-4c2a-ad00-3cc016300e08" type="Normal" published="True"><name>Activate Workbook</name><view><camerax>45</camerax><cameray>-90</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e7cb0ad-5910-4065-aab2-2919726bae39" type="Normal" published="True"><name>Save Workbook</name><view><camerax>-44</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76d598ed-b254-4c1e-8004-d4f2928b1450" type="Normal" published="True"><name>Save Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21a53e34-8128-41cb-ad73-17250758ff23" type="Normal" published="True"><name>Save Workbook As</name><view><camerax>-64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9e5cd-a91d-4a33-bc23-1602c5fe878f" type="Normal" published="True"><name>Save Current Workbook As</name><view><camerax>-135</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ccaae8b-c06f-45c8-8772-835218881458" type="Normal" published="True"><name>Close Workbook</name><view><camerax>-232</camerax><cameray>110</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c" type="Normal" published="True"><name>Close Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ddb3c741-0c59-4ac8-a260-258fb8eb1674" type="Normal" published="True"><name>Is Read Only</name><view><camerax>-91</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="733c2840-8162-465a-a8f2-7d023087c369" type="Normal" published="True"><name>Activate Worksheet</name><view><camerax>74</camerax><cameray>-64</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f78a5f80-c2d5-4e9b-ae08-a56fb8007b18" type="Normal" published="True"><name>Create Worksheet</name><view><camerax>-120</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="00860074-be81-4bbd-b679-c6658c0f26fb" type="Normal" published="True"><name>Refresh All PivotTable</name><view><camerax>74</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="37a2442f-8e22-4749-8b44-4ef2980f28a6" type="Normal" published="True"><name>Delete Worksheet</name><view><camerax>16</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79b9bf7c-222d-4cc3-adc8-5bb337fa6d72" type="Normal" published="True"><name>Move Worksheet</name><view><camerax>51</camerax><cameray>96</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da83b3dd-0312-4b53-9732-e3f8e29c561f" type="Normal" published="True"><name>Copy and Paste Worksheet Range</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30" type="Normal" published="True"><name>Get Worksheet As Collection</name><view><camerax>43</camerax><cameray>-159</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e58a482d-f349-4f40-9b03-a903156ce1b5" type="Normal" published="True"><name>Get Worksheet As Collection (Fast)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7f4653f3-592a-42ef-999e-7e08447d6587" type="Normal" published="True"><name>Delete row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92799072-140a-4621-89cd-2da12475dcda" type="Normal" published="True"><name>Get Worksheet as Collection Offset</name><view><camerax>64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e" type="Normal" published="True"><name>Get Worksheet Range As Collection</name><view><camerax>147</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f743df98-2e69-4559-89b6-32ef6637618d" type="Normal" published="True"><name>Split Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="becd6faa-f5c0-4d3a-a48a-cb54d3aa8909" type="Normal" published="True"><name>Get Worksheet Names</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67" type="Normal" published="True"><name>Get Worksheet Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="510b0ce5-bf46-43a1-86a4-72877f427e6f" type="Normal" published="True"><name>Get Worksheet Position</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eacc4634-9985-4a1d-9773-8f79928708ee" type="Normal" published="True"><name>Worksheet Exists</name><view><camerax>105</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc139ac7-b971-481e-9528-b1521ae9fc92" type="Normal" published="True"><name>Get Number Of Rows</name><view><camerax>8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed502669-4207-4c88-895d-8c58ec321578" type="Normal" published="True"><name>Go To Cell</name><view><camerax>-6</camerax><cameray>-180</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0b877cd-07ce-4df1-a63b-89fa4d315c4c" type="Normal" published="True"><name>Go To Next Cell</name><view><camerax>-180</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c" type="Normal" published="True"><name>Get Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b5de6c6-ed9a-443d-95b8-142dd521120e" type="Normal" published="True"><name>Find Next Empty Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eaafa766-b0ce-4891-8e6e-de12d6283ae0" type="Normal" published="True"><name>Go To Next Empty Cell Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2d4c80d-3058-4d60-8e96-7b9b12f9ae58" type="Normal" published="True"><name>Go To Next Empty Cell Right</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a78c1a5-e339-4f76-9203-d180bee31770" type="Normal" published="True"><name>Go To Next Empty Cell Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82492075-b486-413c-9bd4-05eba466843e" type="Normal" published="True"><name>Go To Next Empty Cell Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5698ca16-b00d-4d62-9d9b-e76e8295b556" type="Normal" published="True"><name>Set Cell Value</name><view><camerax>55</camerax><cameray>-135</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61e057c4-63c5-40f4-b172-730b89503b37" type="Normal" published="True"><name>Sort</name><view><camerax>-70</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0dbe03a0-e259-47ab-bee7-7dec41ae32e7" type="Normal" published="True"><name>Write Collection</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ebb1c9ea-1996-4373-aac5-28640a5ea498" type="Normal" published="True"><name>Auto Fill Range</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e031661-2f5e-4cb2-949b-97babe59ff81" type="Normal" published="True"><name>Get Cell Value</name><view><camerax>0</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d96215cc-750e-4616-8852-1d4d44a9f21b" type="Normal" published="True"><name>Get Active Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17f8ab72-203a-42d4-a59b-a073ccd57bb0" type="Normal" published="True"><name>Get Formatted Cell Value</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c" type="Normal" published="True"><name>Format Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3f9fe2bc-ee08-4822-9ab0-c5600441a964" type="Normal" published="True"><name>Format Cell - Bai Ajel</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9b535bfc-4f80-4d7c-88b5-49b941688030" type="Normal" published="True"><name>Format Current Cell</name><view><camerax>0</camerax><cameray>-28</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035f75ef-016f-4c45-ab51-5b2cd9eabe87" type="Normal" published="True"><name>Format Columns</name><view><camerax>430</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39374841-edab-4ea9-86d9-5f2fff3f1a5f" type="Normal" published="True"><name>Set Window Size</name><view><camerax>0</camerax><cameray>-672.8</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904eeb0d-e6a2-408b-99b5-621307252585" type="Normal" published="True"><name>Set Window Location</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d4998c94-d432-4713-81a5-e902535089c6" type="Normal" published="True"><name>Set Window State</name><view><camerax>-11</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9147cb85-5c6f-4a47-adcf-ab472d5a0b5a" type="Normal" published="True"><name>Select</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a" type="Normal" published="True"><name>Delete</name><view><camerax>188</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="659749b0-1f00-4e33-956d-6be6172a8739" type="Normal" published="True"><name>Insert</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="71ebd060-a411-45fc-8f39-132eb3e5ff79" type="Normal" published="True"><name>Copy</name><view><camerax>98</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5eee765d-c84b-493f-9132-f6a27f296d0e" type="Normal" published="True"><name>Cut</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035d5ed0-2f39-46ca-80c1-b0127418dc9e" type="Normal" published="True"><name>Paste</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c59601b-2b70-4c97-a218-0abf1bf7463a" type="Normal" published="True"><name>Write To Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c37e9923-b729-471b-80b1-7d44113ca618" type="Normal" published="True"><name>Protect Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7316eded-6aed-4d1d-9eeb-64fbbb8e53a0" type="Normal" published="True"><name>Hide Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e62b9c20-62f8-4d28-8f19-de7610e56e1e" type="Normal" published="True"><name>Hide Other Worksheets</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1487aa65-ac8a-44e9-a6e9-8b16b4be5199" type="Normal" published="True"><name>Import CSV</name><view><camerax>0</camerax><cameray>88</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4229da44-68c0-4b51-9d2c-08be4a9d6727" type="Normal" published="True"><name>Run Macro</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e312ef1e-f655-4e1d-9671-8f8c860ef57d" type="Normal" published="True"><name>Filter Excel</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4" type="Normal" published="True"><name>Run Macro - Perm</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="501b5735-dcab-4877-948b-da028edffed3" type="Normal" published="True"><name>Filter Excel Other than Equal</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c9615767-6652-4462-b1f8-fac034e2c3a2" type="Normal" published="True"><name>Delete Filtered Values</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5502a7f-1139-434f-8bd9-6009432d1e11" type="Normal" published="True"><name>Remove Excel Filter</name><view><camerax>20</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="8f886cd8-eef6-485f-b9f3-0086c90eecdb" name="Start" type="Start"><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0d87ebb-154d-4756-8b89-d2d5445479ae</onsuccess></stage><stage stageid="d0d87ebb-154d-4756-8b89-d2d5445479ae" name="End" type="End"><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="13efd9ee-454d-4e73-a19d-91a25c412087" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>System.IO</import><import>Microsoft.VisualBasic</import><import>System.Windows.Forms</import><import>System.Data</import><import>System.Diagnostics</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[
' External functions used to make sure the excel instances are exited and processes killed
Declare Function EndTask Lib "user32.dll" (ByVal hWnd As IntPtr) As Integer
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
	   (ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr
Declare Function GetWindowThreadProcessId Lib "user32.dll" _
	   (ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer
Declare Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Integer) As IntPtr

' The 'active' instance of excel.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the excel instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function


' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Excel.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Excel.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function


' Close the instance with the given handle, not saving any work, making
' sure that it is removed from this VBO's collection of instances
'
' @param Handle The handle representing the instance to close
Protected Sub CloseInstance(Handle As Integer)
	CloseInstance(Handle, False)
End Sub

' Close the instance with the given handle, saving the work as specified.
'
' @param Handle The handle representing the instance
'
' @param SaveWorkbooks True to save the workbooks before quitting the instance,
' 		False to discard any changes
Protected Sub CloseInstance(Handle As Integer, SaveWorkbooks As Boolean)
	
	Dim Instance As Object = Nothing
	If Handle = 0 AndAlso CurrentInstance Is Nothing Then
		Throw New NullReferenceException("Tried to close nonexistent current instance")
	ElseIf Handle = 0 ' Current Instance - reset it
		Handle = GetHandle(CurrentInstance) ' We need the handle to remove from HandleMap
		Instance = CurrentInstance
		CurrentInstance = Nothing
	Else
		Instance = GetInstance(Handle)
	End If

	Me.HandleMap.Remove(Handle)
	Me.InstanceMap.Remove(Instance)

	Instance.DisplayAlerts = False ' Hide alerts
	
	' First close all the workbooks and the workbooks collection
	Dim wbs as Object = Instance.Workbooks
	If wbs IsNot Nothing Then
		For Each Workbook As Object In wbs
			Workbook.Close(SaveWorkbooks)
		Next
		wbs.Close()
	End If
	
	' Try quitting - sometimes this is enough
	Instance.Quit()
	
	' Try and force a com object release - this might quit excel for us.
	System.Runtime.InteropServices.Marshal.ReleaseComObject(Instance)

	' Now if the com object has released the RCW, we need to stop
	' We'll know because if we try and get the version and it fails
	' then the COM object has been cleaned up.
	' If so, end the proc now - we have to assume the instance is gone
	
	Dim Ver as Double = 0.0
	Try
		Ver = Val(Instance.Version)
	Catch ex as Exception
		' Not got the version - assuming cleared up
		Return
	Finally
		SetLastError(0) ' If any errors have occurred thus far, clear them
	End Try

	' Now it's the messy stuff to try and find the excel instance and nuke
	' it from orbit. It's the only way to be sure.

	' The window handle for the excel instance
	Dim hwnd As IntPtr = IntPtr.Zero
	' Later versions of excel expose the window handle
	If Val(Ver) >= 10 Then _
		hwnd = New IntPtr(CType(Instance.Parent.Hwnd, Integer))
		
	' If the window handle isn't set, must be an earlier version of excel
	' Use FindWindow to find the window with the GUID that we set in it on creation
	If IntPtr.Equals(hwnd, IntPtr.Zero) Then _
		hwnd = FindWindow(Nothing, Instance.Caption)
	
	' If the window handle is still zero, the instance must already be closed
	If Not IntPtr.Equals(hwnd, IntPtr.Zero) Then
	
        ' Get the process ID for the window we have
		Dim resp, procId as Integer
        resp = GetWindowThreadProcessId(hwnd, procId)
		
        If procId = 0 Then ' can’t get Process ID
            If EndTask(hwnd) = 0 Then ' EndTask returns a bool - 0 = False
				Throw New ApplicationException("Failed to close Excel Instance.")
			End If
        Else ' We have a process ID - use it to kill excel
			Dim proc As Process = Process.GetProcessById(procId)
			' Try clicking the 'X'
			proc.CloseMainWindow()
			proc.Refresh()

			If Not proc.HasExited Then
				proc.Kill()	' Last resort - kill it with fire
			End If	
		End If	
	End If

End Sub

' Creates a new workbook in the instance represented by the given handle
'
' @param Handle The handle of the instance on which the workbook should be held
'
' @return The workbook object that was created.
Protected Function NewWorkbook(Handle as Integer) As Object

	Dim wb as Object = GetInstance(handle).Workbooks.Add()

	' Create a new Worksheet?
	if wb.Worksheets.Count = 0 Then
		wb.Sheets.Add().Activate()
	Else ' Just use the first sheet
		wb.Sheets(1).Activate()
	End If
	
	Return wb
	
End Function

' Gets the workbook in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the workbook
'
' @param Name The name of the workbook on the instance
'
' @return The object representing the workbook defined
Protected Function GetWorkbook(Handle As Integer, Name as String) As Object

	Dim wb as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		wb = GetInstance(Handle).ActiveWorkbook
		If wb Is Nothing ' We need to create a deafult workbook
			wb = NewWorkbook(Handle)
		End If
		Return wb
	Else
		Return GetInstance(Handle).Workbooks(Name)
	End If

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one and return that
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @return The sheet object representing the sheet with the given name
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String) As Object

	Return GetWorksheet(Handle,WorkbookName,WorksheetName,True)

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one or return Nothing, depending on the given flag
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @param CreateIfNotExists True to create the worksheet if it doesn't
' 		exist; False to return Nothing if it doesn't exist.
'
' @return The sheet object representing the sheet required or Nothing
'		if no such sheet exists and CreateIfNotExists was False
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String, _
		CreateIfNotExists As Boolean) As Object

	Dim wb As Object = GetWorkbook(Handle, WorkbookName)
	
	If (String.IsNullOrEmpty(WorksheetName)) Then

		Dim ws as Object = wb.ActiveSheet
		If ws Is Nothing Then
			Return wb.Sheets.Add()
		Else
			Return ws
		End If

	Else
		Dim sheets as Object = wb.Sheets
		If sheets IsNot Nothing Then
			For Each sheet as Object in sheets
				If sheet.Name = WorksheetName Then _
					Return sheet
			Next
		End If
		' Didn't find the sheet...
		If CreateIfNotExists Then

			Dim sheet as Object = sheets.Add()
			sheet.Name = WorksheetName
			Return sheet

		End If
		' Nothing else we can do - return nowt
		Return Nothing

	End If

End Function

' Gets the next cell, relative to a given cell in a given direction
' Note that if the cell is at a boundary, then the same cell is returned.
'
' @param cell : The cell to use as a base cell
'
' @param strDir : one of "L", "R", "U", "D" representing a direction from
' 		the given cell to move in.
'
' @return : The cell object representing the 'next cell' 
Protected Function GetNextCell(cell as Object, strDir as String) As Object
	
	Try
		Select Case strDir
			Case "L"
				cell = cell.Offset(0,-1)
			Case "R"
				cell = cell.Offset(0,1)
			Case "U"
				cell = cell.Offset(-1,0)
			Case "D"
				cell = cell.Offset(1,0)
		End Select
	Catch ex As Exception
		' A COM Exception is thrown if the cell is at a boundary and the offset
		' would break that boundary
	End Try
	
	Return cell

End Function]]></code></stage><stage stageid="debd0d09-d7e8-4af4-b718-c69fd2d3db22" name="Clean Up" type="SubSheetInfo"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Closes all the instances that have been created / attached to using this business object.</narrative><display x="-180" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="74a37e04-8569-40b9-8cc7-55d419e6c658" name="Start" type="Start"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fedc107e-577b-47d9-a445-c3a3e66ef516</onsuccess></stage><stage stageid="d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba" name="End" type="End"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9864b229-3596-444e-afb1-b46efff51132" name="Create Workbook" type="SubSheetInfo"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><narrative>Creates a workbook on the specified instance, returning the resultant name.

Params:
- handle : Number : The handle identifying the instance on which the workbook should be required. The default of zero indicates the current instance.

Returns:
- Workbook Name : Text : The workbook name that Excel has granted to the new workbook. By default, Excel will call it "Book&lt;n&gt;" where &lt;n&gt; is a positive integer.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.</narrative><display x="-255" y="-300" w="330" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e4ba7053-63b7-4fa4-b64b-12309c5d3d51" name="Start" type="Start"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-390" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be created. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>852ff62f-6d2b-4031-b675-ec155fd88908</onsuccess></stage><stage stageid="1d707fac-863d-4281-b9d0-a65c74bf374c" name="End" type="End"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name of the workbook that Excel has created - this can be changed using the &quot;Save Workbook As&quot; action" stage="workbookname" /></outputs></stage><stage stageid="88aa07c9-ea21-42c6-80da-110e83fc2748" name="new" type="Note"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7cd0bd3-f4fc-4acb-921b-97d3cff31998" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-195" y="30" w="300" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ffe88be-5a6a-452e-a183-9d1b9e027326" name="Open Workbook" type="SubSheetInfo"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><narrative>Opens a workbook using the instance specified in the given handle, opening the book represented by the given filename.

Params :
- handle : Number : The handle to the instance in which the workbook should be opened. The default value of zero indicates the current instance.
- File name : Text : The path to the file which should be opened.

Outputs:
- Workbook Name : Text : The name of the workbook that Excel uses to identify it.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-255" y="-165" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="753ce277-ee09-4ee9-841b-827037917616" name="Start" type="Start"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." stage="filename" /></inputs><onsuccess>9e0df7e0-ab34-4a97-9f69-db66c88ff5f4</onsuccess></stage><stage stageid="18a306bf-d323-4c4e-83b5-4b226773161c" name="End" type="End"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookname" /></outputs></stage><stage stageid="4d2c2635-39a5-41ce-8c67-49eb1db37d55" name="Save Workbook" type="SubSheetInfo"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><narrative>Saves the workbook using the current name as a filename.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be saved. The default of 0 indicates the current instance.
- Workbook Name : The name of the workbook to be saved. The default of empty indicates that the active workbook should be saved.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c92f23e-cde4-457b-8a6e-2856cf88955e" name="Start" type="Start"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /></inputs><onsuccess>ab6f627b-d630-4bdd-b840-7aac26b5806f</onsuccess></stage><stage stageid="4c75715c-7a4a-491b-804f-261ee86fcd95" name="End" type="End"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cee07b01-63cb-4d6d-9cc4-d1868ae80a0a" name="Save Workbook As" type="SubSheetInfo"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>Save the given workbook using the given file name.

Params :
- handle : Number : The integer identifying the instance on which the workbook resides. Default (0) indicates the current instance
- Workbook Name : Text : The name of the workbook which should be saved. Default ("") indicates the active workbook.
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-180" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f79caf-dea6-4a9a-95f0-0c05bea8b485" name="End" type="End"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs></stage><stage stageid="8ff7cce5-b764-42f9-88ed-51eb82a178c0" name="Activate Worksheet" type="SubSheetInfo"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ddfe7f54-b5c2-410a-8a5d-3c2b52de9550" name="End" type="End"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf681fff-ce18-4dcc-b190-da9870383e35" name="Delete Worksheet" type="SubSheetInfo"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><narrative>Deletes the specified worksheet from the workbook.

Params:
- handle : Number : The excel instance handle
- Workbook Name : Text : The name of the workbook
- Worksheet Name : Text : The name of the sheet to delete.
If the sheet doesn't exist, this will fail silently - ie. nothing will occur.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the named worksheet did not exist on the specified workbook, or if the active sheet was specified and there was no active sheet.</narrative><display x="-240" y="-135" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c23803d1-15b5-4976-9466-8fb2e49529d3" name="Go To Cell" type="SubSheetInfo"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><narrative>Activates the cell in the given workbook, identified by the given cell reference.

Params:
- handle : Number: The integer handle identifying the excel instance (0 represents 'active' instance)
- Cell Reference : Text : the cell reference to go to
NOTE - the active sheet in the instance is the one on which the cell is active</narrative><display x="-240" y="-135" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="717bb32a-6e60-4972-bdcb-10d6c7b769a0" name="Start" type="Start"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." stage="cellref" /></inputs><onsuccess>dc6f6efd-7724-48b0-8544-8f86f7bb1b8d</onsuccess></stage><stage stageid="f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8" name="End" type="End"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f9a7cb58-89e7-4295-be05-54454641b318" name="Set Cell Value" type="SubSheetInfo"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><narrative>Sets the specified cell's value to the given value.
This has the side-effect of setting the active cell to that which is specified here.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="15cc8816-ce32-4cb4-888f-7e42b5cbc653" name="Start" type="Start"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." stage="cellref" /><input type="text" name="Value" narrative="The value to which the specified cell should be set." stage="value" /></inputs><onsuccess>f54da925-167d-4c17-b44c-1861acd36f9b</onsuccess></stage><stage stageid="3efecc12-e41e-4386-b852-2651ab750ecc" name="End" type="End"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="69459b62-2608-4fd7-a65e-40074b837222" name="Get Cell Value" type="SubSheetInfo"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><narrative>Gets the value of the specified cell - note that if the cell has some formatting set in it, this does *not* return the formatted value - See "Get Formatted Cell Value".
Note also that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="232e4bda-508e-44c7-8adb-315ce0fab8af" name="CreateWorkbook" type="Code"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>1d707fac-863d-4281-b9d0-a65c74bf374c</onsuccess><code><![CDATA[
name = NewWorkbook(handle).Name]]></code></stage><stage stageid="6b5a2269-93b3-4e07-ae32-b53e1a63e772" name="filename" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1365c72e-7420-4330-a305-53b0408ec641" name="cellref" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f4cf65f-1932-4f8c-9902-00080ed74347" name="value" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50be384a-f88b-477b-9bff-ee76cd5684bc" name="Set Cell Value" type="Code"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>3efecc12-e41e-4386-b852-2651ab750ecc</onsuccess><code><![CDATA[
	GetInstance(handle).ActiveCell.Value = value]]></code></stage><stage stageid="155a039e-a678-4192-866d-0a80004f7b1b" name="cellref" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edbe4d75-3363-4d77-b489-87fb02980fdc" name="Select Cell" type="Code"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><onsuccess>f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8</onsuccess><code><![CDATA[
GetWorkbook(handle, "").ActiveSheet.Range(cellref,cellref).Activate()]]></code></stage><stage stageid="476742dd-c37f-49de-9eb5-1a66e5bcda17" name="handle" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f54da925-167d-4c17-b44c-1861acd36f9b" name="Go To Cell" type="SubSheet"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>50be384a-f88b-477b-9bff-ee76cd5684bc</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="e7dc5be6-9447-4f5a-b528-e3b4e6e92319" name="handle" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0b718057-0ae5-4c65-bb5a-d9a14ac2496a" name="handle" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3fe639e8-b4a0-4f50-886f-fb9c99ed04b2" name="Activate Workbook" type="SubSheetInfo"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><narrative>Activates the excel workbook identified by the given handle and name.

Params:
- handle : Number : The identifier of the instance which is holding the workbook; 0 (default) indicates the active instance
- Name : Text : The name of the workbook which should be activated

Exceptions:
- Invalid Input Parameter : If the worksheet name parameter is given
- Bad Handle : If the handle does not correspond to an Excel instance</narrative><display x="-240" y="-165" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8084bde3-efbe-44ec-a484-c9b07c3d0b78" name="Start" type="Start"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." stage="workbookname" /></inputs><onsuccess>6344b53e-9777-411e-bab1-aee5633bbc7d</onsuccess></stage><stage stageid="f8b84adb-3239-4125-af8d-4b1d02c950a6" name="End" type="End"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05b66883-e53e-43f9-a4d8-baa1fb79f412" name="handle" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><display x="-240" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dc6f6efd-7724-48b0-8544-8f86f7bb1b8d" name="Activate Workbook" type="SubSheet"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>edbe4d75-3363-4d77-b489-87fb02980fdc</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="1c1bd122-21c0-4b17-92f4-e5459d7921c6" name="handle" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b35f9f6-e395-4e4b-8dc1-5b2e86b17fbe" name="Close Workbook" type="SubSheetInfo"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><narrative>Closes the specified workbook, saving changes if requested.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be closed. 0 indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be closed. "" indicates the active workbook on the specified instance.
- Save Changes : Flag : True to save the changes (the equivalent of calling 'Save Workbook' before closing the workbook); False to discard any changes when closing the workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-540" y="-30" w="450" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f23862f-bb67-4712-ade2-d8d62befeb7b" name="End" type="End"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f308d1c5-88b0-455a-bff7-8163c95d1eab" name="Open Workbook" type="Code"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>6c2fa22d-1876-46b7-92eb-cf8343d0911f</onsuccess><code><![CDATA[
Dim wb as Object = GetInstance(handle).Workbooks.Open(filename)
name = wb.Name
wb.Activate()]]></code></stage><stage stageid="5d910335-0e44-4e14-8093-292d0737faee" name="handle" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7edfc788-b0ea-4933-ac22-6345453b8c6c" name="filename" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54e39cf8-9167-44e0-aea5-08d102a67f52" name="Create Instance" type="SubSheetInfo"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><narrative>Creates an instance of Excel, returning a handle with which it can be retrieved using the global object method : GetInstance(handle).</narrative><display x="-255" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2eee0d2a-9595-449a-bbdc-8fb0c5153180" name="Close Instance" type="SubSheetInfo"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><narrative>Closes the instance represented by the given handle, saving the changes or not as specified.

Params:
- handle : Number : The handle identifying the instance that should be closed; The default of 0 will close the 'current active' instance - ie. the last one accessed. Note that following the 'current active' instance being closed, the current instance will not be set.
- Save Changes : Flag : True to save the instance's workbooks before closing; False to just close the instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-255" y="-150" w="390" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b394cfde-b1ec-4f16-b977-d1e1ffd337be" name="Start" type="Start"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." stage="handle" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." stage="savechanges" /></inputs><onsuccess>b06ec4ea-540a-4321-a1f9-a645f288eb9e</onsuccess></stage><stage stageid="5d9b206b-bf58-47fe-806b-c2d6807d911e" name="End" type="End"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9798ad3a-b44f-4102-a9d1-0861103be2d8" name="Open Instance" type="SubSheetInfo"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><narrative>Opens a currently running instance of Excel.
If there is no instance of Excel currently running, this will create a new one.

Params:
- WorkbookName : Text : should correspond to the workbook which should be opened - an empty value will cause the first activated instance of Excel to be opened.

Returns:
- handle : Number : The numeric handle with which this instance can be identified</narrative><display x="-210" y="-195" w="270" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d071afd-6ab3-43d1-ac0e-1951c7598b19" name="Start" type="Start"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." stage="workbookname" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" stage="Enable Events" /></inputs><onsuccess>a08aa147-8eee-4f21-a683-142cb1680af6</onsuccess></stage><stage stageid="754832af-1144-48ff-8ab0-bb6c86d3f78e" name="End" type="End"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs></stage><stage stageid="6a0587c3-1640-4af9-9199-62382cc11cdb" name="Start" type="Start"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>c642c278-2fc8-4504-826c-25e0281a26af</onsuccess></stage><stage stageid="d337a2cf-1121-4619-a1b1-f7f19bea974e" name="End" type="End"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="c642c278-2fc8-4504-826c-25e0281a26af" name="Create Instance" type="Code"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>a13edde2-3883-4007-9719-92f0e1009ddd</onsuccess><code><![CDATA[
Dim excel as Object = CreateObject("Excel.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
excel.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(excel)]]></code></stage><stage stageid="56408aa5-2607-4026-bbb0-ee39b8c304be" name="handle" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb0ff5ea-0f21-4e70-a3b3-2eaf0baa3dc5" name="Set Current Instance" type="SubSheetInfo"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><narrative>Sets the "current active" instance to that specified.

Params:
- handle : Number : The handle of the instance that should be set as the current instance. The default of zero only has the effect of throwing an exception if no current instance is set, otherwise it's a no-op.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-135" w="330" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="773582ee-ed72-4483-9b24-9e4f66cf590e" name="Start" type="Start"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should be made the 'current' one. The default of zero indicates the current, er, 'current' one - ie. this action has no effect other than validating that there is a current instance." stage="handle" /></inputs><onsuccess>79986761-82ee-46d2-83d5-4e3375b886be</onsuccess></stage><stage stageid="b272722b-ab35-4a09-9082-3cc31a0999b5" name="End" type="End"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7897c32-9be3-483a-bca8-3fee7d1af8b5" name="handle" type="Data"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3866da9-69bc-4edc-9173-0f9d0013190a" name="handle" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7e31a12c-4578-4202-b034-a306f3ee679d" name="Close Instance" type="Code"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="savechanges" expr="[savechanges]" /></inputs><onsuccess>5d9b206b-bf58-47fe-806b-c2d6807d911e</onsuccess><code><![CDATA[
Try
CloseInstance(handle, savechanges)
Catch ex as Exception
MessageBox.Show(ex.ToString())
End Try]]></code></stage><stage stageid="eaefcb8d-64bd-4782-a39c-6ea00bb157b2" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><narrative>Checks if the handle given can be used to access a valid instance.

This means that the handle is a non-zero value which represents a handle, or it is zero and a 'current instance' is set (current instance is set every time an instance is created or accessed using GetInstance() - it may be set to Nothing if an instance is closed).

- handle is the handle to check that it represents a valid instance

Exceptions:
- Bad Handle : If the given handle doesn't represent an instance</narrative><display x="-300" y="-120" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19668af6-5fa9-48b7-9f6e-e2caf5795b69" name="Start" type="Start"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /></inputs><onsuccess>34b692da-278c-4018-96ec-a9d03f696b43</onsuccess></stage><stage stageid="a4c8054c-d063-42e0-8063-c8972459baa3" name="End" type="End"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b06ec4ea-540a-4321-a1f9-a645f288eb9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7e31a12c-4578-4202-b034-a306f3ee679d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="34b692da-278c-4018-96ec-a9d03f696b43" name="Check Handle" type="Code"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="1468c19b-a6a0-44e0-b096-5f325448f3fb" name="handle" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52d17605-ad90-4a36-aa9d-47e5418dba04" name="HandleMissing" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7383095-97e9-4fa8-90e0-ad186e9df285" name="Is Handle Missing?" type="Decision"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>8b5e76e6-a81e-4377-b161-1bef1ff3d753</ontrue><onfalse>a4c8054c-d063-42e0-8063-c8972459baa3</onfalse></stage><stage stageid="8b5e76e6-a81e-4377-b161-1bef1ff3d753" name="Bad Instance Handle" type="Exception"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="79986761-82ee-46d2-83d5-4e3375b886be" name="CheckInstanceHandle" type="SubSheet"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b272722b-ab35-4a09-9082-3cc31a0999b5</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2db56ca3-8def-419f-a3e3-ac8408915c69" name="Open Named Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="WorkbookName" expr="[workbookname]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(WorkbookName,"Excel.Application"))]]></code></stage><stage stageid="6e2accad-a08b-4b28-9551-f44a9a291607" name="handle" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8e6a89-2552-4e75-9d44-72240a365783" name="workbookname" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a08aa147-8eee-4f21-a683-142cb1680af6" name="Is WorkbookName empty?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([workbookname])=&quot;&quot;" /><ontrue>aaa7ff33-69b5-4636-8766-e0556ee48bec</ontrue><onfalse>2db56ca3-8def-419f-a3e3-ac8408915c69</onfalse></stage><stage stageid="aaa7ff33-69b5-4636-8766-e0556ee48bec" name="Open Arbitrary Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(,"Excel.Application"))]]></code></stage><stage stageid="fba0fa7c-4ed5-4652-b4ae-08770f5f3867" name="No Open Instances" type="Recover"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>59ebf811-1faf-4486-8630-6d2de19027f5</onsuccess></stage><stage stageid="df0b2b99-8c10-4cf4-9d2d-c3ccf515c960" name="Carry On, Bertram" type="Resume"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7fb1ba2f-64f1-417b-9b97-479efb954a9d</onsuccess></stage><stage stageid="a6205e66-5e1f-4360-86a2-8f1325751c3c" name="Create Instance" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="True" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>df0b2b99-8c10-4cf4-9d2d-c3ccf515c960</onsuccess><processid>99e648cc-a136-471c-8424-19071c0fd9e7</processid></stage><stage stageid="852ff62f-6d2b-4031-b675-ec155fd88908" name="CheckInstanceHandle" type="SubSheet"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-300" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>232e4bda-508e-44c7-8adb-315ce0fab8af</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="59ebf811-1faf-4486-8630-6d2de19027f5" name="CheckType" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="ExceptionType()=&quot;Internal&quot;" /><ontrue>a6205e66-5e1f-4360-86a2-8f1325751c3c</ontrue><onfalse>567674ba-270a-4107-ada5-1dae59125522</onfalse></stage><stage stageid="567674ba-270a-4107-ada5-1dae59125522" name="RethrowException" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="555" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9e0df7e0-ab34-4a97-9f69-db66c88ff5f4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41c51e08-6c3e-4cbc-bc30-31936476aa7d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="4a034863-88fc-4111-a656-18471e002741" name="workbookname" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-240" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="366f8bd4-fafd-47cc-98a3-0afb7d697fe9" name="ActivateWorkbook" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()
'GetWorkbook(handle,name).RefreshAll()]]></code></stage><stage stageid="e74de56c-16cf-4cd7-8ecf-fabdf05e7311" name="handle" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e45f2d66-35c1-40fd-a729-754cfabbb5ab" name="SaveWorkbook" type="Code"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>4c75715c-7a4a-491b-804f-261ee86fcd95</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application
excel.DisplayAlerts = False
wb.Save()
excel.DisplayAlerts = True
]]></code></stage><stage stageid="8ba3f3c5-2585-44db-9393-a681e9ff1111" name="workbookname" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc9d285-c937-4336-89b3-aa7acf379075" name="Start" type="Start"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." stage="filename" /></inputs><onsuccess>7fa4c0ab-6c38-4a55-915a-48e7ce529979</onsuccess></stage><stage stageid="a6943793-fb0e-491c-bdc1-ccf04ee31e6d" name="workbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b526d9f-c7bd-4190-8c33-a6f5ad7982fa" name="SaveWorkbookAs" type="Code"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="text" name="newworkbookname" stage="workbookname" /></outputs><onsuccess>b4f79caf-dea6-4a9a-95f0-0c05bea8b485</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application

excel.DisplayAlerts = False
wb.SaveAs(filename)
excel.DisplayAlerts = True

newworkbookname = wb.Name]]></code></stage><stage stageid="a7fd5308-fe75-448e-99ad-e104521ee580" name="CheckInstanceAndWorkbook" type="SubSheetInfo"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Checks the instance and workbook values, throwing an exception if they are invalid.

Params:
- instance : Number : The integer value representing an Excel instance. The default value of zero represents the last activated instance.
- Workbook Name : Text : The name of the workbook on the instance to check. An empty string represents the 'active' workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-240" y="-150" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d69e69ce-7251-40e1-b779-c9951ee36cbb" name="Start" type="Start"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" stage="handle" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" stage="workbookname" /></inputs><onsuccess>16e7e153-e022-4c0b-9af2-ac69b52f855a</onsuccess></stage><stage stageid="bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d" name="End" type="End"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="16e7e153-e022-4c0b-9af2-ac69b52f855a" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>d4997ba5-8e1f-4585-a093-376eb725f14d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118" name="Workbook Found?" type="Decision"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[workbookfound]" /><ontrue>bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d</ontrue><onfalse>62e3710c-2e7e-4507-a49b-0009b3585ba3</onfalse></stage><stage stageid="62e3710c-2e7e-4507-a49b-0009b3585ba3" name="Workbook Not Found" type="Exception"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Thrown when a workbook name was not found</narrative><display x="195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Workbook Not Found" detail="&quot;Workbook named: &quot; &amp; [workbookname] &amp; &quot; not found in instance: &quot; &amp; [handle]" /></stage><stage stageid="c3051222-78b2-48d6-9813-d71f854c5e81" name="handle" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6bcb687a-3390-4a83-8690-fba44345b1a8" name="workbookname" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba694738-8f03-4a1c-a7b1-d946dc55c028" name="workbookfound" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d4997ba5-8e1f-4585-a093-376eb725f14d" name="CheckWorkbook" type="Code"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="workbookfound" stage="workbookfound" /></outputs><onsuccess>b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118</onsuccess><code><![CDATA[
Try
	GetWorkbook(handle,workbookname)
	workbookfound = True
Catch ex as Exception
	If ex.Message.IndexOf("DISP_E_BADINDEX")<>-1 Then
		workbookfound = False
	Else
		Throw ex
	End If
End Try]]></code></stage><stage stageid="ab6f627b-d630-4bdd-b840-7aac26b5806f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e45f2d66-35c1-40fd-a729-754cfabbb5ab</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="7fa4c0ab-6c38-4a55-915a-48e7ce529979" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>8b526d9f-c7bd-4190-8c33-a6f5ad7982fa</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="d52e7a12-1a97-4bcf-9014-5a4ad93aa054" name="Close Workbook" type="Code"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>5f23862f-bb67-4712-ade2-d8d62befeb7b</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,name)
Dim app as Object = wb.Application

app.DisplayAlerts = False
wb.Close(False)
app.DisplayAlerts = True]]></code></stage><stage stageid="3a83f920-ccd5-4dc3-95ee-4c5a195c5191" name="handle" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7b233620-de4e-40ff-9a99-af09b1574d08" name="workbookname" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85080efc-4429-45d0-9248-dfcceaa60a27" name="Start" type="Start"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." stage="workbookname" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." stage="savedata" /></inputs><onsuccess>52c31124-7463-40b9-8d24-9ffebe12e167</onsuccess></stage><stage stageid="b481dbd1-022d-42b5-a2bc-5bfbbc233772" name="savedata" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="52c31124-7463-40b9-8d24-9ffebe12e167" name="Save Data?" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[savedata]" /><ontrue>16f6c60c-721b-44be-9e97-b5b518e0f360</ontrue><onfalse>68e0d10e-5b8a-4ccb-a42b-67192ce2ede1</onfalse></stage><stage stageid="16f6c60c-721b-44be-9e97-b5b518e0f360" name="Save Workbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /></inputs><onsuccess>cf877504-31ed-4e77-b72f-b00469c37fc7</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="68e0d10e-5b8a-4ccb-a42b-67192ce2ede1" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="cf877504-31ed-4e77-b72f-b00469c37fc7" name="anchor1" type="Anchor"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess></stage><stage stageid="cdb03710-27a7-4412-964a-73e4b9bd1a07" name="noteybenny" type="Note"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Note: CheckInstanceAndWorkbook is done as part of SaveWorkbook, so no need to do it again</narrative><display x="15" y="60" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f39e78b7-d81a-43de-af4f-ea3ce7a918a2" name="handle" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f02e77b-3ca1-40a7-a64b-35fdad519172" name="workbookname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6344b53e-9777-411e-bab1-aee5633bbc7d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>366f8bd4-fafd-47cc-98a3-0afb7d697fe9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="ba48be23-80aa-4b44-beef-dbc6a7fb5901" name="VerifyFileExists" type="SubSheetInfo"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><narrative>Checks if the given file exists.

Params:
- File name : Text : Path to the file to check

Exceptions:
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-210" y="-120" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c6df86d-8ca7-4778-adeb-2c570998768f" name="Start" type="Start"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" narrative="The filename to check to ensure it exists." stage="filename" /></inputs><onsuccess>e28c5aa8-d587-4390-843e-b97c32c2cdb8</onsuccess></stage><stage stageid="d465101e-fa27-4434-8413-515e331d1389" name="End" type="End"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8d315224-d32b-4a85-aae0-3ee4d3b98c9c" name="filename" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86877e71-923f-4480-9b41-a5a7f4dc60a5" name="fileexists" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e28c5aa8-d587-4390-843e-b97c32c2cdb8" name="File Exists?" type="Code"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>d43bfe27-76d7-4542-b7ad-ba696468713e</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="d43bfe27-76d7-4542-b7ad-ba696468713e" name="Does File Exist?" type="Decision"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[fileexists]" /><ontrue>d465101e-fa27-4434-8413-515e331d1389</ontrue><onfalse>11a4a0e7-8810-493b-9409-df70ca4dc5b2</onfalse></stage><stage stageid="11a4a0e7-8810-493b-9409-df70ca4dc5b2" name="File Not Found" type="Exception"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="135" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="41c51e08-6c3e-4cbc-bc30-31936476aa7d" name="VerifyFileExists" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>f308d1c5-88b0-455a-bff7-8163c95d1eab</onsuccess><processid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</processid></stage><stage stageid="60533ca6-ea95-4425-b684-87e7517782aa" name="Start" type="Start"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>b5d5c5b0-1e3b-438b-b988-6058174ec5ba</onsuccess></stage><stage stageid="63d363e1-c78b-4332-815c-06f9d6f7a7df" name="OpenWorksheet" type="Code"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>3a854b87-0e5a-46dd-8181-a58f97555aa8</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
sheetexists = ws IsNot Nothing 
If sheetexists then ws.Activate()]]></code></stage><stage stageid="b5d5c5b0-1e3b-438b-b988-6058174ec5ba" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>63d363e1-c78b-4332-815c-06f9d6f7a7df</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="1dccafb3-fd07-4362-b343-e87c1a67e83e" name="worksheetname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b35d569-0eb2-4c01-bb88-e5f7c41bde81" name="End" type="End"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fab4ac4b-d2f7-4f1c-a0c3-d6dd0cd01f9b" name="handle" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="60f1e726-ab7f-437a-8bda-36148238d510" name="workbookname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13ac609e-b9ca-4a72-907c-d7656496f5ab" name="Start" type="Start"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be deleted resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet to be deleted. The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet to be deleted. The default empty value indicates the currently active worksheet." stage="worksheetname" /></inputs><onsuccess>5346c305-4024-4d1d-8806-c1b20f16c10d</onsuccess></stage><stage stageid="982dd82e-af43-49cb-a4b1-58da1ccfeb33" name="Delete Worksheet" type="Code"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="flag" name="sheetexisted" stage="sheetexisted" /></outputs><onsuccess>56c2259b-9d71-4364-bede-79b4af1e3e96</onsuccess><code><![CDATA[
Dim Inst As Object = GetInstance(handle)
Inst.DisplayAlerts = False

Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,False)
sheetexisted = ws IsNot Nothing
If sheetexisted Then ws.Delete()

Inst.DisplayAlerts = True]]></code></stage><stage stageid="5346c305-4024-4d1d-8806-c1b20f16c10d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>982dd82e-af43-49cb-a4b1-58da1ccfeb33</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="6ca6d1da-9270-43f8-89d4-c0ece0a353cb" name="worksheetname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae9d880b-4f92-4620-94e8-36d06f4e2181" name="Start" type="Start"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>9a734ecf-7e58-4aa4-b7ff-5aa4494ec687</onsuccess></stage><stage stageid="ca24190a-a9cb-4c37-b5d2-78bcd838ef40" name="End" type="End"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="value" /></outputs></stage><stage stageid="b659eb08-bf67-463a-a8cc-556b152d8032" name="cellref" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257d1cf8-2a6f-47d2-88ee-1d0a125cb27d" name="value" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a04a5ea1-798c-4659-ac77-0c966c305cba" name="Get Cell Value" type="Code"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>ca24190a-a9cb-4c37-b5d2-78bcd838ef40</onsuccess><code><![CDATA[
	Dim cellVal as String = GetInstance(handle).ActiveCell.Value
	value = IIf(cellVal Is Nothing, "", cellVal)]]></code></stage><stage stageid="39135f99-dd54-4a2b-bff2-555714753a6d" name="Go To Cell" type="SubSheet"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="c533ffd2-866d-4944-82be-7e6a6ede4c9a" name="handle" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3fe8fb5-4290-4e6e-8d8f-780f47e78d27" name="workbookname" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7dc88f-16d6-41f8-a4f1-4ca8921bf024" name="Get Worksheet As Collection" type="SubSheetInfo"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The first row will be treated as the column names and will be used as the column names in the generated collection.

Params:
- handle : Number : The integer identifying the instance in which the worksheet resides. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook on which the sheet resides. Default ("") indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet which is required as a collection. Default ("") indicates the active sheet within the workbook.

Output:
Data - Collection - The data from the worksheet.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the specified worksheet does not exist on the specified workbook.</narrative><display x="-285" y="-195" w="420" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf5b0880-2cac-4221-946a-e4e3d7f0bc99" name="End" type="End"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="c42e68de-468d-4aac-bcd2-283b9f578565" name="handle" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ed8d683e-8efe-426c-8be6-85136cbdf337" name="workbookname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14362f26-4336-4848-adf6-2e710eb2a69d" name="Start" type="Start"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /></inputs><onsuccess>23c90658-57ef-456a-92fa-970b0161d0f8</onsuccess></stage><stage stageid="36a8c859-cf71-4b54-b7ed-317997b94589" name="GetWorksheetAsCollection" type="Code"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>b6d0da26-0322-4b43-b1d5-304466ff29fb</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname, False)

	' Do we have a sheet?
	sheetexists = ws IsNot Nothing
	' No sheet? No entry.
	If Not sheetexists Then Return

	ws.Activate()
	ws.UsedRange.Select()
	ws.UsedRange.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="23c90658-57ef-456a-92fa-970b0161d0f8" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>36a8c859-cf71-4b54-b7ed-317997b94589</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="51a0a405-79a5-4a53-9a36-a40b08481389" name="worksheetname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4c01041-da7a-4cd3-9990-a0a236064fa5" name="worksheetcollection" type="Collection"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9b8dd3a0-045b-4019-b977-8716d12d92c6" name="workbookname" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="-210" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ba94499-d376-4a0b-9486-f4bced0a6a23" name="Close All Instances" type="SubSheetInfo"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><narrative>Closes all instances of excel which have been opened by this business object, either through "Create Instance" or "Open Instance" and which have not been discarded through "Close Instance" or "Release Instance"</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e8745127-ee68-4c60-8b52-0b68e91835bf" name="Start" type="Start"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8f8060c8-cea7-41c9-93c1-b181ca345fa9</onsuccess></stage><stage stageid="85215f92-002d-4d9c-8fe7-652c149d0206" name="End" type="End"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8f8060c8-cea7-41c9-93c1-b181ca345fa9" name="CloseAllInstances" type="Code"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>85215f92-002d-4d9c-8fe7-652c149d0206</onsuccess><code><![CDATA[
Dim clone as Dictionary(Of Integer,Object) = _
	new Dictionary(Of Integer,Object)(HandleMap)

For Each Handle As Integer In clone.Keys
	CloseInstance(Handle,False)
Next]]></code></stage><stage stageid="15437c28-7f56-4c1b-b98a-769b875b9d57" name="Find Next Empty Cell" type="SubSheetInfo"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><narrative>Searches for the next empty cell in the direction given.
This can either activate that cell before returning, or just return the cell reference while leaving the active cell as it was.

Params:
- handle : Number : The integer handle identifying the Excel instance to use. The default of zero indicates the 'current' instance.
- Direction : Text : The direction in which to go, this should start with "U", "D", "L" or "R" (not case-sensitive) - the rest of the string is ignored, so you can use "Up", "DOWN" "left" and, indeed, "r"
- Activate Cell? : Flag : True to activate the found cell, False to just return the reference. Default is False.

Returns:
- Cell Reference : Text : The cell ID which represents the next empty cell in the required direction. This will be blank if no empty cell was found in the given direction.

Exceptions:
Invalid Direction Parameter : If the given direction parameter was invalid - ie. did not start with one of the (case-insensitive) letters "U", "D", "L" or "R".</narrative><display x="-300" y="-195" w="450" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3707693-ef57-453a-b8b2-16e8d8aee39f" name="Start" type="Start"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." stage="direction" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." stage="activatecell" /></inputs><onsuccess>ea536eb5-62b7-4b15-b0b9-0c5415414692</onsuccess></stage><stage stageid="65e26d12-b37e-4df9-a00b-07340967e5b2" name="End" type="End"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs></stage><stage stageid="2d159e37-f93b-42db-b8a7-3ea3e5300c76" name="direction" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3a1953-80c7-4d24-92fe-1e6823202956" name="cellref" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea536eb5-62b7-4b15-b0b9-0c5415414692" name="Direction Valid?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><narrative>Direction must start with one of the following:
- U : Indicates 'up'
- D : Indicates 'down'
- L : Indicates 'left'
- R : Indicates 'right'
Any other value (including empty text) is invalid</narrative><display x="-15" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([direction]))&gt;0 AND InStr(&quot;UDLR&quot;,Upper(Left(Trim([direction]),1)))&lt;&gt;0" /><ontrue>e8cca858-4b46-40a0-81fc-3112398c4a42</ontrue><onfalse>382555c6-554f-465d-bbac-43e5b0ec06ed</onfalse></stage><stage stageid="382555c6-554f-465d-bbac-43e5b0ec06ed" name="Invalid Direction Parameter" type="Exception"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="150" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Direction Parameter" detail="&quot;Direction: '&quot; &amp; [direction] &amp; &quot;' is invalid - it must start with 'U', 'D', 'L' or 'R' (up, down, left or right)&quot;" /></stage><stage stageid="e8cca858-4b46-40a0-81fc-3112398c4a42" name="FindEmptyCell" type="Code"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="direction" expr="[direction]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>a47f3c07-957d-4909-bc43-4c56e5f58ae6</onsuccess><code><![CDATA[
' The initial char of the direction (capitalised)
Dim strDir as String = direction.Trim().Substring(0,1).ToUpper()

' The excel instance
Dim excel as Object = GetInstance(handle)

' The excel enum representing the direction
' Note: setting to zero is just to nix a duff compiler warning
Dim dirn as Integer = 0

' xlDirection enum values from: 
' http://msdn.microsoft.com/en-us/library/bb241212.aspx

' Get the direction we need to go
Select Case strDir
	Case "U"
		dirn = -4162 ' Excel.XlDirection.xlToUp
	Case "D"
		dirn = -4121 ' Excel.XlDirection.xlToDown
	Case "L"
		dirn = -4159 ' Excel.XlDirection.xlToLeft
	Case "R"
		dirn = -4161 ' Excel.XlDirection.xlToRight
	Case Else
		Throw New ArgumentException("Invalid Direction: " & strDir)
End Select

Dim cell as Object = excel.ActiveCell

While True

	' First check the next one along - if that's blank then we're away..
	Dim nextCell as Object = GetNextCell(cell, strDir)

	' If the cell address is the same on moving - that indicates we're
	' at a limit (eg. 1st column going left, last row going down etc.)
	' Just return empty to indicate that there are no blank cells in
	' that direction.
	If cell.Address = nextCell.Address Then
		cellref = ""
		Return
	ElseIf nextCell.Value = Nothing Then ' We've found our blank
		cellref = nextCell.Address(False,False)
		Return
	End If
	
	cell = nextCell
	
	' Quick way (rather than plodding from one cell to the next)
	' is to effectively press the 'End' key - but this is highly
	' inconsistent in what it returns.
	' Go to the 'end' of the range - ie. the last filled cell
	' cell = cell.End(dirn)
	' Now we need to go one beyond, ie. to the next cell
	' cell = GetNextCell(cell, strDir)

End While
]]></code></stage><stage stageid="facf151b-ee72-46d1-b528-a921e6945048" name="handle" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c507994e-eb49-43c1-bf77-9bf7cf88e0e6" name="Get Formatted Cell Value" type="SubSheetInfo"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><narrative>Gets the formatted value of the desired cell. This will apply any formatting which is in place in the specified cell before outputting the value.</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c0ed8b3d-fb86-442b-959e-a601d2d5f84f" name="Start" type="Start"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance within which the cell is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose value is required. Note that a side-effect of this action is that the specified cell will become the active cell on the specified instance. An empty value indicates the currently active cell." stage="cellref" /></inputs><onsuccess>29427d7f-a2d9-4b65-b6c4-773881bd285d</onsuccess></stage><stage stageid="722e3ab7-97b7-4cd6-886e-53bf4ac022ec" name="End" type="End"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The formatted value at the given cell reference." stage="value" /></outputs></stage><stage stageid="1260d770-e90c-4ea2-9e64-e3442c7de787" name="cellref" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6618eccc-3c6e-4660-997c-5f9142e71dc8" name="value" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94dc11fe-505e-4544-a26b-80d3d88d0951" name="Get Cell Text" type="Code"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>722e3ab7-97b7-4cd6-886e-53bf4ac022ec</onsuccess><code><![CDATA[
	value = GetInstance(handle).ActiveCell.Text]]></code></stage><stage stageid="3e695c2e-2110-4655-ba2e-31a41f453383" name="handle" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d9fc29b1-af47-4caf-882b-d9fc56955a8b" name="Split Worksheet" type="SubSheetInfo"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><narrative>Splits the specified worksheet into separate workbooks, creating a new sheet on each one and copying a subset of rows across to it.

Params:
- handle : Number : The integer representing the Excel instance - 0 represents the 'active' excel instance.
- Rows per sheet : Number : The number of rows which should be copied into each separate workbook.
- Workbook Name : Text : The name of the workbook from which the sheet should be split. "" indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet from which the data should be split. "" indicates the active worksheet on the instance.
- Path : Text : The directory in which the resultant workbooks should be saved.
- No Title Row : Flag : True to indicate that the first row should *not* be used as a title row and copied across each of the generated workbooks.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- File Not Found : If the given path did not exist or was not a directory</narrative><display x="-240" y="-180" w="510" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6" name="End" type="End"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="052dc2d6-2989-49fb-9dbd-d4db6e106c98" name="Start" type="Start"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows per worksheet" narrative="The number of rows which should appear in each worksheet. Zero indicates all rows." stage="rowspersheet" /><input type="text" name="Workbook Name" narrative="The name of the workbook within the specified instance which contains the sheet to be split. The default empty text indicates the currently active workbook within the specified instance should be used." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook to split - The default empty value indicates that the currently active sheet within the workbook should be used." stage="worksheetname" /><input type="flag" name="No Title Row" narrative="True to indicate that the rows should just be split across without using the first row as a title row (ie. as a list of column headers). False to indicate that the first row contains the column headers which should be replicated across all generated sheets." stage="notitle" /><input type="text" name="Path" narrative="The path to the directory in which the generated workbooks should be created. The files will be created with a name of &quot;{Workbook Name}_SECTION_nnnn&quot;, where nnnn is an number incrementing with each section generated." stage="path" /></inputs><onsuccess>ee1e1e11-a16a-4060-9ea0-0848320dfbaf</onsuccess></stage><stage stageid="3200e67b-1f79-4672-9828-e9e4438f565b" name="handle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="177b7483-8cfb-41a7-8644-e4fdc19ecf2a" name="rowspersheet" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd48b9ea-dee0-4b1a-a9bb-7c84a64fa132" name="workbookname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f865844-bba2-4377-8b24-5d089cbfb8c4" name="worksheetname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1e1e11-a16a-4060-9ea0-0848320dfbaf" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>359dbb2d-d57f-48c1-9c7f-1d22ef094036</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="359dbb2d-d57f-48c1-9c7f-1d22ef094036" name="Split Worksheet" type="Code"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="number" name="rowspersheet" expr="[rowspersheet]" /><input type="flag" name="notitle" expr="[notitle]" /><input type="text" name="path" expr="[path]" /></inputs><outputs><output type="flag" name="filefound" stage="filefound" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>5cb56c9a-aa29-4ed4-84e1-9a65976ba50f</onsuccess><code><![CDATA[Dim sheet as Object = GetWorksheet(handle,workbookname,worksheetname,False)

sheetexists = sheet IsNot Nothing
If Not sheetexists Then Return

Dim book as Object = sheet.Parent
Dim excel as Object = sheet.Application

Dim prefix as String = book.Name
If prefix.ToLower().EndsWith(".xls") Then
	prefix = prefix.Substring(0,prefix.Length - 4)
End If

If Not path.EndsWith("\") Then
	path += "\"
End If

filefound = Directory.Exists(path)
If Not filefound Then ' Might as well quit now 
	Return
End If

Dim lastCell as Object = sheet.Cells.Find("*", , , , , 2)			 'Excel.XlSearchDirection.xlPrevious=2
'loop through the worksheet in blocks of Numblines lines

' Force overwrites if the excel book already exists.
excel.DisplayAlerts = False ' Hide alerts

Dim loopCount as Integer = 0
For row as Integer = 1 To lastCell.Row-1 Step rowspersheet ' -1 to cope with total-rows = rowspersheet
	loopCount = loopCount + 1
	Dim newbook as Object = excel.Workbooks.Add
	If notitle Then
		'copy each block into the new worksheet
		sheet.Range(sheet.Cells(row, 1), sheet.Cells(loopCount * rowspersheet, sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
	Else
		'in here - so there must be a title row that needs copying to all the new worksheets
		If row = 1 Then
			'copy row 1-201 into new worksheet (including title row at #1)
			sheet.Range(sheet.Cells(row, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
		Else
			'copy title row into new worksheet
			sheet.Range(sheet.Cells(1, 1),sheet.Cells(1,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
			'next copy row iloop+1 to iloop+NumbLines into new worksheet (i.e. 202-401)
			sheet.Range(sheet.Cells(row + 1, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A2"))
		End If
	End If
	'close and save the new workbook
	newbook.Close(True, path & prefix & "_SECTION_" & (loopCount+1000).ToString().Substring(1) & ".xls")
Next]]></code></stage><stage stageid="cfd178fc-26e5-4e7c-b9f3-cb49ea4de27e" name="notitle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee6017-400e-44c3-8b07-611d7318fecf" name="path" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dec5f88-d7e5-4ad4-be54-8744dc5cac54" name="filefound" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859597f9-d048-46a3-bf99-2f3f6588c2c5" name="Was file found?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[filefound]" /><ontrue>aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6</ontrue><onfalse>6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733</onfalse></stage><stage stageid="6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733" name="No Such Directory" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;Directory : &quot; &amp; [path] &amp; &quot; does not exist or is not a directory&quot;" /></stage><stage stageid="e9c5ba22-79d3-4bd7-ae8f-3b36c06dd51e" name="Get Number Of Rows" type="SubSheetInfo"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><narrative>Actually, I've no idea whatsoever what this does.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="555b5c2d-9106-444b-9c96-f1ff4699a988" name="End" type="End"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Number of rows" narrative="The number of rows." stage="rowcount" /></outputs></stage><stage stageid="1c4aa0dc-e628-424b-8df8-eaf16dbd668d" name="Start" type="Start"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the number of rows is required. The default empty text value indicates the currently active sheet on the specified workbook." stage="worksheetname" /></inputs><onsuccess>35173317-eeae-482b-8a2a-ea46406fcb4f</onsuccess></stage><stage stageid="35173317-eeae-482b-8a2a-ea46406fcb4f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>aa3ba555-86e5-42ae-bdb5-b614c46bdaf9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="aa3ba555-86e5-42ae-bdb5-b614c46bdaf9" name="Count Rows" type="Code"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="number" name="rowcount" stage="rowcount" /></outputs><onsuccess>555b5c2d-9106-444b-9c96-f1ff4699a988</onsuccess><code><![CDATA[
' enum - Excel.XlSearchDirection.xlPrevious=2
rowcount = GetWorksheet(handle,workbookname,worksheetname).Cells.Find("*", , , , , 2).Row]]></code></stage><stage stageid="fbf7b5e7-f86b-48f0-8d2a-8658bcabfe72" name="handle" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ae17d409-d655-459f-a6fe-1c4ed04c7023" name="workbookname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f2032a3-62ce-48a2-b098-ed275a569931" name="worksheetname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac9321b0-2209-4f44-bd1e-3876c05fc35f" name="rowcount" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1bb96d7-94f9-4570-85a9-f1bcff4f31ae" name="Is Read Only" type="SubSheetInfo"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><narrative>Checks if the given workbook is read only or not.

Params:
- handle : Number : The integer identifying the excel instance to check. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook to be checked. Default ("") indicates the active workbook on the given instance.

Output:
Read Only? : Flag : True to indicate that the workbook is read only; False to indicate that it is writable.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-300" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bb6cb4de-9a8f-424e-82d8-52d766ab5da5" name="Start" type="Start"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be checked resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook to test to see if it is read-only or not." stage="workbookname" /></inputs><onsuccess>91487aa9-0d65-4895-940d-c4fed2212eec</onsuccess></stage><stage stageid="1e8fe949-d784-437f-a724-b5003709f18c" name="End" type="End"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Read Only?" narrative="True to indicate that the specified workbook is read-only; False to indicate that it can be written to." stage="isreadonly" /></outputs></stage><stage stageid="cfa1438f-ab60-4810-a5b5-ede71fc7b700" name="handle" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="da3c5815-0a1f-4d3d-af8a-09e5f8a1d262" name="workbookname" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91487aa9-0d65-4895-940d-c4fed2212eec" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e412638c-10ff-49e6-ae71-6b5c86f40ddb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b7057d73-acb5-4298-a652-5f91898d67d6" name="isreadonly" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e412638c-10ff-49e6-ae71-6b5c86f40ddb" name="Check Read Only" type="Code"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="isreadonly" stage="isreadonly" /></outputs><onsuccess>1e8fe949-d784-437f-a724-b5003709f18c</onsuccess><code><![CDATA[
isreadonly = GetWorkbook(handle,workbookname).ReadOnly]]></code></stage><stage stageid="fedc107e-577b-47d9-a445-c3a3e66ef516" name="Close All Instances" type="SubSheet"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba</onsuccess><processid>feb8ce9f-299e-4152-85a1-354a5f9d995c</processid></stage><stage stageid="f6285d0d-f7fe-4987-96cf-4d0e27180f81" name="Show" type="SubSheetInfo"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><narrative>Shows a window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to show. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-105" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="865342da-5035-45ef-9902-c74ba855f521" name="Start" type="Start"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>6562ae8e-f16f-4f89-8787-7884cc6a57db</onsuccess></stage><stage stageid="565f4f77-b276-4735-9c18-000ce13946a7" name="End" type="End"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6562ae8e-f16f-4f89-8787-7884cc6a57db" name="CheckInstanceHandle" type="SubSheet"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7785ca63-e0a8-40c6-940b-0d9e73944b25</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="97a05e5a-864b-4413-8623-d939827e5c39" name="Hide" type="SubSheetInfo"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><narrative>Hides the window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to hide. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-120" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7785ca63-e0a8-40c6-940b-0d9e73944b25" name="ShowInstance" type="Code"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>565f4f77-b276-4735-9c18-000ce13946a7</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="f65b17c8-19fe-4381-9b68-8909f6aa312d" name="handle" type="Data"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="11f4ca85-d053-4b2e-a46d-705fe87040c0" name="Start" type="Start"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window hidden. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>ebc908b3-4501-4500-9648-a35ebbabddda</onsuccess></stage><stage stageid="6106570f-43e1-4a42-9f67-c8f2522a910c" name="End" type="End"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ebc908b3-4501-4500-9648-a35ebbabddda" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>1cc2d38f-3783-42f7-8b75-78243c367fb3</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="1cc2d38f-3783-42f7-8b75-78243c367fb3" name="HideInstance" type="Code"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>6106570f-43e1-4a42-9f67-c8f2522a910c</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="11e05865-7edb-4526-b015-b4b5f725fbc4" name="handle" type="Data"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2e480365-7061-4a6c-81ea-380e5bd06ef7" name="Save Current Workbook As" type="SubSheetInfo"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><narrative>Save the current workbook using the given file name. This is the equivalent of calling the 'Save Workbook As' action with the default values for 'handle' (0) and 'Workbook Name' ("")

Params :
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.</narrative><display x="-285" y="-150" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7e1a622f-6438-41c8-9b86-e0d93c8267cb" name="Start" type="Start"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The full path and file name to which the current workbook should be saved." stage="filename" /></inputs><onsuccess>ec111fc5-c308-4507-8b78-8fa3a8cfa136</onsuccess></stage><stage stageid="acb62e2e-bb38-4f8b-8ceb-61ec851d8986" name="End" type="End"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="newworkbookname" /></outputs></stage><stage stageid="c5eee5f9-2db2-4efb-8f47-46e98073dedb" name="filename" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec111fc5-c308-4507-8b78-8fa3a8cfa136" name="Save Workbook As" type="SubSheet"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Filename" expr="[filename]" /></inputs><outputs><output type="text" name="New Workbook Name" stage="newworkbookname" /></outputs><onsuccess>acb62e2e-bb38-4f8b-8ceb-61ec851d8986</onsuccess><processid>21a53e34-8128-41cb-ad73-17250758ff23</processid></stage><stage stageid="09b432b9-8774-440c-8468-a5effa8bfe98" name="Exit" type="SubSheetInfo"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><narrative>Here for backward compatibility - exits the current instance of Excel without saving any changes.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4f9b1c2f-8b07-4ff1-95bc-12d1de8ec1a8" name="Start" type="Start"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc97b188-f45e-46f4-a66e-f592917cabb1</onsuccess></stage><stage stageid="c6c7615b-e18b-42aa-9e83-88884e01e23b" name="End" type="End"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fc97b188-f45e-46f4-a66e-f592917cabb1" name="Close Instance" type="SubSheet"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="flag" name="Save Changes" expr="False" /></inputs><onsuccess>c6c7615b-e18b-42aa-9e83-88884e01e23b</onsuccess><processid>6ec3006a-6553-4526-b522-32526c4aa3cc</processid></stage><stage stageid="f441e8a4-9990-4a87-a011-cb9f6c56a3f3" name="Save Current Workbook" type="SubSheetInfo"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><narrative>Saves the current workbook using the workbook name as the file name.
This is the equivalent of calling the Save Workbook action with the default values for 'handle' (0) and 'Workbook Name' ("")

Exceptions: 
- Bad Handle : If there is no active instance.
- Workbook Not Found : If there is no active workbook on the instance.</narrative><display x="-270" y="-90" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ed1db4c8-9563-4f9f-9606-a26b934a1db5" name="Start" type="Start"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0d75fe69-c13e-4536-a444-0f915cb6844a</onsuccess></stage><stage stageid="097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e" name="End" type="End"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d75fe69-c13e-4536-a444-0f915cb6844a" name="Save Workbook" type="SubSheet"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /></inputs><onsuccess>097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="4e15b86d-9a5b-40ce-babe-c9fb02cf8764" name="createifmissing" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dabb4d29-516f-442c-b2da-32cc45ae4df3" name="Get Worksheet As Collection (Fast)" type="SubSheetInfo"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><narrative>Here for back-compatability. Should be considered deprecated and calls should be replaced by "Get Worksheet As Collection", but right now this gets the active worksheet on the active workbook in the current instance of Excel into a collection. It is the equivalent of calling GetWorksheet As Collection with all the default input values.

Output:
Data : Collection : The active sheet's data in a collection.</narrative><display x="-300" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c9ce0be6-6a88-4147-aeb3-e8974bb74970" name="Start" type="Start"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a3308402-1446-47b9-9e40-cc105a30db14</onsuccess></stage><stage stageid="aa04eeb6-e87c-4392-b7d2-52e4eb0b28af" name="End" type="End"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="98e74d10-88b7-40dd-b771-0a137c8d0665" name="worksheetcollection" type="Collection"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><display x="-210" y="-15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a3308402-1446-47b9-9e40-cc105a30db14" name="Get Worksheet As Collection" type="SubSheet"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Worksheet Name" expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs><onsuccess>aa04eeb6-e87c-4392-b7d2-52e4eb0b28af</onsuccess><processid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</processid></stage><stage stageid="078c6299-d93e-41b7-9a05-e26f0436b301" name="Format Cell" type="SubSheetInfo"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><narrative>Sets the number format at the given cell to that specified.
Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="584cad36-fa91-4f11-83b7-4829f89f9a35" name="Start" type="Start"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." stage="cellref" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>6ed5e96a-3604-426e-b112-0be4f4f4b9a8</onsuccess></stage><stage stageid="59f040b8-35ab-48a1-8321-ab6d321172f4" name="cellref" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1867e11e-a153-4421-9512-848674ac9bea" name="format" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f19aada3-d5b7-49ca-8f65-824a0be6abea" name="handle" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bc1c92c3-d8fd-4e00-86eb-cf22a3331a93" name="Format Current Cell" type="SubSheetInfo"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><narrative>Sets a cell format for the currently active cell.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fea1a9b-6cad-487c-a1d4-0b7a31c0b1e6" name="Start" type="Start"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>a8dd2eb1-5144-4f87-b5fc-87dc562df875</onsuccess></stage><stage stageid="936f31ef-fa8e-4960-aa8a-1653cc6d7de2" name="Get Active Cell" type="SubSheetInfo"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><narrative>Gets a reference to the currently active cell on the given instance.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4a8f71f-cdb8-4091-99f6-f127fb3ec48d" name="Start" type="Start"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>0f68d429-d637-41bc-ab1c-3890e4e57da6</onsuccess></stage><stage stageid="de4f91e6-efde-42cd-9efa-700811c74c15" name="End" type="End"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs></stage><stage stageid="3251089f-0682-4cd7-84d1-78fd6a3f68db" name="handle" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a88df339-9204-419b-9dd7-4553548f1dff" name="cellref" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f68d429-d637-41bc-ab1c-3890e4e57da6" name="CheckInstanceHandle" type="SubSheet"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>0749822c-e521-461c-a3cc-23f5a695980b</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="0749822c-e521-461c-a3cc-23f5a695980b" name="GetActiveCell" type="Code"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>de4f91e6-efde-42cd-9efa-700811c74c15</onsuccess><code><![CDATA[
cellref = GetInstance(handle).ActiveCell.Address(False,False)]]></code></stage><stage stageid="035e5e46-b65c-4bb5-8684-b433aa67ec7b" name="activatecell" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a47f3c07-957d-4909-bc43-4c56e5f58ae6" name="Activate Cell?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[activatecell]" /><ontrue>e17eb74e-6764-4980-a96c-dd500de13181</ontrue><onfalse>65e26d12-b37e-4df9-a00b-07340967e5b2</onfalse></stage><stage stageid="e17eb74e-6764-4980-a96c-dd500de13181" name="Go To Cell" type="SubSheet"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>23c196fc-bba5-4cc0-8e36-c8d6db96e360</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="23c196fc-bba5-4cc0-8e36-c8d6db96e360" name="anchor2" type="Anchor"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>65e26d12-b37e-4df9-a00b-07340967e5b2</onsuccess></stage><stage stageid="5c445c44-609a-45b3-8c4a-ff4a670213df" name="Go To Next Empty Cell Left" type="SubSheetInfo"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><narrative>Activates the next empty cell that can be found on the left of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="75944053-c0d7-42b9-9231-b173e13066f5" name="Start" type="Start"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>10b0cef9-77af-42e0-b42e-6fc1870587a4</onsuccess></stage><stage stageid="63d50db2-a5f9-48a9-ae16-9a801712b53c" name="End" type="End"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="10b0cef9-77af-42e0-b42e-6fc1870587a4" name="Find Next Empty Cell" type="SubSheet"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;L&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>63d50db2-a5f9-48a9-ae16-9a801712b53c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="f6b88b10-a188-436b-830e-b7eaf783495c" name="handle" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6b1312d6-de01-4272-b3cd-765b4835a9f2" name="cellref" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ffa60dc-058f-4edc-9140-a43050494dee" name="Go To Next Empty Cell Right" type="SubSheetInfo"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><narrative>Activates the next empty cell that can be found on the right of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78bf9f71-b3ba-4ef3-8142-08be21698287" name="Go To Next Empty Cell Up" type="SubSheetInfo"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><narrative>Activates the next empty cell that can be found above the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0a069347-2e66-4668-ab57-b59e6536c5d0" name="Go To Next Empty Cell Down" type="SubSheetInfo"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><narrative>Activates the next empty cell that can be found below the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3b21101-6815-4f78-b7af-06f0a73a4070" name="Start" type="Start"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>782731b8-b7fb-4bec-8b35-b0438a5d8cec</onsuccess></stage><stage stageid="650fc617-bcbd-4d39-b835-748d94773ec6" name="End" type="End"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="782731b8-b7fb-4bec-8b35-b0438a5d8cec" name="Find Next Empty Cell" type="SubSheet"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;R&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>650fc617-bcbd-4d39-b835-748d94773ec6</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="56afae5f-81d8-4fdc-b521-cb4b99fac5c3" name="handle" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="347d2c28-0ea0-4ed0-95ce-14e5925f7193" name="cellref" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4636685a-21dc-420d-ae4b-e435f9861298" name="Start" type="Start"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>c01227ef-86b5-48c4-8cbc-6db80b1df2c6</onsuccess></stage><stage stageid="c7e480b2-caf7-430d-b419-49c70c452c4f" name="End" type="End"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="c01227ef-86b5-48c4-8cbc-6db80b1df2c6" name="Find Next Empty Cell" type="SubSheet"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;U&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>c7e480b2-caf7-430d-b419-49c70c452c4f</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="2d6e7e4e-d6f5-45b7-b4ae-33658d6d38fd" name="handle" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="287aee08-8696-49f9-b659-244e88067d0a" name="cellref" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4791458d-f683-4adf-ad1c-1591b3d2fab2" name="Start" type="Start"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>072dae62-8d0d-4522-904c-6d253988874d</onsuccess></stage><stage stageid="b90c78f9-6a37-4db4-b30f-ac96d30c730c" name="End" type="End"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="072dae62-8d0d-4522-904c-6d253988874d" name="Find Next Empty Cell" type="SubSheet"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;D&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>b90c78f9-6a37-4db4-b30f-ac96d30c730c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="c9e817ca-81d1-4d65-b9d1-27fe80445871" name="handle" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f9a80c2-fd03-43e2-a333-5f2c6b7ad0e2" name="cellref" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="febdcc05-5a8a-4445-a188-d0259dfd21a5" name="handle" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3" name="End" type="End"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="111cd676-ae8c-4b83-9bb1-5567fe0735bd" name="FormatCell" type="Code"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="format" expr="[format]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3</onsuccess><code><![CDATA[
GetWorkbook(handle,Nothing).ActiveSheet.Range(cellref,cellref).NumberFormat = format]]></code></stage><stage stageid="6ed5e96a-3604-426e-b112-0be4f4f4b9a8" name="Activate Workbook" type="SubSheet"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>111cd676-ae8c-4b83-9bb1-5567fe0735bd</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="a8dd2eb1-5144-4f87-b5fc-87dc562df875" name="Get Active Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs><onsuccess>22a903ea-24b0-4f4b-ad3d-590aa6ab3d97</onsuccess><processid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</processid></stage><stage stageid="8480e1e0-5e73-4bec-bc84-ab2b4a5f43fa" name="cellref" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22a903ea-24b0-4f4b-ad3d-590aa6ab3d97" name="Format Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." expr="[cellref]" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" expr="[format]" /></inputs><onsuccess>2776814b-74bd-42b3-b282-80a156b933cd</onsuccess><processid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</processid></stage><stage stageid="dc6c799a-7fa3-4623-9bf8-e966d530b67d" name="format" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2776814b-74bd-42b3-b282-80a156b933cd" name="End3" type="End"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04fbbbb0-aba9-4518-8bc7-d26273986f9e" name="Set Window Size" type="SubSheetInfo"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><narrative>Sets the window size of the specified instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7a197c45-c253-4fb8-bed5-e01508e93824" name="Start" type="Start"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle specifying the instance on which the bounds should be changed." stage="handle" /><input type="number" name="Width" narrative="The width to which the instance's window should be set" stage="width" /><input type="number" name="Height" narrative="The height to which the instance's window should be set." stage="height" /></inputs><onsuccess>3d73ff94-84e6-4e12-947e-76d14884579c</onsuccess></stage><stage stageid="a952606a-38e1-4585-821a-7395c94d70cb" name="End" type="End"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4c82574-5577-49e8-80a8-79a27ace5ffb" name="Set Window Location" type="SubSheetInfo"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><narrative>Moves the specified instance's window to the required location.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="67ee4120-06af-41a6-ae0a-629e1bd3bd05" name="Start" type="Start"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window location should be set." stage="handle" /><input type="number" name="X" narrative="The x co-ordinate to which the window should be moved." stage="x" /><input type="number" name="Y" narrative="The y co-ordinate to which the window should be moved." stage="y" /></inputs><onsuccess>3f663a38-1c01-438f-a02a-aa56ded74764</onsuccess></stage><stage stageid="5b24c512-8930-4c34-9083-7834083ab65c" name="End" type="End"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="129fe5f1-311c-4b58-964f-74b62d5f17ad" name="Set Window State" type="SubSheetInfo"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><narrative>Minimizes / maximizes / restores the window attached to the specified excel instance.

Exceptions:
Invalid Input Parameter : If the given state was not "normal" and did not start with either "min" or "max"</narrative><display x="-240" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="44e95a42-ad61-4e8d-af8a-aed037662ba8" name="Go To Next Cell" type="SubSheetInfo"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><narrative>Moves a specified number of rows and columns from the currently active cell and returns the new cell reference.
If the resultant cell reference is the same as the active cell before this action was called, this action has 'failed'. This is usually because the active cell is too close to a boundary.</narrative><display x="-330" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a87664dd-017d-4b12-b9c3-7230d7910326" name="Start" type="Start"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows" narrative="The number of rows to navigate down. A negative value indicates that the action should navigate UP the required number of rows." stage="rows" /><input type="number" name="Columns" narrative="The number of columns to navigate to the right. A negative value indicates that the action should navigate to the left." stage="cols" /></inputs><onsuccess>fdbdccce-2959-40cb-b4b4-d53556dd97a1</onsuccess></stage><stage stageid="dcae25b1-7e8b-4ee2-9ffc-11aacd935154" name="Close Current Workbook" type="SubSheetInfo"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><narrative>Closes the current workbook on the current excel instance.
This is the equivalent of calling the 'Close Workbook' action with the default values for 'handle' (0) and 'Workbook Name' ("")</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8fccb8ba-397f-406d-a6cd-85cb3c09ba17" name="Start" type="Start"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5</onsuccess></stage><stage stageid="160a79e4-be77-47f7-b8f2-271a170a762f" name="End" type="End"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5" name="Close Workbook" type="SubSheet"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="flag" name="Save Data" expr="False" /></inputs><onsuccess>160a79e4-be77-47f7-b8f2-271a170a762f</onsuccess><processid>6ccaae8b-c06f-45c8-8772-835218881458</processid></stage><stage stageid="a9a3eac3-7c04-4983-9224-bbf490c75af1" name="handle" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="00fbd16c-c443-4d2e-ae2a-4539f816c297" name="rows" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fa354e6-61e2-452d-b0c4-208150e9076d" name="cols" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50344da8-13a3-4d20-899b-bfd3b5507681" name="End" type="End"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the currently active cell after navigating the required number of rows / columns. If the action could not navigate the desired number of rows / columns (eg. the active cell is near a boundary), then the active cell will not have been change, and this cell reference will represent the same cell that was active before this action was initiated." stage="cellref" /></outputs></stage><stage stageid="30a3c6c6-5324-4fe2-a0b2-3026f1a5e379" name="GoToNextCell" type="Code"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="cols" expr="[cols]" /><input type="number" name="rows" expr="[rows]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>50344da8-13a3-4d20-899b-bfd3b5507681</onsuccess><code><![CDATA[
Dim Instance As Object = GetInstance(handle)

If Instance.ActiveCell Is Nothing Then
	Dim wb As Object = Instance.ActiveWorkBook 
	If wb IsNot Nothing Then
		Dim ws As Object = wb.ActiveSheet
		If ws IsNot Nothing Then
			ws.Range(1,1).Activate()
		Else
			Throw New Exception("There is no active worksheet")
		End If
	Else
		Throw New Exception("There is no active workbook")
	End If
Else
	Try
		Instance.ActiveCell.Offset(rows,cols).Activate()
	Catch ex As Exception
	End Try
End If
cellref = Instance.ActiveCell.Address(False,False)
]]></code></stage><stage stageid="fdbdccce-2959-40cb-b4b4-d53556dd97a1" name="Activate Workbook" type="SubSheet"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>30a3c6c6-5324-4fe2-a0b2-3026f1a5e379</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="5742c4d1-0b40-4dd9-8cf0-e66b9adeab4b" name="handle" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="437bf59c-d85b-45c9-8828-2e2c665afd10" name="cellref" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="105" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc5149d8-0c99-413a-81c8-ba9efc719cdc" name="handle" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a87fd94f-f26f-4c2e-bb67-1ae4c0bed939" name="width" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59a65ce5-cfb1-4190-8449-e4fb5ced121a" name="height" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d73ff94-84e6-4e12-947e-76d14884579c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>82380eea-db5c-47b3-9a94-2e19338cca95</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="82380eea-db5c-47b3-9a94-2e19338cca95" name="SetWindowSize" type="Code"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="height" expr="[height]" /><input type="number" name="width" expr="[width]" /></inputs><onsuccess>a952606a-38e1-4585-821a-7395c94d70cb</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Width = width
excel.Height = height]]></code></stage><stage stageid="8acfecd0-d6d9-4de0-ae9e-46922ed73111" name="x" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68bc93f-161f-4d6f-825d-2d961690ca56" name="y" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="079ee65b-a90b-4ab6-81b5-801557c07fbf" name="handle" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3f663a38-1c01-438f-a02a-aa56ded74764" name="CheckInstanceHandle" type="SubSheet"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>12d30538-38bf-4f9b-a180-41d0b836854c</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="12d30538-38bf-4f9b-a180-41d0b836854c" name="SetWindowLocation" type="Code"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="x" expr="[x]" /><input type="number" name="y" expr="[y]" /></inputs><onsuccess>5b24c512-8930-4c34-9083-7834083ab65c</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Left = x
excel.Top = y]]></code></stage><stage stageid="016d76a7-6a95-485e-84f5-faa85a0c0712" name="Start" type="Start"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window state should be set." stage="handle" /><input type="text" name="State" narrative="The state of the window which is required. Should start with &quot;min&quot; (to minimize the window), &quot;max&quot; (to maximise the window) or it should equal &quot;normal&quot; (to restore the window). Anything else will result in an error." stage="state" /></inputs><onsuccess>0f8fc913-9174-4304-823f-d18ffae7217a</onsuccess></stage><stage stageid="ffe49fc1-13a2-4e84-a649-bd692ef7752a" name="End" type="End"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca7b06cd-e6e3-42e1-8980-cb429796aa3b" name="handle" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3db578f3-47a7-4150-9ccc-6f9a16dbe73f" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>458615b7-ea0b-4d96-9dce-87099d6e5950</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="458615b7-ea0b-4d96-9dce-87099d6e5950" name="SetWindowState" type="Code"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="state" expr="[state]" /></inputs><onsuccess>ffe49fc1-13a2-4e84-a649-bd692ef7752a</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

If state.ToLower().StartsWith("min") Then
	excel.WindowState = -4140
ElseIf state.ToLower().StartsWith("max") Then
	excel.WindowState = -4137
ElseIf state.ToLower() = "normal" Then
	excel.WindowState = -4143
End If]]></code></stage><stage stageid="4686174e-a845-4f2b-9a0a-70325a2df399" name="Valid State?" type="Decision"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><narrative>Checks if the given state is a valid value</narrative><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="StartsWith([state],&quot;max&quot;) or StartsWith([state],&quot;min&quot;) or [state]=&quot;normal&quot;" /><ontrue>3db578f3-47a7-4150-9ccc-6f9a16dbe73f</ontrue><onfalse>c0e54c49-a9fc-48c4-a54e-2b85581d4ba5</onfalse></stage><stage stageid="1537f595-55fc-4726-910a-1d5ef88bf7a4" name="state" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0e54c49-a9fc-48c4-a54e-2b85581d4ba5" name="Invalid State Exception" type="Exception"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="135" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Input Parameter" detail="&quot;Invalid Window State Parameter : &quot; &amp; [state] &amp; &quot; - must start with 'min', 'max' or equal 'normal'&quot;" /></stage><stage stageid="9d0e19ce-07b8-4074-a34c-6186bcd3ca77" name="newworkbookname" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04e9d703-4b1c-4196-b1ff-7bf68a12faae" name="newworkbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>The new workbook name assigned by Excel after saving the book</narrative><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ab01750-1bb3-4299-add0-8a1d08f6bf41" name="handle" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f778bc6c-8cdd-4e56-80b8-b7cdb1fd11ae" name="Release Instance" type="SubSheetInfo"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><narrative>Removes an instance from this business object *without* closing or quitting it - after running this action, the instance in question will not be accessible by this object unless it is re-attached to using 'Open Instance'.

Params:
- handle : Number : The handle of the instance to be released. The default of 0 indicates the currently active instance. Note that following the current instance being released, the current instance will not be set.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-135" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66fece2a-2c82-48bb-92fe-211ee6556a24" name="Start" type="Start"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be released. The default value of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1d0738a9-7841-446d-b3ed-1a4bafeccc1b</onsuccess></stage><stage stageid="dc556131-4dde-459f-9af8-8c854fcae760" name="End" type="End"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6da262c1-9a82-4bc8-9363-ede171f125e5" name="handle" type="Data"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><display x="-225" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1d0738a9-7841-446d-b3ed-1a4bafeccc1b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>2e67a2b9-10bf-4d4d-9bd9-db68edaf7662</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2e67a2b9-10bf-4d4d-9bd9-db68edaf7662" name="Release Instance" type="Code"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>dc556131-4dde-459f-9af8-8c854fcae760</onsuccess><code><![CDATA[
	Dim current as Object = CurrentInstance
	Dim inst as Object = GetInstance(handle) ' Careful - sets the 'current instance' to inst

	HandleMap.Remove(handle)
	InstanceMap.Remove(inst)

	If Object.ReferenceEquals(inst, current) Then
		CurrentInstance = Nothing
	Else
		CurrentInstance = current
	End If
]]></code></stage><stage stageid="0f04ef58-eacb-4204-ba2b-d073285c2be8" name="Note1" type="Note"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="150" y="-120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f0ee2a73-65b2-418e-8b77-6dc802046c5d" name="Attach" type="SubSheetInfo"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><narrative>Back-compatible link to 'Open Instance'. This opens the first running instance of Excel found and links to it in this object.

Returns:
- handle : Number : An integer with which the instance opened can be identified.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True</narrative><display x="-210" y="-120" w="240" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="92e3475b-ed7d-4ae1-940c-7eb554a7cea8" name="Start" type="Start"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>ba67509b-7301-4ce1-a467-e9970249b392</onsuccess></stage><stage stageid="c74db74c-8822-4391-8593-d9919e357a5b" name="End" type="End"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle which identifies the excel instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="f68ab231-3cbb-423e-84de-9103b9f971f4" name="handle" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba67509b-7301-4ce1-a467-e9970249b392" name="Open Instance" type="SubSheet"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="&quot;&quot;" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>c74db74c-8822-4391-8593-d9919e357a5b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="fa5aede4-db23-4781-8954-3baaf0fd0740" name="Attach to workbook" type="SubSheetInfo"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><narrative>Back compatible link to 'Open instance' - attaches to the excel instance containing the current workbook. Note that if the instance containing the workbook could not be found, a new instance will be created.

Params:
- File name : Text : The name of the file in the instance that should be opened.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
Returns:
- handle : Number : The integer that can be used to reference this instance later.</narrative><display x="-195" y="-135" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="431ac081-4d84-414a-80dd-cb137dd67a73" name="Start" type="Start"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="60" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File name" narrative="The name of the file which should be opened" stage="filename" /><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>4a719c51-85b9-4750-9593-bf0e3166edfc</onsuccess></stage><stage stageid="ba3c2775-b5ac-44a8-be6b-05befaea619b" name="End" type="End"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle indentifying the instance opened. This can be used in subsequent actions to identify the instance." stage="handle" /></outputs></stage><stage stageid="0283fb0e-8dda-4956-b434-ea1d6c99e063" name="handle" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a719c51-85b9-4750-9593-bf0e3166edfc" name="Open Instance" type="SubSheet"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="[filename]" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>ba3c2775-b5ac-44a8-be6b-05befaea619b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="c99c412d-dbb6-4a6a-a7e2-9834a74052d0" name="filename" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a734ecf-7e58-4aa4-b7ff-5aa4494ec687" name="cellref empty?" type="Decision"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>bed65abf-b1ad-4f7e-83be-c8a96e3ea162</ontrue><onfalse>39135f99-dd54-4a2b-bff2-555714753a6d</onfalse></stage><stage stageid="bed65abf-b1ad-4f7e-83be-c8a96e3ea162" name="anchor3" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b98f8e72-e995-42a4-b3f9-df0acf2a5944</onsuccess></stage><stage stageid="b98f8e72-e995-42a4-b3f9-df0acf2a5944" name="anchor4" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess></stage><stage stageid="250bb1db-ca8e-4edb-b9a4-52fa39261823" name="Go To Cell" type="SubSheet"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="29427d7f-a2d9-4b65-b6c4-773881bd285d" name="cellref empty?" type="Decision"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>e743b184-cb2f-43cb-83c1-b99654286d3d</ontrue><onfalse>250bb1db-ca8e-4edb-b9a4-52fa39261823</onfalse></stage><stage stageid="e743b184-cb2f-43cb-83c1-b99654286d3d" name="anchor3" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dea637ce-5933-4805-94a4-f2bbd9b99d0b</onsuccess></stage><stage stageid="dea637ce-5933-4805-94a4-f2bbd9b99d0b" name="anchor4" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess></stage><stage stageid="bcf597f1-97f7-449c-8865-ff8ca139dd6c" name="Get Active Cell Value" type="SubSheetInfo"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><narrative>Gets the value of the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b69207e1-2811-4150-a61f-4746ef8489d4" name="Start" type="Start"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell whose value is required resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>af8aab5e-4539-4acc-a5cc-1bd632282587</onsuccess></stage><stage stageid="73e8408e-ff97-4d9f-b0e0-5a0e844b731c" name="End" type="End"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value found at the specified cell." stage="Value" /></outputs></stage><stage stageid="af8aab5e-4539-4acc-a5cc-1bd632282587" name="Get Active Cell Value" type="SubSheet"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;&quot;" /></inputs><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>73e8408e-ff97-4d9f-b0e0-5a0e844b731c</onsuccess><processid>0e031661-2f5e-4cb2-949b-97babe59ff81</processid></stage><stage stageid="88d7196d-2443-4439-8261-6700e9673d0a" name="handle" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e4cdc61b-a1e1-461e-8d91-a98cd40a2c5a" name="Value" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69cd13bc-f818-4a5b-be64-b6fb7de62c61" name="Create Worksheet" type="SubSheetInfo"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><narrative>Creates a new worksheet in the specified workbook with the given name. If a sheet with the given name already exists, this will activate that sheet.

Params:
- handle : Number : The number identifying the instance required.
- Workbook Name : Text : The name of the workbook to add it to. An empty string (the default) indicates the active workbook in the instance.
- Worksheet Name : Text : The name of the worksheet that is required. Note that if the name matches a worksheet already in the workbook a new worksheet will not be created, but that worksheet will be activated.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a0c385f-fe76-4eb3-a36f-4936eb7ac84a" name="Start" type="Start"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /></inputs><onsuccess>89240340-492e-44ab-9fed-c64a6d3fffdf</onsuccess></stage><stage stageid="5d624e42-813e-467d-bda1-ebb3e410045c" name="End" type="End"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="89240340-492e-44ab-9fed-c64a6d3fffdf" name="Activate Worksheet" type="SubSheet"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /><input type="flag" name="Create If Missing?" expr="True" /><input type="text" name="Worksheet Name" expr="[worksheetname]" /></inputs><onsuccess>5d624e42-813e-467d-bda1-ebb3e410045c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="ab7509fd-0572-44d9-9050-b9c9907c49ac" name="handle" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="544db1ef-b84c-403c-b4ee-de2d660ec253" name="worksheetname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df17296d-4f63-46cf-bcd9-4acd7eefed34" name="workbookname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64089c9a-4a30-4db5-bf87-7ba017ba54e7" name="Write Collection" type="SubSheetInfo"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a1ab274b-c2fb-47c7-94f8-292590df5765" name="Start" type="Start"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>a3a318c6-e218-4e78-a818-1673f90541b3</onsuccess></stage><stage stageid="8819df51-0132-421d-baae-b24b5082f131" name="End" type="End"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="85afbd6d-2c6e-42f8-8e71-7858a8488167" name="handle" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc024959-b016-4b16-93a8-e230e4ab936d" name="collection" type="Collection"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71e25266-b464-4b47-b6a7-c8a70cff7514" name="worksheetname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5f2a253-bee4-4ee0-9d8c-ab780265b5db" name="workbookname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c5b0c8-0c25-4972-b9c8-6057e6841ce5" name="includecolnames" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3a318c6-e218-4e78-a818-1673f90541b3" name="Activate Worksheet" type="SubSheet"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>f2ebff4d-5325-45e8-945d-73006f5bd7ce</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="f2ebff4d-5325-45e8-945d-73006f5bd7ce" name="WriteColl" type="Code"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><onsuccess>8819df51-0132-421d-baae-b24b5082f131</onsuccess><code><![CDATA[	' Get to the cell
	Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname)
	Dim origin as Object = ws.Range(cellref,cellref)
	Dim cell as Object = origin

	Dim colInd as Integer = 0, rowInd as Integer = 0 ' Offsets from the origin cell
	
	' Deal with the column names first
	If includecolnames Then
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			cell.Value = col.ColumnName
			colInd += 1
		Next
		rowInd += 1
	End If
	
	' Now for the data itself
	For Each row as DataRow in collection.Rows
		colInd = 0
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			'MessageBox.Show("RowOffset:" & rowInd & "; ColOffset:" & colInd & "; cell: " & cell.Address(False,False))
			cell.Value = row(col)
			colInd += 1
		Next
		rowInd+=1
	Next]]></code></stage><stage stageid="fb353c57-7a8c-4ccb-9428-94761a643715" name="cellref" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add1def4-fc64-4534-bbb0-d3ac07611a85" name="anchor5" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>108c176a-92d1-4f50-b460-ac6a3f0dac25</onsuccess></stage><stage stageid="51d7d624-e8bf-42b7-afdd-8d090b584865" name="anchor6" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess></stage><stage stageid="4be7292e-9eb1-43f7-9e87-3ae906bd79ed" name="savechanges" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0f8fc913-9174-4304-823f-d18ffae7217a" name="state = Lower(state)" type="Calculation"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4686174e-a845-4f2b-9a0a-70325a2df399</onsuccess><calculation expression="Lower([state])" stage="state" /></stage><stage stageid="27e7ff80-4437-42a3-ba14-e499be5bc0e5" name="sheetexists" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-240" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a854b87-0e5a-46dd-8181-a58f97555aa8" name="Sheet Existed?" type="Decision"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>ddfe7f54-b5c2-410a-8a5d-3c2b52de9550</ontrue><onfalse>9bc52652-698b-46ca-ba0d-ebb170432963</onfalse></stage><stage stageid="9bc52652-698b-46ca-ba0d-ebb170432963" name="No Such Sheet" type="Exception"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b396c564-6c31-4c6f-be0a-0cc64f178a19" name="sheetexisted" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c2259b-9d71-4364-bede-79b4af1e3e96" name="Sheet Existed?" type="Decision"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexisted]" /><ontrue>6b35d569-0eb2-4c01-bb88-e5f7c41bde81</ontrue><onfalse>091e0364-11db-49d4-8e94-8f5f9396fa9c</onfalse></stage><stage stageid="091e0364-11db-49d4-8e94-8f5f9396fa9c" name="No Such Sheet" type="Exception"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="150" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b6d0da26-0322-4b43-b1d5-304466ff29fb" name="Sheet Exists?" type="Decision"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>cf5b0880-2cac-4221-946a-e4e3d7f0bc99</ontrue><onfalse>7e8fce63-9130-4c0f-baea-ea8be793c57d</onfalse></stage><stage stageid="7e8fce63-9130-4c0f-baea-ea8be793c57d" name="No Such Sheet" type="Exception"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="286f9733-2a26-4c00-a7ff-7ac289086919" name="sheetexists" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cb56c9a-aa29-4ed4-84e1-9a65976ba50f" name="Does sheet exist?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>859597f9-d048-46a3-bf99-2f3f6588c2c5</ontrue><onfalse>2b8672dd-8330-4c2d-a522-9f12c9e27ba2</onfalse></stage><stage stageid="2b8672dd-8330-4c2d-a522-9f12c9e27ba2" name="No Such Sheet" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="c50f1065-0989-47f5-aad4-c66396e462e0" name="sheetexists" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b64b13-62f8-4431-94c4-62b7ff1f1c2c" name="Get Worksheet as Collection Offset" type="SubSheetInfo"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="164e0a2b-6c31-48ce-8172-7fb4edd3dbb3" name="End" type="End"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs></stage><stage stageid="0b6697a7-4aa1-4ec1-86db-bc41f3ca9d5e" name="handle" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c25e33f-7af9-4998-8c1a-4029c0e2af9e" name="workbookname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee01090-4b0b-4e85-9643-1f3b40d182e2" name="Start" type="Start"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="Workbook Name" stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" stage="Start Cell" /><input type="flag" name="Use Header" stage="Use Header" /></inputs><onsuccess>8f50a819-e470-4c0e-97d5-08bd0f705682</onsuccess></stage><stage stageid="a755a822-d485-45ea-8d7d-426646b4aec0" name="GetWorksheetAsCollectionOffset" type="Code"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>164e0a2b-6c31-48ce-8172-7fb4edd3dbb3</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	ws.Activate()

	Dim cell as Object = ws.Range(Start_Cell)
	Dim r as Object = ws.UsedRange.Offset(cell.row-1,cell.column-1)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = Use_Header
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If Not Use_Header Then
				Dim i As Integer
				For Each field As String in fields
					i += 1
					table.Columns.Add("Field" & i)
				Next
			End If
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="8f50a819-e470-4c0e-97d5-08bd0f705682" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a755a822-d485-45ea-8d7d-426646b4aec0</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="f82cf955-6669-494b-b6a1-866974c7cc74" name="worksheetname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b329ff1-b62a-41eb-9503-6673f300eb68" name="worksheetcollection" type="Collection"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="225" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4b3c3e-515f-4ee7-9e70-5c76c0fb3044" name="Set Events Enabled" type="SubSheetInfo"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><narrative>Enables or disables the events on the specified excel instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb955f7e-320d-42d1-8dad-26b8f55d083b" name="Start" type="Start"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." stage="handle" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" stage="Enable Events" /></inputs><onsuccess>68483479-6865-4fd5-9a77-f4392c4ade9e</onsuccess></stage><stage stageid="3969dd45-fdea-4671-879e-461a56f312be" name="End" type="End"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="68483479-6865-4fd5-9a77-f4392c4ade9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>21682417-b503-44b4-92f2-a3c80b4fad14</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="45553fd7-b75b-4fee-8961-aff490d121b3" name="Enable Events" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21682417-b503-44b4-92f2-a3c80b4fad14" name="Enable Events" type="Code"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="enable" expr="[Enable Events]" /></inputs><onsuccess>3969dd45-fdea-4671-879e-461a56f312be</onsuccess><code><![CDATA[
GetInstance(handle).EnableEvents = enable]]></code></stage><stage stageid="3fd7c1fd-f40f-451d-885e-3f5e34c62b77" name="handle" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb99ca56-7dc9-4a0d-860e-651747237d8f" name="Enable Events" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="7fb1ba2f-64f1-417b-9b97-479efb954a9d" name="anchor8" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess></stage><stage stageid="108c176a-92d1-4f50-b460-ac6a3f0dac25" name="Enable/Disable Events" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>754832af-1144-48ff-8ab0-bb6c86d3f78e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="17b0edcc-4892-4e42-93c9-9438a160ed66" name="Enable Events" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e24f71a3-1760-49ce-bbcb-4750671f20ad" name="Enable Events" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9773e311-bcc9-4426-999e-7c586da425c5" name="Enable Events" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a13edde2-3883-4007-9719-92f0e1009ddd" name="Set Events Enabled" type="SubSheet"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>d337a2cf-1121-4619-a1b1-f7f19bea974e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="7c3abf99-a3ae-44c2-b834-ad050b20a0eb" name="Enable Events" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6c2fa22d-1876-46b7-92eb-cf8343d0911f" name="Set Events Enabled" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>18a306bf-d323-4c4e-83b5-4b226773161c</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="e13408b2-c348-4d32-9ca3-e878db7cd165" name="Start Cell" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614b5c49-3b88-427a-9513-c3048d8b716d" name="Get Worksheet Names" type="SubSheetInfo"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef85b34d-5145-4f90-96a4-0f1abc4c4889" name="End" type="End"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs></stage><stage stageid="7e4ae954-86d5-4183-88b2-d307fecfc6a9" name="Start" type="Start"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /></inputs><onsuccess>9bc4bc33-6a3a-43e0-86e0-7b209978508a</onsuccess></stage><stage stageid="9bc4bc33-6a3a-43e0-86e0-7b209978508a" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>bbd37070-c589-4f9c-8d03-11f2982c59f4</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="bbd37070-c589-4f9c-8d03-11f2982c59f4" name="Get Worksheets" type="Code"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" stage="Worksheet Names" /></outputs><onsuccess>ef85b34d-5145-4f90-96a4-0f1abc4c4889</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(Handle, WorkbookName)
Dim sheets as Object = wb.Sheets

Worksheet_Names = New DataTable()
Worksheet_Names.Columns.Add("Name", GetType(String))

If sheets IsNot Nothing Then
	For Each sheet as Object in sheets
		Worksheet_Names.Rows.Add(New Object() {sheet.Name})
	Next
End If]]></code></stage><stage stageid="cff86abf-c0f2-493d-942f-759ce2830ff8" name="handle" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d53720-b610-4e5c-bf49-94cbcaf29e20" name="workbookname" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd45f86-2f78-4a96-8e74-62414e4094e7" name="Worksheet Names" type="Collection"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="255" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9d637f02-8e13-4c65-a606-5756018a9e8c" name="Worksheet Exists" type="SubSheetInfo"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54725352-a686-4ebc-88d8-80fa81af39bc" name="End" type="End"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs></stage><stage stageid="4cd78f5f-29a7-4f71-ab51-5c93e2e50ba3" name="Start" type="Start"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet Name" /></inputs><onsuccess>b4bad8df-ac04-4c0f-88cf-21bd3dc6707a</onsuccess></stage><stage stageid="4126c650-c062-413d-b6b3-501c8743b400" name="handle" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a19213a7-dbb4-4a78-b929-7c0ec2f48fa7" name="workbookname" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4bad8df-ac04-4c0f-88cf-21bd3dc6707a" name="Get Worksheet Names" type="SubSheet"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs><onsuccess>3124d4f1-6d19-450e-8d71-01e6c2cac8d9</onsuccess><processid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</processid></stage><stage stageid="920cf97d-74a9-441c-9e2b-2c47c023ac33" name="Worksheet Names" type="Collection"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="255" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3124d4f1-6d19-450e-8d71-01e6c2cac8d9" name="For Each Name" type="LoopStart"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0e40b339-b952-445b-a957-6d2d0a1bdbac</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid><looptype>ForEach</looptype><loopdata>Worksheet Names</loopdata></stage><stage stageid="27d57e09-d2fa-496d-a5c6-d382be881ad1" name="Next" type="LoopEnd"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aea2b1ba-e24b-4929-a0be-bc2ad811f277</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid></stage><stage stageid="4198f8b9-1418-4bbc-a984-4049f1b78df6" name="Worksheet Name" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="180" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e40b339-b952-445b-a957-6d2d0a1bdbac" name="Matches?" type="Decision"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Name] = [Worksheet Names.Name]" /><ontrue>f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1</ontrue><onfalse>27d57e09-d2fa-496d-a5c6-d382be881ad1</onfalse></stage><stage stageid="f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1" name="Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="True" stage="Worksheet Exists" /></stage><stage stageid="f5a7d39b-3edc-4984-89dc-f88f02b5f747" name="Worksheet Exists" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aea2b1ba-e24b-4929-a0be-bc2ad811f277" name="Not Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="False" stage="Worksheet Exists" /></stage><stage stageid="a1d81278-4fd7-4ee6-a878-8ec4dcde4793" name="Get Worksheet Range As Collection" type="SubSheetInfo"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f2ee451-c914-4c38-8e19-4d3e3a519dfd" name="End" type="End"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The spreadsheet data from the specified range, as a collection" stage="worksheetcollection" /></outputs></stage><stage stageid="fa5759e6-b7e3-42d1-8297-90953ec4a343" name="handle" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="832f8dbf-c88e-4488-89ec-d0782439fc34" name="workbookname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7a36655-443b-482f-809b-eb738682ee98" name="Start" type="Start"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="text" name="EndCell" narrative="The end cell of the range of interest" stage="End Cell" /></inputs><onsuccess>c5ca2712-c200-4900-8f8e-70a9fffb3c2e</onsuccess></stage><stage stageid="680eac96-2bd0-4d02-a62b-ac7bf684dae9" name="GetWorksheetRangeAsCollection" type="Code"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>6f2ee451-c914-4c38-8e19-4d3e3a519dfd</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	Dim r as Object
	r = ws.Range(Start_Cell & ":" & End_Cell)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="c5ca2712-c200-4900-8f8e-70a9fffb3c2e" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[workbookname]" /></inputs><onsuccess>680eac96-2bd0-4d02-a62b-ac7bf684dae9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="706da482-84a4-4e78-a1ba-002f80123e3f" name="worksheetname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1ec36df-f335-48a9-a0f4-e3f39d6c987d" name="worksheetcollection" type="Collection"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8054b9c8-5245-4a77-a058-949faeec00a7" name="Start Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="210" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9f43b65-bd92-44fa-b0fe-cf798aaf49be" name="End Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="270" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40717bdb-980d-46a2-8ed8-4c3c283a98ff" name="Use Header" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a437a6b-8cfe-4bc1-a7d3-ca5a2e026477" name="Remove Blank Rows" type="SubSheetInfo"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><narrative>Removes blank rows in the active excel workbook. The entire row must consist of blank cells.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c883a67c-5093-45d2-82c8-680cf35c2c0e" name="Start" type="Start"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1e0e5735-5bc9-43dc-85c9-4e8735def67f</onsuccess></stage><stage stageid="7023c112-819d-4c9c-82f3-84ab84c9f560" name="End" type="End"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e0e5735-5bc9-43dc-85c9-4e8735def67f" name="Activate Workbook" type="SubSheet"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>4fa6c603-9d6a-4077-ba95-9d213394ee06</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="890b79a0-986e-4982-a010-99e17a8f7173" name="handle" type="Data"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4fa6c603-9d6a-4077-ba95-9d213394ee06" name="Delete blank rows" type="Code"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7023c112-819d-4c9c-82f3-84ab84c9f560</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet

Const xlCellTypeLastCell As Integer = 11 
Dim FirstRow As Integer = 1
Dim LastRow As Integer = worksheet.Cells.SpecialCells(xlCellTypeLastCell).Row

For i As Integer = LastRow To FirstRow Step -1
	If worksheet.Application.CountA(worksheet.Rows(i)) = 0 Then
		worksheet.Rows(i).Delete
	End If
Next]]></code></stage><stage stageid="7ea085b3-60ed-4690-9b58-044e3adac69b" name="Move Worksheet" type="SubSheetInfo"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="48fad533-06e9-41b7-b213-bfea2423c61c" name="Start" type="Start"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="number" name="Destination Position" stage="Destination Position" /><input type="flag" name="Copy" stage="Copy" /></inputs><onsuccess>b950e637-fb25-4932-b970-65e4ee21dd1d</onsuccess></stage><stage stageid="51274535-b09a-4b0b-a9bc-fff82557aa0a" name="Handle" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6336e057-ac6a-4b57-b789-906100be58cc" name="Source Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51bf5410-80ae-4517-8ee8-1ccf54a61e2f" name="Source Worksheet" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467b75ec-f03c-460e-a57d-d6852ab35293" name="Destination Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ad740a0-b0e5-483c-9247-2b766533c852" name="Source Worksheet Exists" type="SubSheet"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[Source Workbook]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" expr="[Source Worksheet]" /></inputs><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs><onsuccess>efca1a70-2f20-4dda-b071-825a986958a6</onsuccess><processid>eacc4634-9985-4a1d-9773-8f79928708ee</processid></stage><stage stageid="4702c382-1a44-441c-9cd1-83281efd10ff" name="Worksheet Exists" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efca1a70-2f20-4dda-b071-825a986958a6" name="Worksheet Exists?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Exists]" /><ontrue>e804939a-8a40-4803-89cd-b10e57a97583</ontrue><onfalse>5d46a63f-e90b-4432-8c62-52d2e2380065</onfalse></stage><stage stageid="e804939a-8a40-4803-89cd-b10e57a97583" name="Move Named Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="text" name="SourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess><code><![CDATA[Dim dBook, sSheet As Object
Dim p As Integer

Try

dBook = GetWorkbook(Handle, DestinationWorkbook)
sSheet = GetWorksheet(Handle, SourceWorkbook, SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(dBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="38d819d9-2dec-4ae8-afe3-76da44096935" name="End2" type="End"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb823085-c462-43b7-81d0-3ad7f1e026dd" name="Success" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81e05f5d-ac29-4885-b6cd-fd5a308fcc44" name="Message" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764ea205-800b-4ab5-adc1-273a46ad93b6" name="Success?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>38d819d9-2dec-4ae8-afe3-76da44096935</ontrue><onfalse>65eda7a6-ce00-4372-9fc9-26931328aba4</onfalse></stage><stage stageid="7b25db9b-d103-4ba0-a8a5-468a16e50dd7" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="345" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="87c0d87a-ef13-4eb7-8e10-085ab67dc0a0" name="Destination Position" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3e46008f-172e-42b3-b4b3-e7221f0ef6d8" name="Copy and Paste Worksheet Range" type="SubSheetInfo"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="979c420e-1748-448e-9334-e238c47503a1" name="Copy" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5d46a63f-e90b-4432-8c62-52d2e2380065" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Source worksheet not found&quot;" /></stage><stage stageid="b470a541-1a6d-4c08-936a-94d2c6c99aa8" name="Start" type="Start"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Source Range" stage="Source Range" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="text" name="Destination Worksheet" stage="Destination Worksheet" /><input type="text" name="Destination Range" stage="Destination Range" /></inputs><onsuccess>11afaed8-560c-4915-b3eb-04f45158a941</onsuccess></stage><stage stageid="b4598457-7e50-432e-ae29-7d081367e298" name="Source Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc6e0465-0f54-401c-964f-974f43802264" name="Source Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b0fe7d-0b86-4fd0-bcd9-6c80841ae464" name="Destination Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0366fbb1-1c68-4466-87cb-760d499b4cdd" name="Worksheet Exists" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11afaed8-560c-4915-b3eb-04f45158a941" name="Paste Worksheet" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
sheet.Paste()
cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="70304b7a-b551-4a52-b52d-924f11d328a7" name="End2" type="End"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61bc4bd1-c8ab-4fe3-993e-a7e30fcaf9ef" name="Success" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e558b45-ad3b-459a-978c-048e7f555c4a" name="Message" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8136ae2b-8fb0-4945-8016-b5b9eae4c2d2" name="Success?" type="Decision"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>70304b7a-b551-4a52-b52d-924f11d328a7</ontrue><onfalse>470e1a49-496c-497e-b59a-537f730059cb</onfalse></stage><stage stageid="470e1a49-496c-497e-b59a-537f730059cb" name="Exception" type="Exception"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="2a17d158-14b5-4cec-aa84-2b6789585973" name="Destination Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="124d4f6c-b7b5-4935-8d7a-71a253571261" name="Handle" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b950e637-fb25-4932-b970-65e4ee21dd1d" name="Source Worksheet Number?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="IsNumber([Source Worksheet])" /><ontrue>eba296d1-0f89-4c61-892c-b25b40f3f618</ontrue><onfalse>9ad740a0-b0e5-483c-9247-2b766533c852</onfalse></stage><stage stageid="8b56215b-b4e5-4a95-a49d-179871dd1d2b" name="Move Numbered Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="number" name="SourceWorksheet" expr="[Source Worksheet Number]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e9db38cf-4c64-49fa-a46b-f2dfa31dfe18</onsuccess><code><![CDATA[Dim sBook, dBook As Object
Dim sSheet As Object
Dim p As Integer

Try

sBook = GetWorkbook(Handle, SourceWorkbook)
dBook = GetWorkbook(Handle, DestinationWorkbook)

sSheet = sBook.Worksheets(SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(sBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sBook = Nothing
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="e9db38cf-4c64-49fa-a46b-f2dfa31dfe18" name="anchor7" type="Anchor"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="195" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess></stage><stage stageid="65eda7a6-ce00-4372-9fc9-26931328aba4" name="Copy?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="240" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Copy]" /><ontrue>7b25db9b-d103-4ba0-a8a5-468a16e50dd7</ontrue><onfalse>32d3772b-fe03-4a13-a415-62b4fdd5fa8f</onfalse></stage><stage stageid="32d3772b-fe03-4a13-a415-62b4fdd5fa8f" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to move worksheet: &quot; &amp; [Message]" /></stage><stage stageid="eba296d1-0f89-4c61-892c-b25b40f3f618" name="Source Workbook Number" type="Calculation"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8b56215b-b4e5-4a95-a49d-179871dd1d2b</onsuccess><calculation expression="[Source Worksheet]" stage="Source Worksheet Number" /></stage><stage stageid="2cc989f3-1c41-4289-98fb-383b0c88ed74" name="Source Worksheet Number" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09bbef8a-09b2-4a43-925d-b1a0b88e692b" name="Get Worksheet Position" type="SubSheetInfo"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4235fac3-2295-4511-828e-090e9c888d38" name="End" type="End"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" stage="Position" /></outputs></stage><stage stageid="46d026ab-934f-4e60-8d1f-68344ac1b103" name="Handle" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3d97151-6742-41e9-9b9a-08ce6b9700d1" name="Workbook" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ec78a25-f322-4161-8872-54815ffbc0f0" name="Worksheet" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccd25c1-379e-41cf-92fd-2d02ac1fc7ac" name="Start" type="Start"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>244c946c-e677-4da7-8d5a-de244ec07eea</onsuccess></stage><stage stageid="244c946c-e677-4da7-8d5a-de244ec07eea" name="Get Worksheet Position" type="Code"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Position" stage="Position" /></outputs><onsuccess>27d60ef1-833c-44f5-b5ab-0aefb2c0581c</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets
Position = ws(Worksheet).Index

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="f13a2dde-4da4-4811-a0dd-f3f0bb009354" name="Position" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32b13d14-acc8-406c-8d15-9ffdc7355c5d" name="Source Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa73a8e-f525-4d57-a0ff-9df54a1d2d63" name="Destination Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1da6ce-caa1-4a5c-b622-70602b8ad49e" name="Select" type="SubSheetInfo"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30e9f460-bd3e-4273-bb7c-77fedbfe445f" name="End" type="End"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a24031db-2c21-4624-9a0b-6643f3e75247" name="Handle" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9504d1-c2d1-49a6-a6f2-cf95da7eeb12" name="Workbook" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcba2fd7-c2e3-4661-a6c4-be512624d70c" name="Worksheet" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f78616ed-e974-46dd-ace5-c44a1b800c11" name="Start" type="Start"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Cell Reference" stage="Cell Reference" /></inputs><onsuccess>34677bae-38d3-4518-917f-c883f9c1677d</onsuccess></stage><stage stageid="92300230-c4b8-4530-9378-f98dfd556895" name="Cell Reference" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34677bae-38d3-4518-917f-c883f9c1677d" name="Select Cells" type="Code"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Reference" expr="[Cell Reference]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>2cb73eba-be13-4568-a11a-02f3a20b9dfe</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Reference)
range.Select()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	excel = Nothing
	sheet = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="2cb73eba-be13-4568-a11a-02f3a20b9dfe" name="Success?" type="Decision"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>30e9f460-bd3e-4273-bb7c-77fedbfe445f</ontrue><onfalse>7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4</onfalse></stage><stage stageid="7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4" name="Exception" type="Exception"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to select row: &quot; &amp; [Message]" /></stage><stage stageid="3e5f45b4-d1b1-4dc1-8be0-29a9b4a55c53" name="Success" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34efe5b1-fcdd-4221-a651-006b1110ebbd" name="Message" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8189dfa8-421a-45da-9d7c-26ac377bc514" name="Delete" type="SubSheetInfo"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a3f17004-6131-48f2-b0a8-e602f24b599e" name="End" type="End"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d0b1914-39fd-4e17-b7b4-55faafd45af7" name="Handle" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75588f1d-b4d2-4c8c-a51f-61c822a68abb" name="Workbook" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad8ce293-a3a3-43ca-9b8f-1d680fbdc03e" name="Start" type="Start"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>97daebd3-2794-4944-af67-9698bbaa77b3</onsuccess></stage><stage stageid="57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd" name="Delete Selection" type="Code"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>6f1da154-330d-490b-b615-df266c6767fa</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Delete(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="6f1da154-330d-490b-b615-df266c6767fa" name="Success?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>a3f17004-6131-48f2-b0a8-e602f24b599e</ontrue><onfalse>bb18bdc9-f544-4157-a6ba-e289c8f33c43</onfalse></stage><stage stageid="bb18bdc9-f544-4157-a6ba-e289c8f33c43" name="Exception" type="Exception"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="d0c4907b-2b85-424d-a6ef-8bcfb43d3f72" name="Success" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9dbebe22-4f86-499f-8f29-155baf2cc42d" name="Message" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2110b138-01f6-47af-befd-7a71637b5844" name="Shift" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97daebd3-2794-4944-af67-9698bbaa77b3" name="Shift Left?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>6e608312-7a91-4039-8f0a-90ccaac7d3cc</ontrue><onfalse>8a8e9a33-5eca-485a-adeb-e5a43592d6d4</onfalse></stage><stage stageid="6e608312-7a91-4039-8f0a-90ccaac7d3cc" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="4095b231-4d4f-4c98-b74d-6134fb63b9af" name="Shift Type" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8e9a33-5eca-485a-adeb-e5a43592d6d4" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage><stage stageid="27122991-d4c6-4811-a366-7fd47a11da5c" name="Copy" type="SubSheetInfo"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bba0e0d4-6894-469c-a9b8-1f07855dadc9" name="End" type="End"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="364a6306-d747-4c70-84ae-4128d8938fbc" name="Handle" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0139001-74d1-4ab8-a517-4329434df1e5" name="Workbook" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d750a5-2e0e-4aaa-951a-76aaf6b973da" name="Start" type="Start"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>d8005fde-9fe5-47f9-a980-e4beae15815a</onsuccess></stage><stage stageid="a8acd5cc-0955-4896-b87a-80091b060926" name="Success?" type="Decision"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bba0e0d4-6894-469c-a9b8-1f07855dadc9</ontrue><onfalse>6ceb186e-fea0-48a8-a72d-f104f83699c6</onfalse></stage><stage stageid="6ceb186e-fea0-48a8-a72d-f104f83699c6" name="Exception" type="Exception"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy selection: &quot; &amp; [Message]" /></stage><stage stageid="4f25dc7f-bd6f-495d-90e7-0d561dba2662" name="Success" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8da6c3-ceed-4a32-8e4d-473b53a57602" name="Message" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8005fde-9fe5-47f9-a980-e4beae15815a" name="Copy Selection" type="Code"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a8acd5cc-0955-4896-b87a-80091b060926</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Copy

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="044c591e-e63e-4f13-80b8-de4217a78b3b" name="Paste" type="SubSheetInfo"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ebf6405-9e3a-45f8-be9c-fdd70f254b34" name="End" type="End"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f23548e-a9f9-48c6-93c3-fbd8fa4f8d8d" name="Handle" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf7ad6-162d-4e2d-9a03-a6ebc54eb526" name="Workbook" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4b5681-cffa-432d-be94-08d4ddf16986" name="Start" type="Start"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="flag" name="Values Only" stage="Values Only" /></inputs><onsuccess>0d27a545-71b3-4a27-843b-8ed69b1648ce</onsuccess></stage><stage stageid="360c1bdb-1960-4486-ad05-8ec4485ef0ec" name="Success?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>1ebf6405-9e3a-45f8-be9c-fdd70f254b34</ontrue><onfalse>4830e942-edaf-4bd2-8922-9cffafc084ad</onfalse></stage><stage stageid="4830e942-edaf-4bd2-8922-9cffafc084ad" name="Exception" type="Exception"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to paste from clipboard: &quot; &amp; [Message]" /></stage><stage stageid="77b051c2-e570-49a3-8708-b42785a2517f" name="Success" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da93fc46-495b-4511-a724-a1cc7d70cffa" name="Message" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24bf06a1-fd8f-4cd3-bab6-e05552f8bdba" name="Paste Values1" type="Code"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Paste Option" expr="[Paste Option]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>360c1bdb-1960-4486-ad05-8ec4485ef0ec</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.PasteSpecial(Paste:=Paste_Option, Operation:=-4142, SkipBlanks:=False, Transpose:=False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
   range = Nothing
End Try]]></code></stage><stage stageid="ba04d5a5-b0f7-4979-af44-2f0fee5237f9" name="Write To Clipboard" type="SubSheetInfo"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1587c068-8225-4476-b636-9403f8acd84a" name="Start" type="Start"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" stage="Value" /></inputs><onsuccess>2279ba0c-3963-48f8-b813-4b0f53f47471</onsuccess></stage><stage stageid="a82e0657-86e9-4273-bd0f-2065d5f70254" name="End" type="End"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eda7181f-a720-4b63-9d69-86221881d965" name="Value" type="Data"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2279ba0c-3963-48f8-b813-4b0f53f47471" name="Write To Clipboard" type="Code"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" expr="[Value]" /></inputs><onsuccess>a82e0657-86e9-4273-bd0f-2065d5f70254</onsuccess><code><![CDATA[
My.Computer.Clipboard.Clear()
My.Computer.Clipboard.SetText(Value)]]></code></stage><stage stageid="79b62074-ec0d-49c6-a258-61823cc8a849" name="Values Only" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0d27a545-71b3-4a27-843b-8ed69b1648ce" name="Values Only?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Values Only]" /><ontrue>5bd5a242-a414-4d49-b093-0eb8d3978f8a</ontrue><onfalse>f98e8dcf-bff1-418a-9963-4878022c7391</onfalse></stage><stage stageid="f98e8dcf-bff1-418a-9963-4878022c7391" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4104" stage="Paste Option" /></stage><stage stageid="8e80a8c9-867f-46fa-ace9-d251af38eeed" name="Paste Option" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd5a242-a414-4d49-b093-0eb8d3978f8a" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4163" stage="Paste Option" /></stage><stage stageid="7f2dfa02-938c-4179-9e22-216057d33f43" name="Cut" type="SubSheetInfo"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2f20301-ebd9-4fbd-9b94-ca2074e69294" name="End" type="End"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d29233ea-0e94-44a4-864c-f32568e42c4b" name="Handle" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59232dab-20a4-4e84-8a43-e2016ef6a74c" name="Workbook" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6c212b-fd48-44cf-a931-8c99060d29cc" name="Start" type="Start"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>3dcf0167-85d1-4170-b214-86784cbcab65</onsuccess></stage><stage stageid="581ece97-ebdc-4855-8fdf-45290b4e587d" name="Success?" type="Decision"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>f2f20301-ebd9-4fbd-9b94-ca2074e69294</ontrue><onfalse>797b7b44-cd61-4d3c-8874-82e44868ea1b</onfalse></stage><stage stageid="797b7b44-cd61-4d3c-8874-82e44868ea1b" name="Exception" type="Exception"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to cut selection: &quot; &amp; [Message]" /></stage><stage stageid="3556655c-d270-4054-a989-b2f44854a7ba" name="Success" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9b9ba3-e800-4df7-bc87-db6b36f846c9" name="Message" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dcf0167-85d1-4170-b214-86784cbcab65" name="Cut Selection" type="Code"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>581ece97-ebdc-4855-8fdf-45290b4e587d</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Cut

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fc13a15a-74aa-47dc-af68-38bea19af981" name="Protect Workbook" type="SubSheetInfo"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0e32102b-7c0a-4f3e-9fe7-cc267fede407" name="Handle" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03b0377d-35e5-4a7d-b16c-756d690843ee" name="Workbook" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1610a1c-3532-4a88-8732-39cbfb4495f4" name="Start" type="Start"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="password" name="Password" stage="Password" /></inputs><onsuccess>e47e5f86-b7d0-409e-bf2a-6673cf28bac7</onsuccess></stage><stage stageid="de93c65e-11ae-4507-b8bf-da3f09910f82" name="Password" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e47e5f86-b7d0-409e-bf2a-6673cf28bac7" name="Protect Workbook" type="Code"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="password" name="Password" expr="[Password]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)
wb.Protect(Password, True, True)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="6a177cf9-5ec0-481d-84e9-c5d72177038d" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0cc70266-582a-410c-9c3a-29ff9dfb795e" name="Handle" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf25a3a-b4dd-4b80-8339-06b9d63e56e6" name="Workbook" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8889824-2e30-472c-bb9a-4daad82560f3" name="Worksheet" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d9d6921-9f68-4152-be57-8b0df6472eda" name="Start" type="Start"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>298fe33e-bd86-4109-8540-f1abe8d02eb8</onsuccess></stage><stage stageid="4a51d886-d307-4904-8ce4-98191c734a17" name="End" type="End"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0" name="Success?" type="Decision"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4a51d886-d307-4904-8ce4-98191c734a17</ontrue><onfalse>fbeb4a74-fc5f-431f-b150-15549afc2a22</onfalse></stage><stage stageid="fbeb4a74-fc5f-431f-b150-15549afc2a22" name="Exception" type="Exception"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protect workbook: &quot; &amp; [Message]" /></stage><stage stageid="298fe33e-bd86-4109-8540-f1abe8d02eb8" name="Hide Worksheet" type="Code"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>66ad2075-9b87-44be-9c6d-0a702d752f57</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook, Worksheet)
ws.Visible = False

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="c2e5c7e9-93a1-489e-a870-523042f050f1" name="End" type="End"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66ad2075-9b87-44be-9c6d-0a702d752f57" name="Success?" type="Decision"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c2e5c7e9-93a1-489e-a870-523042f050f1</ontrue><onfalse>7dca362f-2e45-443b-adc7-9075f02fc717</onfalse></stage><stage stageid="7dca362f-2e45-443b-adc7-9075f02fc717" name="Exception" type="Exception"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="c3b30035-3883-4740-9cf0-49e967ad6306" name="Success" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff6900f6-3524-4b24-be71-4d12c2d4c77e" name="Message" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cea8af9d-95ea-4c09-9932-adc8cc633db6" name="Success" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7888130-7082-4f05-8864-3f0709675831" name="Message" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b9509a6-dfc6-4f25-9474-dba6e8b7ed20" name="Hide Other Worksheets" type="SubSheetInfo"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a81bb6df-46b8-4641-8531-802be8934741" name="Handle" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f349c5cb-454b-448c-b225-5c474ae4e52d" name="Workbook" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="999117c1-6fa6-4172-9512-78106c277a38" name="Worksheet" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6444d8d9-7f26-4eb5-ab31-c98706e6209a" name="Start" type="Start"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>c5ca2626-02e2-4413-9476-9958c1b7b717</onsuccess></stage><stage stageid="c5ca2626-02e2-4413-9476-9958c1b7b717" name="Hide Other Worksheets" type="Code"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>36529e74-e353-4cbd-b6ff-3591c0390efd</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)

For Each ws As Object In wb.Worksheets
	ws.Visible = (ws.Name = Worksheet)
Next

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="52e20387-128e-4f5c-b182-7d28a9005a71" name="End" type="End"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36529e74-e353-4cbd-b6ff-3591c0390efd" name="Success?" type="Decision"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>52e20387-128e-4f5c-b182-7d28a9005a71</ontrue><onfalse>c5840684-3348-4ee6-a024-dda79500a851</onfalse></stage><stage stageid="c5840684-3348-4ee6-a024-dda79500a851" name="Exception" type="Exception"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to hide worksheets: &quot; &amp; [Message]" /></stage><stage stageid="089eef49-c020-4aea-929e-4d1ae4282215" name="Success" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370e2ccf-3010-44ea-9155-06babd5e856c" name="Message" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4996af5e-0cc1-4e24-aedf-20320350469e" name="Import CSV" type="SubSheetInfo"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4b14657-a0f4-4c85-9466-5146878dfbe7" name="Handle" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbfe7495-0fef-4c22-a251-88166b8485d4" name="Workbook" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c0e661b-9b74-4d25-9a8b-1da52f957ed2" name="Worksheet" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8df3e95e-4a03-4e0a-a649-37fb1d17ff41" name="Start" type="Start"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Destination Handle" stage="Handle" /><input type="text" name="Destination Workbook" stage="Workbook" /><input type="text" name="Destination Worksheet" stage="Worksheet" /><input type="text" name="Destination Range" stage="Range" /><input type="text" name="Source File Path" stage="Path" /><input type="text" name="Source Text Qualifier" stage="Qualifier" /></inputs><onsuccess>a09cfa98-b04d-472f-ad84-87e6a0bdb011</onsuccess></stage><stage stageid="7803cce6-3095-4d46-9cd2-793181eb080d" name="Import CSV" type="Code"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="Path" expr="[Path]" /><input type="number" name="Qualifier" expr="[Qualifier Code]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>91f84fae-ca36-4b8b-8221-bc3e95cd2ef3</onsuccess><code><![CDATA[Dim dw, ds, dr, qt As Object

Try

dw = GetWorkbook(Handle, Workbook)
ds = GetWorksheet(Handle, Workbook, Worksheet)
dr = ds.Range(Range)
qt = ds.QueryTables.Add(Connection:="TEXT;" & Path, Destination:=dr)

With qt
	.FieldNames = True
	.RowNumbers = False
	.FillAdjacentFormulas = False
	.PreserveFormatting = True
	.RefreshOnFileOpen = False
	.RefreshStyle = 1 'xlInsertDeleteCells
	.SavePassword = False
	.SaveData = True
	.AdjustColumnWidth = True
	.RefreshPeriod = 0
	.TextFilePromptOnRefresh = False
	.TextFilePlatform = 437
	.TextFileStartRow = 1
	.TextFileParseType = 1 'xlDelimited
	.TextFileTextQualifier = Qualifier
	.TextFileConsecutiveDelimiter = False
	.TextFileTabDelimiter = False
	.TextFileSemicolonDelimiter = False
	.TextFileCommaDelimiter = True
	.TextFileSpaceDelimiter = False
	.TextFileTrailingMinusNumbers = True
End With
qt.Refresh(False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dw = Nothing
	ds = Nothing
	dr = Nothing
	qt = Nothing
End Try]]></code></stage><stage stageid="bfe990bf-be29-4c21-ac04-96a798ab1827" name="End" type="End"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="91f84fae-ca36-4b8b-8221-bc3e95cd2ef3" name="Success?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="210" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bfe990bf-be29-4c21-ac04-96a798ab1827</ontrue><onfalse>6aaf6a41-be76-442d-9c2b-06905c4e0355</onfalse></stage><stage stageid="6aaf6a41-be76-442d-9c2b-06905c4e0355" name="Exception" type="Exception"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="225" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to import CSV: &quot; &amp; [Message]" /></stage><stage stageid="af967b8b-4ec8-4202-ac07-6acbf9d12d46" name="Success" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5335f808-6164-4249-9a2c-682294b9834c" name="Message" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="955e0188-d711-476b-b15b-1362ba3b0ea4" name="Path" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef84711-b0a0-4f04-a09d-a6e9637ea2cb" name="Qualifier" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a09cfa98-b04d-472f-ad84-87e6a0bdb011" name="Double Quote Qualifier?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Qualifier]=&quot;&quot;&quot;&quot;" /><ontrue>b0e18e5b-791a-492a-b6c6-112ed2cdf10f</ontrue><onfalse>6e036392-ff83-4dfa-94fe-ff1ed03cd9bc</onfalse></stage><stage stageid="b0e18e5b-791a-492a-b6c6-112ed2cdf10f" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="1" stage="Qualifier Code" /></stage><stage stageid="f9eb7145-ee8c-41cc-8ea2-2417adbcd435" name="Qualifier Code" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc2b8ffb-c597-4ede-8134-1cc80a2c3293" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="-4142" stage="Qualifier Code" /></stage><stage stageid="6e036392-ff83-4dfa-94fe-ff1ed03cd9bc" name="Note2" type="Note"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><narrative>Assume no text qualifier</narrative><display x="15" y="60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc2b8ffb-c597-4ede-8134-1cc80a2c3293</onsuccess></stage><stage stageid="70744683-2ca9-4e9a-89b9-194945f98e32" name="Range" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c8e00b5-ec48-479b-8abf-6a6658752cb5" name="Get Worksheet Name" type="SubSheetInfo"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2af2843d-00f3-464f-ab67-305ae6ccf858" name="End" type="End"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Worksheet" stage="Worksheet" /></outputs></stage><stage stageid="26c465a5-f001-4ff8-ac21-28437489e85f" name="Handle" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2de7e6b6-6118-4b3f-ba2b-179ba64d95d8" name="Workbook" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee8f628-7829-42f7-ac8c-672d78be654f" name="Worksheet" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c752debc-3eea-4935-a460-f8eb77039d5d" name="Start" type="Start"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="number" name="Worksheet Position" stage="Position" /></inputs><onsuccess>ba712112-b784-4f87-a7ff-5a8721aca35d</onsuccess></stage><stage stageid="ba712112-b784-4f87-a7ff-5a8721aca35d" name="Get Worksheet" type="Code"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Position" expr="[Position]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Worksheet" stage="Worksheet" /></outputs><onsuccess>39f8ebfd-a1e8-4517-add5-653f475fe8eb</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets(Position)
Worksheet = ws.Name

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="2cbe9309-244f-45ae-8716-0d02bf738530" name="Position" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27d60ef1-833c-44f5-b5ab-0aefb2c0581c" name="Success?" type="Decision"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4235fac3-2295-4511-828e-090e9c888d38</ontrue><onfalse>8edc5ff8-0139-409d-ba63-7f23bf726964</onfalse></stage><stage stageid="8edc5ff8-0139-409d-ba63-7f23bf726964" name="Exception" type="Exception"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet position: &quot; &amp; [Message]" /></stage><stage stageid="39f8ebfd-a1e8-4517-add5-653f475fe8eb" name="Success?" type="Decision"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>2af2843d-00f3-464f-ab67-305ae6ccf858</ontrue><onfalse>636399b4-ec2b-41a7-ac41-27e98637df4c</onfalse></stage><stage stageid="636399b4-ec2b-41a7-ac41-27e98637df4c" name="Exception" type="Exception"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet name: &quot; &amp; [Message]" /></stage><stage stageid="69b153d1-9bd9-4c51-8b96-d45c1112bbfb" name="Success" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="464ca930-cf54-4147-8041-1007cc2416b6" name="Message" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def46f81-3f9f-421d-91cf-f12583e956d3" name="Success" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1195aa37-1cbe-4f02-9d00-c39f3e304cfc" name="Message" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5222003b-5cb9-4669-bc35-96d41b028249" name="Insert" type="SubSheetInfo"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c868cff-a594-49f6-bde7-fc3ba2cd17c6" name="End" type="End"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c34b4fa-4824-48bf-ae2a-b709a25cec17" name="Handle" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dc53e03-3a4f-4ca9-ba70-17573564d976" name="Workbook" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89909450-cca0-4546-bbbc-32cbd4c609bc" name="Start" type="Start"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>1f31ede9-3b32-4aaf-9b55-573cb227a850</onsuccess></stage><stage stageid="dc1f9d40-b099-44c3-a2c1-e782413b0914" name="Insert" type="Code"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be039ecb-6427-4a80-8a91-9b69561fc2de</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Insert(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="be039ecb-6427-4a80-8a91-9b69561fc2de" name="Success?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>7c868cff-a594-49f6-bde7-fc3ba2cd17c6</ontrue><onfalse>741cc1d1-3936-4201-ad74-e95993e64b92</onfalse></stage><stage stageid="741cc1d1-3936-4201-ad74-e95993e64b92" name="Exception" type="Exception"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="aac1165a-4574-4834-a68e-18db8cdd0216" name="Success" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52ea365d-8434-45cb-97ba-cd7c741b7c7c" name="Message" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd2ee59b-4044-4f2c-8439-05e1a9b23c7d" name="Shift" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f31ede9-3b32-4aaf-9b55-573cb227a850" name="Shift Left?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>594ef012-6d63-4256-a43c-dd84c172ad15</ontrue><onfalse>21ff25a4-b431-43fb-af46-02fff92627e7</onfalse></stage><stage stageid="594ef012-6d63-4256-a43c-dd84c172ad15" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4161" stage="Shift Type" /></stage><stage stageid="c07375e4-4e0d-4a0d-b7b2-d1bab9884769" name="Shift Type" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21ff25a4-b431-43fb-af46-02fff92627e7" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4121" stage="Shift Type" /></stage><stage stageid="53f2c5f2-ac8f-40c2-ace8-24614c6d3676" name="Run Macro" type="SubSheetInfo"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da9401ad-8267-4f76-bb0d-02d380427eb5" name="Start" type="Start"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /></inputs><onsuccess>a19d33b9-0a8b-4fb1-b333-7fb65c7733ab</onsuccess></stage><stage stageid="0a6413b8-4ce8-4399-b3e2-974e44d812af" name="End" type="End"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a19d33b9-0a8b-4fb1-b333-7fb65c7733ab" name="Run Macro" type="Code"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /></inputs><onsuccess>0a6413b8-4ce8-4399-b3e2-974e44d812af</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name)]]></code></stage><stage stageid="669163d5-5b66-446d-84fc-ddaaccf6ecc8" name="Handle" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d95761c1-c5f3-46a0-8b86-7f90e58418cc" name="Macro Name" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f6eda740-cf77-47fa-9304-31c3e5dcd95a" name="AbhiProcess" type="SubSheetInfo"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6307098d-be8b-46f7-ab3e-a22713115ce0" name="Start" type="Start"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="IndexNumber" stage="Number" /></inputs><onsuccess>1f462e0f-f9ed-488f-902d-e1486f34ae3a</onsuccess></stage><stage stageid="b0b3a123-1b60-49ce-b608-b48f421873b0" name="End" type="End"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f462e0f-f9ed-488f-902d-e1486f34ae3a" name="Activate Workbook" type="SubSheet"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>48c61dee-3076-4552-9417-ffc2e4e47ee5</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="24cf1225-14ab-4680-9e0d-663946ea16c9" name="handle" type="Data"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="285" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="48c61dee-3076-4552-9417-ffc2e4e47ee5" name="Delete blank rows1" type="Code"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="0" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="i" expr="[Number]" /></inputs><onsuccess>b0b3a123-1b60-49ce-b608-b48f421873b0</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet
		worksheet.Rows(i).Delete

]]></code></stage><stage stageid="1a133544-4591-41be-8b52-47b6fb61aeb6" name="Number" type="Data"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="285" y="-60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5269b39-1b6b-4155-a933-67769ce987a5" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="debec38b-0f56-41b1-9c9b-95c1e821d574" name="Start" type="Start"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="number" name="Column Number" stage="Column Number" /><input type="text" name="Filter Criteria" stage="Filter Criteria" /></inputs><onsuccess>fda15d7f-221e-4029-bd65-e1915918c0b4</onsuccess></stage><stage stageid="9b92bdb7-1416-40c2-ba12-c948d247d543" name="End" type="End"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="6913783b-a077-46e8-8af7-04b146854c94" name="Handle" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f922204-3dfc-423c-ac58-376ed564c8e8" name="Workbook" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="885fe96f-9d30-43e9-a8c1-af0719d4a595" name="Worksheet" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbf6ebec-6463-438f-a484-59f953049418" name="Success" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2f004204-ee7a-4954-82ce-dedbf4b0f79d" name="Message" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="2ea8e44b-9223-4387-b479-5cc215c38b23" name="Select Range" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="-165" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66e3d80d-8284-4fe2-93ce-349e7756a47a" name="Inputs" type="Block"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="-240" y="-90" w="150" h="225" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f0a4570-cfc3-4ca3-adc9-00ad59cebd39" name="Output " type="Block"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="fda15d7f-221e-4029-bd65-e1915918c0b4" name="Filter Excel" type="Code"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Column Number" expr="[Column Number]" /><input type="text" name="Filter Criteria" expr="[Filter Criteria]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9b92bdb7-1416-40c2-ba12-c948d247d543</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="79cb756f-5ab9-4e0f-b883-f98e4d786284" name="Filter Criteria" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09d77b85-ed8c-4037-b475-d7b046b120a3" name="Column Number" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f2f7ae0-6ade-4964-b600-65c76be1c6e0" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="3fe2b0f2-b023-4363-b89a-5b29a0e74c08" name="Start" type="Start"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>412a95b2-5126-4863-8836-ee9c2b3ecdc1</onsuccess></stage><stage stageid="40057163-511a-4220-a226-604bc0777d4f" name="End" type="End"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="0b83c93b-17d2-4baf-8397-bf8197491366" name="Handle" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e12c96e1-321b-412f-b3d5-1139719c1ffb" name="Workbook" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4316b9a-d36c-484b-9392-f6e6906d9936" name="Worksheet" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d69c7833-7f4b-47d4-9c74-087b78a58c74" name="Success" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6591d6e-a7e3-4cc1-8beb-939086489c81" name="Message" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7bafdd7d-dcdf-4c8f-a642-ba919f746e8f" name="Inputs" type="Block"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="-240" y="-60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6dd254ae-3d4d-487a-9c70-1e18418a6702" name="Output " type="Block"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="412a95b2-5126-4863-8836-ee9c2b3ecdc1" name="Delete Filtered Values" type="Code"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>40057163-511a-4220-a226-604bc0777d4f</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object
Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.Offset(1, 0).SpecialCells(12).EntireRow.Delete 
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="b2b1ad79-fb83-4eff-8ddb-a9484f1b6785" name="Delete Hidden rows " type="SubSheetInfo"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="4d7cfe29-5aaf-4dba-be09-0240d5ab943d" name="Start" type="Start"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>9d85cec7-0ba5-46d8-8b27-5a0187128f9e</onsuccess></stage><stage stageid="3c606e10-953e-48f8-ad6b-2dd1222e3334" name="End" type="End"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="203181e0-966c-4f75-a7cb-faeca2afbbd1" name="Handle" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3168c0ea-38b8-49bd-96b8-8fa8084cedc2" name="Workbook" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79329e58-17a3-4cd1-9480-f269630a6e1a" name="Worksheet" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59806680-25e1-44d4-a85c-1b03789ae553" name="Success" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="82572622-b240-4a22-9109-9be661565a77" name="Message" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f65de0e-b7a9-46f0-88ff-8c4ee5596adb" name="Inputs" type="Block"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="-240" y="-90" w="135" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1364c906-9831-49ca-aed6-c3620656c586" name="Output " type="Block"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9d85cec7-0ba5-46d8-8b27-5a0187128f9e" name="Remove Excel Filter" type="Code"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3c606e10-953e-48f8-ad6b-2dd1222e3334</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
sheet.UsedRange.AutoFilter

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="8aee19f2-9fe7-4626-903b-5b47dfe217f5" name="Format Columns" type="SubSheetInfo"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-135" w="150" h="90" /></stage><stage stageid="c72449fb-d3bd-47e3-8577-c0ddd2914a4e" name="Start" type="Start"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /><input type="text" name="Format Type" narrative="Type can be &quot;Text&quot;, &quot;Percentage&quot;,&quot;Number&quot;,&quot;Fraction&quot;" stage="Format Type" /></inputs><onsuccess>86e43e0f-dfe3-4a8b-9a95-a98fd638fb93</onsuccess></stage><stage stageid="83cdc766-3d21-4342-8318-3685c4a8b91b" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="60" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="67c6c08e-f8d2-42a1-a480-77199f13d298" name="Number Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="60" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>83cdc766-3d21-4342-8318-3685c4a8b91b</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0.00"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="22ed1689-da95-41a2-a4e2-dad0c3079171" name="Handle" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7bce11b7-cdda-43c7-a4ab-f9d770b10c22" name="Workbook" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6373b284-7af2-4479-93e8-db8512d419fe" name="Worksheet" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc1d0539-4181-42f2-abdb-02d99323c4ec" name="Success" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-60" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4398eddd-9566-4512-996b-57b086ab2ee4" name="Message" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-60" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f8da730-1626-4f31-ade8-5db1c3a18630" name="Select Range" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86e43e0f-dfe3-4a8b-9a95-a98fd638fb93" name="Select Formatting" type="ChoiceStart"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="15" y="-90" /><groupid>8463325a-cfa6-44af-937e-b204969b093c</groupid><choices><choice expression="[Format Type]=&quot;Number&quot;"><name>Number</name><distance>71</distance><ontrue>67c6c08e-f8d2-42a1-a480-77199f13d298</ontrue></choice><choice expression="[Format Type]=&quot;Percentage&quot;"><name>Percentage</name><distance>142</distance><ontrue>c576f684-ead5-45bb-a793-b9eefb28a5b0</ontrue></choice><choice expression="[Format Type]=&quot;Text&quot;"><name>Text</name><distance>213</distance><ontrue>e88a0f4a-5601-4593-883b-3154830493f8</ontrue></choice><choice expression="[Format Type]=&quot;Fraction&quot;"><name>Fraction</name><distance>284</distance><ontrue>50be47e9-3fca-40ca-8c56-995016cc7a94</ontrue></choice><choice expression="[Format Type]=&quot;Date&quot;"><name>Date</name><distance>355</distance><ontrue>836e99a9-468f-4285-bf29-92d861c8f4f0</ontrue></choice><choice expression="[Format Type]=&quot;General&quot;"><name>General</name><distance>426</distance><ontrue>79699fa8-96b5-4c3a-87d3-2a24f0c7a3b6</ontrue></choice><choice expression="[Format Type]=&quot;Year Date&quot;"><name>Date in YYYYMMDD</name><distance>497</distance><ontrue>8ed02a66-163e-417d-8500-d29dc675cb36</ontrue></choice><choice expression="[Format Type]=&quot;1000 separater&quot;"><name>Number 1000 separater</name><distance>568</distance><ontrue>76fee878-0218-4ff9-9fb7-4d6f02b44799</ontrue></choice><choice expression="[Format Type]=&quot;hh:mm:ss&quot;"><name>Time</name><distance>600</distance><ontrue>0f6e8f6e-0b42-4bc3-87fd-f083dcd511b2</ontrue></choice><choice expression="[Format Type]=&quot;Number 0&quot;"><name>Number(Decimal places 0)</name><distance>690</distance><ontrue>46c52b43-4688-497c-8d6a-25c1973680d7</ontrue></choice><choice expression="[Format Type]=&quot;Number 1&quot;"><name>Number(no Decimal places )</name><distance>781</distance><ontrue>c0c764c5-db36-4308-89df-3329f720cf9c</ontrue></choice><choice expression="[Format Type]=&quot;No then Text&quot;"><name>Number then Text</name><distance>900</distance><ontrue>5a19d095-7bbf-427a-968f-33b3bf19fbd6</ontrue></choice><choice expression="[Format Type]=&quot;1000 separator without decimal&quot;"><name> 1000 separator without Decimal</name><distance>975</distance><ontrue>b0546af1-3ac8-4485-b2bf-501826cc1570</ontrue></choice><choice expression="[Format Type]=&quot;Number without decimal&quot;"><name>Number(With Decimal)</name><distance>1050</distance><ontrue>bd7bb7c1-34e8-430d-8022-4e34fe974505</ontrue></choice></choices></stage><stage stageid="64a629ed-7ec9-40dc-8df4-84dc0016dc37" name="Otherwise1" type="ChoiceEnd"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1155" y="-90" /><onsuccess>5dfe779c-8fc3-4d9d-ab09-2d2f3de13a2b</onsuccess><groupid>8463325a-cfa6-44af-937e-b204969b093c</groupid></stage><stage stageid="e85e508d-23df-4492-aab7-9dee749bb27b" name="Format Type" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2848b67-af11-43b0-a094-e69315d3bffd" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="120" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="c576f684-ead5-45bb-a793-b9eefb28a5b0" name="Percentage Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="120" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e2848b67-af11-43b0-a094-e69315d3bffd</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0.00%"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="d6d92ecc-e044-4ab5-bc76-4f90b7ddb550" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="180" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="cc6da736-e88e-41f2-ab07-def85817a830" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="240" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="50be47e9-3fca-40ca-8c56-995016cc7a94" name="Fraction Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="240" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>cc6da736-e88e-41f2-ab07-def85817a830</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "# ?/?"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="9e4d8b31-1bfc-474b-984d-8332c9fab97a" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="300" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="836e99a9-468f-4285-bf29-92d861c8f4f0" name="Date Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="300" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9e4d8b31-1bfc-474b-984d-8332c9fab97a</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "m/d/yyyy"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="4ae669b6-e94b-4b4e-b728-838a02af4c7a" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="360" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="79699fa8-96b5-4c3a-87d3-2a24f0c7a3b6" name="General Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="360" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>4ae669b6-e94b-4b4e-b728-838a02af4c7a</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "General"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="5dfe779c-8fc3-4d9d-ab09-2d2f3de13a2b" name="Set Success" type="MultipleCalculation"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1230" y="-90" /><onsuccess>bf7b21c9-802e-44ce-b9f3-966b6e430536</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Incorrect Selection of Format Type- Format Type should be Text, Number, Percentage, Date and Fraction&quot;" stage="Message" /></steps></stage><stage stageid="bf7b21c9-802e-44ce-b9f3-966b6e430536" name="End1" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1320" y="-90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="8ed02a66-163e-417d-8500-d29dc675cb36" name="Date Format YYYY" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="420" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e781e0e9-f08e-4252-a8e4-c53ecb89d317</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "YYYYMMDD"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="e781e0e9-f08e-4252-a8e4-c53ecb89d317" name="End4" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="420" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="76fee878-0218-4ff9-9fb7-4d6f02b44799" name="Number Format1" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="480" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e55360f1-9521-4326-910e-7cccc560860c</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0,000.00"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="e55360f1-9521-4326-910e-7cccc560860c" name="End5" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="480" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="0f6e8f6e-0b42-4bc3-87fd-f083dcd511b2" name="Time Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="615" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>28c18d7b-e361-4ac9-9e63-a1e892182943</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "hh:mm:ss"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="28c18d7b-e361-4ac9-9e63-a1e892182943" name="End6" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="615" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="46c52b43-4688-497c-8d6a-25c1973680d7" name="Number Format2" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="705" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ae118969-1dd5-4960-8b35-be8f5d5d84d0</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
With excel.Selection
	.NumberFomat = "0"
	.Value = .Value
End With

'excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="ae118969-1dd5-4960-8b35-be8f5d5d84d0" name="End7" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="705" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="c0c764c5-db36-4308-89df-3329f720cf9c" name="Number Format3" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="795" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ee61e7e8-47f3-4ced-960d-7b5c2cfd1c75</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
With excel.Selection
	.NumberFomat = "0.0"
	.Value = .Value
End With

excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="ae824bc5-2ba6-460a-b916-052a61d13db2" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="09d40d0b-2ca7-4d9a-b23b-01f69d79a33b" name="Start" type="Start"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /><input type="text" name="Auto Fill Range" stage="AutoFill Range" /></inputs><onsuccess>46ff1b1d-d024-4217-89a7-7cabe53c3c0c</onsuccess></stage><stage stageid="746038ae-8846-4ede-8ff2-bff9585bb023" name="End" type="End"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="46ff1b1d-d024-4217-89a7-7cabe53c3c0c" name="Auto Fill" type="Code"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select_range" expr="[Select Range]" /><input type="text" name="Autofill_range" expr="[AutoFill Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>746038ae-8846-4ede-8ff2-bff9585bb023</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Select_range)
range.Select()
'GetInstance(Handle).ActiveCell.Value = "=SUM(A1,B1)"
sheet.Range(Select_range).AutoFill (sheet.Range(Autofill_range))
Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="5721b7eb-3017-4280-a1ea-15684aee23ea" name="Handle" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76683bbe-b4ef-4eff-8882-1b88960abdad" name="Workbook" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="beddf64f-6e7b-468c-afce-370e0e282877" name="Worksheet" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1a2b31c-4d54-4e17-af72-8509e4da5feb" name="Success" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3b172368-db77-42e5-9c50-973a0fce3df8" name="Message" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c18d875-ae92-4155-847c-800660b77ef4" name="Select Range" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-165" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="842e5e49-3996-429e-9db4-40494829eb83" name="AutoFill Range" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-165" y="90" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff04b5cd-55ce-4065-aa5d-1f5a0c1c8b9e" name="Inputs" type="Block"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-240" y="-90" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f6d34e7b-4a93-4bf6-a6a2-2cc9b5b827c1" name="Output " type="Block"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e976691d-c5d4-49d3-aead-6ac1eff857ef" name="Auto Fill Range" type="Note"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><narrative>Auto Fill Range

This action is used to fill the series in excel rows. This is based on the selection of cell. based on the value of selected cell, it will fill the entire used range rows.</narrative><display x="75" y="-180" w="300" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="5b11bc5d-e131-4290-a0f2-b476e71d4494" name="Delete row" type="SubSheetInfo"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3996e3e0-aa19-4063-b7e5-556478d94b97" name="Start" type="Start"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="unknown" name="handle" stage="handle" /></inputs><onsuccess>1bced6ff-3122-43b8-9dae-3db40751a61e</onsuccess></stage><stage stageid="b7da20a9-06e8-477e-8aff-edc73b8c7dda" name="End" type="End"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1bced6ff-3122-43b8-9dae-3db40751a61e" name="Code1" type="Code"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="handle" expr="[handle]" /></inputs><onsuccess>b7da20a9-06e8-477e-8aff-edc73b8c7dda</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(Handle,Nothing).ActiveSheet
worksheet.Rows(1).Delete]]></code></stage><stage stageid="6873a268-5fbb-4fab-afb2-50358e302241" name="handle" type="Data"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><display x="240" y="-90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad9663e7-d179-4a23-a175-72eb03ae39dd" name="Format Cell" type="SubSheetInfo"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><narrative>Sets the number format at the given cell to that specified.
Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fe3d5c37-3192-4a2d-bb7c-6c43258addd2" name="Start" type="Start"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><loginhibit /><display x="-45" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="selectrange" narrative="The reference to the cell whose format should be changed." stage="Select Range" /><input type="text" name="workbook" stage="Workbook" /><input type="text" name="worksheet" stage="Worksheet" /></inputs><onsuccess>8e04e6de-2743-4e6f-86af-d1eb2903a364</onsuccess></stage><stage stageid="0b2eb62f-1d97-4272-ac21-5ff49e868b3a" name="Handle" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="210" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="8ed6b0f3-7280-46bd-9000-7657b3486377" name="End" type="End"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8e04e6de-2743-4e6f-86af-d1eb2903a364" name="1" type="Code"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><loginhibit /><display x="-45" y="-15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8ed6b0f3-7280-46bd-9000-7657b3486377</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.Style = "comma"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="f0eb5cab-f3a1-4f1b-a963-86fe166c726d" name="Workbook" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="150" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e662b1a5-3a7a-48ac-bcab-f80ed6613090" name="Worksheet" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="165" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94ad3579-db68-4937-b7f5-6ebc2ded9318" name="Select Range" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="240" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77221f74-324b-41f8-ba19-48efb6a69385" name="Success" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="135" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8128788e-1766-4b1b-ae59-a95b8e433144" name="Message" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="195" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58f0c038-b3e2-42c2-9e56-d1291e7e5f58" name="Filter Excel Other than Equal" type="SubSheetInfo"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="935a9012-f922-4f1c-ba1c-d7d8573560db" name="Start" type="Start"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="90" y="-75" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="number" name="Column Number" stage="Column Number" /><input type="text" name="Filter Criteria" stage="Filter Criteria" /></inputs><onsuccess>5cb9921a-c978-45a5-8b84-f9742421507e</onsuccess></stage><stage stageid="26cc9e59-a38b-4962-8901-7ab41b6f7b4d" name="End" type="End"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="90" y="120" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="b5a949be-a7d5-4068-b7ef-2dc9cb55fc2d" name="Handle" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="080fbdf9-347b-4cd0-b1a8-35b24b6237c2" name="Workbook" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ab8af97-208b-448c-af52-b1829858ec4c" name="Worksheet" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b732c4ff-0eb0-4023-8967-83887a46e10f" name="Success" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="255" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ca92df1-639d-4924-8605-1cdf9db801ef" name="Message" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="330" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd1a77c2-a6fd-4712-9b47-83a254e7757c" name="Select Range" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="-90" y="90" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9e996ce-8dcb-47df-a553-d087468ed1fc" name="Output " type="Block"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="195" y="-30" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="5cb9921a-c978-45a5-8b84-f9742421507e" name="Filter Excel1" type="Code"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="90" y="30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Column Number" expr="[Column Number]" /><input type="text" name="Filter Criteria" expr="[Filter Criteria]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>26cc9e59-a38b-4962-8901-7ab41b6f7b4d</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
'sheet.UsedRange.AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="a0a532f1-da5a-499f-960e-8000ba61554a" name="Filter Criteria" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="120" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5dbcbe52-5296-4558-8800-54c6ac8db77b" name="Column Number" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7dfb0c85-bbbb-432f-ab8e-c4abdd929b28" name="Refresh All PivotTable" type="SubSheetInfo"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="acf0f8ca-ad5a-4a80-b73a-3d58c5ede10b" name="End" type="End"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="22c95764-d190-452e-865b-1de44af5ecdd" name="handle" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-300" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="caf346e3-8c45-4f28-aae7-f9868de7e45a" name="workbookname" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-300" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb7b6419-2176-477d-a950-180b0e836948" name="Start" type="Start"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>da1e91d1-41da-4d9b-96fb-9038d4d9acc2</onsuccess></stage><stage stageid="f89d38c3-ce15-4b82-b575-51c7cadc7d6f" name="RefreshWorksheet" type="Code"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>acf0f8ca-ad5a-4a80-b73a-3d58c5ede10b</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
'sheetexists = ws IsNot Nothing 
'If sheetexists then ws.Activate()
'ws.Refresh
'Dim ws as Worksheet
Dim pt 'as PivotTable
For Each pt in ws.PivotTables
	pt.RefreshTable
Next pt]]></code></stage><stage stageid="da1e91d1-41da-4d9b-96fb-9038d4d9acc2" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>f89d38c3-ce15-4b82-b575-51c7cadc7d6f</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="5da46033-10ac-409b-86d7-baf860409b5b" name="worksheetname" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f272549d-abcf-4390-996c-13041774c560" name="createifmissing" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="d0724432-fe43-4450-b9ff-4550b27b8a4f" name="sheetexists" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-240" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="debe24c3-9e2f-40ee-92e5-58704ef1f3e0" name="Sheet Existed?" type="Decision"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>acf0f8ca-ad5a-4a80-b73a-3d58c5ede10b</ontrue><onfalse>6981a2bc-dfea-4614-9e54-148fe4e379a9</onfalse></stage><stage stageid="6981a2bc-dfea-4614-9e54-148fe4e379a9" name="No Such Sheet" type="Exception"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="240" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="5a19d095-7bbf-427a-968f-33b3bf19fbd6" name="Number Format4" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="915" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3911cf34-72d8-49f6-9d67-2d3d0d58f8b6</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0,000"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="3911cf34-72d8-49f6-9d67-2d3d0d58f8b6" name="Text Format1" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="915" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>85bc31e1-978a-4b19-b113-66f7d01d5e72</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "@"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="d385d822-ddd6-44af-988d-7287603ef339" name="Paste Worksheet1" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
'source.PasteSpecial(Excel.XlPasteType.xlPasteAll, Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd, False, False)
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
destination.PasteSpecial(Excel.XlPasteType.xlPasteAll, Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd, False, False)
'sheet.Paste()
'cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="9f717df8-0f23-4f33-84df-65b54fa609d5" name="ActivateWorkbook1" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="180" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()]]></code></stage><stage stageid="b0546af1-3ac8-4485-b2bf-501826cc1570" name="1000 Seperator without decimal" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="990" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3016d7e1-888f-4394-8f19-2bed20173cd2</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0,000"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="3016d7e1-888f-4394-8f19-2bed20173cd2" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="990" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="af6c30b0-12cd-4bf9-8a97-032590c83527" name="Sort" type="SubSheetInfo"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-195" y="-165" w="150" h="90" /></stage><stage stageid="80d41f31-1b41-4ed4-ab29-88fb122f9d2e" name="Start" type="Start"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-165" y="-45" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /></inputs><onsuccess>129a90aa-d25d-4073-92f4-8439114d206d</onsuccess></stage><stage stageid="b0404aee-54c1-4ad6-a00f-e82baddc1836" name="End" type="End"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-165" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="129a90aa-d25d-4073-92f4-8439114d206d" name="Auto Fill1" type="Code"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-165" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select_range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>b0404aee-54c1-4ad6-a00f-e82baddc1836</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'range = sheet.Range(Select_Range)
'range.Select()
sheet.Sort.SortFields.Clear
'GetInstance(Handle).ActiveCell.Value = "=SUM(A1,B1)"
'call sheet.Sort.SortFields.Add(sheet.Columns(1),,Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending)
call sheet.Sort.SetRange(sheet.Range("A2:A7"))
sheet.Sort.Apply

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="b3bece2c-6e08-4db9-84e9-9712de3d2a67" name="Handle" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-345" y="0" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a8edfa83-5a55-4110-81f3-a4386baac547" name="Workbook" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-345" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2237daa-fced-4e2e-acc1-81c566c3aa39" name="Worksheet" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-345" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94cddc0d-28e8-4ffa-8c91-1ff1b9b7f7a5" name="Success" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="0" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57f02628-5b5a-44ab-b6d6-99232e3fcb64" name="Message" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="75" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c013a197-b3cf-41e1-9333-0b47c90b8cf1" name="Select Range" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-360" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f985c363-44ae-494d-b0b1-6fcf78ee6790" name="Inputs" type="Block"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-420" y="-30" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="69a06c6e-3927-4dfc-96a5-daad69d8b80e" name="Output " type="Block"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-60" y="15" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="bd7bb7c1-34e8-430d-8022-4e34fe974505" name="Number Format5" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1065" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>fbdd6740-120a-4f31-bfd9-a19b2fe5c945</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fbdd6740-120a-4f31-bfd9-a19b2fe5c945" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1065" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="85bc31e1-978a-4b19-b113-66f7d01d5e72" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="915" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="ee61e7e8-47f3-4ced-960d-7b5c2cfd1c75" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="795" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="e88a0f4a-5601-4593-883b-3154830493f8" name="Text Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="180" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d6d92ecc-e044-4ab5-bc76-4f90b7ddb550</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "@"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try
]]></code></stage><stage stageid="8bcc1a3b-f86a-45a1-ae9b-d6185f513dde" name="Highlight Active Cell" type="SubSheetInfo"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="af501502-0960-495f-b93f-1e8a6d6c7f86" name="Start" type="Start"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /><input type="number" name="R" stage="R" /><input type="number" name="G" stage="G" /><input type="number" name="B" stage="B" /></inputs><onsuccess>b5216955-0960-40fa-be59-cda897e8f43a</onsuccess></stage><stage stageid="cf8611aa-c244-45a6-9505-6759267d53f7" name="End" type="End"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b5216955-0960-40fa-be59-cda897e8f43a" name="Check Handle1" type="Code"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>0ce6d00c-54c2-4a69-b76f-b416e04e236f</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="0ce6d00c-54c2-4a69-b76f-b416e04e236f" name="Is Handle Missing?" type="Decision"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>9e4da605-7a1d-465c-b50d-4a1fc61e82d5</ontrue><onfalse>556a60d1-772b-4102-af93-5c5c5c7dcb81</onfalse></stage><stage stageid="9e4da605-7a1d-465c-b50d-4a1fc61e82d5" name="Bad Instance Handle" type="Exception"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="556a60d1-772b-4102-af93-5c5c5c7dcb81" name="Highlight Cell" type="Code"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="60" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="R" expr="[R]" /><input type="number" name="G" expr="[G]" /><input type="number" name="B" expr="[B]" /></inputs><onsuccess>cf8611aa-c244-45a6-9505-6759267d53f7</onsuccess><code><![CDATA[Dim IngColor As Long
IngColor = RGB(R,G,B)
GetInstance(handle).ActiveCell.Interior.Color = IngColor
Dim activeCell = GetInstance(handle).ActiveCell]]></code></stage><stage stageid="03ffbda5-ae7f-4761-9c5a-66c8ab178722" name="handle" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13c9e844-f8a2-48de-a830-f28a71e442fc" name="HandleMissing" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-165" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ac9af7f-d8eb-4def-839b-eb18bd9ad185" name="R" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-285" y="75" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed480573-031b-45e4-9c8b-619ce0aba001" name="G" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-225" y="75" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7b205e39-9c2c-4a1c-8ea1-7d75a419bb72" name="B" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-165" y="75" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d2a4ada-cfd7-49c8-af58-8c436ee41a4f" name="Run Macro - Perm" type="SubSheetInfo"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b31db9ae-6310-4797-8b33-4e8fb230e11f" name="Start" type="Start"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /><input type="date" name="Perm1" stage="Perm1" /></inputs><onsuccess>a053856f-9e56-427e-a5c0-27565b47d0ed</onsuccess></stage><stage stageid="3b984d07-237e-4833-b5a2-7084c1281608" name="End" type="End"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a053856f-9e56-427e-a5c0-27565b47d0ed" name="Run Macro-Perm" type="Code"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /><input type="date" name="Perm1" expr="[Perm1]" /></inputs><onsuccess>3b984d07-237e-4833-b5a2-7084c1281608</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name,Perm1)]]></code></stage><stage stageid="b97ba77c-487e-41ff-9181-002b36af3365" name="Handle" type="Data"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dcaf5e2a-15c1-4df1-9ba0-a038a2b7868c" name="Macro Name" type="Data"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77681d9d-7633-4494-aa30-32221b2d52b9" name="Perm1" type="Data"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><display x="90" y="-105" /><datatype>date</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef06c0f-2f42-4422-965e-a70ad2ff79f2" name="Remove Duplicates" type="SubSheetInfo"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="13fe08eb-0914-4a72-afce-cfdd41c690cd" name="Start" type="Start"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="WorkbookName" stage="WorkbookName" /><input type="text" name="WorksheetName" stage="WorksheetName" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>b211eb5f-0f25-4e27-9d58-1509f0b1574d</onsuccess></stage><stage stageid="c9b4ef39-bac4-4761-b55f-4dd48892b10c" name="End" type="End"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b211eb5f-0f25-4e27-9d58-1509f0b1574d" name="Remove Duplicates1" type="Code"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[WorkbookName]" /><input type="text" name="Worksheet" expr="[WorksheetName]" /><input type="text" name="Input_Range" expr="[Range]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>be26e31a-1be3-49aa-8c90-a9c056ba6f2c</onsuccess><code><![CDATA[Dim wb, ws, dup As object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

dup = ws.Application.range(Input_Range).RemoveDuplicates(Columns:=1)

Success = True

Catch e As Exception
    Success = False
    Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	dup = Nothing
End Try]]></code></stage><stage stageid="dbe40461-7efb-4abf-acbe-11b83f87ce2b" name="Message" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="270" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1daf3b6-d4a4-4963-b85c-7b95993b3648" name="Success" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="225" y="-30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cfb4803-96ff-4733-87f6-ed49720fe409" name="Handle" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13b725a3-3d49-4459-9c2c-5e384833f656" name="WorkbookName" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b0dc91d-96f0-42c7-8a76-e8838f82fd94" name="WorksheetName" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5beafb9d-32c7-4742-847a-ef2f6d58b120" name="Range" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc6bb6bf-6fe9-41fe-b0ad-a36b5a17a76d" name="Input variables" type="Block"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="165" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a141385f-e81e-42e0-9d47-d36659da857d" name="Output variables" type="Block"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="180" y="-60" w="135" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="be26e31a-1be3-49aa-8c90-a9c056ba6f2c" name="If Sucess?" type="Decision"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Success]" /><ontrue>c9b4ef39-bac4-4761-b55f-4dd48892b10c</ontrue><onfalse>8256685d-e777-4440-834b-3d0ee66cae2c</onfalse></stage><stage stageid="8256685d-e777-4440-834b-3d0ee66cae2c" name="Exception" type="Exception"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="105" y="30" /><exception type="&quot;System Exception&quot;" detail="[Message]" /></stage></process></object>
        <object id="dd2e7562-42fe-4956-8e25-1193f2c3b1df" name="MS Excel VBO Merchant Fraud Monitoring Merchant Fraud Monitoring" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Excel VBO Merchant Fraud Monitoring Merchant Fraud Monitoring" version="5.0.999.999" bpversion="7.0.1.49890" narrative="The VBO replacement for the Common Automation Excel business object" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ca515603-8af2-4608-8a70-31028a7d9a0b</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>283</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2b84826-7ce1-4774-9df6-1d118e3722bf" type="Normal" published="True"><name>Apply Filter</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="421962f9-f7a5-4ab3-8737-7cfd31ba5d78" type="Normal" published="True"><name>Remove Duplicates</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="488e2387-02b2-4f25-a8b6-ba9633d1c19c" type="Normal" published="True"><name>Highlight Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67651307-0389-47bf-ae8d-fd94364e808f" type="Normal" published="True"><name>Remove Blank Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aef25d68-c6e7-447c-99d2-56885d72b172" type="Normal" published="True"><name>AbhiProcess</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="492548e8-2fa5-473e-9061-df8326d46e4c" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>62</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f7a4a91-68c9-4871-bb65-417e96cc4ad1" type="Normal" published="False"><name>CheckInstanceAndWorkbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a07606-d51b-4fe3-a076-7a77a4ca2cde" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>-22</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99e648cc-a136-471c-8424-19071c0fd9e7" type="Normal" published="True"><name>Create Instance</name><view><camerax>-60</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec281dc5-ed57-4b8b-9bf5-212e314657aa" type="Normal" published="True"><name>Open Instance</name><view><camerax>209</camerax><cameray>-94</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ad81501-44a1-48ab-94fd-9b2c35ed20b8" type="Normal" published="True"><name>Attach</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2b3544ad-af96-4f40-9b50-16dfbe0600f1" type="Normal" published="True"><name>Attach to workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ec3006a-6553-4526-b522-32526c4aa3cc" type="Normal" published="True"><name>Close Instance</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4fb11e41-83d8-461d-8c0d-04cdd2f670e2" type="Normal" published="True"><name>Release Instance</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc33871a-9aec-4a29-b811-3ab205ddf41e" type="Normal" published="True"><name>Exit</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="feb8ce9f-299e-4152-85a1-354a5f9d995c" type="Normal" published="True"><name>Close All Instances</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859e3c31-acbc-48dd-8535-ef2ce9385d70" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>-36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69db5cf5-4908-49c7-9027-8f48e26e5b27" type="Normal" published="True"><name>Set Events Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="268628ce-c0f3-492a-be5c-87b432e16d1d" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef10421c-e1ff-4227-b367-c53059a6766d" type="Normal" published="True"><name>Hide</name><view><camerax>-62</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="73b8ddb4-b679-4697-b3c4-79ce833a9456" type="Normal" published="True"><name>Create Workbook</name><view><camerax>-117</camerax><cameray>-246</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2fb01e3f-e275-43bc-83eb-579001da335b" type="Normal" published="True"><name>Open Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6632ed99-8751-4c2a-ad00-3cc016300e08" type="Normal" published="True"><name>Activate Workbook</name><view><camerax>45</camerax><cameray>-90</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e7cb0ad-5910-4065-aab2-2919726bae39" type="Normal" published="True"><name>Save Workbook</name><view><camerax>-44</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76d598ed-b254-4c1e-8004-d4f2928b1450" type="Normal" published="True"><name>Save Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21a53e34-8128-41cb-ad73-17250758ff23" type="Normal" published="True"><name>Save Workbook As</name><view><camerax>-64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9e5cd-a91d-4a33-bc23-1602c5fe878f" type="Normal" published="True"><name>Save Current Workbook As</name><view><camerax>-135</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ccaae8b-c06f-45c8-8772-835218881458" type="Normal" published="True"><name>Close Workbook</name><view><camerax>-232</camerax><cameray>110</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c" type="Normal" published="True"><name>Close Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ddb3c741-0c59-4ac8-a260-258fb8eb1674" type="Normal" published="True"><name>Is Read Only</name><view><camerax>-91</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="733c2840-8162-465a-a8f2-7d023087c369" type="Normal" published="True"><name>Activate Worksheet</name><view><camerax>74</camerax><cameray>-64</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f78a5f80-c2d5-4e9b-ae08-a56fb8007b18" type="Normal" published="True"><name>Create Worksheet</name><view><camerax>-120</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="00860074-be81-4bbd-b679-c6658c0f26fb" type="Normal" published="True"><name>Refresh All PivotTable</name><view><camerax>74</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="37a2442f-8e22-4749-8b44-4ef2980f28a6" type="Normal" published="True"><name>Delete Worksheet</name><view><camerax>16</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79b9bf7c-222d-4cc3-adc8-5bb337fa6d72" type="Normal" published="True"><name>Move Worksheet</name><view><camerax>51</camerax><cameray>96</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da83b3dd-0312-4b53-9732-e3f8e29c561f" type="Normal" published="True"><name>Copy and Paste Worksheet Range</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30" type="Normal" published="True"><name>Get Worksheet As Collection</name><view><camerax>43</camerax><cameray>-159</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e58a482d-f349-4f40-9b03-a903156ce1b5" type="Normal" published="True"><name>Get Worksheet As Collection (Fast)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7f4653f3-592a-42ef-999e-7e08447d6587" type="Normal" published="True"><name>Delete row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92799072-140a-4621-89cd-2da12475dcda" type="Normal" published="True"><name>Get Worksheet as Collection Offset</name><view><camerax>64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e" type="Normal" published="True"><name>Get Worksheet Range As Collection</name><view><camerax>147</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f743df98-2e69-4559-89b6-32ef6637618d" type="Normal" published="True"><name>Split Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="becd6faa-f5c0-4d3a-a48a-cb54d3aa8909" type="Normal" published="True"><name>Get Worksheet Names</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67" type="Normal" published="True"><name>Get Worksheet Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="510b0ce5-bf46-43a1-86a4-72877f427e6f" type="Normal" published="True"><name>Get Worksheet Position</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eacc4634-9985-4a1d-9773-8f79928708ee" type="Normal" published="True"><name>Worksheet Exists</name><view><camerax>105</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc139ac7-b971-481e-9528-b1521ae9fc92" type="Normal" published="True"><name>Get Number Of Rows</name><view><camerax>8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed502669-4207-4c88-895d-8c58ec321578" type="Normal" published="True"><name>Go To Cell</name><view><camerax>-6</camerax><cameray>-180</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0b877cd-07ce-4df1-a63b-89fa4d315c4c" type="Normal" published="True"><name>Go To Next Cell</name><view><camerax>-180</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c" type="Normal" published="True"><name>Get Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b5de6c6-ed9a-443d-95b8-142dd521120e" type="Normal" published="True"><name>Find Next Empty Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eaafa766-b0ce-4891-8e6e-de12d6283ae0" type="Normal" published="True"><name>Go To Next Empty Cell Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2d4c80d-3058-4d60-8e96-7b9b12f9ae58" type="Normal" published="True"><name>Go To Next Empty Cell Right</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a78c1a5-e339-4f76-9203-d180bee31770" type="Normal" published="True"><name>Go To Next Empty Cell Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82492075-b486-413c-9bd4-05eba466843e" type="Normal" published="True"><name>Go To Next Empty Cell Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5698ca16-b00d-4d62-9d9b-e76e8295b556" type="Normal" published="True"><name>Set Cell Value</name><view><camerax>55</camerax><cameray>-135</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61e057c4-63c5-40f4-b172-730b89503b37" type="Normal" published="True"><name>Sort</name><view><camerax>-70</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0dbe03a0-e259-47ab-bee7-7dec41ae32e7" type="Normal" published="True"><name>Write Collection</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ebb1c9ea-1996-4373-aac5-28640a5ea498" type="Normal" published="True"><name>Auto Fill Range</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e031661-2f5e-4cb2-949b-97babe59ff81" type="Normal" published="True"><name>Get Cell Value</name><view><camerax>0</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d96215cc-750e-4616-8852-1d4d44a9f21b" type="Normal" published="True"><name>Get Active Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17f8ab72-203a-42d4-a59b-a073ccd57bb0" type="Normal" published="True"><name>Get Formatted Cell Value</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c" type="Normal" published="True"><name>Format Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3f9fe2bc-ee08-4822-9ab0-c5600441a964" type="Normal" published="True"><name>Format Cell - Bai Ajel</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9b535bfc-4f80-4d7c-88b5-49b941688030" type="Normal" published="True"><name>Format Current Cell</name><view><camerax>0</camerax><cameray>-28</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035f75ef-016f-4c45-ab51-5b2cd9eabe87" type="Normal" published="True"><name>Format Columns</name><view><camerax>430</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39374841-edab-4ea9-86d9-5f2fff3f1a5f" type="Normal" published="True"><name>Set Window Size</name><view><camerax>0</camerax><cameray>-672.8</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904eeb0d-e6a2-408b-99b5-621307252585" type="Normal" published="True"><name>Set Window Location</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d4998c94-d432-4713-81a5-e902535089c6" type="Normal" published="True"><name>Set Window State</name><view><camerax>-11</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9147cb85-5c6f-4a47-adcf-ab472d5a0b5a" type="Normal" published="True"><name>Select</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a" type="Normal" published="True"><name>Delete</name><view><camerax>188</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="659749b0-1f00-4e33-956d-6be6172a8739" type="Normal" published="True"><name>Insert</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="71ebd060-a411-45fc-8f39-132eb3e5ff79" type="Normal" published="True"><name>Copy</name><view><camerax>98</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5eee765d-c84b-493f-9132-f6a27f296d0e" type="Normal" published="True"><name>Cut</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035d5ed0-2f39-46ca-80c1-b0127418dc9e" type="Normal" published="True"><name>Paste</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c59601b-2b70-4c97-a218-0abf1bf7463a" type="Normal" published="True"><name>Write To Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c37e9923-b729-471b-80b1-7d44113ca618" type="Normal" published="True"><name>Protect Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7316eded-6aed-4d1d-9eeb-64fbbb8e53a0" type="Normal" published="True"><name>Hide Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7dfa158d-070b-449b-8195-38ef7fb86b48" type="Normal" published="True"><name>Unhide Hide Worksheet - Copy</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e62b9c20-62f8-4d28-8f19-de7610e56e1e" type="Normal" published="True"><name>Hide Other Worksheets</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1487aa65-ac8a-44e9-a6e9-8b16b4be5199" type="Normal" published="True"><name>Import CSV</name><view><camerax>0</camerax><cameray>88</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4229da44-68c0-4b51-9d2c-08be4a9d6727" type="Normal" published="True"><name>Run Macro</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e312ef1e-f655-4e1d-9671-8f8c860ef57d" type="Normal" published="True"><name>Filter Excel</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4" type="Normal" published="True"><name>Run Macro - Perm</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="501b5735-dcab-4877-948b-da028edffed3" type="Normal" published="True"><name>Filter Excel Other than Equal</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c9615767-6652-4462-b1f8-fac034e2c3a2" type="Normal" published="True"><name>Delete Filtered Values</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5502a7f-1139-434f-8bd9-6009432d1e11" type="Normal" published="True"><name>Remove Excel Filter</name><view><camerax>20</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="8f886cd8-eef6-485f-b9f3-0086c90eecdb" name="Start" type="Start"><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0d87ebb-154d-4756-8b89-d2d5445479ae</onsuccess></stage><stage stageid="d0d87ebb-154d-4756-8b89-d2d5445479ae" name="End" type="End"><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="13efd9ee-454d-4e73-a19d-91a25c412087" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>System.IO</import><import>Microsoft.VisualBasic</import><import>System.Windows.Forms</import><import>System.Data</import><import>System.Diagnostics</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[
' External functions used to make sure the excel instances are exited and processes killed
Declare Function EndTask Lib "user32.dll" (ByVal hWnd As IntPtr) As Integer
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
	   (ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr
Declare Function GetWindowThreadProcessId Lib "user32.dll" _
	   (ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer
Declare Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Integer) As IntPtr

' The 'active' instance of excel.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the excel instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function


' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Excel.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Excel.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function


' Close the instance with the given handle, not saving any work, making
' sure that it is removed from this VBO's collection of instances
'
' @param Handle The handle representing the instance to close
Protected Sub CloseInstance(Handle As Integer)
	CloseInstance(Handle, False)
End Sub

' Close the instance with the given handle, saving the work as specified.
'
' @param Handle The handle representing the instance
'
' @param SaveWorkbooks True to save the workbooks before quitting the instance,
' 		False to discard any changes
Protected Sub CloseInstance(Handle As Integer, SaveWorkbooks As Boolean)
	
	Dim Instance As Object = Nothing
	If Handle = 0 AndAlso CurrentInstance Is Nothing Then
		Throw New NullReferenceException("Tried to close nonexistent current instance")
	ElseIf Handle = 0 ' Current Instance - reset it
		Handle = GetHandle(CurrentInstance) ' We need the handle to remove from HandleMap
		Instance = CurrentInstance
		CurrentInstance = Nothing
	Else
		Instance = GetInstance(Handle)
	End If

	Me.HandleMap.Remove(Handle)
	Me.InstanceMap.Remove(Instance)

	Instance.DisplayAlerts = False ' Hide alerts
	
	' First close all the workbooks and the workbooks collection
	Dim wbs as Object = Instance.Workbooks
	If wbs IsNot Nothing Then
		For Each Workbook As Object In wbs
			Workbook.Close(SaveWorkbooks)
		Next
		wbs.Close()
	End If
	
	' Try quitting - sometimes this is enough
	Instance.Quit()
	
	' Try and force a com object release - this might quit excel for us.
	System.Runtime.InteropServices.Marshal.ReleaseComObject(Instance)

	' Now if the com object has released the RCW, we need to stop
	' We'll know because if we try and get the version and it fails
	' then the COM object has been cleaned up.
	' If so, end the proc now - we have to assume the instance is gone
	
	Dim Ver as Double = 0.0
	Try
		Ver = Val(Instance.Version)
	Catch ex as Exception
		' Not got the version - assuming cleared up
		Return
	Finally
		SetLastError(0) ' If any errors have occurred thus far, clear them
	End Try

	' Now it's the messy stuff to try and find the excel instance and nuke
	' it from orbit. It's the only way to be sure.

	' The window handle for the excel instance
	Dim hwnd As IntPtr = IntPtr.Zero
	' Later versions of excel expose the window handle
	If Val(Ver) >= 10 Then _
		hwnd = New IntPtr(CType(Instance.Parent.Hwnd, Integer))
		
	' If the window handle isn't set, must be an earlier version of excel
	' Use FindWindow to find the window with the GUID that we set in it on creation
	If IntPtr.Equals(hwnd, IntPtr.Zero) Then _
		hwnd = FindWindow(Nothing, Instance.Caption)
	
	' If the window handle is still zero, the instance must already be closed
	If Not IntPtr.Equals(hwnd, IntPtr.Zero) Then
	
        ' Get the process ID for the window we have
		Dim resp, procId as Integer
        resp = GetWindowThreadProcessId(hwnd, procId)
		
        If procId = 0 Then ' can’t get Process ID
            If EndTask(hwnd) = 0 Then ' EndTask returns a bool - 0 = False
				Throw New ApplicationException("Failed to close Excel Instance.")
			End If
        Else ' We have a process ID - use it to kill excel
			Dim proc As Process = Process.GetProcessById(procId)
			' Try clicking the 'X'
			proc.CloseMainWindow()
			proc.Refresh()

			If Not proc.HasExited Then
				proc.Kill()	' Last resort - kill it with fire
			End If	
		End If	
	End If

End Sub

' Creates a new workbook in the instance represented by the given handle
'
' @param Handle The handle of the instance on which the workbook should be held
'
' @return The workbook object that was created.
Protected Function NewWorkbook(Handle as Integer) As Object

	Dim wb as Object = GetInstance(handle).Workbooks.Add()

	' Create a new Worksheet?
	if wb.Worksheets.Count = 0 Then
		wb.Sheets.Add().Activate()
	Else ' Just use the first sheet
		wb.Sheets(1).Activate()
	End If
	
	Return wb
	
End Function

' Gets the workbook in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the workbook
'
' @param Name The name of the workbook on the instance
'
' @return The object representing the workbook defined
Protected Function GetWorkbook(Handle As Integer, Name as String) As Object

	Dim wb as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		wb = GetInstance(Handle).ActiveWorkbook
		If wb Is Nothing ' We need to create a deafult workbook
			wb = NewWorkbook(Handle)
		End If
		Return wb
	Else
		Return GetInstance(Handle).Workbooks(Name)
	End If

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one and return that
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @return The sheet object representing the sheet with the given name
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String) As Object

	Return GetWorksheet(Handle,WorkbookName,WorksheetName,True)

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one or return Nothing, depending on the given flag
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @param CreateIfNotExists True to create the worksheet if it doesn't
' 		exist; False to return Nothing if it doesn't exist.
'
' @return The sheet object representing the sheet required or Nothing
'		if no such sheet exists and CreateIfNotExists was False
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String, _
		CreateIfNotExists As Boolean) As Object

	Dim wb As Object = GetWorkbook(Handle, WorkbookName)
	
	If (String.IsNullOrEmpty(WorksheetName)) Then

		Dim ws as Object = wb.ActiveSheet
		If ws Is Nothing Then
			Return wb.Sheets.Add()
		Else
			Return ws
		End If

	Else
		Dim sheets as Object = wb.Sheets
		If sheets IsNot Nothing Then
			For Each sheet as Object in sheets
				If sheet.Name = WorksheetName Then _
					Return sheet
			Next
		End If
		' Didn't find the sheet...
		If CreateIfNotExists Then

			Dim sheet as Object = sheets.Add()
			sheet.Name = WorksheetName
			Return sheet

		End If
		' Nothing else we can do - return nowt
		Return Nothing

	End If

End Function

' Gets the next cell, relative to a given cell in a given direction
' Note that if the cell is at a boundary, then the same cell is returned.
'
' @param cell : The cell to use as a base cell
'
' @param strDir : one of "L", "R", "U", "D" representing a direction from
' 		the given cell to move in.
'
' @return : The cell object representing the 'next cell' 
Protected Function GetNextCell(cell as Object, strDir as String) As Object
	
	Try
		Select Case strDir
			Case "L"
				cell = cell.Offset(0,-1)
			Case "R"
				cell = cell.Offset(0,1)
			Case "U"
				cell = cell.Offset(-1,0)
			Case "D"
				cell = cell.Offset(1,0)
		End Select
	Catch ex As Exception
		' A COM Exception is thrown if the cell is at a boundary and the offset
		' would break that boundary
	End Try
	
	Return cell

End Function]]></code></stage><stage stageid="debd0d09-d7e8-4af4-b718-c69fd2d3db22" name="Clean Up" type="SubSheetInfo"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Closes all the instances that have been created / attached to using this business object.</narrative><display x="-180" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="74a37e04-8569-40b9-8cc7-55d419e6c658" name="Start" type="Start"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fedc107e-577b-47d9-a445-c3a3e66ef516</onsuccess></stage><stage stageid="d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba" name="End" type="End"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9864b229-3596-444e-afb1-b46efff51132" name="Create Workbook" type="SubSheetInfo"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><narrative>Creates a workbook on the specified instance, returning the resultant name.

Params:
- handle : Number : The handle identifying the instance on which the workbook should be required. The default of zero indicates the current instance.

Returns:
- Workbook Name : Text : The workbook name that Excel has granted to the new workbook. By default, Excel will call it "Book&lt;n&gt;" where &lt;n&gt; is a positive integer.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.</narrative><display x="-255" y="-300" w="330" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e4ba7053-63b7-4fa4-b64b-12309c5d3d51" name="Start" type="Start"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-390" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be created. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>852ff62f-6d2b-4031-b675-ec155fd88908</onsuccess></stage><stage stageid="1d707fac-863d-4281-b9d0-a65c74bf374c" name="End" type="End"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name of the workbook that Excel has created - this can be changed using the &quot;Save Workbook As&quot; action" stage="workbookname" /></outputs></stage><stage stageid="88aa07c9-ea21-42c6-80da-110e83fc2748" name="new" type="Note"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7cd0bd3-f4fc-4acb-921b-97d3cff31998" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-195" y="30" w="300" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ffe88be-5a6a-452e-a183-9d1b9e027326" name="Open Workbook" type="SubSheetInfo"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><narrative>Opens a workbook using the instance specified in the given handle, opening the book represented by the given filename.

Params :
- handle : Number : The handle to the instance in which the workbook should be opened. The default value of zero indicates the current instance.
- File name : Text : The path to the file which should be opened.

Outputs:
- Workbook Name : Text : The name of the workbook that Excel uses to identify it.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-255" y="-165" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="753ce277-ee09-4ee9-841b-827037917616" name="Start" type="Start"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." stage="filename" /></inputs><onsuccess>9e0df7e0-ab34-4a97-9f69-db66c88ff5f4</onsuccess></stage><stage stageid="18a306bf-d323-4c4e-83b5-4b226773161c" name="End" type="End"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookname" /></outputs></stage><stage stageid="4d2c2635-39a5-41ce-8c67-49eb1db37d55" name="Save Workbook" type="SubSheetInfo"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><narrative>Saves the workbook using the current name as a filename.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be saved. The default of 0 indicates the current instance.
- Workbook Name : The name of the workbook to be saved. The default of empty indicates that the active workbook should be saved.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c92f23e-cde4-457b-8a6e-2856cf88955e" name="Start" type="Start"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /></inputs><onsuccess>ab6f627b-d630-4bdd-b840-7aac26b5806f</onsuccess></stage><stage stageid="4c75715c-7a4a-491b-804f-261ee86fcd95" name="End" type="End"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cee07b01-63cb-4d6d-9cc4-d1868ae80a0a" name="Save Workbook As" type="SubSheetInfo"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>Save the given workbook using the given file name.

Params :
- handle : Number : The integer identifying the instance on which the workbook resides. Default (0) indicates the current instance
- Workbook Name : Text : The name of the workbook which should be saved. Default ("") indicates the active workbook.
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-180" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f79caf-dea6-4a9a-95f0-0c05bea8b485" name="End" type="End"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs></stage><stage stageid="8ff7cce5-b764-42f9-88ed-51eb82a178c0" name="Activate Worksheet" type="SubSheetInfo"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ddfe7f54-b5c2-410a-8a5d-3c2b52de9550" name="End" type="End"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf681fff-ce18-4dcc-b190-da9870383e35" name="Delete Worksheet" type="SubSheetInfo"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><narrative>Deletes the specified worksheet from the workbook.

Params:
- handle : Number : The excel instance handle
- Workbook Name : Text : The name of the workbook
- Worksheet Name : Text : The name of the sheet to delete.
If the sheet doesn't exist, this will fail silently - ie. nothing will occur.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the named worksheet did not exist on the specified workbook, or if the active sheet was specified and there was no active sheet.</narrative><display x="-240" y="-135" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c23803d1-15b5-4976-9466-8fb2e49529d3" name="Go To Cell" type="SubSheetInfo"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><narrative>Activates the cell in the given workbook, identified by the given cell reference.

Params:
- handle : Number: The integer handle identifying the excel instance (0 represents 'active' instance)
- Cell Reference : Text : the cell reference to go to
NOTE - the active sheet in the instance is the one on which the cell is active</narrative><display x="-240" y="-135" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="717bb32a-6e60-4972-bdcb-10d6c7b769a0" name="Start" type="Start"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." stage="cellref" /></inputs><onsuccess>dc6f6efd-7724-48b0-8544-8f86f7bb1b8d</onsuccess></stage><stage stageid="f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8" name="End" type="End"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f9a7cb58-89e7-4295-be05-54454641b318" name="Set Cell Value" type="SubSheetInfo"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><narrative>Sets the specified cell's value to the given value.
This has the side-effect of setting the active cell to that which is specified here.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="15cc8816-ce32-4cb4-888f-7e42b5cbc653" name="Start" type="Start"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." stage="cellref" /><input type="text" name="Value" narrative="The value to which the specified cell should be set." stage="value" /></inputs><onsuccess>f54da925-167d-4c17-b44c-1861acd36f9b</onsuccess></stage><stage stageid="3efecc12-e41e-4386-b852-2651ab750ecc" name="End" type="End"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="69459b62-2608-4fd7-a65e-40074b837222" name="Get Cell Value" type="SubSheetInfo"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><narrative>Gets the value of the specified cell - note that if the cell has some formatting set in it, this does *not* return the formatted value - See "Get Formatted Cell Value".
Note also that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="232e4bda-508e-44c7-8adb-315ce0fab8af" name="CreateWorkbook" type="Code"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>1d707fac-863d-4281-b9d0-a65c74bf374c</onsuccess><code><![CDATA[
name = NewWorkbook(handle).Name]]></code></stage><stage stageid="6b5a2269-93b3-4e07-ae32-b53e1a63e772" name="filename" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1365c72e-7420-4330-a305-53b0408ec641" name="cellref" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f4cf65f-1932-4f8c-9902-00080ed74347" name="value" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50be384a-f88b-477b-9bff-ee76cd5684bc" name="Set Cell Value" type="Code"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>3efecc12-e41e-4386-b852-2651ab750ecc</onsuccess><code><![CDATA[
	GetInstance(handle).ActiveCell.Value = value]]></code></stage><stage stageid="155a039e-a678-4192-866d-0a80004f7b1b" name="cellref" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edbe4d75-3363-4d77-b489-87fb02980fdc" name="Select Cell" type="Code"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><onsuccess>f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8</onsuccess><code><![CDATA[
GetWorkbook(handle, "").ActiveSheet.Range(cellref,cellref).Activate()]]></code></stage><stage stageid="476742dd-c37f-49de-9eb5-1a66e5bcda17" name="handle" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f54da925-167d-4c17-b44c-1861acd36f9b" name="Go To Cell" type="SubSheet"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>50be384a-f88b-477b-9bff-ee76cd5684bc</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="e7dc5be6-9447-4f5a-b528-e3b4e6e92319" name="handle" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0b718057-0ae5-4c65-bb5a-d9a14ac2496a" name="handle" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3fe639e8-b4a0-4f50-886f-fb9c99ed04b2" name="Activate Workbook" type="SubSheetInfo"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><narrative>Activates the excel workbook identified by the given handle and name.

Params:
- handle : Number : The identifier of the instance which is holding the workbook; 0 (default) indicates the active instance
- Name : Text : The name of the workbook which should be activated

Exceptions:
- Invalid Input Parameter : If the worksheet name parameter is given
- Bad Handle : If the handle does not correspond to an Excel instance</narrative><display x="-240" y="-165" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8084bde3-efbe-44ec-a484-c9b07c3d0b78" name="Start" type="Start"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." stage="workbookname" /></inputs><onsuccess>6344b53e-9777-411e-bab1-aee5633bbc7d</onsuccess></stage><stage stageid="f8b84adb-3239-4125-af8d-4b1d02c950a6" name="End" type="End"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05b66883-e53e-43f9-a4d8-baa1fb79f412" name="handle" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><display x="-240" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dc6f6efd-7724-48b0-8544-8f86f7bb1b8d" name="Activate Workbook" type="SubSheet"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>edbe4d75-3363-4d77-b489-87fb02980fdc</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="1c1bd122-21c0-4b17-92f4-e5459d7921c6" name="handle" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b35f9f6-e395-4e4b-8dc1-5b2e86b17fbe" name="Close Workbook" type="SubSheetInfo"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><narrative>Closes the specified workbook, saving changes if requested.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be closed. 0 indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be closed. "" indicates the active workbook on the specified instance.
- Save Changes : Flag : True to save the changes (the equivalent of calling 'Save Workbook' before closing the workbook); False to discard any changes when closing the workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-540" y="-30" w="450" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f23862f-bb67-4712-ade2-d8d62befeb7b" name="End" type="End"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f308d1c5-88b0-455a-bff7-8163c95d1eab" name="Open Workbook" type="Code"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>6c2fa22d-1876-46b7-92eb-cf8343d0911f</onsuccess><code><![CDATA[
Dim wb as Object = GetInstance(handle).Workbooks.Open(filename)
name = wb.Name
wb.Activate()]]></code></stage><stage stageid="5d910335-0e44-4e14-8093-292d0737faee" name="handle" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7edfc788-b0ea-4933-ac22-6345453b8c6c" name="filename" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54e39cf8-9167-44e0-aea5-08d102a67f52" name="Create Instance" type="SubSheetInfo"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><narrative>Creates an instance of Excel, returning a handle with which it can be retrieved using the global object method : GetInstance(handle).</narrative><display x="-255" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2eee0d2a-9595-449a-bbdc-8fb0c5153180" name="Close Instance" type="SubSheetInfo"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><narrative>Closes the instance represented by the given handle, saving the changes or not as specified.

Params:
- handle : Number : The handle identifying the instance that should be closed; The default of 0 will close the 'current active' instance - ie. the last one accessed. Note that following the 'current active' instance being closed, the current instance will not be set.
- Save Changes : Flag : True to save the instance's workbooks before closing; False to just close the instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-255" y="-150" w="390" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b394cfde-b1ec-4f16-b977-d1e1ffd337be" name="Start" type="Start"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." stage="handle" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." stage="savechanges" /></inputs><onsuccess>b06ec4ea-540a-4321-a1f9-a645f288eb9e</onsuccess></stage><stage stageid="5d9b206b-bf58-47fe-806b-c2d6807d911e" name="End" type="End"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9798ad3a-b44f-4102-a9d1-0861103be2d8" name="Open Instance" type="SubSheetInfo"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><narrative>Opens a currently running instance of Excel.
If there is no instance of Excel currently running, this will create a new one.

Params:
- WorkbookName : Text : should correspond to the workbook which should be opened - an empty value will cause the first activated instance of Excel to be opened.

Returns:
- handle : Number : The numeric handle with which this instance can be identified</narrative><display x="-210" y="-195" w="270" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d071afd-6ab3-43d1-ac0e-1951c7598b19" name="Start" type="Start"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." stage="workbookname" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" stage="Enable Events" /></inputs><onsuccess>a08aa147-8eee-4f21-a683-142cb1680af6</onsuccess></stage><stage stageid="754832af-1144-48ff-8ab0-bb6c86d3f78e" name="End" type="End"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs></stage><stage stageid="6a0587c3-1640-4af9-9199-62382cc11cdb" name="Start" type="Start"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>c642c278-2fc8-4504-826c-25e0281a26af</onsuccess></stage><stage stageid="d337a2cf-1121-4619-a1b1-f7f19bea974e" name="End" type="End"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="c642c278-2fc8-4504-826c-25e0281a26af" name="Create Instance" type="Code"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>a13edde2-3883-4007-9719-92f0e1009ddd</onsuccess><code><![CDATA[
Dim excel as Object = CreateObject("Excel.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
excel.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(excel)]]></code></stage><stage stageid="56408aa5-2607-4026-bbb0-ee39b8c304be" name="handle" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb0ff5ea-0f21-4e70-a3b3-2eaf0baa3dc5" name="Set Current Instance" type="SubSheetInfo"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><narrative>Sets the "current active" instance to that specified.

Params:
- handle : Number : The handle of the instance that should be set as the current instance. The default of zero only has the effect of throwing an exception if no current instance is set, otherwise it's a no-op.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-135" w="330" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="773582ee-ed72-4483-9b24-9e4f66cf590e" name="Start" type="Start"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should be made the 'current' one. The default of zero indicates the current, er, 'current' one - ie. this action has no effect other than validating that there is a current instance." stage="handle" /></inputs><onsuccess>79986761-82ee-46d2-83d5-4e3375b886be</onsuccess></stage><stage stageid="b272722b-ab35-4a09-9082-3cc31a0999b5" name="End" type="End"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7897c32-9be3-483a-bca8-3fee7d1af8b5" name="handle" type="Data"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3866da9-69bc-4edc-9173-0f9d0013190a" name="handle" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7e31a12c-4578-4202-b034-a306f3ee679d" name="Close Instance" type="Code"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="savechanges" expr="[savechanges]" /></inputs><onsuccess>5d9b206b-bf58-47fe-806b-c2d6807d911e</onsuccess><code><![CDATA[
Try
CloseInstance(handle, savechanges)
Catch ex as Exception
MessageBox.Show(ex.ToString())
End Try]]></code></stage><stage stageid="eaefcb8d-64bd-4782-a39c-6ea00bb157b2" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><narrative>Checks if the handle given can be used to access a valid instance.

This means that the handle is a non-zero value which represents a handle, or it is zero and a 'current instance' is set (current instance is set every time an instance is created or accessed using GetInstance() - it may be set to Nothing if an instance is closed).

- handle is the handle to check that it represents a valid instance

Exceptions:
- Bad Handle : If the given handle doesn't represent an instance</narrative><display x="-300" y="-120" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19668af6-5fa9-48b7-9f6e-e2caf5795b69" name="Start" type="Start"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /></inputs><onsuccess>34b692da-278c-4018-96ec-a9d03f696b43</onsuccess></stage><stage stageid="a4c8054c-d063-42e0-8063-c8972459baa3" name="End" type="End"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b06ec4ea-540a-4321-a1f9-a645f288eb9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7e31a12c-4578-4202-b034-a306f3ee679d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="34b692da-278c-4018-96ec-a9d03f696b43" name="Check Handle" type="Code"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="1468c19b-a6a0-44e0-b096-5f325448f3fb" name="handle" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52d17605-ad90-4a36-aa9d-47e5418dba04" name="HandleMissing" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7383095-97e9-4fa8-90e0-ad186e9df285" name="Is Handle Missing?" type="Decision"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>8b5e76e6-a81e-4377-b161-1bef1ff3d753</ontrue><onfalse>a4c8054c-d063-42e0-8063-c8972459baa3</onfalse></stage><stage stageid="8b5e76e6-a81e-4377-b161-1bef1ff3d753" name="Bad Instance Handle" type="Exception"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="79986761-82ee-46d2-83d5-4e3375b886be" name="CheckInstanceHandle" type="SubSheet"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b272722b-ab35-4a09-9082-3cc31a0999b5</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2db56ca3-8def-419f-a3e3-ac8408915c69" name="Open Named Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="WorkbookName" expr="[workbookname]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(WorkbookName,"Excel.Application"))]]></code></stage><stage stageid="6e2accad-a08b-4b28-9551-f44a9a291607" name="handle" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8e6a89-2552-4e75-9d44-72240a365783" name="workbookname" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a08aa147-8eee-4f21-a683-142cb1680af6" name="Is WorkbookName empty?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([workbookname])=&quot;&quot;" /><ontrue>aaa7ff33-69b5-4636-8766-e0556ee48bec</ontrue><onfalse>2db56ca3-8def-419f-a3e3-ac8408915c69</onfalse></stage><stage stageid="aaa7ff33-69b5-4636-8766-e0556ee48bec" name="Open Arbitrary Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(,"Excel.Application"))]]></code></stage><stage stageid="fba0fa7c-4ed5-4652-b4ae-08770f5f3867" name="No Open Instances" type="Recover"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>59ebf811-1faf-4486-8630-6d2de19027f5</onsuccess></stage><stage stageid="df0b2b99-8c10-4cf4-9d2d-c3ccf515c960" name="Carry On, Bertram" type="Resume"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7fb1ba2f-64f1-417b-9b97-479efb954a9d</onsuccess></stage><stage stageid="a6205e66-5e1f-4360-86a2-8f1325751c3c" name="Create Instance" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="True" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>df0b2b99-8c10-4cf4-9d2d-c3ccf515c960</onsuccess><processid>99e648cc-a136-471c-8424-19071c0fd9e7</processid></stage><stage stageid="852ff62f-6d2b-4031-b675-ec155fd88908" name="CheckInstanceHandle" type="SubSheet"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-300" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>232e4bda-508e-44c7-8adb-315ce0fab8af</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="59ebf811-1faf-4486-8630-6d2de19027f5" name="CheckType" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="ExceptionType()=&quot;Internal&quot;" /><ontrue>a6205e66-5e1f-4360-86a2-8f1325751c3c</ontrue><onfalse>567674ba-270a-4107-ada5-1dae59125522</onfalse></stage><stage stageid="567674ba-270a-4107-ada5-1dae59125522" name="RethrowException" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="555" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9e0df7e0-ab34-4a97-9f69-db66c88ff5f4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41c51e08-6c3e-4cbc-bc30-31936476aa7d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="4a034863-88fc-4111-a656-18471e002741" name="workbookname" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-240" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="366f8bd4-fafd-47cc-98a3-0afb7d697fe9" name="ActivateWorkbook" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()
'GetWorkbook(handle,name).RefreshAll()]]></code></stage><stage stageid="e74de56c-16cf-4cd7-8ecf-fabdf05e7311" name="handle" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e45f2d66-35c1-40fd-a729-754cfabbb5ab" name="SaveWorkbook" type="Code"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>4c75715c-7a4a-491b-804f-261ee86fcd95</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application
excel.DisplayAlerts = False
wb.Save()
excel.DisplayAlerts = True
]]></code></stage><stage stageid="8ba3f3c5-2585-44db-9393-a681e9ff1111" name="workbookname" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc9d285-c937-4336-89b3-aa7acf379075" name="Start" type="Start"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." stage="filename" /></inputs><onsuccess>7fa4c0ab-6c38-4a55-915a-48e7ce529979</onsuccess></stage><stage stageid="a6943793-fb0e-491c-bdc1-ccf04ee31e6d" name="workbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b526d9f-c7bd-4190-8c33-a6f5ad7982fa" name="SaveWorkbookAs" type="Code"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="text" name="newworkbookname" stage="workbookname" /></outputs><onsuccess>b4f79caf-dea6-4a9a-95f0-0c05bea8b485</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application

excel.DisplayAlerts = False
wb.SaveAs(filename)
excel.DisplayAlerts = True

newworkbookname = wb.Name]]></code></stage><stage stageid="a7fd5308-fe75-448e-99ad-e104521ee580" name="CheckInstanceAndWorkbook" type="SubSheetInfo"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Checks the instance and workbook values, throwing an exception if they are invalid.

Params:
- instance : Number : The integer value representing an Excel instance. The default value of zero represents the last activated instance.
- Workbook Name : Text : The name of the workbook on the instance to check. An empty string represents the 'active' workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-240" y="-150" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d69e69ce-7251-40e1-b779-c9951ee36cbb" name="Start" type="Start"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" stage="handle" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" stage="workbookname" /></inputs><onsuccess>16e7e153-e022-4c0b-9af2-ac69b52f855a</onsuccess></stage><stage stageid="bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d" name="End" type="End"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="16e7e153-e022-4c0b-9af2-ac69b52f855a" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>d4997ba5-8e1f-4585-a093-376eb725f14d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118" name="Workbook Found?" type="Decision"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[workbookfound]" /><ontrue>bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d</ontrue><onfalse>62e3710c-2e7e-4507-a49b-0009b3585ba3</onfalse></stage><stage stageid="62e3710c-2e7e-4507-a49b-0009b3585ba3" name="Workbook Not Found" type="Exception"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Thrown when a workbook name was not found</narrative><display x="195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Workbook Not Found" detail="&quot;Workbook named: &quot; &amp; [workbookname] &amp; &quot; not found in instance: &quot; &amp; [handle]" /></stage><stage stageid="c3051222-78b2-48d6-9813-d71f854c5e81" name="handle" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6bcb687a-3390-4a83-8690-fba44345b1a8" name="workbookname" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba694738-8f03-4a1c-a7b1-d946dc55c028" name="workbookfound" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d4997ba5-8e1f-4585-a093-376eb725f14d" name="CheckWorkbook" type="Code"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="workbookfound" stage="workbookfound" /></outputs><onsuccess>b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118</onsuccess><code><![CDATA[
Try
	GetWorkbook(handle,workbookname)
	workbookfound = True
Catch ex as Exception
	If ex.Message.IndexOf("DISP_E_BADINDEX")<>-1 Then
		workbookfound = False
	Else
		Throw ex
	End If
End Try]]></code></stage><stage stageid="ab6f627b-d630-4bdd-b840-7aac26b5806f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e45f2d66-35c1-40fd-a729-754cfabbb5ab</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="7fa4c0ab-6c38-4a55-915a-48e7ce529979" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>8b526d9f-c7bd-4190-8c33-a6f5ad7982fa</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="d52e7a12-1a97-4bcf-9014-5a4ad93aa054" name="Close Workbook" type="Code"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>5f23862f-bb67-4712-ade2-d8d62befeb7b</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,name)
Dim app as Object = wb.Application

app.DisplayAlerts = False
wb.Close(False)
app.DisplayAlerts = True]]></code></stage><stage stageid="3a83f920-ccd5-4dc3-95ee-4c5a195c5191" name="handle" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7b233620-de4e-40ff-9a99-af09b1574d08" name="workbookname" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85080efc-4429-45d0-9248-dfcceaa60a27" name="Start" type="Start"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." stage="workbookname" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." stage="savedata" /></inputs><onsuccess>52c31124-7463-40b9-8d24-9ffebe12e167</onsuccess></stage><stage stageid="b481dbd1-022d-42b5-a2bc-5bfbbc233772" name="savedata" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="52c31124-7463-40b9-8d24-9ffebe12e167" name="Save Data?" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[savedata]" /><ontrue>16f6c60c-721b-44be-9e97-b5b518e0f360</ontrue><onfalse>68e0d10e-5b8a-4ccb-a42b-67192ce2ede1</onfalse></stage><stage stageid="16f6c60c-721b-44be-9e97-b5b518e0f360" name="Save Workbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /></inputs><onsuccess>cf877504-31ed-4e77-b72f-b00469c37fc7</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="68e0d10e-5b8a-4ccb-a42b-67192ce2ede1" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="cf877504-31ed-4e77-b72f-b00469c37fc7" name="anchor1" type="Anchor"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess></stage><stage stageid="cdb03710-27a7-4412-964a-73e4b9bd1a07" name="noteybenny" type="Note"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Note: CheckInstanceAndWorkbook is done as part of SaveWorkbook, so no need to do it again</narrative><display x="15" y="60" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f39e78b7-d81a-43de-af4f-ea3ce7a918a2" name="handle" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f02e77b-3ca1-40a7-a64b-35fdad519172" name="workbookname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6344b53e-9777-411e-bab1-aee5633bbc7d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>366f8bd4-fafd-47cc-98a3-0afb7d697fe9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="ba48be23-80aa-4b44-beef-dbc6a7fb5901" name="VerifyFileExists" type="SubSheetInfo"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><narrative>Checks if the given file exists.

Params:
- File name : Text : Path to the file to check

Exceptions:
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-210" y="-120" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c6df86d-8ca7-4778-adeb-2c570998768f" name="Start" type="Start"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" narrative="The filename to check to ensure it exists." stage="filename" /></inputs><onsuccess>e28c5aa8-d587-4390-843e-b97c32c2cdb8</onsuccess></stage><stage stageid="d465101e-fa27-4434-8413-515e331d1389" name="End" type="End"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8d315224-d32b-4a85-aae0-3ee4d3b98c9c" name="filename" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86877e71-923f-4480-9b41-a5a7f4dc60a5" name="fileexists" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e28c5aa8-d587-4390-843e-b97c32c2cdb8" name="File Exists?" type="Code"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>d43bfe27-76d7-4542-b7ad-ba696468713e</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="d43bfe27-76d7-4542-b7ad-ba696468713e" name="Does File Exist?" type="Decision"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[fileexists]" /><ontrue>d465101e-fa27-4434-8413-515e331d1389</ontrue><onfalse>11a4a0e7-8810-493b-9409-df70ca4dc5b2</onfalse></stage><stage stageid="11a4a0e7-8810-493b-9409-df70ca4dc5b2" name="File Not Found" type="Exception"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="135" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="41c51e08-6c3e-4cbc-bc30-31936476aa7d" name="VerifyFileExists" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>f308d1c5-88b0-455a-bff7-8163c95d1eab</onsuccess><processid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</processid></stage><stage stageid="60533ca6-ea95-4425-b684-87e7517782aa" name="Start" type="Start"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>b5d5c5b0-1e3b-438b-b988-6058174ec5ba</onsuccess></stage><stage stageid="63d363e1-c78b-4332-815c-06f9d6f7a7df" name="OpenWorksheet" type="Code"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>3a854b87-0e5a-46dd-8181-a58f97555aa8</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
sheetexists = ws IsNot Nothing 
If sheetexists then ws.Activate()]]></code></stage><stage stageid="b5d5c5b0-1e3b-438b-b988-6058174ec5ba" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>63d363e1-c78b-4332-815c-06f9d6f7a7df</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="1dccafb3-fd07-4362-b343-e87c1a67e83e" name="worksheetname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b35d569-0eb2-4c01-bb88-e5f7c41bde81" name="End" type="End"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fab4ac4b-d2f7-4f1c-a0c3-d6dd0cd01f9b" name="handle" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="60f1e726-ab7f-437a-8bda-36148238d510" name="workbookname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13ac609e-b9ca-4a72-907c-d7656496f5ab" name="Start" type="Start"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be deleted resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet to be deleted. The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet to be deleted. The default empty value indicates the currently active worksheet." stage="worksheetname" /></inputs><onsuccess>5346c305-4024-4d1d-8806-c1b20f16c10d</onsuccess></stage><stage stageid="982dd82e-af43-49cb-a4b1-58da1ccfeb33" name="Delete Worksheet" type="Code"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="flag" name="sheetexisted" stage="sheetexisted" /></outputs><onsuccess>56c2259b-9d71-4364-bede-79b4af1e3e96</onsuccess><code><![CDATA[
Dim Inst As Object = GetInstance(handle)
Inst.DisplayAlerts = False

Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,False)
sheetexisted = ws IsNot Nothing
If sheetexisted Then ws.Delete()

Inst.DisplayAlerts = True]]></code></stage><stage stageid="5346c305-4024-4d1d-8806-c1b20f16c10d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>982dd82e-af43-49cb-a4b1-58da1ccfeb33</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="6ca6d1da-9270-43f8-89d4-c0ece0a353cb" name="worksheetname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae9d880b-4f92-4620-94e8-36d06f4e2181" name="Start" type="Start"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>9a734ecf-7e58-4aa4-b7ff-5aa4494ec687</onsuccess></stage><stage stageid="ca24190a-a9cb-4c37-b5d2-78bcd838ef40" name="End" type="End"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="value" /></outputs></stage><stage stageid="b659eb08-bf67-463a-a8cc-556b152d8032" name="cellref" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257d1cf8-2a6f-47d2-88ee-1d0a125cb27d" name="value" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a04a5ea1-798c-4659-ac77-0c966c305cba" name="Get Cell Value" type="Code"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>ca24190a-a9cb-4c37-b5d2-78bcd838ef40</onsuccess><code><![CDATA[
	Dim cellVal as String = GetInstance(handle).ActiveCell.Value
	value = IIf(cellVal Is Nothing, "", cellVal)]]></code></stage><stage stageid="39135f99-dd54-4a2b-bff2-555714753a6d" name="Go To Cell" type="SubSheet"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="c533ffd2-866d-4944-82be-7e6a6ede4c9a" name="handle" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3fe8fb5-4290-4e6e-8d8f-780f47e78d27" name="workbookname" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7dc88f-16d6-41f8-a4f1-4ca8921bf024" name="Get Worksheet As Collection" type="SubSheetInfo"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The first row will be treated as the column names and will be used as the column names in the generated collection.

Params:
- handle : Number : The integer identifying the instance in which the worksheet resides. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook on which the sheet resides. Default ("") indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet which is required as a collection. Default ("") indicates the active sheet within the workbook.

Output:
Data - Collection - The data from the worksheet.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the specified worksheet does not exist on the specified workbook.</narrative><display x="-285" y="-195" w="420" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf5b0880-2cac-4221-946a-e4e3d7f0bc99" name="End" type="End"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="c42e68de-468d-4aac-bcd2-283b9f578565" name="handle" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ed8d683e-8efe-426c-8be6-85136cbdf337" name="workbookname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14362f26-4336-4848-adf6-2e710eb2a69d" name="Start" type="Start"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /></inputs><onsuccess>23c90658-57ef-456a-92fa-970b0161d0f8</onsuccess></stage><stage stageid="36a8c859-cf71-4b54-b7ed-317997b94589" name="GetWorksheetAsCollection" type="Code"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>b6d0da26-0322-4b43-b1d5-304466ff29fb</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname, False)

	' Do we have a sheet?
	sheetexists = ws IsNot Nothing
	' No sheet? No entry.
	If Not sheetexists Then Return

	ws.Activate()
	ws.UsedRange.Select()
	ws.UsedRange.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="23c90658-57ef-456a-92fa-970b0161d0f8" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>36a8c859-cf71-4b54-b7ed-317997b94589</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="51a0a405-79a5-4a53-9a36-a40b08481389" name="worksheetname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4c01041-da7a-4cd3-9990-a0a236064fa5" name="worksheetcollection" type="Collection"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9b8dd3a0-045b-4019-b977-8716d12d92c6" name="workbookname" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="-210" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ba94499-d376-4a0b-9486-f4bced0a6a23" name="Close All Instances" type="SubSheetInfo"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><narrative>Closes all instances of excel which have been opened by this business object, either through "Create Instance" or "Open Instance" and which have not been discarded through "Close Instance" or "Release Instance"</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e8745127-ee68-4c60-8b52-0b68e91835bf" name="Start" type="Start"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8f8060c8-cea7-41c9-93c1-b181ca345fa9</onsuccess></stage><stage stageid="85215f92-002d-4d9c-8fe7-652c149d0206" name="End" type="End"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8f8060c8-cea7-41c9-93c1-b181ca345fa9" name="CloseAllInstances" type="Code"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>85215f92-002d-4d9c-8fe7-652c149d0206</onsuccess><code><![CDATA[
Dim clone as Dictionary(Of Integer,Object) = _
	new Dictionary(Of Integer,Object)(HandleMap)

For Each Handle As Integer In clone.Keys
	CloseInstance(Handle,False)
Next]]></code></stage><stage stageid="15437c28-7f56-4c1b-b98a-769b875b9d57" name="Find Next Empty Cell" type="SubSheetInfo"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><narrative>Searches for the next empty cell in the direction given.
This can either activate that cell before returning, or just return the cell reference while leaving the active cell as it was.

Params:
- handle : Number : The integer handle identifying the Excel instance to use. The default of zero indicates the 'current' instance.
- Direction : Text : The direction in which to go, this should start with "U", "D", "L" or "R" (not case-sensitive) - the rest of the string is ignored, so you can use "Up", "DOWN" "left" and, indeed, "r"
- Activate Cell? : Flag : True to activate the found cell, False to just return the reference. Default is False.

Returns:
- Cell Reference : Text : The cell ID which represents the next empty cell in the required direction. This will be blank if no empty cell was found in the given direction.

Exceptions:
Invalid Direction Parameter : If the given direction parameter was invalid - ie. did not start with one of the (case-insensitive) letters "U", "D", "L" or "R".</narrative><display x="-300" y="-195" w="450" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3707693-ef57-453a-b8b2-16e8d8aee39f" name="Start" type="Start"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." stage="direction" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." stage="activatecell" /></inputs><onsuccess>ea536eb5-62b7-4b15-b0b9-0c5415414692</onsuccess></stage><stage stageid="65e26d12-b37e-4df9-a00b-07340967e5b2" name="End" type="End"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs></stage><stage stageid="2d159e37-f93b-42db-b8a7-3ea3e5300c76" name="direction" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3a1953-80c7-4d24-92fe-1e6823202956" name="cellref" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea536eb5-62b7-4b15-b0b9-0c5415414692" name="Direction Valid?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><narrative>Direction must start with one of the following:
- U : Indicates 'up'
- D : Indicates 'down'
- L : Indicates 'left'
- R : Indicates 'right'
Any other value (including empty text) is invalid</narrative><display x="-15" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([direction]))&gt;0 AND InStr(&quot;UDLR&quot;,Upper(Left(Trim([direction]),1)))&lt;&gt;0" /><ontrue>e8cca858-4b46-40a0-81fc-3112398c4a42</ontrue><onfalse>382555c6-554f-465d-bbac-43e5b0ec06ed</onfalse></stage><stage stageid="382555c6-554f-465d-bbac-43e5b0ec06ed" name="Invalid Direction Parameter" type="Exception"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="150" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Direction Parameter" detail="&quot;Direction: '&quot; &amp; [direction] &amp; &quot;' is invalid - it must start with 'U', 'D', 'L' or 'R' (up, down, left or right)&quot;" /></stage><stage stageid="e8cca858-4b46-40a0-81fc-3112398c4a42" name="FindEmptyCell" type="Code"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="direction" expr="[direction]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>a47f3c07-957d-4909-bc43-4c56e5f58ae6</onsuccess><code><![CDATA[
' The initial char of the direction (capitalised)
Dim strDir as String = direction.Trim().Substring(0,1).ToUpper()

' The excel instance
Dim excel as Object = GetInstance(handle)

' The excel enum representing the direction
' Note: setting to zero is just to nix a duff compiler warning
Dim dirn as Integer = 0

' xlDirection enum values from: 
' http://msdn.microsoft.com/en-us/library/bb241212.aspx

' Get the direction we need to go
Select Case strDir
	Case "U"
		dirn = -4162 ' Excel.XlDirection.xlToUp
	Case "D"
		dirn = -4121 ' Excel.XlDirection.xlToDown
	Case "L"
		dirn = -4159 ' Excel.XlDirection.xlToLeft
	Case "R"
		dirn = -4161 ' Excel.XlDirection.xlToRight
	Case Else
		Throw New ArgumentException("Invalid Direction: " & strDir)
End Select

Dim cell as Object = excel.ActiveCell

While True

	' First check the next one along - if that's blank then we're away..
	Dim nextCell as Object = GetNextCell(cell, strDir)

	' If the cell address is the same on moving - that indicates we're
	' at a limit (eg. 1st column going left, last row going down etc.)
	' Just return empty to indicate that there are no blank cells in
	' that direction.
	If cell.Address = nextCell.Address Then
		cellref = ""
		Return
	ElseIf nextCell.Value = Nothing Then ' We've found our blank
		cellref = nextCell.Address(False,False)
		Return
	End If
	
	cell = nextCell
	
	' Quick way (rather than plodding from one cell to the next)
	' is to effectively press the 'End' key - but this is highly
	' inconsistent in what it returns.
	' Go to the 'end' of the range - ie. the last filled cell
	' cell = cell.End(dirn)
	' Now we need to go one beyond, ie. to the next cell
	' cell = GetNextCell(cell, strDir)

End While
]]></code></stage><stage stageid="facf151b-ee72-46d1-b528-a921e6945048" name="handle" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c507994e-eb49-43c1-bf77-9bf7cf88e0e6" name="Get Formatted Cell Value" type="SubSheetInfo"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><narrative>Gets the formatted value of the desired cell. This will apply any formatting which is in place in the specified cell before outputting the value.</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c0ed8b3d-fb86-442b-959e-a601d2d5f84f" name="Start" type="Start"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance within which the cell is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose value is required. Note that a side-effect of this action is that the specified cell will become the active cell on the specified instance. An empty value indicates the currently active cell." stage="cellref" /></inputs><onsuccess>29427d7f-a2d9-4b65-b6c4-773881bd285d</onsuccess></stage><stage stageid="722e3ab7-97b7-4cd6-886e-53bf4ac022ec" name="End" type="End"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The formatted value at the given cell reference." stage="value" /></outputs></stage><stage stageid="1260d770-e90c-4ea2-9e64-e3442c7de787" name="cellref" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6618eccc-3c6e-4660-997c-5f9142e71dc8" name="value" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94dc11fe-505e-4544-a26b-80d3d88d0951" name="Get Cell Text" type="Code"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>722e3ab7-97b7-4cd6-886e-53bf4ac022ec</onsuccess><code><![CDATA[
	value = GetInstance(handle).ActiveCell.Text]]></code></stage><stage stageid="3e695c2e-2110-4655-ba2e-31a41f453383" name="handle" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d9fc29b1-af47-4caf-882b-d9fc56955a8b" name="Split Worksheet" type="SubSheetInfo"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><narrative>Splits the specified worksheet into separate workbooks, creating a new sheet on each one and copying a subset of rows across to it.

Params:
- handle : Number : The integer representing the Excel instance - 0 represents the 'active' excel instance.
- Rows per sheet : Number : The number of rows which should be copied into each separate workbook.
- Workbook Name : Text : The name of the workbook from which the sheet should be split. "" indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet from which the data should be split. "" indicates the active worksheet on the instance.
- Path : Text : The directory in which the resultant workbooks should be saved.
- No Title Row : Flag : True to indicate that the first row should *not* be used as a title row and copied across each of the generated workbooks.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- File Not Found : If the given path did not exist or was not a directory</narrative><display x="-240" y="-180" w="510" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6" name="End" type="End"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="052dc2d6-2989-49fb-9dbd-d4db6e106c98" name="Start" type="Start"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows per worksheet" narrative="The number of rows which should appear in each worksheet. Zero indicates all rows." stage="rowspersheet" /><input type="text" name="Workbook Name" narrative="The name of the workbook within the specified instance which contains the sheet to be split. The default empty text indicates the currently active workbook within the specified instance should be used." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook to split - The default empty value indicates that the currently active sheet within the workbook should be used." stage="worksheetname" /><input type="flag" name="No Title Row" narrative="True to indicate that the rows should just be split across without using the first row as a title row (ie. as a list of column headers). False to indicate that the first row contains the column headers which should be replicated across all generated sheets." stage="notitle" /><input type="text" name="Path" narrative="The path to the directory in which the generated workbooks should be created. The files will be created with a name of &quot;{Workbook Name}_SECTION_nnnn&quot;, where nnnn is an number incrementing with each section generated." stage="path" /></inputs><onsuccess>ee1e1e11-a16a-4060-9ea0-0848320dfbaf</onsuccess></stage><stage stageid="3200e67b-1f79-4672-9828-e9e4438f565b" name="handle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="177b7483-8cfb-41a7-8644-e4fdc19ecf2a" name="rowspersheet" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd48b9ea-dee0-4b1a-a9bb-7c84a64fa132" name="workbookname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f865844-bba2-4377-8b24-5d089cbfb8c4" name="worksheetname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1e1e11-a16a-4060-9ea0-0848320dfbaf" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>359dbb2d-d57f-48c1-9c7f-1d22ef094036</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="359dbb2d-d57f-48c1-9c7f-1d22ef094036" name="Split Worksheet" type="Code"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="number" name="rowspersheet" expr="[rowspersheet]" /><input type="flag" name="notitle" expr="[notitle]" /><input type="text" name="path" expr="[path]" /></inputs><outputs><output type="flag" name="filefound" stage="filefound" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>5cb56c9a-aa29-4ed4-84e1-9a65976ba50f</onsuccess><code><![CDATA[Dim sheet as Object = GetWorksheet(handle,workbookname,worksheetname,False)

sheetexists = sheet IsNot Nothing
If Not sheetexists Then Return

Dim book as Object = sheet.Parent
Dim excel as Object = sheet.Application

Dim prefix as String = book.Name
If prefix.ToLower().EndsWith(".xls") Then
	prefix = prefix.Substring(0,prefix.Length - 4)
End If

If Not path.EndsWith("\") Then
	path += "\"
End If

filefound = Directory.Exists(path)
If Not filefound Then ' Might as well quit now 
	Return
End If

Dim lastCell as Object = sheet.Cells.Find("*", , , , , 2)			 'Excel.XlSearchDirection.xlPrevious=2
'loop through the worksheet in blocks of Numblines lines

' Force overwrites if the excel book already exists.
excel.DisplayAlerts = False ' Hide alerts

Dim loopCount as Integer = 0
For row as Integer = 1 To lastCell.Row-1 Step rowspersheet ' -1 to cope with total-rows = rowspersheet
	loopCount = loopCount + 1
	Dim newbook as Object = excel.Workbooks.Add
	If notitle Then
		'copy each block into the new worksheet
		sheet.Range(sheet.Cells(row, 1), sheet.Cells(loopCount * rowspersheet, sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
	Else
		'in here - so there must be a title row that needs copying to all the new worksheets
		If row = 1 Then
			'copy row 1-201 into new worksheet (including title row at #1)
			sheet.Range(sheet.Cells(row, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
		Else
			'copy title row into new worksheet
			sheet.Range(sheet.Cells(1, 1),sheet.Cells(1,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
			'next copy row iloop+1 to iloop+NumbLines into new worksheet (i.e. 202-401)
			sheet.Range(sheet.Cells(row + 1, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A2"))
		End If
	End If
	'close and save the new workbook
	newbook.Close(True, path & prefix & "_SECTION_" & (loopCount+1000).ToString().Substring(1) & ".xls")
Next]]></code></stage><stage stageid="cfd178fc-26e5-4e7c-b9f3-cb49ea4de27e" name="notitle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee6017-400e-44c3-8b07-611d7318fecf" name="path" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dec5f88-d7e5-4ad4-be54-8744dc5cac54" name="filefound" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859597f9-d048-46a3-bf99-2f3f6588c2c5" name="Was file found?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[filefound]" /><ontrue>aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6</ontrue><onfalse>6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733</onfalse></stage><stage stageid="6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733" name="No Such Directory" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;Directory : &quot; &amp; [path] &amp; &quot; does not exist or is not a directory&quot;" /></stage><stage stageid="e9c5ba22-79d3-4bd7-ae8f-3b36c06dd51e" name="Get Number Of Rows" type="SubSheetInfo"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><narrative>Actually, I've no idea whatsoever what this does.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="555b5c2d-9106-444b-9c96-f1ff4699a988" name="End" type="End"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Number of rows" narrative="The number of rows." stage="rowcount" /></outputs></stage><stage stageid="1c4aa0dc-e628-424b-8df8-eaf16dbd668d" name="Start" type="Start"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the number of rows is required. The default empty text value indicates the currently active sheet on the specified workbook." stage="worksheetname" /></inputs><onsuccess>35173317-eeae-482b-8a2a-ea46406fcb4f</onsuccess></stage><stage stageid="35173317-eeae-482b-8a2a-ea46406fcb4f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>aa3ba555-86e5-42ae-bdb5-b614c46bdaf9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="aa3ba555-86e5-42ae-bdb5-b614c46bdaf9" name="Count Rows" type="Code"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="number" name="rowcount" stage="rowcount" /></outputs><onsuccess>555b5c2d-9106-444b-9c96-f1ff4699a988</onsuccess><code><![CDATA[
' enum - Excel.XlSearchDirection.xlPrevious=2
rowcount = GetWorksheet(handle,workbookname,worksheetname).Cells.Find("*", , , , , 2).Row]]></code></stage><stage stageid="fbf7b5e7-f86b-48f0-8d2a-8658bcabfe72" name="handle" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ae17d409-d655-459f-a6fe-1c4ed04c7023" name="workbookname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f2032a3-62ce-48a2-b098-ed275a569931" name="worksheetname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac9321b0-2209-4f44-bd1e-3876c05fc35f" name="rowcount" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1bb96d7-94f9-4570-85a9-f1bcff4f31ae" name="Is Read Only" type="SubSheetInfo"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><narrative>Checks if the given workbook is read only or not.

Params:
- handle : Number : The integer identifying the excel instance to check. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook to be checked. Default ("") indicates the active workbook on the given instance.

Output:
Read Only? : Flag : True to indicate that the workbook is read only; False to indicate that it is writable.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-300" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bb6cb4de-9a8f-424e-82d8-52d766ab5da5" name="Start" type="Start"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be checked resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook to test to see if it is read-only or not." stage="workbookname" /></inputs><onsuccess>91487aa9-0d65-4895-940d-c4fed2212eec</onsuccess></stage><stage stageid="1e8fe949-d784-437f-a724-b5003709f18c" name="End" type="End"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Read Only?" narrative="True to indicate that the specified workbook is read-only; False to indicate that it can be written to." stage="isreadonly" /></outputs></stage><stage stageid="cfa1438f-ab60-4810-a5b5-ede71fc7b700" name="handle" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="da3c5815-0a1f-4d3d-af8a-09e5f8a1d262" name="workbookname" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91487aa9-0d65-4895-940d-c4fed2212eec" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e412638c-10ff-49e6-ae71-6b5c86f40ddb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b7057d73-acb5-4298-a652-5f91898d67d6" name="isreadonly" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e412638c-10ff-49e6-ae71-6b5c86f40ddb" name="Check Read Only" type="Code"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="isreadonly" stage="isreadonly" /></outputs><onsuccess>1e8fe949-d784-437f-a724-b5003709f18c</onsuccess><code><![CDATA[
isreadonly = GetWorkbook(handle,workbookname).ReadOnly]]></code></stage><stage stageid="fedc107e-577b-47d9-a445-c3a3e66ef516" name="Close All Instances" type="SubSheet"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba</onsuccess><processid>feb8ce9f-299e-4152-85a1-354a5f9d995c</processid></stage><stage stageid="f6285d0d-f7fe-4987-96cf-4d0e27180f81" name="Show" type="SubSheetInfo"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><narrative>Shows a window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to show. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-105" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="865342da-5035-45ef-9902-c74ba855f521" name="Start" type="Start"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>6562ae8e-f16f-4f89-8787-7884cc6a57db</onsuccess></stage><stage stageid="565f4f77-b276-4735-9c18-000ce13946a7" name="End" type="End"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6562ae8e-f16f-4f89-8787-7884cc6a57db" name="CheckInstanceHandle" type="SubSheet"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7785ca63-e0a8-40c6-940b-0d9e73944b25</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="97a05e5a-864b-4413-8623-d939827e5c39" name="Hide" type="SubSheetInfo"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><narrative>Hides the window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to hide. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-120" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7785ca63-e0a8-40c6-940b-0d9e73944b25" name="ShowInstance" type="Code"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>565f4f77-b276-4735-9c18-000ce13946a7</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="f65b17c8-19fe-4381-9b68-8909f6aa312d" name="handle" type="Data"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="11f4ca85-d053-4b2e-a46d-705fe87040c0" name="Start" type="Start"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window hidden. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>ebc908b3-4501-4500-9648-a35ebbabddda</onsuccess></stage><stage stageid="6106570f-43e1-4a42-9f67-c8f2522a910c" name="End" type="End"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ebc908b3-4501-4500-9648-a35ebbabddda" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>1cc2d38f-3783-42f7-8b75-78243c367fb3</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="1cc2d38f-3783-42f7-8b75-78243c367fb3" name="HideInstance" type="Code"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>6106570f-43e1-4a42-9f67-c8f2522a910c</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="11e05865-7edb-4526-b015-b4b5f725fbc4" name="handle" type="Data"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2e480365-7061-4a6c-81ea-380e5bd06ef7" name="Save Current Workbook As" type="SubSheetInfo"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><narrative>Save the current workbook using the given file name. This is the equivalent of calling the 'Save Workbook As' action with the default values for 'handle' (0) and 'Workbook Name' ("")

Params :
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.</narrative><display x="-285" y="-150" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7e1a622f-6438-41c8-9b86-e0d93c8267cb" name="Start" type="Start"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The full path and file name to which the current workbook should be saved." stage="filename" /></inputs><onsuccess>ec111fc5-c308-4507-8b78-8fa3a8cfa136</onsuccess></stage><stage stageid="acb62e2e-bb38-4f8b-8ceb-61ec851d8986" name="End" type="End"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="newworkbookname" /></outputs></stage><stage stageid="c5eee5f9-2db2-4efb-8f47-46e98073dedb" name="filename" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec111fc5-c308-4507-8b78-8fa3a8cfa136" name="Save Workbook As" type="SubSheet"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Filename" expr="[filename]" /></inputs><outputs><output type="text" name="New Workbook Name" stage="newworkbookname" /></outputs><onsuccess>acb62e2e-bb38-4f8b-8ceb-61ec851d8986</onsuccess><processid>21a53e34-8128-41cb-ad73-17250758ff23</processid></stage><stage stageid="09b432b9-8774-440c-8468-a5effa8bfe98" name="Exit" type="SubSheetInfo"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><narrative>Here for backward compatibility - exits the current instance of Excel without saving any changes.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4f9b1c2f-8b07-4ff1-95bc-12d1de8ec1a8" name="Start" type="Start"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc97b188-f45e-46f4-a66e-f592917cabb1</onsuccess></stage><stage stageid="c6c7615b-e18b-42aa-9e83-88884e01e23b" name="End" type="End"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fc97b188-f45e-46f4-a66e-f592917cabb1" name="Close Instance" type="SubSheet"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="flag" name="Save Changes" expr="False" /></inputs><onsuccess>c6c7615b-e18b-42aa-9e83-88884e01e23b</onsuccess><processid>6ec3006a-6553-4526-b522-32526c4aa3cc</processid></stage><stage stageid="f441e8a4-9990-4a87-a011-cb9f6c56a3f3" name="Save Current Workbook" type="SubSheetInfo"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><narrative>Saves the current workbook using the workbook name as the file name.
This is the equivalent of calling the Save Workbook action with the default values for 'handle' (0) and 'Workbook Name' ("")

Exceptions: 
- Bad Handle : If there is no active instance.
- Workbook Not Found : If there is no active workbook on the instance.</narrative><display x="-270" y="-90" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ed1db4c8-9563-4f9f-9606-a26b934a1db5" name="Start" type="Start"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0d75fe69-c13e-4536-a444-0f915cb6844a</onsuccess></stage><stage stageid="097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e" name="End" type="End"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d75fe69-c13e-4536-a444-0f915cb6844a" name="Save Workbook" type="SubSheet"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /></inputs><onsuccess>097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="4e15b86d-9a5b-40ce-babe-c9fb02cf8764" name="createifmissing" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dabb4d29-516f-442c-b2da-32cc45ae4df3" name="Get Worksheet As Collection (Fast)" type="SubSheetInfo"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><narrative>Here for back-compatability. Should be considered deprecated and calls should be replaced by "Get Worksheet As Collection", but right now this gets the active worksheet on the active workbook in the current instance of Excel into a collection. It is the equivalent of calling GetWorksheet As Collection with all the default input values.

Output:
Data : Collection : The active sheet's data in a collection.</narrative><display x="-300" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c9ce0be6-6a88-4147-aeb3-e8974bb74970" name="Start" type="Start"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a3308402-1446-47b9-9e40-cc105a30db14</onsuccess></stage><stage stageid="aa04eeb6-e87c-4392-b7d2-52e4eb0b28af" name="End" type="End"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="98e74d10-88b7-40dd-b771-0a137c8d0665" name="worksheetcollection" type="Collection"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><display x="-210" y="-15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a3308402-1446-47b9-9e40-cc105a30db14" name="Get Worksheet As Collection" type="SubSheet"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Worksheet Name" expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs><onsuccess>aa04eeb6-e87c-4392-b7d2-52e4eb0b28af</onsuccess><processid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</processid></stage><stage stageid="078c6299-d93e-41b7-9a05-e26f0436b301" name="Format Cell" type="SubSheetInfo"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><narrative>Sets the number format at the given cell to that specified.
Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="584cad36-fa91-4f11-83b7-4829f89f9a35" name="Start" type="Start"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." stage="cellref" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>6ed5e96a-3604-426e-b112-0be4f4f4b9a8</onsuccess></stage><stage stageid="59f040b8-35ab-48a1-8321-ab6d321172f4" name="cellref" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1867e11e-a153-4421-9512-848674ac9bea" name="format" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f19aada3-d5b7-49ca-8f65-824a0be6abea" name="handle" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bc1c92c3-d8fd-4e00-86eb-cf22a3331a93" name="Format Current Cell" type="SubSheetInfo"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><narrative>Sets a cell format for the currently active cell.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fea1a9b-6cad-487c-a1d4-0b7a31c0b1e6" name="Start" type="Start"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>a8dd2eb1-5144-4f87-b5fc-87dc562df875</onsuccess></stage><stage stageid="936f31ef-fa8e-4960-aa8a-1653cc6d7de2" name="Get Active Cell" type="SubSheetInfo"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><narrative>Gets a reference to the currently active cell on the given instance.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4a8f71f-cdb8-4091-99f6-f127fb3ec48d" name="Start" type="Start"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>0f68d429-d637-41bc-ab1c-3890e4e57da6</onsuccess></stage><stage stageid="de4f91e6-efde-42cd-9efa-700811c74c15" name="End" type="End"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs></stage><stage stageid="3251089f-0682-4cd7-84d1-78fd6a3f68db" name="handle" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a88df339-9204-419b-9dd7-4553548f1dff" name="cellref" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f68d429-d637-41bc-ab1c-3890e4e57da6" name="CheckInstanceHandle" type="SubSheet"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>0749822c-e521-461c-a3cc-23f5a695980b</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="0749822c-e521-461c-a3cc-23f5a695980b" name="GetActiveCell" type="Code"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>de4f91e6-efde-42cd-9efa-700811c74c15</onsuccess><code><![CDATA[
cellref = GetInstance(handle).ActiveCell.Address(False,False)]]></code></stage><stage stageid="035e5e46-b65c-4bb5-8684-b433aa67ec7b" name="activatecell" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a47f3c07-957d-4909-bc43-4c56e5f58ae6" name="Activate Cell?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[activatecell]" /><ontrue>e17eb74e-6764-4980-a96c-dd500de13181</ontrue><onfalse>65e26d12-b37e-4df9-a00b-07340967e5b2</onfalse></stage><stage stageid="e17eb74e-6764-4980-a96c-dd500de13181" name="Go To Cell" type="SubSheet"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>23c196fc-bba5-4cc0-8e36-c8d6db96e360</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="23c196fc-bba5-4cc0-8e36-c8d6db96e360" name="anchor2" type="Anchor"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>65e26d12-b37e-4df9-a00b-07340967e5b2</onsuccess></stage><stage stageid="5c445c44-609a-45b3-8c4a-ff4a670213df" name="Go To Next Empty Cell Left" type="SubSheetInfo"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><narrative>Activates the next empty cell that can be found on the left of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="75944053-c0d7-42b9-9231-b173e13066f5" name="Start" type="Start"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>10b0cef9-77af-42e0-b42e-6fc1870587a4</onsuccess></stage><stage stageid="63d50db2-a5f9-48a9-ae16-9a801712b53c" name="End" type="End"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="10b0cef9-77af-42e0-b42e-6fc1870587a4" name="Find Next Empty Cell" type="SubSheet"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;L&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>63d50db2-a5f9-48a9-ae16-9a801712b53c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="f6b88b10-a188-436b-830e-b7eaf783495c" name="handle" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6b1312d6-de01-4272-b3cd-765b4835a9f2" name="cellref" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ffa60dc-058f-4edc-9140-a43050494dee" name="Go To Next Empty Cell Right" type="SubSheetInfo"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><narrative>Activates the next empty cell that can be found on the right of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78bf9f71-b3ba-4ef3-8142-08be21698287" name="Go To Next Empty Cell Up" type="SubSheetInfo"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><narrative>Activates the next empty cell that can be found above the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0a069347-2e66-4668-ab57-b59e6536c5d0" name="Go To Next Empty Cell Down" type="SubSheetInfo"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><narrative>Activates the next empty cell that can be found below the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3b21101-6815-4f78-b7af-06f0a73a4070" name="Start" type="Start"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>782731b8-b7fb-4bec-8b35-b0438a5d8cec</onsuccess></stage><stage stageid="650fc617-bcbd-4d39-b835-748d94773ec6" name="End" type="End"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="782731b8-b7fb-4bec-8b35-b0438a5d8cec" name="Find Next Empty Cell" type="SubSheet"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;R&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>650fc617-bcbd-4d39-b835-748d94773ec6</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="56afae5f-81d8-4fdc-b521-cb4b99fac5c3" name="handle" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="347d2c28-0ea0-4ed0-95ce-14e5925f7193" name="cellref" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4636685a-21dc-420d-ae4b-e435f9861298" name="Start" type="Start"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>c01227ef-86b5-48c4-8cbc-6db80b1df2c6</onsuccess></stage><stage stageid="c7e480b2-caf7-430d-b419-49c70c452c4f" name="End" type="End"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="c01227ef-86b5-48c4-8cbc-6db80b1df2c6" name="Find Next Empty Cell" type="SubSheet"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;U&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>c7e480b2-caf7-430d-b419-49c70c452c4f</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="2d6e7e4e-d6f5-45b7-b4ae-33658d6d38fd" name="handle" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="287aee08-8696-49f9-b659-244e88067d0a" name="cellref" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4791458d-f683-4adf-ad1c-1591b3d2fab2" name="Start" type="Start"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>072dae62-8d0d-4522-904c-6d253988874d</onsuccess></stage><stage stageid="b90c78f9-6a37-4db4-b30f-ac96d30c730c" name="End" type="End"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="072dae62-8d0d-4522-904c-6d253988874d" name="Find Next Empty Cell" type="SubSheet"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;D&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>b90c78f9-6a37-4db4-b30f-ac96d30c730c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="c9e817ca-81d1-4d65-b9d1-27fe80445871" name="handle" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f9a80c2-fd03-43e2-a333-5f2c6b7ad0e2" name="cellref" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="febdcc05-5a8a-4445-a188-d0259dfd21a5" name="handle" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3" name="End" type="End"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="111cd676-ae8c-4b83-9bb1-5567fe0735bd" name="FormatCell" type="Code"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="format" expr="[format]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3</onsuccess><code><![CDATA[
GetWorkbook(handle,Nothing).ActiveSheet.Range(cellref,cellref).NumberFormat = format]]></code></stage><stage stageid="6ed5e96a-3604-426e-b112-0be4f4f4b9a8" name="Activate Workbook" type="SubSheet"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>111cd676-ae8c-4b83-9bb1-5567fe0735bd</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="a8dd2eb1-5144-4f87-b5fc-87dc562df875" name="Get Active Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs><onsuccess>22a903ea-24b0-4f4b-ad3d-590aa6ab3d97</onsuccess><processid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</processid></stage><stage stageid="8480e1e0-5e73-4bec-bc84-ab2b4a5f43fa" name="cellref" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22a903ea-24b0-4f4b-ad3d-590aa6ab3d97" name="Format Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." expr="[cellref]" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" expr="[format]" /></inputs><onsuccess>2776814b-74bd-42b3-b282-80a156b933cd</onsuccess><processid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</processid></stage><stage stageid="dc6c799a-7fa3-4623-9bf8-e966d530b67d" name="format" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2776814b-74bd-42b3-b282-80a156b933cd" name="End3" type="End"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04fbbbb0-aba9-4518-8bc7-d26273986f9e" name="Set Window Size" type="SubSheetInfo"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><narrative>Sets the window size of the specified instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7a197c45-c253-4fb8-bed5-e01508e93824" name="Start" type="Start"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle specifying the instance on which the bounds should be changed." stage="handle" /><input type="number" name="Width" narrative="The width to which the instance's window should be set" stage="width" /><input type="number" name="Height" narrative="The height to which the instance's window should be set." stage="height" /></inputs><onsuccess>3d73ff94-84e6-4e12-947e-76d14884579c</onsuccess></stage><stage stageid="a952606a-38e1-4585-821a-7395c94d70cb" name="End" type="End"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4c82574-5577-49e8-80a8-79a27ace5ffb" name="Set Window Location" type="SubSheetInfo"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><narrative>Moves the specified instance's window to the required location.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="67ee4120-06af-41a6-ae0a-629e1bd3bd05" name="Start" type="Start"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window location should be set." stage="handle" /><input type="number" name="X" narrative="The x co-ordinate to which the window should be moved." stage="x" /><input type="number" name="Y" narrative="The y co-ordinate to which the window should be moved." stage="y" /></inputs><onsuccess>3f663a38-1c01-438f-a02a-aa56ded74764</onsuccess></stage><stage stageid="5b24c512-8930-4c34-9083-7834083ab65c" name="End" type="End"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="129fe5f1-311c-4b58-964f-74b62d5f17ad" name="Set Window State" type="SubSheetInfo"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><narrative>Minimizes / maximizes / restores the window attached to the specified excel instance.

Exceptions:
Invalid Input Parameter : If the given state was not "normal" and did not start with either "min" or "max"</narrative><display x="-240" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="44e95a42-ad61-4e8d-af8a-aed037662ba8" name="Go To Next Cell" type="SubSheetInfo"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><narrative>Moves a specified number of rows and columns from the currently active cell and returns the new cell reference.
If the resultant cell reference is the same as the active cell before this action was called, this action has 'failed'. This is usually because the active cell is too close to a boundary.</narrative><display x="-330" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a87664dd-017d-4b12-b9c3-7230d7910326" name="Start" type="Start"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows" narrative="The number of rows to navigate down. A negative value indicates that the action should navigate UP the required number of rows." stage="rows" /><input type="number" name="Columns" narrative="The number of columns to navigate to the right. A negative value indicates that the action should navigate to the left." stage="cols" /></inputs><onsuccess>fdbdccce-2959-40cb-b4b4-d53556dd97a1</onsuccess></stage><stage stageid="dcae25b1-7e8b-4ee2-9ffc-11aacd935154" name="Close Current Workbook" type="SubSheetInfo"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><narrative>Closes the current workbook on the current excel instance.
This is the equivalent of calling the 'Close Workbook' action with the default values for 'handle' (0) and 'Workbook Name' ("")</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8fccb8ba-397f-406d-a6cd-85cb3c09ba17" name="Start" type="Start"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5</onsuccess></stage><stage stageid="160a79e4-be77-47f7-b8f2-271a170a762f" name="End" type="End"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5" name="Close Workbook" type="SubSheet"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="flag" name="Save Data" expr="False" /></inputs><onsuccess>160a79e4-be77-47f7-b8f2-271a170a762f</onsuccess><processid>6ccaae8b-c06f-45c8-8772-835218881458</processid></stage><stage stageid="a9a3eac3-7c04-4983-9224-bbf490c75af1" name="handle" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="00fbd16c-c443-4d2e-ae2a-4539f816c297" name="rows" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fa354e6-61e2-452d-b0c4-208150e9076d" name="cols" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50344da8-13a3-4d20-899b-bfd3b5507681" name="End" type="End"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the currently active cell after navigating the required number of rows / columns. If the action could not navigate the desired number of rows / columns (eg. the active cell is near a boundary), then the active cell will not have been change, and this cell reference will represent the same cell that was active before this action was initiated." stage="cellref" /></outputs></stage><stage stageid="30a3c6c6-5324-4fe2-a0b2-3026f1a5e379" name="GoToNextCell" type="Code"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="cols" expr="[cols]" /><input type="number" name="rows" expr="[rows]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>50344da8-13a3-4d20-899b-bfd3b5507681</onsuccess><code><![CDATA[
Dim Instance As Object = GetInstance(handle)

If Instance.ActiveCell Is Nothing Then
	Dim wb As Object = Instance.ActiveWorkBook 
	If wb IsNot Nothing Then
		Dim ws As Object = wb.ActiveSheet
		If ws IsNot Nothing Then
			ws.Range(1,1).Activate()
		Else
			Throw New Exception("There is no active worksheet")
		End If
	Else
		Throw New Exception("There is no active workbook")
	End If
Else
	Try
		Instance.ActiveCell.Offset(rows,cols).Activate()
	Catch ex As Exception
	End Try
End If
cellref = Instance.ActiveCell.Address(False,False)
]]></code></stage><stage stageid="fdbdccce-2959-40cb-b4b4-d53556dd97a1" name="Activate Workbook" type="SubSheet"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>30a3c6c6-5324-4fe2-a0b2-3026f1a5e379</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="5742c4d1-0b40-4dd9-8cf0-e66b9adeab4b" name="handle" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="437bf59c-d85b-45c9-8828-2e2c665afd10" name="cellref" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="105" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc5149d8-0c99-413a-81c8-ba9efc719cdc" name="handle" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a87fd94f-f26f-4c2e-bb67-1ae4c0bed939" name="width" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59a65ce5-cfb1-4190-8449-e4fb5ced121a" name="height" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d73ff94-84e6-4e12-947e-76d14884579c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>82380eea-db5c-47b3-9a94-2e19338cca95</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="82380eea-db5c-47b3-9a94-2e19338cca95" name="SetWindowSize" type="Code"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="height" expr="[height]" /><input type="number" name="width" expr="[width]" /></inputs><onsuccess>a952606a-38e1-4585-821a-7395c94d70cb</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Width = width
excel.Height = height]]></code></stage><stage stageid="8acfecd0-d6d9-4de0-ae9e-46922ed73111" name="x" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68bc93f-161f-4d6f-825d-2d961690ca56" name="y" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="079ee65b-a90b-4ab6-81b5-801557c07fbf" name="handle" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3f663a38-1c01-438f-a02a-aa56ded74764" name="CheckInstanceHandle" type="SubSheet"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>12d30538-38bf-4f9b-a180-41d0b836854c</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="12d30538-38bf-4f9b-a180-41d0b836854c" name="SetWindowLocation" type="Code"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="x" expr="[x]" /><input type="number" name="y" expr="[y]" /></inputs><onsuccess>5b24c512-8930-4c34-9083-7834083ab65c</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Left = x
excel.Top = y]]></code></stage><stage stageid="016d76a7-6a95-485e-84f5-faa85a0c0712" name="Start" type="Start"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window state should be set." stage="handle" /><input type="text" name="State" narrative="The state of the window which is required. Should start with &quot;min&quot; (to minimize the window), &quot;max&quot; (to maximise the window) or it should equal &quot;normal&quot; (to restore the window). Anything else will result in an error." stage="state" /></inputs><onsuccess>0f8fc913-9174-4304-823f-d18ffae7217a</onsuccess></stage><stage stageid="ffe49fc1-13a2-4e84-a649-bd692ef7752a" name="End" type="End"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca7b06cd-e6e3-42e1-8980-cb429796aa3b" name="handle" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3db578f3-47a7-4150-9ccc-6f9a16dbe73f" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>458615b7-ea0b-4d96-9dce-87099d6e5950</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="458615b7-ea0b-4d96-9dce-87099d6e5950" name="SetWindowState" type="Code"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="state" expr="[state]" /></inputs><onsuccess>ffe49fc1-13a2-4e84-a649-bd692ef7752a</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

If state.ToLower().StartsWith("min") Then
	excel.WindowState = -4140
ElseIf state.ToLower().StartsWith("max") Then
	excel.WindowState = -4137
ElseIf state.ToLower() = "normal" Then
	excel.WindowState = -4143
End If]]></code></stage><stage stageid="4686174e-a845-4f2b-9a0a-70325a2df399" name="Valid State?" type="Decision"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><narrative>Checks if the given state is a valid value</narrative><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="StartsWith([state],&quot;max&quot;) or StartsWith([state],&quot;min&quot;) or [state]=&quot;normal&quot;" /><ontrue>3db578f3-47a7-4150-9ccc-6f9a16dbe73f</ontrue><onfalse>c0e54c49-a9fc-48c4-a54e-2b85581d4ba5</onfalse></stage><stage stageid="1537f595-55fc-4726-910a-1d5ef88bf7a4" name="state" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0e54c49-a9fc-48c4-a54e-2b85581d4ba5" name="Invalid State Exception" type="Exception"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="135" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Input Parameter" detail="&quot;Invalid Window State Parameter : &quot; &amp; [state] &amp; &quot; - must start with 'min', 'max' or equal 'normal'&quot;" /></stage><stage stageid="9d0e19ce-07b8-4074-a34c-6186bcd3ca77" name="newworkbookname" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04e9d703-4b1c-4196-b1ff-7bf68a12faae" name="newworkbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>The new workbook name assigned by Excel after saving the book</narrative><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ab01750-1bb3-4299-add0-8a1d08f6bf41" name="handle" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f778bc6c-8cdd-4e56-80b8-b7cdb1fd11ae" name="Release Instance" type="SubSheetInfo"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><narrative>Removes an instance from this business object *without* closing or quitting it - after running this action, the instance in question will not be accessible by this object unless it is re-attached to using 'Open Instance'.

Params:
- handle : Number : The handle of the instance to be released. The default of 0 indicates the currently active instance. Note that following the current instance being released, the current instance will not be set.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-135" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66fece2a-2c82-48bb-92fe-211ee6556a24" name="Start" type="Start"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be released. The default value of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1d0738a9-7841-446d-b3ed-1a4bafeccc1b</onsuccess></stage><stage stageid="dc556131-4dde-459f-9af8-8c854fcae760" name="End" type="End"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6da262c1-9a82-4bc8-9363-ede171f125e5" name="handle" type="Data"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><display x="-225" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1d0738a9-7841-446d-b3ed-1a4bafeccc1b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>2e67a2b9-10bf-4d4d-9bd9-db68edaf7662</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2e67a2b9-10bf-4d4d-9bd9-db68edaf7662" name="Release Instance" type="Code"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>dc556131-4dde-459f-9af8-8c854fcae760</onsuccess><code><![CDATA[
	Dim current as Object = CurrentInstance
	Dim inst as Object = GetInstance(handle) ' Careful - sets the 'current instance' to inst

	HandleMap.Remove(handle)
	InstanceMap.Remove(inst)

	If Object.ReferenceEquals(inst, current) Then
		CurrentInstance = Nothing
	Else
		CurrentInstance = current
	End If
]]></code></stage><stage stageid="0f04ef58-eacb-4204-ba2b-d073285c2be8" name="Note1" type="Note"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="150" y="-120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f0ee2a73-65b2-418e-8b77-6dc802046c5d" name="Attach" type="SubSheetInfo"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><narrative>Back-compatible link to 'Open Instance'. This opens the first running instance of Excel found and links to it in this object.

Returns:
- handle : Number : An integer with which the instance opened can be identified.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True</narrative><display x="-210" y="-120" w="240" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="92e3475b-ed7d-4ae1-940c-7eb554a7cea8" name="Start" type="Start"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>ba67509b-7301-4ce1-a467-e9970249b392</onsuccess></stage><stage stageid="c74db74c-8822-4391-8593-d9919e357a5b" name="End" type="End"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle which identifies the excel instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="f68ab231-3cbb-423e-84de-9103b9f971f4" name="handle" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba67509b-7301-4ce1-a467-e9970249b392" name="Open Instance" type="SubSheet"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="&quot;&quot;" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>c74db74c-8822-4391-8593-d9919e357a5b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="fa5aede4-db23-4781-8954-3baaf0fd0740" name="Attach to workbook" type="SubSheetInfo"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><narrative>Back compatible link to 'Open instance' - attaches to the excel instance containing the current workbook. Note that if the instance containing the workbook could not be found, a new instance will be created.

Params:
- File name : Text : The name of the file in the instance that should be opened.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
Returns:
- handle : Number : The integer that can be used to reference this instance later.</narrative><display x="-195" y="-135" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="431ac081-4d84-414a-80dd-cb137dd67a73" name="Start" type="Start"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="60" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File name" narrative="The name of the file which should be opened" stage="filename" /><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>4a719c51-85b9-4750-9593-bf0e3166edfc</onsuccess></stage><stage stageid="ba3c2775-b5ac-44a8-be6b-05befaea619b" name="End" type="End"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle indentifying the instance opened. This can be used in subsequent actions to identify the instance." stage="handle" /></outputs></stage><stage stageid="0283fb0e-8dda-4956-b434-ea1d6c99e063" name="handle" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a719c51-85b9-4750-9593-bf0e3166edfc" name="Open Instance" type="SubSheet"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="[filename]" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>ba3c2775-b5ac-44a8-be6b-05befaea619b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="c99c412d-dbb6-4a6a-a7e2-9834a74052d0" name="filename" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a734ecf-7e58-4aa4-b7ff-5aa4494ec687" name="cellref empty?" type="Decision"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>bed65abf-b1ad-4f7e-83be-c8a96e3ea162</ontrue><onfalse>39135f99-dd54-4a2b-bff2-555714753a6d</onfalse></stage><stage stageid="bed65abf-b1ad-4f7e-83be-c8a96e3ea162" name="anchor3" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b98f8e72-e995-42a4-b3f9-df0acf2a5944</onsuccess></stage><stage stageid="b98f8e72-e995-42a4-b3f9-df0acf2a5944" name="anchor4" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess></stage><stage stageid="250bb1db-ca8e-4edb-b9a4-52fa39261823" name="Go To Cell" type="SubSheet"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="29427d7f-a2d9-4b65-b6c4-773881bd285d" name="cellref empty?" type="Decision"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>e743b184-cb2f-43cb-83c1-b99654286d3d</ontrue><onfalse>250bb1db-ca8e-4edb-b9a4-52fa39261823</onfalse></stage><stage stageid="e743b184-cb2f-43cb-83c1-b99654286d3d" name="anchor3" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dea637ce-5933-4805-94a4-f2bbd9b99d0b</onsuccess></stage><stage stageid="dea637ce-5933-4805-94a4-f2bbd9b99d0b" name="anchor4" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess></stage><stage stageid="bcf597f1-97f7-449c-8865-ff8ca139dd6c" name="Get Active Cell Value" type="SubSheetInfo"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><narrative>Gets the value of the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b69207e1-2811-4150-a61f-4746ef8489d4" name="Start" type="Start"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell whose value is required resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>af8aab5e-4539-4acc-a5cc-1bd632282587</onsuccess></stage><stage stageid="73e8408e-ff97-4d9f-b0e0-5a0e844b731c" name="End" type="End"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value found at the specified cell." stage="Value" /></outputs></stage><stage stageid="af8aab5e-4539-4acc-a5cc-1bd632282587" name="Get Active Cell Value" type="SubSheet"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;&quot;" /></inputs><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>73e8408e-ff97-4d9f-b0e0-5a0e844b731c</onsuccess><processid>0e031661-2f5e-4cb2-949b-97babe59ff81</processid></stage><stage stageid="88d7196d-2443-4439-8261-6700e9673d0a" name="handle" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e4cdc61b-a1e1-461e-8d91-a98cd40a2c5a" name="Value" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69cd13bc-f818-4a5b-be64-b6fb7de62c61" name="Create Worksheet" type="SubSheetInfo"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><narrative>Creates a new worksheet in the specified workbook with the given name. If a sheet with the given name already exists, this will activate that sheet.

Params:
- handle : Number : The number identifying the instance required.
- Workbook Name : Text : The name of the workbook to add it to. An empty string (the default) indicates the active workbook in the instance.
- Worksheet Name : Text : The name of the worksheet that is required. Note that if the name matches a worksheet already in the workbook a new worksheet will not be created, but that worksheet will be activated.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a0c385f-fe76-4eb3-a36f-4936eb7ac84a" name="Start" type="Start"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /></inputs><onsuccess>89240340-492e-44ab-9fed-c64a6d3fffdf</onsuccess></stage><stage stageid="5d624e42-813e-467d-bda1-ebb3e410045c" name="End" type="End"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="89240340-492e-44ab-9fed-c64a6d3fffdf" name="Activate Worksheet" type="SubSheet"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /><input type="flag" name="Create If Missing?" expr="True" /><input type="text" name="Worksheet Name" expr="[worksheetname]" /></inputs><onsuccess>5d624e42-813e-467d-bda1-ebb3e410045c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="ab7509fd-0572-44d9-9050-b9c9907c49ac" name="handle" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="544db1ef-b84c-403c-b4ee-de2d660ec253" name="worksheetname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df17296d-4f63-46cf-bcd9-4acd7eefed34" name="workbookname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64089c9a-4a30-4db5-bf87-7ba017ba54e7" name="Write Collection" type="SubSheetInfo"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a1ab274b-c2fb-47c7-94f8-292590df5765" name="Start" type="Start"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>a3a318c6-e218-4e78-a818-1673f90541b3</onsuccess></stage><stage stageid="8819df51-0132-421d-baae-b24b5082f131" name="End" type="End"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="85afbd6d-2c6e-42f8-8e71-7858a8488167" name="handle" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc024959-b016-4b16-93a8-e230e4ab936d" name="collection" type="Collection"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71e25266-b464-4b47-b6a7-c8a70cff7514" name="worksheetname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5f2a253-bee4-4ee0-9d8c-ab780265b5db" name="workbookname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c5b0c8-0c25-4972-b9c8-6057e6841ce5" name="includecolnames" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3a318c6-e218-4e78-a818-1673f90541b3" name="Activate Worksheet" type="SubSheet"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>f2ebff4d-5325-45e8-945d-73006f5bd7ce</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="f2ebff4d-5325-45e8-945d-73006f5bd7ce" name="WriteColl" type="Code"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><onsuccess>8819df51-0132-421d-baae-b24b5082f131</onsuccess><code><![CDATA[	' Get to the cell
	Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname)
	Dim origin as Object = ws.Range(cellref,cellref)
	Dim cell as Object = origin

	Dim colInd as Integer = 0, rowInd as Integer = 0 ' Offsets from the origin cell
	
	' Deal with the column names first
	If includecolnames Then
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			cell.Value = col.ColumnName
			colInd += 1
		Next
		rowInd += 1
	End If
	
	' Now for the data itself
	For Each row as DataRow in collection.Rows
		colInd = 0
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			'MessageBox.Show("RowOffset:" & rowInd & "; ColOffset:" & colInd & "; cell: " & cell.Address(False,False))
			cell.Value = row(col)
			colInd += 1
		Next
		rowInd+=1
	Next]]></code></stage><stage stageid="fb353c57-7a8c-4ccb-9428-94761a643715" name="cellref" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add1def4-fc64-4534-bbb0-d3ac07611a85" name="anchor5" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>108c176a-92d1-4f50-b460-ac6a3f0dac25</onsuccess></stage><stage stageid="51d7d624-e8bf-42b7-afdd-8d090b584865" name="anchor6" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess></stage><stage stageid="4be7292e-9eb1-43f7-9e87-3ae906bd79ed" name="savechanges" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0f8fc913-9174-4304-823f-d18ffae7217a" name="state = Lower(state)" type="Calculation"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4686174e-a845-4f2b-9a0a-70325a2df399</onsuccess><calculation expression="Lower([state])" stage="state" /></stage><stage stageid="27e7ff80-4437-42a3-ba14-e499be5bc0e5" name="sheetexists" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-240" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a854b87-0e5a-46dd-8181-a58f97555aa8" name="Sheet Existed?" type="Decision"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>ddfe7f54-b5c2-410a-8a5d-3c2b52de9550</ontrue><onfalse>9bc52652-698b-46ca-ba0d-ebb170432963</onfalse></stage><stage stageid="9bc52652-698b-46ca-ba0d-ebb170432963" name="No Such Sheet" type="Exception"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b396c564-6c31-4c6f-be0a-0cc64f178a19" name="sheetexisted" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c2259b-9d71-4364-bede-79b4af1e3e96" name="Sheet Existed?" type="Decision"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexisted]" /><ontrue>6b35d569-0eb2-4c01-bb88-e5f7c41bde81</ontrue><onfalse>091e0364-11db-49d4-8e94-8f5f9396fa9c</onfalse></stage><stage stageid="091e0364-11db-49d4-8e94-8f5f9396fa9c" name="No Such Sheet" type="Exception"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="150" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b6d0da26-0322-4b43-b1d5-304466ff29fb" name="Sheet Exists?" type="Decision"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>cf5b0880-2cac-4221-946a-e4e3d7f0bc99</ontrue><onfalse>7e8fce63-9130-4c0f-baea-ea8be793c57d</onfalse></stage><stage stageid="7e8fce63-9130-4c0f-baea-ea8be793c57d" name="No Such Sheet" type="Exception"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="286f9733-2a26-4c00-a7ff-7ac289086919" name="sheetexists" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cb56c9a-aa29-4ed4-84e1-9a65976ba50f" name="Does sheet exist?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>859597f9-d048-46a3-bf99-2f3f6588c2c5</ontrue><onfalse>2b8672dd-8330-4c2d-a522-9f12c9e27ba2</onfalse></stage><stage stageid="2b8672dd-8330-4c2d-a522-9f12c9e27ba2" name="No Such Sheet" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="c50f1065-0989-47f5-aad4-c66396e462e0" name="sheetexists" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b64b13-62f8-4431-94c4-62b7ff1f1c2c" name="Get Worksheet as Collection Offset" type="SubSheetInfo"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="164e0a2b-6c31-48ce-8172-7fb4edd3dbb3" name="End" type="End"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs></stage><stage stageid="0b6697a7-4aa1-4ec1-86db-bc41f3ca9d5e" name="handle" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c25e33f-7af9-4998-8c1a-4029c0e2af9e" name="workbookname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee01090-4b0b-4e85-9643-1f3b40d182e2" name="Start" type="Start"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="Workbook Name" stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" stage="Start Cell" /><input type="flag" name="Use Header" stage="Use Header" /></inputs><onsuccess>8f50a819-e470-4c0e-97d5-08bd0f705682</onsuccess></stage><stage stageid="a755a822-d485-45ea-8d7d-426646b4aec0" name="GetWorksheetAsCollectionOffset" type="Code"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>164e0a2b-6c31-48ce-8172-7fb4edd3dbb3</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	ws.Activate()

	Dim cell as Object = ws.Range(Start_Cell)
	Dim r as Object = ws.UsedRange.Offset(cell.row-1,cell.column-1)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = Use_Header
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If Not Use_Header Then
				Dim i As Integer
				For Each field As String in fields
					i += 1
					table.Columns.Add("Field" & i)
				Next
			End If
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="8f50a819-e470-4c0e-97d5-08bd0f705682" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a755a822-d485-45ea-8d7d-426646b4aec0</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="f82cf955-6669-494b-b6a1-866974c7cc74" name="worksheetname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b329ff1-b62a-41eb-9503-6673f300eb68" name="worksheetcollection" type="Collection"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="225" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4b3c3e-515f-4ee7-9e70-5c76c0fb3044" name="Set Events Enabled" type="SubSheetInfo"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><narrative>Enables or disables the events on the specified excel instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb955f7e-320d-42d1-8dad-26b8f55d083b" name="Start" type="Start"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." stage="handle" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" stage="Enable Events" /></inputs><onsuccess>68483479-6865-4fd5-9a77-f4392c4ade9e</onsuccess></stage><stage stageid="3969dd45-fdea-4671-879e-461a56f312be" name="End" type="End"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="68483479-6865-4fd5-9a77-f4392c4ade9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>21682417-b503-44b4-92f2-a3c80b4fad14</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="45553fd7-b75b-4fee-8961-aff490d121b3" name="Enable Events" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21682417-b503-44b4-92f2-a3c80b4fad14" name="Enable Events" type="Code"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="enable" expr="[Enable Events]" /></inputs><onsuccess>3969dd45-fdea-4671-879e-461a56f312be</onsuccess><code><![CDATA[
GetInstance(handle).EnableEvents = enable]]></code></stage><stage stageid="3fd7c1fd-f40f-451d-885e-3f5e34c62b77" name="handle" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb99ca56-7dc9-4a0d-860e-651747237d8f" name="Enable Events" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="7fb1ba2f-64f1-417b-9b97-479efb954a9d" name="anchor8" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess></stage><stage stageid="108c176a-92d1-4f50-b460-ac6a3f0dac25" name="Enable/Disable Events" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>754832af-1144-48ff-8ab0-bb6c86d3f78e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="17b0edcc-4892-4e42-93c9-9438a160ed66" name="Enable Events" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e24f71a3-1760-49ce-bbcb-4750671f20ad" name="Enable Events" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9773e311-bcc9-4426-999e-7c586da425c5" name="Enable Events" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a13edde2-3883-4007-9719-92f0e1009ddd" name="Set Events Enabled" type="SubSheet"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>d337a2cf-1121-4619-a1b1-f7f19bea974e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="7c3abf99-a3ae-44c2-b834-ad050b20a0eb" name="Enable Events" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6c2fa22d-1876-46b7-92eb-cf8343d0911f" name="Set Events Enabled" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>18a306bf-d323-4c4e-83b5-4b226773161c</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="e13408b2-c348-4d32-9ca3-e878db7cd165" name="Start Cell" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614b5c49-3b88-427a-9513-c3048d8b716d" name="Get Worksheet Names" type="SubSheetInfo"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef85b34d-5145-4f90-96a4-0f1abc4c4889" name="End" type="End"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs></stage><stage stageid="7e4ae954-86d5-4183-88b2-d307fecfc6a9" name="Start" type="Start"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /></inputs><onsuccess>9bc4bc33-6a3a-43e0-86e0-7b209978508a</onsuccess></stage><stage stageid="9bc4bc33-6a3a-43e0-86e0-7b209978508a" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>bbd37070-c589-4f9c-8d03-11f2982c59f4</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="bbd37070-c589-4f9c-8d03-11f2982c59f4" name="Get Worksheets" type="Code"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" stage="Worksheet Names" /></outputs><onsuccess>ef85b34d-5145-4f90-96a4-0f1abc4c4889</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(Handle, WorkbookName)
Dim sheets as Object = wb.Sheets

Worksheet_Names = New DataTable()
Worksheet_Names.Columns.Add("Name", GetType(String))

If sheets IsNot Nothing Then
	For Each sheet as Object in sheets
		Worksheet_Names.Rows.Add(New Object() {sheet.Name})
	Next
End If]]></code></stage><stage stageid="cff86abf-c0f2-493d-942f-759ce2830ff8" name="handle" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d53720-b610-4e5c-bf49-94cbcaf29e20" name="workbookname" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd45f86-2f78-4a96-8e74-62414e4094e7" name="Worksheet Names" type="Collection"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="255" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9d637f02-8e13-4c65-a606-5756018a9e8c" name="Worksheet Exists" type="SubSheetInfo"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54725352-a686-4ebc-88d8-80fa81af39bc" name="End" type="End"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs></stage><stage stageid="4cd78f5f-29a7-4f71-ab51-5c93e2e50ba3" name="Start" type="Start"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet Name" /></inputs><onsuccess>b4bad8df-ac04-4c0f-88cf-21bd3dc6707a</onsuccess></stage><stage stageid="4126c650-c062-413d-b6b3-501c8743b400" name="handle" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a19213a7-dbb4-4a78-b929-7c0ec2f48fa7" name="workbookname" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4bad8df-ac04-4c0f-88cf-21bd3dc6707a" name="Get Worksheet Names" type="SubSheet"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs><onsuccess>3124d4f1-6d19-450e-8d71-01e6c2cac8d9</onsuccess><processid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</processid></stage><stage stageid="920cf97d-74a9-441c-9e2b-2c47c023ac33" name="Worksheet Names" type="Collection"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="255" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3124d4f1-6d19-450e-8d71-01e6c2cac8d9" name="For Each Name" type="LoopStart"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0e40b339-b952-445b-a957-6d2d0a1bdbac</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid><looptype>ForEach</looptype><loopdata>Worksheet Names</loopdata></stage><stage stageid="27d57e09-d2fa-496d-a5c6-d382be881ad1" name="Next" type="LoopEnd"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aea2b1ba-e24b-4929-a0be-bc2ad811f277</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid></stage><stage stageid="4198f8b9-1418-4bbc-a984-4049f1b78df6" name="Worksheet Name" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="180" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e40b339-b952-445b-a957-6d2d0a1bdbac" name="Matches?" type="Decision"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Name] = [Worksheet Names.Name]" /><ontrue>f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1</ontrue><onfalse>27d57e09-d2fa-496d-a5c6-d382be881ad1</onfalse></stage><stage stageid="f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1" name="Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="True" stage="Worksheet Exists" /></stage><stage stageid="f5a7d39b-3edc-4984-89dc-f88f02b5f747" name="Worksheet Exists" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aea2b1ba-e24b-4929-a0be-bc2ad811f277" name="Not Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="False" stage="Worksheet Exists" /></stage><stage stageid="a1d81278-4fd7-4ee6-a878-8ec4dcde4793" name="Get Worksheet Range As Collection" type="SubSheetInfo"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f2ee451-c914-4c38-8e19-4d3e3a519dfd" name="End" type="End"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The spreadsheet data from the specified range, as a collection" stage="worksheetcollection" /></outputs></stage><stage stageid="fa5759e6-b7e3-42d1-8297-90953ec4a343" name="handle" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="832f8dbf-c88e-4488-89ec-d0782439fc34" name="workbookname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7a36655-443b-482f-809b-eb738682ee98" name="Start" type="Start"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="text" name="EndCell" narrative="The end cell of the range of interest" stage="End Cell" /></inputs><onsuccess>c5ca2712-c200-4900-8f8e-70a9fffb3c2e</onsuccess></stage><stage stageid="680eac96-2bd0-4d02-a62b-ac7bf684dae9" name="GetWorksheetRangeAsCollection" type="Code"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>6f2ee451-c914-4c38-8e19-4d3e3a519dfd</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	Dim r as Object
	r = ws.Range(Start_Cell & ":" & End_Cell)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="c5ca2712-c200-4900-8f8e-70a9fffb3c2e" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[workbookname]" /></inputs><onsuccess>680eac96-2bd0-4d02-a62b-ac7bf684dae9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="706da482-84a4-4e78-a1ba-002f80123e3f" name="worksheetname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1ec36df-f335-48a9-a0f4-e3f39d6c987d" name="worksheetcollection" type="Collection"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8054b9c8-5245-4a77-a058-949faeec00a7" name="Start Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="210" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9f43b65-bd92-44fa-b0fe-cf798aaf49be" name="End Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="270" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40717bdb-980d-46a2-8ed8-4c3c283a98ff" name="Use Header" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a437a6b-8cfe-4bc1-a7d3-ca5a2e026477" name="Remove Blank Rows" type="SubSheetInfo"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><narrative>Removes blank rows in the active excel workbook. The entire row must consist of blank cells.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c883a67c-5093-45d2-82c8-680cf35c2c0e" name="Start" type="Start"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1e0e5735-5bc9-43dc-85c9-4e8735def67f</onsuccess></stage><stage stageid="7023c112-819d-4c9c-82f3-84ab84c9f560" name="End" type="End"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e0e5735-5bc9-43dc-85c9-4e8735def67f" name="Activate Workbook" type="SubSheet"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>4fa6c603-9d6a-4077-ba95-9d213394ee06</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="890b79a0-986e-4982-a010-99e17a8f7173" name="handle" type="Data"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4fa6c603-9d6a-4077-ba95-9d213394ee06" name="Delete blank rows" type="Code"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7023c112-819d-4c9c-82f3-84ab84c9f560</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet

Const xlCellTypeLastCell As Integer = 11 
Dim FirstRow As Integer = 1
Dim LastRow As Integer = worksheet.Cells.SpecialCells(xlCellTypeLastCell).Row

For i As Integer = LastRow To FirstRow Step -1
	If worksheet.Application.CountA(worksheet.Rows(i)) = 0 Then
		worksheet.Rows(i).Delete
	End If
Next]]></code></stage><stage stageid="7ea085b3-60ed-4690-9b58-044e3adac69b" name="Move Worksheet" type="SubSheetInfo"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="48fad533-06e9-41b7-b213-bfea2423c61c" name="Start" type="Start"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="number" name="Destination Position" stage="Destination Position" /><input type="flag" name="Copy" stage="Copy" /></inputs><onsuccess>b950e637-fb25-4932-b970-65e4ee21dd1d</onsuccess></stage><stage stageid="51274535-b09a-4b0b-a9bc-fff82557aa0a" name="Handle" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6336e057-ac6a-4b57-b789-906100be58cc" name="Source Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51bf5410-80ae-4517-8ee8-1ccf54a61e2f" name="Source Worksheet" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467b75ec-f03c-460e-a57d-d6852ab35293" name="Destination Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ad740a0-b0e5-483c-9247-2b766533c852" name="Source Worksheet Exists" type="SubSheet"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[Source Workbook]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" expr="[Source Worksheet]" /></inputs><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs><onsuccess>efca1a70-2f20-4dda-b071-825a986958a6</onsuccess><processid>eacc4634-9985-4a1d-9773-8f79928708ee</processid></stage><stage stageid="4702c382-1a44-441c-9cd1-83281efd10ff" name="Worksheet Exists" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efca1a70-2f20-4dda-b071-825a986958a6" name="Worksheet Exists?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Exists]" /><ontrue>e804939a-8a40-4803-89cd-b10e57a97583</ontrue><onfalse>5d46a63f-e90b-4432-8c62-52d2e2380065</onfalse></stage><stage stageid="e804939a-8a40-4803-89cd-b10e57a97583" name="Move Named Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="text" name="SourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess><code><![CDATA[Dim dBook, sSheet As Object
Dim p As Integer

Try

dBook = GetWorkbook(Handle, DestinationWorkbook)
sSheet = GetWorksheet(Handle, SourceWorkbook, SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(dBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="38d819d9-2dec-4ae8-afe3-76da44096935" name="End2" type="End"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb823085-c462-43b7-81d0-3ad7f1e026dd" name="Success" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81e05f5d-ac29-4885-b6cd-fd5a308fcc44" name="Message" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764ea205-800b-4ab5-adc1-273a46ad93b6" name="Success?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>38d819d9-2dec-4ae8-afe3-76da44096935</ontrue><onfalse>65eda7a6-ce00-4372-9fc9-26931328aba4</onfalse></stage><stage stageid="7b25db9b-d103-4ba0-a8a5-468a16e50dd7" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="345" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="87c0d87a-ef13-4eb7-8e10-085ab67dc0a0" name="Destination Position" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3e46008f-172e-42b3-b4b3-e7221f0ef6d8" name="Copy and Paste Worksheet Range" type="SubSheetInfo"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="979c420e-1748-448e-9334-e238c47503a1" name="Copy" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5d46a63f-e90b-4432-8c62-52d2e2380065" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Source worksheet not found&quot;" /></stage><stage stageid="b470a541-1a6d-4c08-936a-94d2c6c99aa8" name="Start" type="Start"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Source Range" stage="Source Range" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="text" name="Destination Worksheet" stage="Destination Worksheet" /><input type="text" name="Destination Range" stage="Destination Range" /></inputs><onsuccess>11afaed8-560c-4915-b3eb-04f45158a941</onsuccess></stage><stage stageid="b4598457-7e50-432e-ae29-7d081367e298" name="Source Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc6e0465-0f54-401c-964f-974f43802264" name="Source Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b0fe7d-0b86-4fd0-bcd9-6c80841ae464" name="Destination Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0366fbb1-1c68-4466-87cb-760d499b4cdd" name="Worksheet Exists" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11afaed8-560c-4915-b3eb-04f45158a941" name="Paste Worksheet" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
sheet.Paste()
cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="70304b7a-b551-4a52-b52d-924f11d328a7" name="End2" type="End"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61bc4bd1-c8ab-4fe3-993e-a7e30fcaf9ef" name="Success" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e558b45-ad3b-459a-978c-048e7f555c4a" name="Message" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8136ae2b-8fb0-4945-8016-b5b9eae4c2d2" name="Success?" type="Decision"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>70304b7a-b551-4a52-b52d-924f11d328a7</ontrue><onfalse>470e1a49-496c-497e-b59a-537f730059cb</onfalse></stage><stage stageid="470e1a49-496c-497e-b59a-537f730059cb" name="Exception" type="Exception"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="2a17d158-14b5-4cec-aa84-2b6789585973" name="Destination Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="124d4f6c-b7b5-4935-8d7a-71a253571261" name="Handle" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b950e637-fb25-4932-b970-65e4ee21dd1d" name="Source Worksheet Number?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="IsNumber([Source Worksheet])" /><ontrue>eba296d1-0f89-4c61-892c-b25b40f3f618</ontrue><onfalse>9ad740a0-b0e5-483c-9247-2b766533c852</onfalse></stage><stage stageid="8b56215b-b4e5-4a95-a49d-179871dd1d2b" name="Move Numbered Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="number" name="SourceWorksheet" expr="[Source Worksheet Number]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e9db38cf-4c64-49fa-a46b-f2dfa31dfe18</onsuccess><code><![CDATA[Dim sBook, dBook As Object
Dim sSheet As Object
Dim p As Integer

Try

sBook = GetWorkbook(Handle, SourceWorkbook)
dBook = GetWorkbook(Handle, DestinationWorkbook)

sSheet = sBook.Worksheets(SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(sBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sBook = Nothing
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="e9db38cf-4c64-49fa-a46b-f2dfa31dfe18" name="anchor7" type="Anchor"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="195" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess></stage><stage stageid="65eda7a6-ce00-4372-9fc9-26931328aba4" name="Copy?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="240" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Copy]" /><ontrue>7b25db9b-d103-4ba0-a8a5-468a16e50dd7</ontrue><onfalse>32d3772b-fe03-4a13-a415-62b4fdd5fa8f</onfalse></stage><stage stageid="32d3772b-fe03-4a13-a415-62b4fdd5fa8f" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to move worksheet: &quot; &amp; [Message]" /></stage><stage stageid="eba296d1-0f89-4c61-892c-b25b40f3f618" name="Source Workbook Number" type="Calculation"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8b56215b-b4e5-4a95-a49d-179871dd1d2b</onsuccess><calculation expression="[Source Worksheet]" stage="Source Worksheet Number" /></stage><stage stageid="2cc989f3-1c41-4289-98fb-383b0c88ed74" name="Source Worksheet Number" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09bbef8a-09b2-4a43-925d-b1a0b88e692b" name="Get Worksheet Position" type="SubSheetInfo"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4235fac3-2295-4511-828e-090e9c888d38" name="End" type="End"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" stage="Position" /></outputs></stage><stage stageid="46d026ab-934f-4e60-8d1f-68344ac1b103" name="Handle" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3d97151-6742-41e9-9b9a-08ce6b9700d1" name="Workbook" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ec78a25-f322-4161-8872-54815ffbc0f0" name="Worksheet" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccd25c1-379e-41cf-92fd-2d02ac1fc7ac" name="Start" type="Start"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>244c946c-e677-4da7-8d5a-de244ec07eea</onsuccess></stage><stage stageid="244c946c-e677-4da7-8d5a-de244ec07eea" name="Get Worksheet Position" type="Code"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Position" stage="Position" /></outputs><onsuccess>27d60ef1-833c-44f5-b5ab-0aefb2c0581c</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets
Position = ws(Worksheet).Index

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="f13a2dde-4da4-4811-a0dd-f3f0bb009354" name="Position" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32b13d14-acc8-406c-8d15-9ffdc7355c5d" name="Source Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa73a8e-f525-4d57-a0ff-9df54a1d2d63" name="Destination Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1da6ce-caa1-4a5c-b622-70602b8ad49e" name="Select" type="SubSheetInfo"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30e9f460-bd3e-4273-bb7c-77fedbfe445f" name="End" type="End"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a24031db-2c21-4624-9a0b-6643f3e75247" name="Handle" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9504d1-c2d1-49a6-a6f2-cf95da7eeb12" name="Workbook" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcba2fd7-c2e3-4661-a6c4-be512624d70c" name="Worksheet" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f78616ed-e974-46dd-ace5-c44a1b800c11" name="Start" type="Start"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Cell Reference" stage="Cell Reference" /></inputs><onsuccess>34677bae-38d3-4518-917f-c883f9c1677d</onsuccess></stage><stage stageid="92300230-c4b8-4530-9378-f98dfd556895" name="Cell Reference" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34677bae-38d3-4518-917f-c883f9c1677d" name="Select Cells" type="Code"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Reference" expr="[Cell Reference]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>2cb73eba-be13-4568-a11a-02f3a20b9dfe</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Reference)
range.Select()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	excel = Nothing
	sheet = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="2cb73eba-be13-4568-a11a-02f3a20b9dfe" name="Success?" type="Decision"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>30e9f460-bd3e-4273-bb7c-77fedbfe445f</ontrue><onfalse>7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4</onfalse></stage><stage stageid="7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4" name="Exception" type="Exception"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to select row: &quot; &amp; [Message]" /></stage><stage stageid="3e5f45b4-d1b1-4dc1-8be0-29a9b4a55c53" name="Success" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34efe5b1-fcdd-4221-a651-006b1110ebbd" name="Message" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8189dfa8-421a-45da-9d7c-26ac377bc514" name="Delete" type="SubSheetInfo"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a3f17004-6131-48f2-b0a8-e602f24b599e" name="End" type="End"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d0b1914-39fd-4e17-b7b4-55faafd45af7" name="Handle" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75588f1d-b4d2-4c8c-a51f-61c822a68abb" name="Workbook" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad8ce293-a3a3-43ca-9b8f-1d680fbdc03e" name="Start" type="Start"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>97daebd3-2794-4944-af67-9698bbaa77b3</onsuccess></stage><stage stageid="57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd" name="Delete Selection" type="Code"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>6f1da154-330d-490b-b615-df266c6767fa</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Delete(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="6f1da154-330d-490b-b615-df266c6767fa" name="Success?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>a3f17004-6131-48f2-b0a8-e602f24b599e</ontrue><onfalse>bb18bdc9-f544-4157-a6ba-e289c8f33c43</onfalse></stage><stage stageid="bb18bdc9-f544-4157-a6ba-e289c8f33c43" name="Exception" type="Exception"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="d0c4907b-2b85-424d-a6ef-8bcfb43d3f72" name="Success" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9dbebe22-4f86-499f-8f29-155baf2cc42d" name="Message" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2110b138-01f6-47af-befd-7a71637b5844" name="Shift" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97daebd3-2794-4944-af67-9698bbaa77b3" name="Shift Left?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>6e608312-7a91-4039-8f0a-90ccaac7d3cc</ontrue><onfalse>8a8e9a33-5eca-485a-adeb-e5a43592d6d4</onfalse></stage><stage stageid="6e608312-7a91-4039-8f0a-90ccaac7d3cc" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="4095b231-4d4f-4c98-b74d-6134fb63b9af" name="Shift Type" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8e9a33-5eca-485a-adeb-e5a43592d6d4" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage><stage stageid="27122991-d4c6-4811-a366-7fd47a11da5c" name="Copy" type="SubSheetInfo"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bba0e0d4-6894-469c-a9b8-1f07855dadc9" name="End" type="End"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="364a6306-d747-4c70-84ae-4128d8938fbc" name="Handle" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0139001-74d1-4ab8-a517-4329434df1e5" name="Workbook" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d750a5-2e0e-4aaa-951a-76aaf6b973da" name="Start" type="Start"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>d8005fde-9fe5-47f9-a980-e4beae15815a</onsuccess></stage><stage stageid="a8acd5cc-0955-4896-b87a-80091b060926" name="Success?" type="Decision"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bba0e0d4-6894-469c-a9b8-1f07855dadc9</ontrue><onfalse>6ceb186e-fea0-48a8-a72d-f104f83699c6</onfalse></stage><stage stageid="6ceb186e-fea0-48a8-a72d-f104f83699c6" name="Exception" type="Exception"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy selection: &quot; &amp; [Message]" /></stage><stage stageid="4f25dc7f-bd6f-495d-90e7-0d561dba2662" name="Success" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8da6c3-ceed-4a32-8e4d-473b53a57602" name="Message" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8005fde-9fe5-47f9-a980-e4beae15815a" name="Copy Selection" type="Code"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a8acd5cc-0955-4896-b87a-80091b060926</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Copy

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="044c591e-e63e-4f13-80b8-de4217a78b3b" name="Paste" type="SubSheetInfo"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ebf6405-9e3a-45f8-be9c-fdd70f254b34" name="End" type="End"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f23548e-a9f9-48c6-93c3-fbd8fa4f8d8d" name="Handle" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf7ad6-162d-4e2d-9a03-a6ebc54eb526" name="Workbook" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4b5681-cffa-432d-be94-08d4ddf16986" name="Start" type="Start"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="flag" name="Values Only" stage="Values Only" /></inputs><onsuccess>0d27a545-71b3-4a27-843b-8ed69b1648ce</onsuccess></stage><stage stageid="360c1bdb-1960-4486-ad05-8ec4485ef0ec" name="Success?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>1ebf6405-9e3a-45f8-be9c-fdd70f254b34</ontrue><onfalse>4830e942-edaf-4bd2-8922-9cffafc084ad</onfalse></stage><stage stageid="4830e942-edaf-4bd2-8922-9cffafc084ad" name="Exception" type="Exception"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to paste from clipboard: &quot; &amp; [Message]" /></stage><stage stageid="77b051c2-e570-49a3-8708-b42785a2517f" name="Success" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da93fc46-495b-4511-a724-a1cc7d70cffa" name="Message" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24bf06a1-fd8f-4cd3-bab6-e05552f8bdba" name="Paste Values1" type="Code"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Paste Option" expr="[Paste Option]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>360c1bdb-1960-4486-ad05-8ec4485ef0ec</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.PasteSpecial(Paste:=Paste_Option, Operation:=-4142, SkipBlanks:=False, Transpose:=False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
   range = Nothing
End Try]]></code></stage><stage stageid="ba04d5a5-b0f7-4979-af44-2f0fee5237f9" name="Write To Clipboard" type="SubSheetInfo"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1587c068-8225-4476-b636-9403f8acd84a" name="Start" type="Start"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" stage="Value" /></inputs><onsuccess>2279ba0c-3963-48f8-b813-4b0f53f47471</onsuccess></stage><stage stageid="a82e0657-86e9-4273-bd0f-2065d5f70254" name="End" type="End"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eda7181f-a720-4b63-9d69-86221881d965" name="Value" type="Data"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2279ba0c-3963-48f8-b813-4b0f53f47471" name="Write To Clipboard" type="Code"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" expr="[Value]" /></inputs><onsuccess>a82e0657-86e9-4273-bd0f-2065d5f70254</onsuccess><code><![CDATA[
My.Computer.Clipboard.Clear()
My.Computer.Clipboard.SetText(Value)]]></code></stage><stage stageid="79b62074-ec0d-49c6-a258-61823cc8a849" name="Values Only" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0d27a545-71b3-4a27-843b-8ed69b1648ce" name="Values Only?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Values Only]" /><ontrue>5bd5a242-a414-4d49-b093-0eb8d3978f8a</ontrue><onfalse>f98e8dcf-bff1-418a-9963-4878022c7391</onfalse></stage><stage stageid="f98e8dcf-bff1-418a-9963-4878022c7391" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4104" stage="Paste Option" /></stage><stage stageid="8e80a8c9-867f-46fa-ace9-d251af38eeed" name="Paste Option" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd5a242-a414-4d49-b093-0eb8d3978f8a" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4163" stage="Paste Option" /></stage><stage stageid="7f2dfa02-938c-4179-9e22-216057d33f43" name="Cut" type="SubSheetInfo"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2f20301-ebd9-4fbd-9b94-ca2074e69294" name="End" type="End"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d29233ea-0e94-44a4-864c-f32568e42c4b" name="Handle" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59232dab-20a4-4e84-8a43-e2016ef6a74c" name="Workbook" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6c212b-fd48-44cf-a931-8c99060d29cc" name="Start" type="Start"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>3dcf0167-85d1-4170-b214-86784cbcab65</onsuccess></stage><stage stageid="581ece97-ebdc-4855-8fdf-45290b4e587d" name="Success?" type="Decision"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>f2f20301-ebd9-4fbd-9b94-ca2074e69294</ontrue><onfalse>797b7b44-cd61-4d3c-8874-82e44868ea1b</onfalse></stage><stage stageid="797b7b44-cd61-4d3c-8874-82e44868ea1b" name="Exception" type="Exception"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to cut selection: &quot; &amp; [Message]" /></stage><stage stageid="3556655c-d270-4054-a989-b2f44854a7ba" name="Success" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9b9ba3-e800-4df7-bc87-db6b36f846c9" name="Message" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dcf0167-85d1-4170-b214-86784cbcab65" name="Cut Selection" type="Code"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>581ece97-ebdc-4855-8fdf-45290b4e587d</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Cut

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fc13a15a-74aa-47dc-af68-38bea19af981" name="Protect Workbook" type="SubSheetInfo"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0e32102b-7c0a-4f3e-9fe7-cc267fede407" name="Handle" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03b0377d-35e5-4a7d-b16c-756d690843ee" name="Workbook" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1610a1c-3532-4a88-8732-39cbfb4495f4" name="Start" type="Start"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="password" name="Password" stage="Password" /></inputs><onsuccess>e47e5f86-b7d0-409e-bf2a-6673cf28bac7</onsuccess></stage><stage stageid="de93c65e-11ae-4507-b8bf-da3f09910f82" name="Password" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e47e5f86-b7d0-409e-bf2a-6673cf28bac7" name="Protect Workbook" type="Code"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="password" name="Password" expr="[Password]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)
wb.Protect(Password, True, True)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="6a177cf9-5ec0-481d-84e9-c5d72177038d" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0cc70266-582a-410c-9c3a-29ff9dfb795e" name="Handle" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf25a3a-b4dd-4b80-8339-06b9d63e56e6" name="Workbook" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8889824-2e30-472c-bb9a-4daad82560f3" name="Worksheet" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d9d6921-9f68-4152-be57-8b0df6472eda" name="Start" type="Start"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>298fe33e-bd86-4109-8540-f1abe8d02eb8</onsuccess></stage><stage stageid="4a51d886-d307-4904-8ce4-98191c734a17" name="End" type="End"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0" name="Success?" type="Decision"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4a51d886-d307-4904-8ce4-98191c734a17</ontrue><onfalse>fbeb4a74-fc5f-431f-b150-15549afc2a22</onfalse></stage><stage stageid="fbeb4a74-fc5f-431f-b150-15549afc2a22" name="Exception" type="Exception"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protect workbook: &quot; &amp; [Message]" /></stage><stage stageid="298fe33e-bd86-4109-8540-f1abe8d02eb8" name="Hide Worksheet" type="Code"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>66ad2075-9b87-44be-9c6d-0a702d752f57</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook, Worksheet)
ws.Visible = False

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="c2e5c7e9-93a1-489e-a870-523042f050f1" name="End" type="End"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66ad2075-9b87-44be-9c6d-0a702d752f57" name="Success?" type="Decision"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c2e5c7e9-93a1-489e-a870-523042f050f1</ontrue><onfalse>7dca362f-2e45-443b-adc7-9075f02fc717</onfalse></stage><stage stageid="7dca362f-2e45-443b-adc7-9075f02fc717" name="Exception" type="Exception"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="c3b30035-3883-4740-9cf0-49e967ad6306" name="Success" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff6900f6-3524-4b24-be71-4d12c2d4c77e" name="Message" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cea8af9d-95ea-4c09-9932-adc8cc633db6" name="Success" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7888130-7082-4f05-8864-3f0709675831" name="Message" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b9509a6-dfc6-4f25-9474-dba6e8b7ed20" name="Hide Other Worksheets" type="SubSheetInfo"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a81bb6df-46b8-4641-8531-802be8934741" name="Handle" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f349c5cb-454b-448c-b225-5c474ae4e52d" name="Workbook" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="999117c1-6fa6-4172-9512-78106c277a38" name="Worksheet" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6444d8d9-7f26-4eb5-ab31-c98706e6209a" name="Start" type="Start"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>c5ca2626-02e2-4413-9476-9958c1b7b717</onsuccess></stage><stage stageid="c5ca2626-02e2-4413-9476-9958c1b7b717" name="Hide Other Worksheets" type="Code"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>36529e74-e353-4cbd-b6ff-3591c0390efd</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)

For Each ws As Object In wb.Worksheets
	ws.Visible = (ws.Name = Worksheet)
Next

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="52e20387-128e-4f5c-b182-7d28a9005a71" name="End" type="End"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36529e74-e353-4cbd-b6ff-3591c0390efd" name="Success?" type="Decision"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>52e20387-128e-4f5c-b182-7d28a9005a71</ontrue><onfalse>c5840684-3348-4ee6-a024-dda79500a851</onfalse></stage><stage stageid="c5840684-3348-4ee6-a024-dda79500a851" name="Exception" type="Exception"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to hide worksheets: &quot; &amp; [Message]" /></stage><stage stageid="089eef49-c020-4aea-929e-4d1ae4282215" name="Success" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370e2ccf-3010-44ea-9155-06babd5e856c" name="Message" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4996af5e-0cc1-4e24-aedf-20320350469e" name="Import CSV" type="SubSheetInfo"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4b14657-a0f4-4c85-9466-5146878dfbe7" name="Handle" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbfe7495-0fef-4c22-a251-88166b8485d4" name="Workbook" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c0e661b-9b74-4d25-9a8b-1da52f957ed2" name="Worksheet" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8df3e95e-4a03-4e0a-a649-37fb1d17ff41" name="Start" type="Start"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Destination Handle" stage="Handle" /><input type="text" name="Destination Workbook" stage="Workbook" /><input type="text" name="Destination Worksheet" stage="Worksheet" /><input type="text" name="Destination Range" stage="Range" /><input type="text" name="Source File Path" stage="Path" /><input type="text" name="Source Text Qualifier" stage="Qualifier" /></inputs><onsuccess>a09cfa98-b04d-472f-ad84-87e6a0bdb011</onsuccess></stage><stage stageid="7803cce6-3095-4d46-9cd2-793181eb080d" name="Import CSV" type="Code"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="Path" expr="[Path]" /><input type="number" name="Qualifier" expr="[Qualifier Code]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>91f84fae-ca36-4b8b-8221-bc3e95cd2ef3</onsuccess><code><![CDATA[Dim dw, ds, dr, qt As Object

Try

dw = GetWorkbook(Handle, Workbook)
ds = GetWorksheet(Handle, Workbook, Worksheet)
dr = ds.Range(Range)
qt = ds.QueryTables.Add(Connection:="TEXT;" & Path, Destination:=dr)

With qt
	.FieldNames = True
	.RowNumbers = False
	.FillAdjacentFormulas = False
	.PreserveFormatting = True
	.RefreshOnFileOpen = False
	.RefreshStyle = 1 'xlInsertDeleteCells
	.SavePassword = False
	.SaveData = True
	.AdjustColumnWidth = True
	.RefreshPeriod = 0
	.TextFilePromptOnRefresh = False
	.TextFilePlatform = 437
	.TextFileStartRow = 1
	.TextFileParseType = 1 'xlDelimited
	.TextFileTextQualifier = Qualifier
	.TextFileConsecutiveDelimiter = False
	.TextFileTabDelimiter = False
	.TextFileSemicolonDelimiter = False
	.TextFileCommaDelimiter = True
	.TextFileSpaceDelimiter = False
	.TextFileTrailingMinusNumbers = True
End With
qt.Refresh(False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dw = Nothing
	ds = Nothing
	dr = Nothing
	qt = Nothing
End Try]]></code></stage><stage stageid="bfe990bf-be29-4c21-ac04-96a798ab1827" name="End" type="End"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="91f84fae-ca36-4b8b-8221-bc3e95cd2ef3" name="Success?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="210" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bfe990bf-be29-4c21-ac04-96a798ab1827</ontrue><onfalse>6aaf6a41-be76-442d-9c2b-06905c4e0355</onfalse></stage><stage stageid="6aaf6a41-be76-442d-9c2b-06905c4e0355" name="Exception" type="Exception"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="225" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to import CSV: &quot; &amp; [Message]" /></stage><stage stageid="af967b8b-4ec8-4202-ac07-6acbf9d12d46" name="Success" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5335f808-6164-4249-9a2c-682294b9834c" name="Message" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="955e0188-d711-476b-b15b-1362ba3b0ea4" name="Path" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef84711-b0a0-4f04-a09d-a6e9637ea2cb" name="Qualifier" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a09cfa98-b04d-472f-ad84-87e6a0bdb011" name="Double Quote Qualifier?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Qualifier]=&quot;&quot;&quot;&quot;" /><ontrue>b0e18e5b-791a-492a-b6c6-112ed2cdf10f</ontrue><onfalse>6e036392-ff83-4dfa-94fe-ff1ed03cd9bc</onfalse></stage><stage stageid="b0e18e5b-791a-492a-b6c6-112ed2cdf10f" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="1" stage="Qualifier Code" /></stage><stage stageid="f9eb7145-ee8c-41cc-8ea2-2417adbcd435" name="Qualifier Code" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc2b8ffb-c597-4ede-8134-1cc80a2c3293" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="-4142" stage="Qualifier Code" /></stage><stage stageid="6e036392-ff83-4dfa-94fe-ff1ed03cd9bc" name="Note2" type="Note"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><narrative>Assume no text qualifier</narrative><display x="15" y="60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc2b8ffb-c597-4ede-8134-1cc80a2c3293</onsuccess></stage><stage stageid="70744683-2ca9-4e9a-89b9-194945f98e32" name="Range" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c8e00b5-ec48-479b-8abf-6a6658752cb5" name="Get Worksheet Name" type="SubSheetInfo"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2af2843d-00f3-464f-ab67-305ae6ccf858" name="End" type="End"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Worksheet" stage="Worksheet" /></outputs></stage><stage stageid="26c465a5-f001-4ff8-ac21-28437489e85f" name="Handle" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2de7e6b6-6118-4b3f-ba2b-179ba64d95d8" name="Workbook" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee8f628-7829-42f7-ac8c-672d78be654f" name="Worksheet" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c752debc-3eea-4935-a460-f8eb77039d5d" name="Start" type="Start"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="number" name="Worksheet Position" stage="Position" /></inputs><onsuccess>ba712112-b784-4f87-a7ff-5a8721aca35d</onsuccess></stage><stage stageid="ba712112-b784-4f87-a7ff-5a8721aca35d" name="Get Worksheet" type="Code"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Position" expr="[Position]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Worksheet" stage="Worksheet" /></outputs><onsuccess>39f8ebfd-a1e8-4517-add5-653f475fe8eb</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets(Position)
Worksheet = ws.Name

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="2cbe9309-244f-45ae-8716-0d02bf738530" name="Position" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27d60ef1-833c-44f5-b5ab-0aefb2c0581c" name="Success?" type="Decision"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4235fac3-2295-4511-828e-090e9c888d38</ontrue><onfalse>8edc5ff8-0139-409d-ba63-7f23bf726964</onfalse></stage><stage stageid="8edc5ff8-0139-409d-ba63-7f23bf726964" name="Exception" type="Exception"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet position: &quot; &amp; [Message]" /></stage><stage stageid="39f8ebfd-a1e8-4517-add5-653f475fe8eb" name="Success?" type="Decision"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>2af2843d-00f3-464f-ab67-305ae6ccf858</ontrue><onfalse>636399b4-ec2b-41a7-ac41-27e98637df4c</onfalse></stage><stage stageid="636399b4-ec2b-41a7-ac41-27e98637df4c" name="Exception" type="Exception"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet name: &quot; &amp; [Message]" /></stage><stage stageid="69b153d1-9bd9-4c51-8b96-d45c1112bbfb" name="Success" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="464ca930-cf54-4147-8041-1007cc2416b6" name="Message" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def46f81-3f9f-421d-91cf-f12583e956d3" name="Success" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1195aa37-1cbe-4f02-9d00-c39f3e304cfc" name="Message" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5222003b-5cb9-4669-bc35-96d41b028249" name="Insert" type="SubSheetInfo"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c868cff-a594-49f6-bde7-fc3ba2cd17c6" name="End" type="End"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c34b4fa-4824-48bf-ae2a-b709a25cec17" name="Handle" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dc53e03-3a4f-4ca9-ba70-17573564d976" name="Workbook" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89909450-cca0-4546-bbbc-32cbd4c609bc" name="Start" type="Start"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>1f31ede9-3b32-4aaf-9b55-573cb227a850</onsuccess></stage><stage stageid="dc1f9d40-b099-44c3-a2c1-e782413b0914" name="Insert" type="Code"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be039ecb-6427-4a80-8a91-9b69561fc2de</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Insert(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="be039ecb-6427-4a80-8a91-9b69561fc2de" name="Success?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>7c868cff-a594-49f6-bde7-fc3ba2cd17c6</ontrue><onfalse>741cc1d1-3936-4201-ad74-e95993e64b92</onfalse></stage><stage stageid="741cc1d1-3936-4201-ad74-e95993e64b92" name="Exception" type="Exception"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="aac1165a-4574-4834-a68e-18db8cdd0216" name="Success" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52ea365d-8434-45cb-97ba-cd7c741b7c7c" name="Message" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd2ee59b-4044-4f2c-8439-05e1a9b23c7d" name="Shift" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f31ede9-3b32-4aaf-9b55-573cb227a850" name="Shift Left?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>594ef012-6d63-4256-a43c-dd84c172ad15</ontrue><onfalse>21ff25a4-b431-43fb-af46-02fff92627e7</onfalse></stage><stage stageid="594ef012-6d63-4256-a43c-dd84c172ad15" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4161" stage="Shift Type" /></stage><stage stageid="c07375e4-4e0d-4a0d-b7b2-d1bab9884769" name="Shift Type" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21ff25a4-b431-43fb-af46-02fff92627e7" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4121" stage="Shift Type" /></stage><stage stageid="53f2c5f2-ac8f-40c2-ace8-24614c6d3676" name="Run Macro" type="SubSheetInfo"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da9401ad-8267-4f76-bb0d-02d380427eb5" name="Start" type="Start"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /></inputs><onsuccess>a19d33b9-0a8b-4fb1-b333-7fb65c7733ab</onsuccess></stage><stage stageid="0a6413b8-4ce8-4399-b3e2-974e44d812af" name="End" type="End"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a19d33b9-0a8b-4fb1-b333-7fb65c7733ab" name="Run Macro" type="Code"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /></inputs><onsuccess>0a6413b8-4ce8-4399-b3e2-974e44d812af</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name)]]></code></stage><stage stageid="669163d5-5b66-446d-84fc-ddaaccf6ecc8" name="Handle" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d95761c1-c5f3-46a0-8b86-7f90e58418cc" name="Macro Name" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f6eda740-cf77-47fa-9304-31c3e5dcd95a" name="AbhiProcess" type="SubSheetInfo"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6307098d-be8b-46f7-ab3e-a22713115ce0" name="Start" type="Start"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="IndexNumber" stage="Number" /></inputs><onsuccess>1f462e0f-f9ed-488f-902d-e1486f34ae3a</onsuccess></stage><stage stageid="b0b3a123-1b60-49ce-b608-b48f421873b0" name="End" type="End"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f462e0f-f9ed-488f-902d-e1486f34ae3a" name="Activate Workbook" type="SubSheet"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>48c61dee-3076-4552-9417-ffc2e4e47ee5</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="24cf1225-14ab-4680-9e0d-663946ea16c9" name="handle" type="Data"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="285" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="48c61dee-3076-4552-9417-ffc2e4e47ee5" name="Delete blank rows1" type="Code"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="0" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="i" expr="[Number]" /></inputs><onsuccess>b0b3a123-1b60-49ce-b608-b48f421873b0</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet
		worksheet.Rows(i).Delete

]]></code></stage><stage stageid="1a133544-4591-41be-8b52-47b6fb61aeb6" name="Number" type="Data"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="285" y="-60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5269b39-1b6b-4155-a933-67769ce987a5" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="debec38b-0f56-41b1-9c9b-95c1e821d574" name="Start" type="Start"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="number" name="Column Number" stage="Column Number" /><input type="text" name="Filter Criteria" stage="Filter Criteria" /></inputs><onsuccess>fda15d7f-221e-4029-bd65-e1915918c0b4</onsuccess></stage><stage stageid="9b92bdb7-1416-40c2-ba12-c948d247d543" name="End" type="End"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="6913783b-a077-46e8-8af7-04b146854c94" name="Handle" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f922204-3dfc-423c-ac58-376ed564c8e8" name="Workbook" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="885fe96f-9d30-43e9-a8c1-af0719d4a595" name="Worksheet" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbf6ebec-6463-438f-a484-59f953049418" name="Success" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2f004204-ee7a-4954-82ce-dedbf4b0f79d" name="Message" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /></stage><stage stageid="2ea8e44b-9223-4387-b479-5cc215c38b23" name="Select Range" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="-165" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66e3d80d-8284-4fe2-93ce-349e7756a47a" name="Inputs" type="Block"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="-240" y="-90" w="150" h="225" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f0a4570-cfc3-4ca3-adc9-00ad59cebd39" name="Output " type="Block"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="fda15d7f-221e-4029-bd65-e1915918c0b4" name="Filter Excel" type="Code"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Column Number" expr="[Column Number]" /><input type="text" name="Filter Criteria" expr="[Filter Criteria]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9b92bdb7-1416-40c2-ba12-c948d247d543</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="79cb756f-5ab9-4e0f-b883-f98e4d786284" name="Filter Criteria" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09d77b85-ed8c-4037-b475-d7b046b120a3" name="Column Number" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f2f7ae0-6ade-4964-b600-65c76be1c6e0" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="3fe2b0f2-b023-4363-b89a-5b29a0e74c08" name="Start" type="Start"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>412a95b2-5126-4863-8836-ee9c2b3ecdc1</onsuccess></stage><stage stageid="40057163-511a-4220-a226-604bc0777d4f" name="End" type="End"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="0b83c93b-17d2-4baf-8397-bf8197491366" name="Handle" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e12c96e1-321b-412f-b3d5-1139719c1ffb" name="Workbook" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4316b9a-d36c-484b-9392-f6e6906d9936" name="Worksheet" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d69c7833-7f4b-47d4-9c74-087b78a58c74" name="Success" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6591d6e-a7e3-4cc1-8beb-939086489c81" name="Message" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7bafdd7d-dcdf-4c8f-a642-ba919f746e8f" name="Inputs" type="Block"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="-240" y="-60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6dd254ae-3d4d-487a-9c70-1e18418a6702" name="Output " type="Block"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="412a95b2-5126-4863-8836-ee9c2b3ecdc1" name="Delete Filtered Values" type="Code"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>40057163-511a-4220-a226-604bc0777d4f</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object
Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.Offset(1, 0).SpecialCells(12).EntireRow.Delete 
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="b2b1ad79-fb83-4eff-8ddb-a9484f1b6785" name="Delete Hidden rows " type="SubSheetInfo"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="4d7cfe29-5aaf-4dba-be09-0240d5ab943d" name="Start" type="Start"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>9d85cec7-0ba5-46d8-8b27-5a0187128f9e</onsuccess></stage><stage stageid="3c606e10-953e-48f8-ad6b-2dd1222e3334" name="End" type="End"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="203181e0-966c-4f75-a7cb-faeca2afbbd1" name="Handle" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3168c0ea-38b8-49bd-96b8-8fa8084cedc2" name="Workbook" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79329e58-17a3-4cd1-9480-f269630a6e1a" name="Worksheet" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59806680-25e1-44d4-a85c-1b03789ae553" name="Success" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="82572622-b240-4a22-9109-9be661565a77" name="Message" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f65de0e-b7a9-46f0-88ff-8c4ee5596adb" name="Inputs" type="Block"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="-240" y="-90" w="135" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1364c906-9831-49ca-aed6-c3620656c586" name="Output " type="Block"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9d85cec7-0ba5-46d8-8b27-5a0187128f9e" name="Remove Excel Filter" type="Code"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3c606e10-953e-48f8-ad6b-2dd1222e3334</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
sheet.UsedRange.AutoFilter

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="8aee19f2-9fe7-4626-903b-5b47dfe217f5" name="Format Columns" type="SubSheetInfo"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-135" w="150" h="90" /></stage><stage stageid="c72449fb-d3bd-47e3-8577-c0ddd2914a4e" name="Start" type="Start"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /><input type="text" name="Format Type" narrative="Type can be &quot;Text&quot;, &quot;Percentage&quot;,&quot;Number&quot;,&quot;Fraction&quot;" stage="Format Type" /></inputs><onsuccess>86e43e0f-dfe3-4a8b-9a95-a98fd638fb93</onsuccess></stage><stage stageid="83cdc766-3d21-4342-8318-3685c4a8b91b" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="60" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="67c6c08e-f8d2-42a1-a480-77199f13d298" name="Number Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="60" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>83cdc766-3d21-4342-8318-3685c4a8b91b</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0.00"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="22ed1689-da95-41a2-a4e2-dad0c3079171" name="Handle" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7bce11b7-cdda-43c7-a4ab-f9d770b10c22" name="Workbook" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6373b284-7af2-4479-93e8-db8512d419fe" name="Worksheet" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc1d0539-4181-42f2-abdb-02d99323c4ec" name="Success" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-60" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4398eddd-9566-4512-996b-57b086ab2ee4" name="Message" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-60" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f8da730-1626-4f31-ade8-5db1c3a18630" name="Select Range" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86e43e0f-dfe3-4a8b-9a95-a98fd638fb93" name="Select Formatting" type="ChoiceStart"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="15" y="-90" /><groupid>8463325a-cfa6-44af-937e-b204969b093c</groupid><choices><choice expression="[Format Type]=&quot;Number&quot;"><name>Number</name><distance>71</distance><ontrue>67c6c08e-f8d2-42a1-a480-77199f13d298</ontrue></choice><choice expression="[Format Type]=&quot;Percentage&quot;"><name>Percentage</name><distance>142</distance><ontrue>c576f684-ead5-45bb-a793-b9eefb28a5b0</ontrue></choice><choice expression="[Format Type]=&quot;Text&quot;"><name>Text</name><distance>213</distance><ontrue>e88a0f4a-5601-4593-883b-3154830493f8</ontrue></choice><choice expression="[Format Type]=&quot;Fraction&quot;"><name>Fraction</name><distance>284</distance><ontrue>50be47e9-3fca-40ca-8c56-995016cc7a94</ontrue></choice><choice expression="[Format Type]=&quot;Date&quot;"><name>Date</name><distance>355</distance><ontrue>836e99a9-468f-4285-bf29-92d861c8f4f0</ontrue></choice><choice expression="[Format Type]=&quot;General&quot;"><name>General</name><distance>426</distance><ontrue>79699fa8-96b5-4c3a-87d3-2a24f0c7a3b6</ontrue></choice><choice expression="[Format Type]=&quot;Year Date&quot;"><name>Date in YYYYMMDD</name><distance>497</distance><ontrue>8ed02a66-163e-417d-8500-d29dc675cb36</ontrue></choice><choice expression="[Format Type]=&quot;1000 separater&quot;"><name>Number 1000 separater</name><distance>568</distance><ontrue>76fee878-0218-4ff9-9fb7-4d6f02b44799</ontrue></choice><choice expression="[Format Type]=&quot;hh:mm:ss&quot;"><name>Time</name><distance>600</distance><ontrue>0f6e8f6e-0b42-4bc3-87fd-f083dcd511b2</ontrue></choice><choice expression="[Format Type]=&quot;Number 0&quot;"><name>Number(Decimal places 0)</name><distance>690</distance><ontrue>46c52b43-4688-497c-8d6a-25c1973680d7</ontrue></choice><choice expression="[Format Type]=&quot;Number 1&quot;"><name>Number(no Decimal places )</name><distance>781</distance><ontrue>c0c764c5-db36-4308-89df-3329f720cf9c</ontrue></choice><choice expression="[Format Type]=&quot;No then Text&quot;"><name>Number then Text</name><distance>900</distance><ontrue>5a19d095-7bbf-427a-968f-33b3bf19fbd6</ontrue></choice><choice expression="[Format Type]=&quot;1000 separator without decimal&quot;"><name> 1000 separator without Decimal</name><distance>975</distance><ontrue>b0546af1-3ac8-4485-b2bf-501826cc1570</ontrue></choice><choice expression="[Format Type]=&quot;Number without decimal&quot;"><name>Number(With Decimal)</name><distance>1050</distance><ontrue>bd7bb7c1-34e8-430d-8022-4e34fe974505</ontrue></choice></choices></stage><stage stageid="64a629ed-7ec9-40dc-8df4-84dc0016dc37" name="Otherwise1" type="ChoiceEnd"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1155" y="-90" /><onsuccess>5dfe779c-8fc3-4d9d-ab09-2d2f3de13a2b</onsuccess><groupid>8463325a-cfa6-44af-937e-b204969b093c</groupid></stage><stage stageid="e85e508d-23df-4492-aab7-9dee749bb27b" name="Format Type" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2848b67-af11-43b0-a094-e69315d3bffd" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="120" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="c576f684-ead5-45bb-a793-b9eefb28a5b0" name="Percentage Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="120" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e2848b67-af11-43b0-a094-e69315d3bffd</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0.00%"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="d6d92ecc-e044-4ab5-bc76-4f90b7ddb550" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="180" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="cc6da736-e88e-41f2-ab07-def85817a830" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="240" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="50be47e9-3fca-40ca-8c56-995016cc7a94" name="Fraction Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="240" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>cc6da736-e88e-41f2-ab07-def85817a830</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "# ?/?"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="9e4d8b31-1bfc-474b-984d-8332c9fab97a" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="300" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="836e99a9-468f-4285-bf29-92d861c8f4f0" name="Date Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="300" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9e4d8b31-1bfc-474b-984d-8332c9fab97a</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "m/d/yyyy"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="4ae669b6-e94b-4b4e-b728-838a02af4c7a" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="360" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="79699fa8-96b5-4c3a-87d3-2a24f0c7a3b6" name="General Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="360" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>4ae669b6-e94b-4b4e-b728-838a02af4c7a</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "General"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="5dfe779c-8fc3-4d9d-ab09-2d2f3de13a2b" name="Set Success" type="MultipleCalculation"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1230" y="-90" /><onsuccess>bf7b21c9-802e-44ce-b9f3-966b6e430536</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Incorrect Selection of Format Type- Format Type should be Text, Number, Percentage, Date and Fraction&quot;" stage="Message" /></steps></stage><stage stageid="bf7b21c9-802e-44ce-b9f3-966b6e430536" name="End1" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1320" y="-90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="8ed02a66-163e-417d-8500-d29dc675cb36" name="Date Format YYYY" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="420" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e781e0e9-f08e-4252-a8e4-c53ecb89d317</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "YYYYMMDD"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="e781e0e9-f08e-4252-a8e4-c53ecb89d317" name="End4" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="420" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="76fee878-0218-4ff9-9fb7-4d6f02b44799" name="Number Format1" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="480" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e55360f1-9521-4326-910e-7cccc560860c</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0,000.00"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="e55360f1-9521-4326-910e-7cccc560860c" name="End5" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="480" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="0f6e8f6e-0b42-4bc3-87fd-f083dcd511b2" name="Time Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="615" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>28c18d7b-e361-4ac9-9e63-a1e892182943</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "hh:mm:ss"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="28c18d7b-e361-4ac9-9e63-a1e892182943" name="End6" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="615" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="46c52b43-4688-497c-8d6a-25c1973680d7" name="Number Format2" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="705" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ae118969-1dd5-4960-8b35-be8f5d5d84d0</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
With excel.Selection
	.NumberFomat = "0"
	.Value = .Value
End With

'excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="ae118969-1dd5-4960-8b35-be8f5d5d84d0" name="End7" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="705" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="c0c764c5-db36-4308-89df-3329f720cf9c" name="Number Format3" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="795" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ee61e7e8-47f3-4ced-960d-7b5c2cfd1c75</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
With excel.Selection
	.NumberFomat = "0.0"
	.Value = .Value
End With

excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="ae824bc5-2ba6-460a-b916-052a61d13db2" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="09d40d0b-2ca7-4d9a-b23b-01f69d79a33b" name="Start" type="Start"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /><input type="text" name="Auto Fill Range" stage="AutoFill Range" /></inputs><onsuccess>46ff1b1d-d024-4217-89a7-7cabe53c3c0c</onsuccess></stage><stage stageid="746038ae-8846-4ede-8ff2-bff9585bb023" name="End" type="End"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="46ff1b1d-d024-4217-89a7-7cabe53c3c0c" name="Auto Fill" type="Code"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select_range" expr="[Select Range]" /><input type="text" name="Autofill_range" expr="[AutoFill Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>746038ae-8846-4ede-8ff2-bff9585bb023</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Select_range)
range.Select()
'GetInstance(Handle).ActiveCell.Value = "=SUM(A1,B1)"
sheet.Range(Select_range).AutoFill (sheet.Range(Autofill_range))
Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="5721b7eb-3017-4280-a1ea-15684aee23ea" name="Handle" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76683bbe-b4ef-4eff-8882-1b88960abdad" name="Workbook" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="beddf64f-6e7b-468c-afce-370e0e282877" name="Worksheet" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1a2b31c-4d54-4e17-af72-8509e4da5feb" name="Success" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3b172368-db77-42e5-9c50-973a0fce3df8" name="Message" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c18d875-ae92-4155-847c-800660b77ef4" name="Select Range" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-165" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="842e5e49-3996-429e-9db4-40494829eb83" name="AutoFill Range" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-165" y="90" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff04b5cd-55ce-4065-aa5d-1f5a0c1c8b9e" name="Inputs" type="Block"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-240" y="-90" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f6d34e7b-4a93-4bf6-a6a2-2cc9b5b827c1" name="Output " type="Block"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e976691d-c5d4-49d3-aead-6ac1eff857ef" name="Auto Fill Range" type="Note"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><narrative>Auto Fill Range

This action is used to fill the series in excel rows. This is based on the selection of cell. based on the value of selected cell, it will fill the entire used range rows.</narrative><display x="75" y="-180" w="300" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="5b11bc5d-e131-4290-a0f2-b476e71d4494" name="Delete row" type="SubSheetInfo"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3996e3e0-aa19-4063-b7e5-556478d94b97" name="Start" type="Start"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="unknown" name="handle" stage="handle" /></inputs><onsuccess>1bced6ff-3122-43b8-9dae-3db40751a61e</onsuccess></stage><stage stageid="b7da20a9-06e8-477e-8aff-edc73b8c7dda" name="End" type="End"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1bced6ff-3122-43b8-9dae-3db40751a61e" name="Code1" type="Code"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="handle" expr="[handle]" /></inputs><onsuccess>b7da20a9-06e8-477e-8aff-edc73b8c7dda</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(Handle,Nothing).ActiveSheet
worksheet.Rows(1).Delete]]></code></stage><stage stageid="6873a268-5fbb-4fab-afb2-50358e302241" name="handle" type="Data"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><display x="240" y="-90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad9663e7-d179-4a23-a175-72eb03ae39dd" name="Format Cell" type="SubSheetInfo"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><narrative>Sets the number format at the given cell to that specified.
Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fe3d5c37-3192-4a2d-bb7c-6c43258addd2" name="Start" type="Start"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><loginhibit /><display x="-45" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="selectrange" narrative="The reference to the cell whose format should be changed." stage="Select Range" /><input type="text" name="workbook" stage="Workbook" /><input type="text" name="worksheet" stage="Worksheet" /></inputs><onsuccess>8e04e6de-2743-4e6f-86af-d1eb2903a364</onsuccess></stage><stage stageid="0b2eb62f-1d97-4272-ac21-5ff49e868b3a" name="Handle" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="210" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="8ed6b0f3-7280-46bd-9000-7657b3486377" name="End" type="End"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8e04e6de-2743-4e6f-86af-d1eb2903a364" name="1" type="Code"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><loginhibit /><display x="-45" y="-15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8ed6b0f3-7280-46bd-9000-7657b3486377</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.Style = "comma"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="f0eb5cab-f3a1-4f1b-a963-86fe166c726d" name="Workbook" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="150" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e662b1a5-3a7a-48ac-bcab-f80ed6613090" name="Worksheet" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="165" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94ad3579-db68-4937-b7f5-6ebc2ded9318" name="Select Range" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="240" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77221f74-324b-41f8-ba19-48efb6a69385" name="Success" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="135" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8128788e-1766-4b1b-ae59-a95b8e433144" name="Message" type="Data"><subsheetid>3f9fe2bc-ee08-4822-9ab0-c5600441a964</subsheetid><display x="195" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58f0c038-b3e2-42c2-9e56-d1291e7e5f58" name="Filter Excel Other than Equal" type="SubSheetInfo"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="935a9012-f922-4f1c-ba1c-d7d8573560db" name="Start" type="Start"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="90" y="-75" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="number" name="Column Number" stage="Column Number" /><input type="text" name="Filter Criteria" stage="Filter Criteria" /></inputs><onsuccess>5cb9921a-c978-45a5-8b84-f9742421507e</onsuccess></stage><stage stageid="26cc9e59-a38b-4962-8901-7ab41b6f7b4d" name="End" type="End"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="90" y="120" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="b5a949be-a7d5-4068-b7ef-2dc9cb55fc2d" name="Handle" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="080fbdf9-347b-4cd0-b1a8-35b24b6237c2" name="Workbook" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ab8af97-208b-448c-af52-b1829858ec4c" name="Worksheet" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b732c4ff-0eb0-4023-8967-83887a46e10f" name="Success" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="255" y="15" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ca92df1-639d-4924-8605-1cdf9db801ef" name="Message" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="330" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd1a77c2-a6fd-4712-9b47-83a254e7757c" name="Select Range" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="-90" y="90" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9e996ce-8dcb-47df-a553-d087468ed1fc" name="Output " type="Block"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="195" y="-30" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="5cb9921a-c978-45a5-8b84-f9742421507e" name="Filter Excel1" type="Code"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><loginhibit /><display x="90" y="30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Column Number" expr="[Column Number]" /><input type="text" name="Filter Criteria" expr="[Filter Criteria]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>26cc9e59-a38b-4962-8901-7ab41b6f7b4d</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
'sheet.UsedRange.AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="a0a532f1-da5a-499f-960e-8000ba61554a" name="Filter Criteria" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="120" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5dbcbe52-5296-4558-8800-54c6ac8db77b" name="Column Number" type="Data"><subsheetid>501b5735-dcab-4877-948b-da028edffed3</subsheetid><display x="-90" y="60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7dfb0c85-bbbb-432f-ab8e-c4abdd929b28" name="Refresh All PivotTable" type="SubSheetInfo"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="acf0f8ca-ad5a-4a80-b73a-3d58c5ede10b" name="End" type="End"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="22c95764-d190-452e-865b-1de44af5ecdd" name="handle" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-300" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="caf346e3-8c45-4f28-aae7-f9868de7e45a" name="workbookname" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-300" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb7b6419-2176-477d-a950-180b0e836948" name="Start" type="Start"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>da1e91d1-41da-4d9b-96fb-9038d4d9acc2</onsuccess></stage><stage stageid="f89d38c3-ce15-4b82-b575-51c7cadc7d6f" name="RefreshWorksheet" type="Code"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>acf0f8ca-ad5a-4a80-b73a-3d58c5ede10b</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
'sheetexists = ws IsNot Nothing 
'If sheetexists then ws.Activate()
'ws.Refresh
'Dim ws as Worksheet
Dim pt 'as PivotTable
For Each pt in ws.PivotTables
	pt.RefreshTable
Next pt]]></code></stage><stage stageid="da1e91d1-41da-4d9b-96fb-9038d4d9acc2" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>f89d38c3-ce15-4b82-b575-51c7cadc7d6f</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="5da46033-10ac-409b-86d7-baf860409b5b" name="worksheetname" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f272549d-abcf-4390-996c-13041774c560" name="createifmissing" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="d0724432-fe43-4450-b9ff-4550b27b8a4f" name="sheetexists" type="Data"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="-240" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="debe24c3-9e2f-40ee-92e5-58704ef1f3e0" name="Sheet Existed?" type="Decision"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>acf0f8ca-ad5a-4a80-b73a-3d58c5ede10b</ontrue><onfalse>6981a2bc-dfea-4614-9e54-148fe4e379a9</onfalse></stage><stage stageid="6981a2bc-dfea-4614-9e54-148fe4e379a9" name="No Such Sheet" type="Exception"><subsheetid>00860074-be81-4bbd-b679-c6658c0f26fb</subsheetid><display x="240" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="5a19d095-7bbf-427a-968f-33b3bf19fbd6" name="Number Format4" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="915" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3911cf34-72d8-49f6-9d67-2d3d0d58f8b6</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0,000"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="3911cf34-72d8-49f6-9d67-2d3d0d58f8b6" name="Text Format1" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="915" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>85bc31e1-978a-4b19-b113-66f7d01d5e72</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "@"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="d385d822-ddd6-44af-988d-7287603ef339" name="Paste Worksheet1" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
'source.PasteSpecial(Excel.XlPasteType.xlPasteAll, Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd, False, False)
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
destination.PasteSpecial(Excel.XlPasteType.xlPasteAll, Excel.XlPasteSpecialOperation.xlPasteSpecialOperationAdd, False, False)
'sheet.Paste()
'cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="9f717df8-0f23-4f33-84df-65b54fa609d5" name="ActivateWorkbook1" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="180" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()]]></code></stage><stage stageid="b0546af1-3ac8-4485-b2bf-501826cc1570" name="1000 Seperator without decimal" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="990" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3016d7e1-888f-4394-8f19-2bed20173cd2</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0,000"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="3016d7e1-888f-4394-8f19-2bed20173cd2" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="990" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="af6c30b0-12cd-4bf9-8a97-032590c83527" name="Sort" type="SubSheetInfo"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-195" y="-165" w="150" h="90" /></stage><stage stageid="80d41f31-1b41-4ed4-ab29-88fb122f9d2e" name="Start" type="Start"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-165" y="-45" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /></inputs><onsuccess>129a90aa-d25d-4073-92f4-8439114d206d</onsuccess></stage><stage stageid="b0404aee-54c1-4ad6-a00f-e82baddc1836" name="End" type="End"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-165" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="129a90aa-d25d-4073-92f4-8439114d206d" name="Auto Fill1" type="Code"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-165" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select_range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>b0404aee-54c1-4ad6-a00f-e82baddc1836</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'range = sheet.Range(Select_Range)
'range.Select()
sheet.Sort.SortFields.Clear
'GetInstance(Handle).ActiveCell.Value = "=SUM(A1,B1)"
'call sheet.Sort.SortFields.Add(sheet.Columns(1),,Microsoft.Office.Interop.Excel.XlSortOrder.xlAscending)
call sheet.Sort.SetRange(sheet.Range("A2:A7"))
sheet.Sort.Apply

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="b3bece2c-6e08-4db9-84e9-9712de3d2a67" name="Handle" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-345" y="0" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a8edfa83-5a55-4110-81f3-a4386baac547" name="Workbook" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-345" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2237daa-fced-4e2e-acc1-81c566c3aa39" name="Worksheet" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="-345" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94cddc0d-28e8-4ffa-8c91-1ff1b9b7f7a5" name="Success" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="0" y="60" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57f02628-5b5a-44ab-b6d6-99232e3fcb64" name="Message" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><display x="75" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c013a197-b3cf-41e1-9333-0b47c90b8cf1" name="Select Range" type="Data"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-360" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f985c363-44ae-494d-b0b1-6fcf78ee6790" name="Inputs" type="Block"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-420" y="-30" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="69a06c6e-3927-4dfc-96a5-daad69d8b80e" name="Output " type="Block"><subsheetid>61e057c4-63c5-40f4-b172-730b89503b37</subsheetid><loginhibit /><display x="-60" y="15" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="bd7bb7c1-34e8-430d-8022-4e34fe974505" name="Number Format5" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1065" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>fbdd6740-120a-4f31-bfd9-a19b2fe5c945</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fbdd6740-120a-4f31-bfd9-a19b2fe5c945" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1065" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="85bc31e1-978a-4b19-b113-66f7d01d5e72" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="915" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="ee61e7e8-47f3-4ced-960d-7b5c2cfd1c75" name="End8" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="795" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="e88a0f4a-5601-4593-883b-3154830493f8" name="Text Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="180" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d6d92ecc-e044-4ab5-bc76-4f90b7ddb550</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "@"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try
]]></code></stage><stage stageid="8bcc1a3b-f86a-45a1-ae9b-d6185f513dde" name="Highlight Active Cell" type="SubSheetInfo"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="af501502-0960-495f-b93f-1e8a6d6c7f86" name="Start" type="Start"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /><input type="number" name="R" stage="R" /><input type="number" name="G" stage="G" /><input type="number" name="B" stage="B" /></inputs><onsuccess>b5216955-0960-40fa-be59-cda897e8f43a</onsuccess></stage><stage stageid="cf8611aa-c244-45a6-9505-6759267d53f7" name="End" type="End"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b5216955-0960-40fa-be59-cda897e8f43a" name="Check Handle1" type="Code"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>0ce6d00c-54c2-4a69-b76f-b416e04e236f</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="0ce6d00c-54c2-4a69-b76f-b416e04e236f" name="Is Handle Missing?" type="Decision"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>9e4da605-7a1d-465c-b50d-4a1fc61e82d5</ontrue><onfalse>556a60d1-772b-4102-af93-5c5c5c7dcb81</onfalse></stage><stage stageid="9e4da605-7a1d-465c-b50d-4a1fc61e82d5" name="Bad Instance Handle" type="Exception"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="556a60d1-772b-4102-af93-5c5c5c7dcb81" name="Highlight Cell" type="Code"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><loginhibit /><display x="0" y="60" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="R" expr="[R]" /><input type="number" name="G" expr="[G]" /><input type="number" name="B" expr="[B]" /></inputs><onsuccess>cf8611aa-c244-45a6-9505-6759267d53f7</onsuccess><code><![CDATA[Dim IngColor As Long
IngColor = RGB(R,G,B)
GetInstance(handle).ActiveCell.Interior.Color = IngColor
Dim activeCell = GetInstance(handle).ActiveCell]]></code></stage><stage stageid="03ffbda5-ae7f-4761-9c5a-66c8ab178722" name="handle" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13c9e844-f8a2-48de-a830-f28a71e442fc" name="HandleMissing" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-165" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ac9af7f-d8eb-4def-839b-eb18bd9ad185" name="R" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-285" y="75" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed480573-031b-45e4-9c8b-619ce0aba001" name="G" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-225" y="75" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7b205e39-9c2c-4a1c-8ea1-7d75a419bb72" name="B" type="Data"><subsheetid>488e2387-02b2-4f25-a8b6-ba9633d1c19c</subsheetid><display x="-165" y="75" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d2a4ada-cfd7-49c8-af58-8c436ee41a4f" name="Run Macro - Perm" type="SubSheetInfo"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b31db9ae-6310-4797-8b33-4e8fb230e11f" name="Start" type="Start"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /><input type="date" name="Perm1" stage="Perm1" /></inputs><onsuccess>a053856f-9e56-427e-a5c0-27565b47d0ed</onsuccess></stage><stage stageid="3b984d07-237e-4833-b5a2-7084c1281608" name="End" type="End"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a053856f-9e56-427e-a5c0-27565b47d0ed" name="Run Macro-Perm" type="Code"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /><input type="date" name="Perm1" expr="[Perm1]" /></inputs><onsuccess>3b984d07-237e-4833-b5a2-7084c1281608</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name,Perm1)]]></code></stage><stage stageid="b97ba77c-487e-41ff-9181-002b36af3365" name="Handle" type="Data"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dcaf5e2a-15c1-4df1-9ba0-a038a2b7868c" name="Macro Name" type="Data"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77681d9d-7633-4494-aa30-32221b2d52b9" name="Perm1" type="Data"><subsheetid>1c2b0951-44dc-45b5-94ce-cbb9fe0f37c4</subsheetid><display x="90" y="-105" /><datatype>date</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef06c0f-2f42-4422-965e-a70ad2ff79f2" name="Remove Duplicates" type="SubSheetInfo"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="13fe08eb-0914-4a72-afce-cfdd41c690cd" name="Start" type="Start"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="WorkbookName" stage="WorkbookName" /><input type="text" name="WorksheetName" stage="WorksheetName" /><input type="text" name="Range" stage="Range" /></inputs><onsuccess>b211eb5f-0f25-4e27-9d58-1509f0b1574d</onsuccess></stage><stage stageid="c9b4ef39-bac4-4761-b55f-4dd48892b10c" name="End" type="End"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b211eb5f-0f25-4e27-9d58-1509f0b1574d" name="Remove Duplicates1" type="Code"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[WorkbookName]" /><input type="text" name="Worksheet" expr="[WorksheetName]" /><input type="text" name="Input_Range" expr="[Range]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>be26e31a-1be3-49aa-8c90-a9c056ba6f2c</onsuccess><code><![CDATA[Dim wb, ws, dup As object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

dup = ws.Application.range(Input_Range).RemoveDuplicates(Columns:=1)

Success = True

Catch e As Exception
    Success = False
    Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	dup = Nothing
End Try]]></code></stage><stage stageid="dbe40461-7efb-4abf-acbe-11b83f87ce2b" name="Message" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="270" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1daf3b6-d4a4-4963-b85c-7b95993b3648" name="Success" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="225" y="-30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cfb4803-96ff-4733-87f6-ed49720fe409" name="Handle" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13b725a3-3d49-4459-9c2c-5e384833f656" name="WorkbookName" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b0dc91d-96f0-42c7-8a76-e8838f82fd94" name="WorksheetName" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5beafb9d-32c7-4742-847a-ef2f6d58b120" name="Range" type="Data"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="-195" y="75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc6bb6bf-6fe9-41fe-b0ad-a36b5a17a76d" name="Input variables" type="Block"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="165" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a141385f-e81e-42e0-9d47-d36659da857d" name="Output variables" type="Block"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="180" y="-60" w="135" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="be26e31a-1be3-49aa-8c90-a9c056ba6f2c" name="If Sucess?" type="Decision"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Success]" /><ontrue>c9b4ef39-bac4-4761-b55f-4dd48892b10c</ontrue><onfalse>8256685d-e777-4440-834b-3d0ee66cae2c</onfalse></stage><stage stageid="8256685d-e777-4440-834b-3d0ee66cae2c" name="Exception" type="Exception"><subsheetid>421962f9-f7a5-4ab3-8737-7cfd31ba5d78</subsheetid><display x="105" y="30" /><exception type="&quot;System Exception&quot;" detail="[Message]" /></stage><stage stageid="ea270337-05c4-402d-8883-d9d2e48e1f0c" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ad955d35-a7d7-4c3d-bd95-a63db3882046" name="Handle" type="Data"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="549e25f2-63b7-432b-bd1d-a998365cf39d" name="Workbook" type="Data"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b42cad3-bf39-463f-a34b-801b1fd84013" name="Worksheet" type="Data"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859f6fda-1c42-497d-980b-328786671906" name="Start" type="Start"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>a61b4ca0-9c0c-49be-ac0f-d75bdf7552d2</onsuccess></stage><stage stageid="a61b4ca0-9c0c-49be-ac0f-d75bdf7552d2" name="UnHide Worksheet" type="Code"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>46fc687b-b9bf-46b5-bb2f-7f2dc339f52f</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook,Worksheet)
ws.Visible = True

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="fb217f19-97d1-4011-9537-70b7302935b5" name="End" type="End"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46fc687b-b9bf-46b5-bb2f-7f2dc339f52f" name="Success?" type="Decision"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>fb217f19-97d1-4011-9537-70b7302935b5</ontrue><onfalse>f03d0aae-59e1-4f30-81d2-0f6fe37de5cc</onfalse></stage><stage stageid="f03d0aae-59e1-4f30-81d2-0f6fe37de5cc" name="Exception" type="Exception"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="cd6a9664-eca7-4db0-b826-7537083af2ba" name="Success" type="Data"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="260f101e-2621-473e-a4c9-29d035eacd7f" name="Message" type="Data"><subsheetid>7dfa158d-070b-449b-8195-38ef7fb86b48</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71ef3fc7-1741-4889-9943-9bc912abb553" name="Apply Filter" type="SubSheetInfo"><subsheetid>a2b84826-7ce1-4774-9df6-1d118e3722bf</subsheetid><display x="-270" y="-105" w="150" h="90" /></stage><stage stageid="97420d1c-582f-46e9-9ffb-3c1039cc754d" name="Start" type="Start"><subsheetid>a2b84826-7ce1-4774-9df6-1d118e3722bf</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /><input type="number" name="FieldToBeFiltered" stage="FieldToBeFiltered" /><input type="text" name="criteriaToFilter" stage="criteriaToFilter" /></inputs><onsuccess>b68d4bd5-057b-4c67-82e9-1695e51ca77f</onsuccess></stage><stage stageid="62152079-f273-4b5e-be8a-fcfe44bddfbe" name="End" type="End"><subsheetid>a2b84826-7ce1-4774-9df6-1d118e3722bf</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="942ca697-3a6b-4ef0-97b6-732ce08fd004" name="handle" type="Data"><subsheetid>a2b84826-7ce1-4774-9df6-1d118e3722bf</subsheetid><loginhibit /><display x="210" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c13d9166-5e1f-40b6-a789-0356039b9393" name="FieldToBeFiltered" type="Data"><subsheetid>a2b84826-7ce1-4774-9df6-1d118e3722bf</subsheetid><loginhibit /><display x="270" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7139d578-4dce-467d-b785-3fa7657b487e" name="criteriaToFilter" type="Data"><subsheetid>a2b84826-7ce1-4774-9df6-1d118e3722bf</subsheetid><loginhibit /><display x="330" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68d4bd5-057b-4c67-82e9-1695e51ca77f" name="Code2" type="Code"><subsheetid>a2b84826-7ce1-4774-9df6-1d118e3722bf</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="FieldToBeFiltered" expr="[FieldToBeFiltered]" /><input type="text" name="criteriaToFilter" expr="[criteriaToFilter]" /></inputs><onsuccess>62152079-f273-4b5e-be8a-fcfe44bddfbe</onsuccess><code><![CDATA[Dim worksheet as Object
Worksheet = GetWorkbook(handle, Nothing). ActiveSheet
worksheet.UsedRange.AutoFilter (Field:= FieldToBeFiltered, Criteria1:= criteriaToFilter)]]></code></stage></process></object>
        <object id="e559fb86-9b63-4e0b-9399-972227189995" name="MS Word VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="MS Word VBO" version="5.0.11" bpversion="7.0.1.49890" narrative="The VBO replacement for the Common Automation Word business object" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>5ec304cd-35d9-4d36-a1e8-9ee22ab08798</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="e283bce6-2b3d-4a05-8d79-05e52588fccd" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="349117e1-607c-4bb6-a911-5074cb58aca0" type="Normal" published="True"><name>Add Table Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8ddb9b98-da89-468a-b5a4-5eedf5a204ee" type="Normal" published="True"><name>Set Table Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="63dcd298-f559-4625-834f-f728c3391345" type="Normal" published="True"><name>Get Table Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ab5706df-5945-47c6-ad85-98b64e6966f8" type="Normal" published="True"><name>Get Highlighted Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e6deaaf-17ce-4784-b335-a9405da05140" type="Normal" published="True"><name>Replace Highlighted Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2c3ca32-4281-461d-8be9-453358a53092" type="Normal" published="True"><name>Find and Replace</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e945fdd1-12ee-49a3-828b-f210f597b9ea" type="Normal" published="True"><name>Select All</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0ad7469f-a55c-48de-9ec9-7b3b429c91b1" type="Normal" published="True"><name>Copy to Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e3194549-4702-4196-8e84-02c9414289f2" type="Normal" published="True"><name>Paste from Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="479d48e5-45be-4252-99e6-7685eacb95f0" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a46a3a18-37e6-4658-bf90-5612c2db5da4" type="Normal" published="True"><name>Find Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="014a9077-47d7-46c4-949a-9dd622e2aa55" type="Normal" published="True"><name>Select Next Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5c26c59-2398-4789-8c68-a82d3e675364" type="Normal" published="True"><name>Set Selected Cell Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="25894c29-7a40-4c69-8562-7b0ec251e307" type="Normal" published="True"><name>Select Next Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0982104d-2763-42e8-a690-69c44d9a4046" type="Normal" published="True"><name>Set Selected Checkbox</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc779662-1e7e-4438-b1c5-1106c851c3a3" type="Normal" published="True"><name>Get Footer Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b5d196b4-36af-4e29-991f-b6985b43dce2" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="293ea206-e215-4639-a1d8-85d6fad4c062" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31f689ac-b51a-4af0-bc24-9a36bedf0b07" type="Normal" published="True"><name>Create Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fab67da7-2774-4aba-b65c-e3cc6c20dac5" type="Normal" published="True"><name>Attach Instance</name><view><camerax>15</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae" type="Normal" published="True"><name>Detach Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="89550223-4597-48e5-a1c2-c61c726899cf" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ba034bb-3325-48c1-8185-8a95ba3aa7b2" type="Normal" published="True"><name>Open</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a12d6007-5275-4a01-a53e-1fe566ccb6eb" type="Normal" published="True"><name>Close</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e56148e-8eb8-411a-94ac-081b722cf098" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2a382c59-0507-47f8-82d5-1ca1ae93d305" type="Normal" published="True"><name>Hide</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d064a183-869e-4269-af78-e8278fcf2a75" type="Normal" published="True"><name>Exit</name><view><camerax>46</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df9a2d09-7817-4c60-9dfd-db0023481f74" type="Normal" published="True"><name>Create Document</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0034274b-9238-49f1-9208-489c5c1f0440" type="Normal" published="True"><name>Save As</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a54f1cbc-a023-4c2d-bf17-23169a3e685d" type="Normal" published="True"><name>ExportPDF</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="84295aaa-378f-41c0-892b-81b1fa1e43c7" type="Normal" published="True"><name>Get Body</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec22d5e7-f140-425a-bbaa-7c1da03813c4" type="Normal" published="True"><name>Type Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="658b8a32-bfce-4df2-bfdc-a9525bc2979e" type="Normal" published="True"><name>Update Bookmark</name><view><camerax>-142</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="60cba9c8-4c53-48b7-b25a-56d6603faf04" name="Start" type="Start"><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3fa025dc-32a8-4ab7-b052-cc5cd447a2cf</onsuccess></stage><stage stageid="3fa025dc-32a8-4ab7-b052-cc5cd447a2cf" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7d99e0f7-64a5-47c3-820f-a9c87bcbe9c5" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic</import><import>System.IO</import><import>System.Runtime.InteropServices</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[' The 'selected' instance of word.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the word instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function

' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Word.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Word.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function

' Gets the document in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the document
'
' @param Name The name of the document on the instance
'
' @return The object representing the document defined
Protected Function GetDocument(Handle As Integer, Name as String) As Object

	Dim doc as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		doc = GetInstance(Handle).ActiveDocument
		If doc Is Nothing ' We need to create a deafult workbook
			'doc = NewDocument(Handle)
		End If
		Return doc
	Else
		Return GetInstance(Handle).Documents(Name)
	End If

End Function]]></code></stage><stage stageid="3db4823c-cb33-410c-a5b4-0457287ea928" name="Clean Up" type="SubSheetInfo"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ffe1c4e5-db7e-48da-b754-89d06195c6f3" name="Start" type="Start"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>923ee3cf-37bc-426e-829d-e591ad107565</onsuccess></stage><stage stageid="923ee3cf-37bc-426e-829d-e591ad107565" name="End" type="End"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="87572a90-cbe5-4b41-931c-b4083da0a1bf" name="new" type="Note"><subsheetid>e283bce6-2b3d-4a05-8d79-05e52588fccd</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="339dd02a-a643-42ed-befd-3faa7d5a2759" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1bbb1c14-4990-47fd-8b73-630da57d702f" name="Create Instance" type="SubSheetInfo"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="12dfbbd0-3245-4078-ac90-1f65f7f3bb95" name="Start" type="Start"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>62dc3626-984b-4c4f-af3c-ade0a9242ff7</onsuccess></stage><stage stageid="699a02c3-30f3-4bdd-aa7d-2afc1110af20" name="End" type="End"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs></stage><stage stageid="62dc3626-984b-4c4f-af3c-ade0a9242ff7" name="Create Instance" type="Code"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>699a02c3-30f3-4bdd-aa7d-2afc1110af20</onsuccess><code><![CDATA[
Dim word as Object = CreateObject("Word.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
word.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(word)]]></code></stage><stage stageid="edda7cc0-1a94-49d6-a153-8fc888542e8c" name="handle" type="Data"><subsheetid>31f689ac-b51a-4af0-bc24-9a36bedf0b07</subsheetid><display x="-180" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b4d7331-72da-406d-82b7-23a7ed9ed828" name="Show" type="SubSheetInfo"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a23d8915-ce49-49b8-9796-859046f81b10" name="Start" type="Start"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>079aa539-1785-4099-82ef-7f679226a6ea</onsuccess></stage><stage stageid="e652822b-b3f6-4d8e-b67b-09f5a3fa03aa" name="End" type="End"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="079aa539-1785-4099-82ef-7f679226a6ea" name="CheckInstanceHandle" type="SubSheet"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>ae5c5f27-8330-46a8-a3dd-42c521b4acc9</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ae5c5f27-8330-46a8-a3dd-42c521b4acc9" name="ShowInstance" type="Code"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>e652822b-b3f6-4d8e-b67b-09f5a3fa03aa</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="ba182804-017d-4701-bee5-6ce4825d6a92" name="handle" type="Data"><subsheetid>1e56148e-8eb8-411a-94ac-081b722cf098</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="06f9c8b0-d782-4519-91eb-ef08a4ff69f4" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="55ae55da-a84e-4e04-89de-dd88ff6265f3" name="Start" type="Start"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>8380be40-583e-4e38-8bd2-f0d2ca89009c</onsuccess></stage><stage stageid="2b3b42b8-d366-4656-9b94-ab1b48254b80" name="End" type="End"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8380be40-583e-4e38-8bd2-f0d2ca89009c" name="Check Handle" type="Code"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>f28ac6b7-15d9-45f6-ab3a-54a0da21bbb3</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="0e84f827-315e-40eb-b54b-12caa5d9fd69" name="handle" type="Data"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-150" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f261599-10ff-401e-9119-62c9ac77151b" name="HandleMissing" type="Data"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="-150" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f28ac6b7-15d9-45f6-ab3a-54a0da21bbb3" name="Is Handle Missing?" type="Decision"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>6defa143-8947-48ef-935f-d36833614ef5</ontrue><onfalse>2b3b42b8-d366-4656-9b94-ab1b48254b80</onfalse></stage><stage stageid="6defa143-8947-48ef-935f-d36833614ef5" name="Bad Instance Handle" type="Exception"><subsheetid>293ea206-e215-4639-a1d8-85d6fad4c062</subsheetid><display x="180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Word Instance&quot;" /></stage><stage stageid="1d87bd3a-132a-464c-b2d6-1a4df635cd61" name="Hide" type="SubSheetInfo"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e1ba28f-613b-4a07-95bb-ade2a24a01b8" name="Start" type="Start"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>39fb3f6f-2d7b-4840-991b-65f9fd1867a7</onsuccess></stage><stage stageid="b7e598b6-b68b-45da-b57a-2118e5a066ad" name="End" type="End"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="39fb3f6f-2d7b-4840-991b-65f9fd1867a7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>afd1178a-dd11-4a73-8833-2b92063173ef</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="afd1178a-dd11-4a73-8833-2b92063173ef" name="HideInstance" type="Code"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b7e598b6-b68b-45da-b57a-2118e5a066ad</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="315416bc-f192-4090-8a30-0fcec83584e2" name="handle" type="Data"><subsheetid>2a382c59-0507-47f8-82d5-1ca1ae93d305</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ddb83909-8dc6-44dc-af21-d21979561fb9" name="Get Body" type="SubSheetInfo"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><narrative>Gets the body text from the word document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="150cb5f0-7bfe-4c3c-a660-2d6b49f4684f" name="Start" type="Start"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><preconditions><condition narrative="The Word VBO is initialised and a Word instance has been created/attached to" /></preconditions><postconditions><condition narrative="The body text required is returned" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="start" narrative="The start of the text range within the body for which the text is required" stage="start" /><input type="number" name="finish" narrative="The finish of the text range within the body for which the text is required" stage="finish" /><input type="text" name="documentname" narrative="The name of the document for which the body text is required" stage="documentname" /><input type="number" name="handle" narrative="The handle to the Word instance in which the document is open" stage="handle" /></inputs><onsuccess>59561e94-639a-4c08-9a9f-8577d49b3064</onsuccess></stage><stage stageid="6fcd9de3-9aa2-4a55-8909-4c9b3c3b5095" name="End" type="End"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Body" narrative="The text of the main body of the word document" stage="result" /></outputs></stage><stage stageid="59561e94-639a-4c08-9a9f-8577d49b3064" name="CheckInstanceHandle" type="SubSheet"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>50ad6a4d-1b58-4aa1-9a88-0febc63521a1</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="50ad6a4d-1b58-4aa1-9a88-0febc63521a1" name="GetBody" type="Code"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="start" expr="[start]" /><input type="number" name="finish" expr="[finish]" /></inputs><outputs><output type="text" name="result" stage="result" /></outputs><onsuccess>6fcd9de3-9aa2-4a55-8909-4c9b3c3b5095</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	Dim range As Object
	range = doc.Range(start, finish)
   
	result = range.text()]]></code></stage><stage stageid="e6c5db5f-2ee8-4369-9025-e3f9241bc8d4" name="handle" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ad4dcca7-8cd7-47c7-82fb-b83871f144f8" name="Open" type="SubSheetInfo"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0b87086b-2216-4e74-974e-093cdf2d9e09" name="Start" type="Start"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" stage="filename" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>5fa65cf5-75fe-43d0-92fe-923c8f137803</onsuccess></stage><stage stageid="69723646-ad31-4957-9cc0-43fad959ba95" name="End" type="End"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Document Name" stage="documentname" /></outputs></stage><stage stageid="995ac807-707a-4f97-8b15-971f1f0405ac" name="Open Document" type="Code"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="documentname" /></outputs><onsuccess>69723646-ad31-4957-9cc0-43fad959ba95</onsuccess><code><![CDATA[
Dim doc as Object = GetInstance(handle).Documents.Open(filename)
name = doc.Name
doc.Activate()]]></code></stage><stage stageid="e6ecf65f-7aed-47de-a567-abf35f57babc" name="handle" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-210" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fde6d90a-3cf6-477b-a18b-dc38b1fc1cdd" name="filename" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><display x="-210" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa65cf5-75fe-43d0-92fe-923c8f137803" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>335a3eeb-4d99-496c-a3cd-3fdcb42bc742</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="335a3eeb-4d99-496c-a3cd-3fdcb42bc742" name="CheckFileExists" type="SubSheet"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>995ac807-707a-4f97-8b15-971f1f0405ac</onsuccess><processid>b5d196b4-36af-4e29-991f-b6985b43dce2</processid></stage><stage stageid="4cbcba43-cf87-49df-bd28-19033d4f390a" name="documentname" type="Data"><subsheetid>9ba034bb-3325-48c1-8185-8a95ba3aa7b2</subsheetid><loginhibit /><display x="-210" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fddb571a-d8ae-4d27-9b6c-0975f653eb71" name="CheckFileExists" type="SubSheetInfo"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea423d51-6b2d-4452-88ad-7a8a645cbae8" name="Start" type="Start"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" stage="filename" /></inputs><onsuccess>8b0d6478-c375-442d-94bb-f7ce884ade8b</onsuccess></stage><stage stageid="8c76538f-0d1d-4285-aab0-5290485b46e3" name="End" type="End"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bf64d828-0cb5-42c2-89ea-1a3b319f4cc4" name="filename" type="Data"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="-165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3880fc08-9be7-4aff-a074-430ccdd3a128" name="fileexists" type="Data"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="-165" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8b0d6478-c375-442d-94bb-f7ce884ade8b" name="File Exists?" type="Code"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>ffe7ae9a-2f99-4074-8efa-307dbb5aeaf3</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="ffe7ae9a-2f99-4074-8efa-307dbb5aeaf3" name="Does File Exist?" type="Decision"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[fileexists]" /><ontrue>8c76538f-0d1d-4285-aab0-5290485b46e3</ontrue><onfalse>29baa624-0519-491a-9b7f-e9cd67715da0</onfalse></stage><stage stageid="29baa624-0519-491a-9b7f-e9cd67715da0" name="File Not Found" type="Exception"><subsheetid>b5d196b4-36af-4e29-991f-b6985b43dce2</subsheetid><display x="165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="e1e7b560-c537-488d-8391-c097150f5969" name="documentname" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8466ca5-e4a8-4941-aa52-bb84a5bf4d87" name="result" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-180" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a9b30de-289c-4da8-9fbf-324b8bb8cdf8" name="start" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec2b207a-8af7-4a31-9483-bb3fcd6b8750" name="finish" type="Data"><subsheetid>84295aaa-378f-41c0-892b-81b1fa1e43c7</subsheetid><display x="-105" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14b05ea9-71ec-46bf-bf16-0cb2c048a492" name="Save As" type="SubSheetInfo"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="49f07090-6e20-4208-9fb6-76a00bc71a63" name="Start" type="Start"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" stage="filename" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>4c19c96c-ff67-480d-bcdf-d9d18c62d3e2</onsuccess></stage><stage stageid="56c8c79f-0dda-4bc5-a9fe-eb7dc59e9940" name="End" type="End"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="documentname" stage="documentname" /></outputs></stage><stage stageid="4c19c96c-ff67-480d-bcdf-d9d18c62d3e2" name="CheckInstanceHandle" type="SubSheet"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>873547be-bfa6-4aee-b49e-b03ee4b10659</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="873547be-bfa6-4aee-b49e-b03ee4b10659" name="SaveAs" type="Code"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="text" name="newname" stage="documentname" /></outputs><onsuccess>56c8c79f-0dda-4bc5-a9fe-eb7dc59e9940</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	doc.SaveAs(filename)
	newname = doc.name]]></code></stage><stage stageid="b6243343-4d38-40b3-ac81-6044b590e61f" name="handle" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d128fa5a-052f-49e3-b3d3-b2a10b0a555d" name="documentname" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9664dacd-968c-462f-b852-1099ff8b3f6a" name="filename" type="Data"><subsheetid>0034274b-9238-49f1-9208-489c5c1f0440</subsheetid><display x="-210" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb8df20e-d7cb-452c-acd2-3f04d8a9a78e" name="Exit" type="SubSheetInfo"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="110d847b-787a-4ad3-86f1-3a1a1ff5687c" name="Start" type="Start"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>f834329d-2a8f-4a5e-b021-bb8d752866a5</onsuccess></stage><stage stageid="20d7732d-8c92-4c00-a602-e650d104a383" name="End" type="End"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f834329d-2a8f-4a5e-b021-bb8d752866a5" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>ad2c07f9-3459-4ef3-8c18-627591869d46</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="ad2c07f9-3459-4ef3-8c18-627591869d46" name="Exit" type="Code"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>20d7732d-8c92-4c00-a602-e650d104a383</onsuccess><code><![CDATA[
	Dim app As Object = GetInstance(handle)
	app.NormalTemplate.Saved = True
	app.Quit()

	Me.HandleMap.Remove(handle)
	Me.InstanceMap.Remove(app)]]></code></stage><stage stageid="5aee7da4-09aa-4a84-8b38-0c219d10a84c" name="handle" type="Data"><subsheetid>d064a183-869e-4269-af78-e8278fcf2a75</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="76d84196-a3f8-438d-87ca-8bbb5a150385" name="Close" type="SubSheetInfo"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca2a96a4-4be4-46a3-bf43-ad0b1fd688d1" name="Start" type="Start"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>925e7711-a825-4be7-8a2b-13cc2b3f6458</onsuccess></stage><stage stageid="bd446e30-85c5-4bd8-baec-09874a164871" name="End" type="End"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="925e7711-a825-4be7-8a2b-13cc2b3f6458" name="CheckInstanceHandle" type="SubSheet"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>98b463cd-ae0f-4752-917d-0846f7f9d1d2</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="98b463cd-ae0f-4752-917d-0846f7f9d1d2" name="Close" type="Code"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /></inputs><onsuccess>bd446e30-85c5-4bd8-baec-09874a164871</onsuccess><code><![CDATA[	
	Dim doc As Object = GetDocument(handle,documentname)
	doc.Saved = True
	doc.Close()]]></code></stage><stage stageid="79711364-a2bd-434e-a183-7cbc2f61e54e" name="handle" type="Data"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b32ff547-580d-4801-b3f1-a474b288e66a" name="documentname" type="Data"><subsheetid>a12d6007-5275-4a01-a53e-1fe566ccb6eb</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f44241e2-c1fa-41ec-94d2-ce04c3004b8c" name="Type Text" type="SubSheetInfo"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="829e6b71-8bac-474c-affb-8854abe5b326" name="Start" type="Start"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="text" stage="text" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>e1086e24-ae1f-4ce6-81c2-4422ef6fa002</onsuccess></stage><stage stageid="5b094fdf-6ef3-4846-b25c-0ee209e038de" name="End" type="End"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e1086e24-ae1f-4ce6-81c2-4422ef6fa002" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>fcf56391-2a51-4e70-9930-2f19ac9223c3</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="fcf56391-2a51-4e70-9930-2f19ac9223c3" name="TypeText" type="Code"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="text" expr="[text]" /></inputs><onsuccess>5b094fdf-6ef3-4846-b25c-0ee209e038de</onsuccess><code><![CDATA[
	GetInstance(handle).Selection.TypeText(text)]]></code></stage><stage stageid="4473d616-1d96-4946-8abf-c0c68033e5c1" name="handle" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="94b0135e-de95-421b-a5db-07f6fc22b5d8" name="documentname" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30c13569-5e52-4d2b-9d3f-30764a391f99" name="text" type="Data"><subsheetid>ec22d5e7-f140-425a-bbaa-7c1da03813c4</subsheetid><display x="-210" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54d32e12-69ab-45d3-adc4-74cb220667a1" name="Create Document" type="SubSheetInfo"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e417d18-2b1b-442c-9c74-e1e8cbc9684d" name="Start" type="Start"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>8d4245f6-0d86-4a8d-b932-65500682f43d</onsuccess></stage><stage stageid="668ccf5c-2a61-4b7c-b9b7-f60c6d1a8dfb" name="End" type="End"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="documentname" stage="documentname" /></outputs></stage><stage stageid="8d4245f6-0d86-4a8d-b932-65500682f43d" name="CheckInstanceHandle" type="SubSheet"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>cdeffd66-9688-46dc-91b2-6ddf3d8476c7</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="cdeffd66-9688-46dc-91b2-6ddf3d8476c7" name="CreateDocument" type="Code"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="documentname" stage="documentname" /></outputs><onsuccess>668ccf5c-2a61-4b7c-b9b7-f60c6d1a8dfb</onsuccess><code><![CDATA[
	Dim doc as Object = GetInstance(handle).Documents.Add()
	documentname = doc.Name
	doc.Activate()
]]></code></stage><stage stageid="55507265-dccf-498b-b457-9fa3230c8ad8" name="handle" type="Data"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="96a1c94c-4176-4965-aeec-43ccd66ca797" name="documentname" type="Data"><subsheetid>df9a2d09-7817-4c60-9dfd-db0023481f74</subsheetid><display x="-210" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa7025db-88e7-4128-912e-878929e649bf" name="Update Bookmark" type="SubSheetInfo"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06b932ee-3310-4628-823f-265d0ef63d38" name="Start" type="Start"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Bookmark name" stage="name" /><input type="text" name="Text" stage="value" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>e87e8a9b-c20a-469f-a077-2b6ae1cd52a4</onsuccess></stage><stage stageid="4568f576-e587-46d1-9613-8455000361ee" name="End" type="End"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e87e8a9b-c20a-469f-a077-2b6ae1cd52a4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41afaa16-ddea-4385-9530-07f94ee95532</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="41afaa16-ddea-4385-9530-07f94ee95532" name="UpdateBookmark" type="Code"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="name" expr="[name]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>4568f576-e587-46d1-9613-8455000361ee</onsuccess><code><![CDATA[
	Dim doc as Object = GetDocument(handle,documentname)
	If doc.Bookmarks.Exists(name) Then
		doc.Bookmarks.Item(name).Range.Text = value
	End If]]></code></stage><stage stageid="ad290b27-e3a5-4ad5-b352-eff94acc7de8" name="handle" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b28714a-4da4-4baf-8116-a19d736d56c4" name="value" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="294bedbf-1386-4233-b599-e8e5d50121bc" name="name" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="422f53fe-cfb8-44ab-8628-5e7192d8a14b" name="documentname" type="Data"><subsheetid>658b8a32-bfce-4df2-bfdc-a9525bc2979e</subsheetid><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f3f2cc6-4bd9-456e-9857-dc71ccafdcb9" name="Set Current Instance" type="SubSheetInfo"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef5caa1c-ba0b-4e25-ba69-081e9386a4f3" name="Start" type="Start"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The handle for the instance which should become the current instance" stage="handle" /></inputs><onsuccess>215a6e49-5725-401b-9f3f-d1fd9261dac7</onsuccess></stage><stage stageid="c0b115d4-6eff-4088-9356-8abf9d79ccc1" name="End" type="End"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="215a6e49-5725-401b-9f3f-d1fd9261dac7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>c0b115d4-6eff-4088-9356-8abf9d79ccc1</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="4df855d7-0ceb-42e9-9fe3-c4a6de4b72e8" name="Note1" type="Note"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="165" y="-60" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d355c6b1-7c4f-4842-99d8-2e2ba88a3934" name="Attach Instance" type="SubSheetInfo"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a0baf69-393d-4338-91c2-599bb8f9dd88" name="Start" type="Start"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path and filename of the document that the instance should attach to, empty indicates that the topmost Word instance be attached to" stage="Filename" /></inputs><onsuccess>cf413a56-3b39-4024-9358-e45c4cb1270f</onsuccess></stage><stage stageid="080da51f-78bc-4c03-a069-fba8ce7216c3" name="End" type="End"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The handle to the newly created instance, attached to either an existing Word window or a new one." stage="handle" /></outputs></stage><stage stageid="2d9ef69e-28d3-4c3d-8c66-ad48abf1c9bd" name="Filename" type="Data"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7538631d-fe66-4fa5-9087-9757b9baa750" name="handle" type="Data"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cf413a56-3b39-4024-9358-e45c4cb1270f" name="AttachInstance" type="Code"><subsheetid>fab67da7-2774-4aba-b65c-e3cc6c20dac5</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[Filename]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>080da51f-78bc-4c03-a069-fba8ce7216c3</onsuccess><code><![CDATA[
If filename = "" Then
	handle = GetHandle(GetObject(, "Word.Application"))
Else
	handle = GetHandle(GetObject(filename).Application)
End If]]></code></stage><stage stageid="bb83c823-90bc-4da3-9b03-b1bfae7ffe16" name="Detach Instance" type="SubSheetInfo"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><narrative>Detaches from the Word instance with the given handle, removing all references within this business object.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3086e1fc-ae22-4963-93f2-743021835c1d" name="Start" type="Start"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The handle to the instance to be detached from" stage="handle" /></inputs><onsuccess>10611a26-c805-4e33-b3ba-4be3ffb5ae66</onsuccess></stage><stage stageid="936fb37c-767b-4c3b-9b5e-57b36515bba6" name="End" type="End"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cfdae8d9-4e29-4353-a17b-4c5a724fa96e" name="handle" type="Data"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><display x="-210" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10611a26-c805-4e33-b3ba-4be3ffb5ae66" name="DetachInstance" type="Code"><subsheetid>8b161e34-9d3a-4120-a6ef-47fa0d4fb3ae</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>936fb37c-767b-4c3b-9b5e-57b36515bba6</onsuccess><code><![CDATA[Dim app As Object = GetInstance(handle)
HandleMap.Remove(CInt(handle))
InstanceMap.Remove(app)
If app Is CurrentInstance Then CurrentInstance = Nothing
Marshal.ReleaseComObject(app)]]></code></stage><stage stageid="f1a76547-26a8-4bbb-876c-12108d44f5f5" name="handle" type="Data"><subsheetid>89550223-4597-48e5-a1c2-c61c726899cf</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="744e462f-ed5d-4004-afe9-a69ae3cddf27" name="Get Highlighted Text" type="SubSheetInfo"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><narrative>Returns the documents highlighted text as a collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3fa2a732-65ad-412e-8dfc-797a10a1dd38" name="End" type="End"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="highlighted text" stage="highlighted text" /></outputs></stage><stage stageid="d60af1f9-c084-491f-b44f-99c1c5fe61b4" name="Get Highlighted Text" type="Code"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><outputs><output type="collection" name="highlighted text" stage="highlighted text" /></outputs><onsuccess>3fa2a732-65ad-412e-8dfc-797a10a1dd38</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim r As Object = d.Range
Dim i As Integer

Dim dt As New System.Data.DataTable()
Dim dr As System.Data.DataRow

dt.Columns.Add("text", GetType(String))
dt.Columns.Add("highlight index", GetType(Integer))

r.Find.Highlight = true
r.Find.Forward = True

Do While r.Find.Execute
	If r.HighlightColorIndex <> 0 Then
		dr = dt.NewRow()
		dr("text") = r.Text
		dr("highlight index") = r.HighlightColorIndex
		dt.Rows.Add(dr)
	End If
	i = r.End
	r.Start = i
Loop
highlighted_text = dt]]></code></stage><stage stageid="efa512ec-3a71-4ae2-8fea-10c01497d1ad" name="handle" type="Data"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9014f0b7-d7ec-4f10-9fe4-9294d5c469ac" name="Start" type="Start"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>d60af1f9-c084-491f-b44f-99c1c5fe61b4</onsuccess></stage><stage stageid="19a7cc99-e574-4f93-a220-3f94df6dcb00" name="document name" type="Data"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41cca25a-0352-483f-bd0d-210348dddccf" name="highlighted text" type="Collection"><subsheetid>ab5706df-5945-47c6-ad85-98b64e6966f8</subsheetid><display x="-195" y="90" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="text" type="text" /><field name="highlight index" type="number" description="A value from from the wdColor enumeration" /></collectioninfo></stage><stage stageid="faba3574-835f-426f-babd-7741f20c08ef" name="Replace Highlighted Text" type="SubSheetInfo"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><narrative>Searches for and replaces highlighted text</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="10f02379-dc0a-4fb5-8107-75333fd04af6" name="End" type="End"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1750861c-714e-4fd9-a7ad-babb2bc8735b" name="handle" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c605ebc-3335-451b-a024-96310e159f3d" name="Start" type="Start"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="current text" stage="current text" /><input type="number" name="current highlight" stage="current highlight" /><input type="text" name="new text" stage="new text" /><input type="number" name="new highlight" stage="new highlight" /><input type="flag" name="new bold" stage="new bold" /></inputs><onsuccess>86ff3b1e-b8e7-41aa-81c8-c6b731c9783d</onsuccess></stage><stage stageid="478dfc3b-afab-4b3d-b893-d63b17652148" name="document name" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2480b35b-c034-4e1f-8fee-05f04f234f8c" name="current text" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4cb5e60-a090-41e5-945a-64a46b4fc815" name="current highlight" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60806e60-b1df-4318-9475-7a638c227a47" name="new text" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a40255d1-e872-4311-b2d8-2e2dfda8bdde" name="new highlight" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86ff3b1e-b8e7-41aa-81c8-c6b731c9783d" name="Replace Highlighted Text" type="Code"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="current text" expr="[current text]" /><input type="number" name="current highlight" expr="[current highlight]" /><input type="text" name="new text" expr="[new text]" /><input type="number" name="new highlight" expr="[new highlight]" /><input type="flag" name="new bold" expr="[new bold]" /></inputs><onsuccess>10f02379-dc0a-4fb5-8107-75333fd04af6</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim r As Object = d.Range
Dim i As Integer

r.Find.Highlight = true
r.Find.Forward = True

Do While r.Find.Execute(current_text)
	If r.HighlightColorIndex = current_highlight Then
		r.Text = new_text
		r.HighlightColorIndex = CInt(new_highlight)
		r.Bold=new_bold
	End If
	i = r.End
	r.Start = i
Loop]]></code></stage><stage stageid="234fee0c-5b96-4829-be83-f34ff671c61e" name="new bold" type="Data"><subsheetid>8e6deaaf-17ce-4784-b335-a9405da05140</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="9a6342b6-1b6c-467f-970c-ae638d0dc946" name="Select All" type="SubSheetInfo"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><narrative>Selects the entire document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="32c7e893-ade6-4c28-8878-b0b6c201c420" name="End" type="End"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f292c519-969f-48ca-a11a-b32031d9015b" name="handle" type="Data"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c3d29d4-83e1-4c5c-9d14-e4b698c6a498" name="Start" type="Start"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>71b6f8f9-6acb-4a3e-a7a5-5938100e9139</onsuccess></stage><stage stageid="7e4a9137-bdd0-49c3-a19f-a8bae90a3bd3" name="document name" type="Data"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71b6f8f9-6acb-4a3e-a7a5-5938100e9139" name="Select All" type="Code"><subsheetid>e945fdd1-12ee-49a3-828b-f210f597b9ea</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>32c7e893-ade6-4c28-8878-b0b6c201c420</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)

d.Select

d = Nothing]]></code></stage><stage stageid="fc588eee-d842-46c9-b230-634378015cc6" name="Copy to Clipboard" type="SubSheetInfo"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><narrative>Copies the current selection on to the clipboard</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef78d8f3-3153-45b1-8714-b95142c7d2b9" name="End" type="End"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c1ca358-cb83-4f00-9bf5-ddf03a34149a" name="handle" type="Data"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4eb6834-0cbe-4f99-8bb0-6c25173f85aa" name="Start" type="Start"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>094bc875-98bf-40d7-930d-c118bff53af6</onsuccess></stage><stage stageid="8f073f68-b07c-4837-91ce-37c063f71401" name="document name" type="Data"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="094bc875-98bf-40d7-930d-c118bff53af6" name="Copy to Clipboard" type="Code"><subsheetid>0ad7469f-a55c-48de-9ec9-7b3b429c91b1</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>ef78d8f3-3153-45b1-8714-b95142c7d2b9</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection

If s IsNot Nothing Then s.Copy

d = Nothing
w = Nothing
s = Nothing]]></code></stage><stage stageid="c2e0189a-f373-4e16-8ac9-b3f50c3928ef" name="Paste from Clipboard" type="SubSheetInfo"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><narrative>Pastes the contents of the clipboard into the document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cc3026b3-8726-4034-9304-aa303f869095" name="End" type="End"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c102344a-5e52-4389-acd8-9d3df3011a36" name="handle" type="Data"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f225a8a7-74c0-4baf-abd1-e4619d1cd9dc" name="Start" type="Start"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /></inputs><onsuccess>32689787-cfad-4f85-98db-9101ef103d8b</onsuccess></stage><stage stageid="414b8866-2d52-4971-aab5-a48d66411bf0" name="document name" type="Data"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32689787-cfad-4f85-98db-9101ef103d8b" name="Paste from Clipboard" type="Code"><subsheetid>e3194549-4702-4196-8e84-02c9414289f2</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /></inputs><onsuccess>cc3026b3-8726-4034-9304-aa303f869095</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application

w.Selection.Paste

d = Nothing
w = Nothing]]></code></stage><stage stageid="c9f4e132-f333-46bd-9f33-bd08364ca098" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c63bcd84-f4b9-4db7-a9ca-2d27ed62ea2c" name="Start" type="Start"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d6bc499e-db0e-4204-94f7-060f8b728596</onsuccess></stage><stage stageid="cae61485-5711-4b5a-b35a-cc2cc49dcecd" name="End" type="End"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d6bc499e-db0e-4204-94f7-060f8b728596" name="Clear" type="Code"><subsheetid>479d48e5-45be-4252-99e6-7685eacb95f0</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cae61485-5711-4b5a-b35a-cc2cc49dcecd</onsuccess><code><![CDATA[
My.Computer.Clipboard.Clear]]></code></stage><stage stageid="5b918aa9-d185-4273-8d17-322bfcb06ab4" name="Find Text" type="SubSheetInfo"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><narrative>Searches the document for the given text</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9fa6746a-2e54-4364-987a-1c82aca0bfdc" name="End" type="End"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="found" stage="found" /></outputs></stage><stage stageid="44e131e3-1dd8-4ae7-ac12-119b805fb8d0" name="handle" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5322d24f-f105-4817-b328-580613831a00" name="Start" type="Start"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="text" stage="text" /><input type="flag" name="match case" stage="match case" /><input type="flag" name="match whole word" stage="match whole word" /></inputs><onsuccess>1f2d6c14-b8c0-4895-8791-15dc1c4b8cd3</onsuccess></stage><stage stageid="b294a47f-4ad7-4cf9-a898-13aefa7c9f0f" name="document name" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f2d6c14-b8c0-4895-8791-15dc1c4b8cd3" name="Find Text" type="Code"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="text" expr="[text]" /><input type="flag" name="match case" expr="[match case]" /><input type="flag" name="match whole word" expr="[match whole word]" /></inputs><outputs><output type="flag" name="found" stage="found" /></outputs><onsuccess>9fa6746a-2e54-4364-987a-1c82aca0bfdc</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection
Dim f As Object = s.Find

Try

f.ClearFormatting
With f
	.Text = Text
	.Replacement.Text = ""
	.Forward = True
	.Wrap = 1 'wdFindContinue
	.Format = False
	.MatchCase = match_case
	.MatchWholeWord = match_whole_word
	.MatchWildcards = False
	.MatchSoundsLike = False
	.MatchAllWordForms = False
End With
found = f.Execute

Catch ex As Exception

found = False

Finally

d = Nothing
w = Nothing
s = Nothing
f = Nothing

End try]]></code></stage><stage stageid="169d67d4-b8ae-48c2-a693-6a4cb4ef2cf4" name="text" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="934d6430-60d8-4676-b570-e3be9639641c" name="found" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c53ac88a-5097-4cd0-8962-e04e6ba421bf" name="match case" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="18a5ce24-7703-42c9-9c67-36c7f5acc805" name="match whole word" type="Data"><subsheetid>a46a3a18-37e6-4658-bf90-5612c2db5da4</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cc529358-b060-4eec-b382-563e4dd595cb" name="Select Next Cell" type="SubSheetInfo"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><narrative>Moves the cursor to the table cell n steps away from the current cell. A positive number of steps moves forward and a negative number moves backwards.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="12001300-6faa-4829-99f6-61df86a10e66" name="End" type="End"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="selected" stage="selected" /></outputs></stage><stage stageid="3beae3c8-e083-4bcd-996b-733ab9676289" name="handle" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75895ee8-9f3a-4bbc-993e-783fd8679de6" name="Start" type="Start"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="steps" narrative="Optional, positive number to move forward, negative to move back, default 1." stage="steps" /></inputs><onsuccess>42ed0356-4769-4b34-a449-4fbe0a21922b</onsuccess></stage><stage stageid="9c875518-2eef-4c5b-8040-004573505f3e" name="document name" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b10f2e8-1f7b-44ae-9d88-ac58bd3f2a22" name="selected" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="42ed0356-4769-4b34-a449-4fbe0a21922b" name="Select Next Cell" type="Code"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="steps" expr="[steps]" /></inputs><outputs><output type="flag" name="selected" stage="selected" /></outputs><onsuccess>12001300-6faa-4829-99f6-61df86a10e66</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = Nothing
Dim c As Object = Nothing
Dim c1 As Object = Nothing
Dim i As Integer

Try
If steps < 0 Then
	For i = steps To -1
		s = w.Selection
		c = s.Cells
		If c.Count = 0 Then
			selected = False
			Exit Sub
		ElseIf c(1).Previous Is Nothing Then
			selected = False
			Exit Sub
		Else
			c(1).Previous.Select
			If c1 Is Nothing Then c1 = c(1)
		End If
	Next
Else
	For i = 1 To steps
		s = w.Selection
		c = s.Cells
		If c.Count = 0 Then
			selected = False
			Exit Sub
		ElseIf c(1).Next Is Nothing Then
			selected = False
			Exit Sub
		Else
			c(1).Next.Select
			If c1 Is Nothing Then c1 = c(1)
		End If
	Next
End If

c1 = Nothing
selected = True

Catch ex As Exception
	selected = False
Finally
	If c1 IsNot Nothing Then
		c1.Select
	End If
	d = Nothing
	w = Nothing
	s = Nothing
	c = Nothing
	c1 = Nothing
End try]]></code></stage><stage stageid="96975d1f-c613-48e6-b917-47041ee8da2c" name="steps" type="Data"><subsheetid>014a9077-47d7-46c4-949a-9dd622e2aa55</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="da8e46d1-b4b9-40b8-96d3-d5f50d7f4c89" name="Set Selected Cell Text" type="SubSheetInfo"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d93f9a85-6397-463f-a7cc-793c62f0afce" name="End" type="End"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e765aafd-6194-4dde-8353-5dca090372ef" name="handle" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e200c448-4a17-47ce-a208-ba02c896eb8a" name="Start" type="Start"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="text" stage="text" /><input type="flag" name="append" narrative="Optional, default False will overwrite." stage="append" /></inputs><onsuccess>5032655f-d60c-4fd4-8247-b167d88f2bda</onsuccess></stage><stage stageid="5b309234-72f0-479a-871b-51dda5f6075c" name="document name" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5032655f-d60c-4fd4-8247-b167d88f2bda" name="Set Cell" type="Code"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="text" expr="[text]" /><input type="flag" name="append" expr="[append]" /></inputs><onsuccess>d93f9a85-6397-463f-a7cc-793c62f0afce</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = Nothing
Dim cs As Object = Nothing
Dim c As Object = Nothing
Dim r As Object = Nothing

Try

s = w.Selection
cs = s.Cells
If cs.Count = 1 Then
	c = cs(1)
	r = c.Range
	If append Then
		r.Text = r.Text.Substring(0, r.Text.Length - 2) & text & r.Text.Substring(r.Text.Length - 2)
	Else
		r.Text = text
	End If
End If

Catch ex As Exception
	Throw ex
Finally
	d = Nothing
	w = Nothing
	s = Nothing
	cs = Nothing
	c = Nothing
	r = Nothing
End try]]></code></stage><stage stageid="213b47ae-d5b2-4c58-a0bb-967f877da779" name="text" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fea1f6e-b9fd-48a4-975b-95eb357812ec" name="append" type="Data"><subsheetid>e5c26c59-2398-4789-8c68-a82d3e675364</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="264c4c7c-6251-4383-9f3a-28559469d1e2" name="Select Next Field" type="SubSheetInfo"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><narrative>Selects the next field in the document</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="058b4f33-fd12-422b-b45f-9604400b893e" name="End" type="End"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="selected" stage="selected" /></outputs></stage><stage stageid="85c127b5-cf48-4914-a129-d36cc585c1ff" name="handle" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f94d5f5d-2027-44e7-8122-ed018c4bcaa0" name="Start" type="Start"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="steps" narrative="Optional, positive number to move forward, negative to move back, default 1." stage="steps" /></inputs><onsuccess>2dc430f1-a3ee-4adb-a992-c153fbb04bca</onsuccess></stage><stage stageid="49b6201c-934e-4e16-98a3-3333ed61e186" name="document name" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5639856e-1937-434a-bfee-927110122a21" name="selected" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93b18a8f-6970-47eb-9c5f-ced62e36f10b" name="steps" type="Data"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="2dc430f1-a3ee-4adb-a992-c153fbb04bca" name="Select Next Field" type="Code"><subsheetid>25894c29-7a40-4c69-8562-7b0ec251e307</subsheetid><loginhibit /><display x="15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="steps" expr="[steps]" /></inputs><outputs><output type="flag" name="selected" stage="selected" /></outputs><onsuccess>058b4f33-fd12-422b-b45f-9604400b893e</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = w.Selection
Dim f As Object = s.Find
Dim wrap, count, which As Integer
Dim forward as Boolean

If steps < 0 Then
	count = -1 * steps
	wrap = 2
	forward = False
	which = 3
Else
	count = steps
	wrap = 1
	forward = True
	which = 2
End If

Try

s.GoTo(What:=7, Which:=which, Count:=count, Name:="")
f.ClearFormatting
With f
	.Text = ""
	.Replacement.Text = ""
	.Forward = forward
	.Wrap = wrap
	.Format = False
	.MatchCase = False
	.MatchWholeWord = False
	.MatchWildcards = False
	.MatchSoundsLike = False
	.MatchAllWordForms = False
End With

s.MoveRight(Unit:=1, Count:=1, Extend:=1)
selected = True

Catch ex As Exception

selected = False

Finally

d = Nothing
w = Nothing
s = Nothing
f = Nothing

End try]]></code></stage><stage stageid="62da7c33-64e2-4cb4-b8f7-50742893de4a" name="Set Selected Checkbox" type="SubSheetInfo"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><narrative>Ticks or unticks the selected checkbox</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="510c9852-b8ac-4ff8-8e0c-7c8d13ed79c3" name="End" type="End"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c24730d4-72ba-45f3-a565-5a2cdde3e197" name="handle" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7894538-d76b-4e8f-9eba-4fdc810eb94a" name="Start" type="Start"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="flag" name="checked" stage="checked" /></inputs><onsuccess>2208ee1b-e132-49b8-8567-2c69be9f4e2b</onsuccess></stage><stage stageid="a9d8cd15-d588-429e-82f7-bede62d5d650" name="document name" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2208ee1b-e132-49b8-8567-2c69be9f4e2b" name="Set Checkbox" type="Code"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="flag" name="Checked" expr="[checked]" /></inputs><onsuccess>510c9852-b8ac-4ff8-8e0c-7c8d13ed79c3</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim w As Object = d.Application
Dim s As Object = Nothing
Dim ffs As Object = Nothing
Dim ff As Object = Nothing
Dim cb As Object = Nothing

Try

s = w.Selection
ffs = s.FormFields
If ffs.Count = 1 Then
	If ffs(1).Type = 71 Then 'wdFieldFormCheckBox
		cb = ffs(1).CheckBox
		cb.Value = checked
	End If
End If

Catch ex As Exception
	Throw ex
Finally
	d = Nothing
	w = Nothing
	s = Nothing
	ffs = Nothing
	ff = Nothing
	cb = Nothing
End try]]></code></stage><stage stageid="df9e9413-eefd-4eae-8129-9314da3eff69" name="checked" type="Data"><subsheetid>0982104d-2763-42e8-a690-69c44d9a4046</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="581ce51a-db6c-4a6c-9455-7047b2e58bdb" name="Get Footer Text" type="SubSheetInfo"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><narrative>Gets the text from the specified footer</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f07e9727-845e-4d3e-b035-79dd9c1a9e02" name="End" type="End"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="footer text" stage="footer text" /></outputs></stage><stage stageid="e7505af8-12a1-48a0-9b29-5d53359af376" name="section" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="2ed14a06-174f-4565-be98-fea2aabfb137" name="footer" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d2735c81-3c82-4c05-804d-dc66ad1d7a0f" name="handle" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d20473de-325e-4790-8adc-d4afa4a49f54" name="document name" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89da9cc4-334f-4e99-9348-64fea39e45ad" name="Get Footer text" type="Code"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="number" name="section" expr="[section]" /><input type="number" name="footer" expr="[footer]" /></inputs><outputs><output type="text" name="footer text" stage="footer text" /></outputs><onsuccess>f07e9727-845e-4d3e-b035-79dd9c1a9e02</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim s As Object = Nothing
Dim f As Object = Nothing
Dim r As Object = Nothing

Try

s = d.Sections(section)
f = s.Footers(footer)
r = f.Range

footer_text = r.text

Catch ex As Exception
	Throw ex
Finally
	d = Nothing
	s = Nothing
	f = Nothing
	r = Nothing
End try]]></code></stage><stage stageid="c9d0bd4e-e9b7-4677-b57b-025580e8a62a" name="Start" type="Start"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="number" name="section" narrative="Default 1" stage="section" /><input type="number" name="footer" narrative="Default 1" stage="footer" /></inputs><onsuccess>89da9cc4-334f-4e99-9348-64fea39e45ad</onsuccess></stage><stage stageid="21cad55b-4aa5-44d6-8d55-8668a8e01267" name="footer text" type="Data"><subsheetid>dc779662-1e7e-4438-b1c5-1106c851c3a3</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcb6879c-aec3-4f7e-b0c0-c7a05541c8ce" name="Add Table Row" type="SubSheetInfo"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="87ab81a0-0173-4bb1-a341-070e1a8672d4" name="Start" type="Start"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the word document" stage="Table Number" /></inputs><onsuccess>8bf740f2-5429-4adb-ba49-4345536358a7</onsuccess></stage><stage stageid="11ef2aff-c240-4089-a3dc-133c850260fe" name="End" type="End"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8bf740f2-5429-4adb-ba49-4345536358a7" name="CheckInstanceHandle" type="SubSheet"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>e352f349-79ec-4303-9fa0-d6b6329b9b3d</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="e352f349-79ec-4303-9fa0-d6b6329b9b3d" name="AddRow" type="Code"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-15" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /></inputs><onsuccess>11ef2aff-c240-4089-a3dc-133c850260fe</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Rows.Add()]]></code></stage><stage stageid="3146c42a-ee16-4654-8f47-cad56ba1c4a3" name="handle" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0fa28223-5cbc-4b56-994f-735cb7ecf068" name="documentname" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a9191e3-0b09-44ee-9fd3-96a452ae22de" name="Table Number" type="Data"><subsheetid>349117e1-607c-4bb6-a911-5074cb58aca0</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71eeff42-400a-4827-9003-61399bbd4ec0" name="Set Table Cell Value" type="SubSheetInfo"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="144acb7e-c0ea-4870-9588-1e1d12935a8e" name="End" type="End"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="75792fd8-d387-4be8-96b9-05b6a240d922" name="CheckInstanceHandle" type="SubSheet"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7bcad06a-9e42-4c2b-941c-fb66a76fde60</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="7bcad06a-9e42-4c2b-941c-fb66a76fde60" name="SetCell" type="Code"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="0" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="cellx" expr="[Cell x Number]" /><input type="number" name="celly" expr="[Cell y Number]" /><input type="text" name="CellValue" expr="[Value]" /></inputs><onsuccess>144acb7e-c0ea-4870-9588-1e1d12935a8e</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
doc.Tables.Item(TableNumber).Cell(celly,cellx).Range.Text = CellValue]]></code></stage><stage stageid="35ed0ea5-a2a7-4a92-a3a7-c9c817bc77cb" name="handle" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0baad10b-f2e3-4d40-8a3b-0fc6b52c05c9" name="documentname" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="536f5aa3-617c-440e-9b06-997207b34dc9" name="Table Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80acb91a-397b-48c7-bf67-f3a861b626e4" name="Cell x Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62ad7203-c6fb-4198-b33e-b9c3734eef55" name="Cell y Number" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9c145f5-9d12-4e84-b025-08cc8532ed87" name="Value" type="Data"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="90489fc7-f75a-4870-9b72-b146515b522f" name="Start" type="Start"><subsheetid>8ddb9b98-da89-468a-b5a4-5eedf5a204ee</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="0" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the document" stage="Table Number" /><input type="number" name="Cell x Number" narrative="The x location number of the cell within the table (starts at 1)" stage="Cell x Number" /><input type="number" name="Cell y Number" narrative="The y location number of the cell within the table (starts at 1)" stage="Cell y Number" /><input type="text" name="Value" narrative="The value to set the cell to" stage="Value" /></inputs><onsuccess>75792fd8-d387-4be8-96b9-05b6a240d922</onsuccess></stage><stage stageid="98bd4479-501c-4af6-87b3-0e44102b30f1" name="Get Table Cell Value" type="SubSheetInfo"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="20a32c47-0bd7-438f-8bc9-cd34a9258f92" name="Start" type="Start"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="0" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /><input type="number" name="Table Number" narrative="The number of the table within the document" stage="Table Number" /><input type="number" name="Cell x Number" narrative="The x location number of the cell within the table (starts at 1)" stage="Cell x Number" /><input type="number" name="Cell y Number" narrative="The y location number of the cell within the table (starts at 1)" stage="Cell y Number" /></inputs><onsuccess>c02323b7-9f42-4a22-8729-fa65114b1a7b</onsuccess></stage><stage stageid="02dfaa1a-2b89-40d1-a9d8-ce53515dcc8a" name="End" type="End"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="the cell contents" stage="result" /></outputs></stage><stage stageid="c02323b7-9f42-4a22-8729-fa65114b1a7b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>10df1c8e-f6b2-4f55-a8e0-a14ac4a94d02</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="10df1c8e-f6b2-4f55-a8e0-a14ac4a94d02" name="GetCell" type="Code"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="0" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="number" name="TableNumber" expr="[Table Number]" /><input type="number" name="cellx" expr="[Cell x Number]" /><input type="number" name="celly" expr="[Cell y Number]" /></inputs><outputs><output type="text" name="result" stage="result" /></outputs><onsuccess>02dfaa1a-2b89-40d1-a9d8-ce53515dcc8a</onsuccess><code><![CDATA[
Dim doc as Object = GetDocument(handle,documentname)
result = doc.Tables.Item(TableNumber).Cell(celly,cellx).Range.Text]]></code></stage><stage stageid="876bd8c3-5bc4-4ce4-a349-8a07eea11a38" name="handle" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b16e011f-0e1b-45a0-8152-71f30d0a2bcc" name="documentname" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ded21bd0-41c4-412f-b40f-b9c7946eea0e" name="result" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff923bf0-e2c8-49bf-a547-9c4624ceebc4" name="Table Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6752801f-8544-44e4-9eed-6159fe32331d" name="Cell x Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="815b9e66-4c61-42fb-9b19-d3d7f86aeac4" name="Cell y Number" type="Data"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e945f84a-1ffc-461e-a613-eafef2869044" name="Note2" type="Note"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="fa36ded4-4caa-4238-8abc-6350ee0c945e" name="Note2" type="Note"><subsheetid>63dcd298-f559-4625-834f-f728c3391345</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="ae82d62f-d1b2-4af1-977a-db5619d47797" name="ExportPDF" type="SubSheetInfo"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b5725bdb-4fb0-4666-9975-83186b793e2e" name="Start" type="Start"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" stage="filename" /><input type="text" name="documentname" stage="documentname" /><input type="number" name="handle" stage="handle" /></inputs><onsuccess>c4b70afa-f912-4ea4-91af-d05e2f73da34</onsuccess></stage><stage stageid="7df78cd1-d4d4-4f7f-b232-44da138f17fb" name="End" type="End"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c4b70afa-f912-4ea4-91af-d05e2f73da34" name="CheckInstanceHandle" type="SubSheet"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>5f267c84-0795-4a87-900f-b5028d73ec8a</onsuccess><processid>293ea206-e215-4639-a1d8-85d6fad4c062</processid></stage><stage stageid="5f267c84-0795-4a87-900f-b5028d73ec8a" name="ExportPDF" type="Code"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="documentname" expr="[documentname]" /><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>7df78cd1-d4d4-4f7f-b232-44da138f17fb</onsuccess><code><![CDATA[Const wdExportFormatPDF As Integer = 17

Dim doc as Object = GetDocument(handle,documentname)
doc.ExportAsFixedFormat( _
  OutputFileName:=filename, _
  ExportFormat:=wdExportFormatPDF)
]]></code></stage><stage stageid="3bddbd67-c3d7-46ef-a6e9-3f2c78c00fe3" name="filename" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="540adde5-d599-4f0d-819b-1e875fcebcc7" name="documentname" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="177dcef4-e724-431f-8af4-1eee1deecc09" name="handle" type="Data"><subsheetid>a54f1cbc-a023-4c2d-bf17-23169a3e685d</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93cfaee7-9157-444e-81a0-3091226b51e4" name="Find and Replace" type="SubSheetInfo"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><display x="-225" y="-120" w="150" h="90" /></stage><stage stageid="181de1ca-33af-4303-8486-f281b95564fa" name="End" type="End"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><loginhibit /><display x="-30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="38f4bd40-c05c-4a4a-85e1-3ad67e0d33bd" name="handle" type="Data"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><display x="-240" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d529271-0871-4ee5-864d-ae4703232f92" name="Start" type="Start"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><loginhibit /><display x="-30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="document name" stage="document name" /><input type="text" name="current text" stage="current text" /><input type="text" name="new text" stage="new text" /></inputs><onsuccess>8c803f43-16de-460c-90f1-084972efb11c</onsuccess></stage><stage stageid="6dc68f7f-a335-44ac-a824-c26501181020" name="document name" type="Data"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><display x="-240" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bb1815e-04d7-4d40-a072-02af24af281f" name="current text" type="Data"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><display x="-240" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9201b234-bb2f-4dbb-9ca6-9d35374f0298" name="new text" type="Data"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><display x="-255" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c803f43-16de-460c-90f1-084972efb11c" name="Replace Text1" type="Code"><subsheetid>d2c3ca32-4281-461d-8be9-453358a53092</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="document name" expr="[document name]" /><input type="text" name="current text" expr="[current text]" /><input type="text" name="new text" expr="[new text]" /></inputs><onsuccess>181de1ca-33af-4303-8486-f281b95564fa</onsuccess><code><![CDATA[
Dim d As Object = GetDocument(handle,document_name)
Dim r As Object = d.Range
Dim i As Integer

'r.Find.Highlight = true
r.Find.Forward = True

Do While r.Find.Execute(current_text)
	'If r.HighlightColorIndex = current_highlight Then
		r.Text = new_text
		'r.HighlightColorIndex = CInt(new_highlight)
		'r.Bold=new_bold
	'End If
	i = r.End
	r.Start = i
Loop]]></code></stage></process></object>
        <object id="b6c8b7d5-4eb0-4238-bd42-350415b818d7" name="Off The Plan Payment Transfer Amount _MsExcel VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="Off The Plan Payment Transfer Amount _MsExcel VBO" version="5.0.999.999" bpversion="7.0.1.49890" narrative="The VBO replacement for the Common Automation Excel business object" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ca515603-8af2-4608-8a70-31028a7d9a0b</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="67651307-0389-47bf-ae8d-fd94364e808f" type="Normal" published="True"><name>Remove Blank Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aef25d68-c6e7-447c-99d2-56885d72b172" type="Normal" published="True"><name>AbhiProcess</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="492548e8-2fa5-473e-9061-df8326d46e4c" type="Normal" published="False"><name>CheckInstanceHandle</name><view><camerax>62</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f7a4a91-68c9-4871-bb65-417e96cc4ad1" type="Normal" published="False"><name>CheckInstanceAndWorkbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41a07606-d51b-4fe3-a076-7a77a4ca2cde" type="Normal" published="False"><name>CheckFileExists</name><view><camerax>-22</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="99e648cc-a136-471c-8424-19071c0fd9e7" type="Normal" published="True"><name>Create Instance</name><view><camerax>-60</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ec281dc5-ed57-4b8b-9bf5-212e314657aa" type="Normal" published="True"><name>Open Instance</name><view><camerax>209</camerax><cameray>-94</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ad81501-44a1-48ab-94fd-9b2c35ed20b8" type="Normal" published="True"><name>Attach</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2b3544ad-af96-4f40-9b50-16dfbe0600f1" type="Normal" published="True"><name>Attach to workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ec3006a-6553-4526-b522-32526c4aa3cc" type="Normal" published="True"><name>Close Instance</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4fb11e41-83d8-461d-8c0d-04cdd2f670e2" type="Normal" published="True"><name>Release Instance</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc33871a-9aec-4a29-b811-3ab205ddf41e" type="Normal" published="True"><name>Exit</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="feb8ce9f-299e-4152-85a1-354a5f9d995c" type="Normal" published="True"><name>Close All Instances</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859e3c31-acbc-48dd-8535-ef2ce9385d70" type="Normal" published="True"><name>Set Current Instance</name><view><camerax>-36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69db5cf5-4908-49c7-9027-8f48e26e5b27" type="Normal" published="True"><name>Set Events Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="268628ce-c0f3-492a-be5c-87b432e16d1d" type="Normal" published="True"><name>Show</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef10421c-e1ff-4227-b367-c53059a6766d" type="Normal" published="True"><name>Hide</name><view><camerax>-62</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="73b8ddb4-b679-4697-b3c4-79ce833a9456" type="Normal" published="True"><name>Create Workbook</name><view><camerax>-117</camerax><cameray>-246</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2fb01e3f-e275-43bc-83eb-579001da335b" type="Normal" published="True"><name>Open Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6632ed99-8751-4c2a-ad00-3cc016300e08" type="Normal" published="True"><name>Activate Workbook</name><view><camerax>-137</camerax><cameray>-75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6e7cb0ad-5910-4065-aab2-2919726bae39" type="Normal" published="True"><name>Save Workbook</name><view><camerax>-44</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76d598ed-b254-4c1e-8004-d4f2928b1450" type="Normal" published="True"><name>Save Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="21a53e34-8128-41cb-ad73-17250758ff23" type="Normal" published="True"><name>Save Workbook As</name><view><camerax>-64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="81b9e5cd-a91d-4a33-bc23-1602c5fe878f" type="Normal" published="True"><name>Save Current Workbook As</name><view><camerax>-135</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6ccaae8b-c06f-45c8-8772-835218881458" type="Normal" published="True"><name>Close Workbook</name><view><camerax>-232</camerax><cameray>110</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c" type="Normal" published="True"><name>Close Current Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ddb3c741-0c59-4ac8-a260-258fb8eb1674" type="Normal" published="True"><name>Is Read Only</name><view><camerax>-91</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="733c2840-8162-465a-a8f2-7d023087c369" type="Normal" published="True"><name>Activate Worksheet</name><view><camerax>-132</camerax><cameray>-106</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f78a5f80-c2d5-4e9b-ae08-a56fb8007b18" type="Normal" published="True"><name>Create Worksheet</name><view><camerax>-120</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="37a2442f-8e22-4749-8b44-4ef2980f28a6" type="Normal" published="True"><name>Delete Worksheet</name><view><camerax>16</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79b9bf7c-222d-4cc3-adc8-5bb337fa6d72" type="Normal" published="True"><name>Move Worksheet</name><view><camerax>51</camerax><cameray>96</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da83b3dd-0312-4b53-9732-e3f8e29c561f" type="Normal" published="True"><name>Copy and Paste Worksheet Range</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30" type="Normal" published="True"><name>Get Worksheet As Collection</name><view><camerax>43</camerax><cameray>-285</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e58a482d-f349-4f40-9b03-a903156ce1b5" type="Normal" published="True"><name>Get Worksheet As Collection (Fast)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7f4653f3-592a-42ef-999e-7e08447d6587" type="Normal" published="True"><name>Delete row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92799072-140a-4621-89cd-2da12475dcda" type="Normal" published="True"><name>Get Worksheet as Collection Offset</name><view><camerax>64</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e" type="Normal" published="True"><name>Get Worksheet Range As Collection</name><view><camerax>147</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f743df98-2e69-4559-89b6-32ef6637618d" type="Normal" published="True"><name>Split Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="becd6faa-f5c0-4d3a-a48a-cb54d3aa8909" type="Normal" published="True"><name>Get Worksheet Names</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67" type="Normal" published="True"><name>Get Worksheet Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="510b0ce5-bf46-43a1-86a4-72877f427e6f" type="Normal" published="True"><name>Get Worksheet Position</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eacc4634-9985-4a1d-9773-8f79928708ee" type="Normal" published="True"><name>Worksheet Exists</name><view><camerax>105</camerax><cameray>81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc139ac7-b971-481e-9528-b1521ae9fc92" type="Normal" published="True"><name>Get Number Of Rows</name><view><camerax>8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed502669-4207-4c88-895d-8c58ec321578" type="Normal" published="True"><name>Go To Cell</name><view><camerax>-6</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0b877cd-07ce-4df1-a63b-89fa4d315c4c" type="Normal" published="True"><name>Go To Next Cell</name><view><camerax>-180</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c" type="Normal" published="True"><name>Get Active Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0b5de6c6-ed9a-443d-95b8-142dd521120e" type="Normal" published="True"><name>Find Next Empty Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eaafa766-b0ce-4891-8e6e-de12d6283ae0" type="Normal" published="True"><name>Go To Next Empty Cell Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2d4c80d-3058-4d60-8e96-7b9b12f9ae58" type="Normal" published="True"><name>Go To Next Empty Cell Right</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5a78c1a5-e339-4f76-9203-d180bee31770" type="Normal" published="True"><name>Go To Next Empty Cell Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="82492075-b486-413c-9bd4-05eba466843e" type="Normal" published="True"><name>Go To Next Empty Cell Down</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5698ca16-b00d-4d62-9d9b-e76e8295b556" type="Normal" published="True"><name>Set Cell Value</name><view><camerax>55</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0dbe03a0-e259-47ab-bee7-7dec41ae32e7" type="Normal" published="True"><name>Write Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ebb1c9ea-1996-4373-aac5-28640a5ea498" type="Normal" published="True"><name>Auto Fill Range</name><view><camerax>-27</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0e031661-2f5e-4cb2-949b-97babe59ff81" type="Normal" published="True"><name>Get Cell Value</name><view><camerax>0</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d96215cc-750e-4616-8852-1d4d44a9f21b" type="Normal" published="True"><name>Get Active Cell Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="17f8ab72-203a-42d4-a59b-a073ccd57bb0" type="Normal" published="True"><name>Get Formatted Cell Value</name><view><camerax>-54</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c" type="Normal" published="True"><name>Format Cell</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9b535bfc-4f80-4d7c-88b5-49b941688030" type="Normal" published="True"><name>Format Current Cell</name><view><camerax>0</camerax><cameray>-28</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035f75ef-016f-4c45-ab51-5b2cd9eabe87" type="Normal" published="True"><name>Format Columns</name><view><camerax>563</camerax><cameray>-9</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39374841-edab-4ea9-86d9-5f2fff3f1a5f" type="Normal" published="True"><name>Set Window Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="904eeb0d-e6a2-408b-99b5-621307252585" type="Normal" published="True"><name>Set Window Location</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d4998c94-d432-4713-81a5-e902535089c6" type="Normal" published="True"><name>Set Window State</name><view><camerax>-11</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9147cb85-5c6f-4a47-adcf-ab472d5a0b5a" type="Normal" published="True"><name>Select</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a" type="Normal" published="True"><name>Delete</name><view><camerax>188</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="659749b0-1f00-4e33-956d-6be6172a8739" type="Normal" published="True"><name>Insert</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="71ebd060-a411-45fc-8f39-132eb3e5ff79" type="Normal" published="True"><name>Copy</name><view><camerax>98</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5eee765d-c84b-493f-9132-f6a27f296d0e" type="Normal" published="True"><name>Cut</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="035d5ed0-2f39-46ca-80c1-b0127418dc9e" type="Normal" published="True"><name>Paste</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c59601b-2b70-4c97-a218-0abf1bf7463a" type="Normal" published="True"><name>Write To Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c37e9923-b729-471b-80b1-7d44113ca618" type="Normal" published="True"><name>Protect Workbook</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7316eded-6aed-4d1d-9eeb-64fbbb8e53a0" type="Normal" published="True"><name>Hide Worksheet</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e62b9c20-62f8-4d28-8f19-de7610e56e1e" type="Normal" published="True"><name>Hide Other Worksheets</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1487aa65-ac8a-44e9-a6e9-8b16b4be5199" type="Normal" published="True"><name>Import CSV</name><view><camerax>0</camerax><cameray>88</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4229da44-68c0-4b51-9d2c-08be4a9d6727" type="Normal" published="True"><name>Run Macro</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e312ef1e-f655-4e1d-9671-8f8c860ef57d" type="Normal" published="True"><name>Filter Excel</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c9615767-6652-4462-b1f8-fac034e2c3a2" type="Normal" published="True"><name>Delete Filtered Values</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5502a7f-1139-434f-8bd9-6009432d1e11" type="Normal" published="True"><name>Remove Excel Filter</name><view><camerax>20</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="8f886cd8-eef6-485f-b9f3-0086c90eecdb" name="Start" type="Start"><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0d87ebb-154d-4756-8b89-d2d5445479ae</onsuccess></stage><stage stageid="d0d87ebb-154d-4756-8b89-d2d5445479ae" name="End" type="End"><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="13efd9ee-454d-4e73-a19d-91a25c412087" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Collections.Generic</import><import>System.IO</import><import>Microsoft.VisualBasic</import><import>System.Windows.Forms</import><import>System.Data</import><import>System.Diagnostics</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[
' External functions used to make sure the excel instances are exited and processes killed
Declare Function EndTask Lib "user32.dll" (ByVal hWnd As IntPtr) As Integer
Declare Function FindWindow Lib "user32.dll" Alias "FindWindowA" _
	   (ByVal lpClassName As String, ByVal lpWindowName As String) As IntPtr
Declare Function GetWindowThreadProcessId Lib "user32.dll" _
	   (ByVal hWnd As IntPtr, ByRef lpdwProcessId As Integer) As Integer
Declare Function SetLastError Lib "kernel32.dll" (ByVal dwErrCode As Integer) As IntPtr

' The 'active' instance of excel.
' This is updated on any access of an instance (either adding a new
' instance or getting one)
'
Private CurrentInstance As Object

' Map of instances keyed against the handles which represent them.
'
Private HandleMap As Dictionary(Of Integer, Object)

' Map of handles keyed against the instances they represent.
' Here to ensure we don't assign multiple handles to a single
' instance and bring about a memory leak
'
Private InstanceMap As Dictionary(Of Object, Integer)

' Constructor - this just initialises the collections which map
' the excel instances to handles and vice versa.
Public Sub New()

	Me.HandleMap = New Dictionary(Of Integer, Object)()
	Me.InstanceMap = New Dictionary(Of Object, Integer)()

End Sub

' Gets the handle for a given instance
'
' If the instance is not yet held, then it is added to the 
' 	map and a handle is assigned to it. It is also set as the
' 	'current' instance, accessed with a handle of zero in the
' 	below methods.
'
' Either way, the handle which identifies the instance is returned
'
' @param Instance The instance for which a handle is required
'
' @return The handle of the instance
Protected Function GetHandle(Instance As Object) As Integer

	If Instance Is Nothing Then
		Throw New ArgumentNullException("Tried to add an empty instance")
	End If

	' Check if we already have this instance - if so, return it.
	If InstanceMap.ContainsKey(Instance) Then
		CurrentInstance = Instance
		Return InstanceMap(Instance)
	End If

	Dim key as Integer
	For key = 1 to Integer.MaxValue
		If Not HandleMap.ContainsKey(key)
			HandleMap.Add(key, Instance)
			InstanceMap.Add(Instance, key)
			Me.CurrentInstance = Instance
			Return key
		End If
	Next key

	Return 0

End Function


' Gets the instance corresponding to the given handle, setting
' 	the instance as the 'current' instance for future calls
'
' A value of 0 will provide the 'current' instance, which
' 	is set each time an instance is added or accessed.
'
' This will return Nothing if the given handle does not
' correspond to a registered instance, or if the current
' instance was closed and the reference has not been updated.
'
' @param Handle The handle representing the instance required,
' 		or zero to get the 'current' instance.
Protected Function GetInstance(Handle As Integer) As Object

	Dim Instance As Object = Nothing
	
	If Handle = 0 Then
		If CurrentInstance Is Nothing Then
			' Special case - getting the current instance when the
			' instance is not set, try and get a current open instance.
			' If none there, create a new one and assign a handle as if
			' CreateInstance() had been called
		'	Try
		'		Instance = GetObject(,"Excel.Application")
		'	Catch ex as Exception ' Not running
		'		Instance = Nothing
		'	End Try
		'	If Instance Is Nothing Then
				Create_Instance(Handle)
				' Instance = CreateObject("Excel.Application")
				' Force the instance into the maps.
				' GetHandle(Instance)
				' CurrentInstance should now be set.
				' If it's not, we have far bigger problems
		'	End If
		End If
		Return CurrentInstance
	End If

	Instance = HandleMap(Handle)
	If Not Instance Is Nothing Then
		CurrentInstance = Instance
	End If
	Return Instance

End Function


' Close the instance with the given handle, not saving any work, making
' sure that it is removed from this VBO's collection of instances
'
' @param Handle The handle representing the instance to close
Protected Sub CloseInstance(Handle As Integer)
	CloseInstance(Handle, False)
End Sub

' Close the instance with the given handle, saving the work as specified.
'
' @param Handle The handle representing the instance
'
' @param SaveWorkbooks True to save the workbooks before quitting the instance,
' 		False to discard any changes
Protected Sub CloseInstance(Handle As Integer, SaveWorkbooks As Boolean)
	
	Dim Instance As Object = Nothing
	If Handle = 0 AndAlso CurrentInstance Is Nothing Then
		Throw New NullReferenceException("Tried to close nonexistent current instance")
	ElseIf Handle = 0 ' Current Instance - reset it
		Handle = GetHandle(CurrentInstance) ' We need the handle to remove from HandleMap
		Instance = CurrentInstance
		CurrentInstance = Nothing
	Else
		Instance = GetInstance(Handle)
	End If

	Me.HandleMap.Remove(Handle)
	Me.InstanceMap.Remove(Instance)

	Instance.DisplayAlerts = False ' Hide alerts
	
	' First close all the workbooks and the workbooks collection
	Dim wbs as Object = Instance.Workbooks
	If wbs IsNot Nothing Then
		For Each Workbook As Object In wbs
			Workbook.Close(SaveWorkbooks)
		Next
		wbs.Close()
	End If
	
	' Try quitting - sometimes this is enough
	Instance.Quit()
	
	' Try and force a com object release - this might quit excel for us.
	System.Runtime.InteropServices.Marshal.ReleaseComObject(Instance)

	' Now if the com object has released the RCW, we need to stop
	' We'll know because if we try and get the version and it fails
	' then the COM object has been cleaned up.
	' If so, end the proc now - we have to assume the instance is gone
	
	Dim Ver as Double = 0.0
	Try
		Ver = Val(Instance.Version)
	Catch ex as Exception
		' Not got the version - assuming cleared up
		Return
	Finally
		SetLastError(0) ' If any errors have occurred thus far, clear them
	End Try

	' Now it's the messy stuff to try and find the excel instance and nuke
	' it from orbit. It's the only way to be sure.

	' The window handle for the excel instance
	Dim hwnd As IntPtr = IntPtr.Zero
	' Later versions of excel expose the window handle
	If Val(Ver) >= 10 Then _
		hwnd = New IntPtr(CType(Instance.Parent.Hwnd, Integer))
		
	' If the window handle isn't set, must be an earlier version of excel
	' Use FindWindow to find the window with the GUID that we set in it on creation
	If IntPtr.Equals(hwnd, IntPtr.Zero) Then _
		hwnd = FindWindow(Nothing, Instance.Caption)
	
	' If the window handle is still zero, the instance must already be closed
	If Not IntPtr.Equals(hwnd, IntPtr.Zero) Then
	
        ' Get the process ID for the window we have
		Dim resp, procId as Integer
        resp = GetWindowThreadProcessId(hwnd, procId)
		
        If procId = 0 Then ' can’t get Process ID
            If EndTask(hwnd) = 0 Then ' EndTask returns a bool - 0 = False
				Throw New ApplicationException("Failed to close Excel Instance.")
			End If
        Else ' We have a process ID - use it to kill excel
			Dim proc As Process = Process.GetProcessById(procId)
			' Try clicking the 'X'
			proc.CloseMainWindow()
			proc.Refresh()

			If Not proc.HasExited Then
				proc.Kill()	' Last resort - kill it with fire
			End If	
		End If	
	End If

End Sub

' Creates a new workbook in the instance represented by the given handle
'
' @param Handle The handle of the instance on which the workbook should be held
'
' @return The workbook object that was created.
Protected Function NewWorkbook(Handle as Integer) As Object

	Dim wb as Object = GetInstance(handle).Workbooks.Add()

	' Create a new Worksheet?
	if wb.Worksheets.Count = 0 Then
		wb.Sheets.Add().Activate()
	Else ' Just use the first sheet
		wb.Sheets(1).Activate()
	End If
	
	Return wb
	
End Function

' Gets the workbook in the given instance with the given name.
'
' @param Handle The handle representing the instance which holds the workbook
'
' @param Name The name of the workbook on the instance
'
' @return The object representing the workbook defined
Protected Function GetWorkbook(Handle As Integer, Name as String) As Object

	Dim wb as Object = Nothing
	If String.IsNullOrEmpty(Name) Then
		wb = GetInstance(Handle).ActiveWorkbook
		If wb Is Nothing ' We need to create a deafult workbook
			wb = NewWorkbook(Handle)
		End If
		Return wb
	Else
		Return GetInstance(Handle).Workbooks(Name)
	End If

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one and return that
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @return The sheet object representing the sheet with the given name
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String) As Object

	Return GetWorksheet(Handle,WorkbookName,WorksheetName,True)

End Function

' Gets the worksheet specified by the given handle, workbook name and
' worksheet name. If no such sheet is available, this will create a
' new one or return Nothing, depending on the given flag
'
' @param Handle The handle identifying the instance which should be
' 		acted on
'
' @param WorkbookName The name of the workbook within the instance
'
' @param WorksheetName The name of the worksheet required
'
' @param CreateIfNotExists True to create the worksheet if it doesn't
' 		exist; False to return Nothing if it doesn't exist.
'
' @return The sheet object representing the sheet required or Nothing
'		if no such sheet exists and CreateIfNotExists was False
Protected Function GetWorksheet(Handle As Integer, _
		WorkbookName As String, _
		WorksheetName As String, _
		CreateIfNotExists As Boolean) As Object

	Dim wb As Object = GetWorkbook(Handle, WorkbookName)
	
	If (String.IsNullOrEmpty(WorksheetName)) Then

		Dim ws as Object = wb.ActiveSheet
		If ws Is Nothing Then
			Return wb.Sheets.Add()
		Else
			Return ws
		End If

	Else
		Dim sheets as Object = wb.Sheets
		If sheets IsNot Nothing Then
			For Each sheet as Object in sheets
				If sheet.Name = WorksheetName Then _
					Return sheet
			Next
		End If
		' Didn't find the sheet...
		If CreateIfNotExists Then

			Dim sheet as Object = sheets.Add()
			sheet.Name = WorksheetName
			Return sheet

		End If
		' Nothing else we can do - return nowt
		Return Nothing

	End If

End Function

' Gets the next cell, relative to a given cell in a given direction
' Note that if the cell is at a boundary, then the same cell is returned.
'
' @param cell : The cell to use as a base cell
'
' @param strDir : one of "L", "R", "U", "D" representing a direction from
' 		the given cell to move in.
'
' @return : The cell object representing the 'next cell' 
Protected Function GetNextCell(cell as Object, strDir as String) As Object
	
	Try
		Select Case strDir
			Case "L"
				cell = cell.Offset(0,-1)
			Case "R"
				cell = cell.Offset(0,1)
			Case "U"
				cell = cell.Offset(-1,0)
			Case "D"
				cell = cell.Offset(1,0)
		End Select
	Catch ex As Exception
		' A COM Exception is thrown if the cell is at a boundary and the offset
		' would break that boundary
	End Try
	
	Return cell

End Function]]></code></stage><stage stageid="debd0d09-d7e8-4af4-b718-c69fd2d3db22" name="Clean Up" type="SubSheetInfo"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Closes all the instances that have been created / attached to using this business object.</narrative><display x="-180" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="74a37e04-8569-40b9-8cc7-55d419e6c658" name="Start" type="Start"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fedc107e-577b-47d9-a445-c3a3e66ef516</onsuccess></stage><stage stageid="d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba" name="End" type="End"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9864b229-3596-444e-afb1-b46efff51132" name="Create Workbook" type="SubSheetInfo"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><narrative>Creates a workbook on the specified instance, returning the resultant name.

Params:
- handle : Number : The handle identifying the instance on which the workbook should be required. The default of zero indicates the current instance.

Returns:
- Workbook Name : Text : The workbook name that Excel has granted to the new workbook. By default, Excel will call it "Book&lt;n&gt;" where &lt;n&gt; is a positive integer.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.</narrative><display x="-255" y="-300" w="330" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e4ba7053-63b7-4fa4-b64b-12309c5d3d51" name="Start" type="Start"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-390" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be created. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>852ff62f-6d2b-4031-b675-ec155fd88908</onsuccess></stage><stage stageid="1d707fac-863d-4281-b9d0-a65c74bf374c" name="End" type="End"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name of the workbook that Excel has created - this can be changed using the &quot;Save Workbook As&quot; action" stage="workbookname" /></outputs></stage><stage stageid="88aa07c9-ea21-42c6-80da-110e83fc2748" name="new" type="Note"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7cd0bd3-f4fc-4acb-921b-97d3cff31998" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-195" y="30" w="300" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ffe88be-5a6a-452e-a183-9d1b9e027326" name="Open Workbook" type="SubSheetInfo"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><narrative>Opens a workbook using the instance specified in the given handle, opening the book represented by the given filename.

Params :
- handle : Number : The handle to the instance in which the workbook should be opened. The default value of zero indicates the current instance.
- File name : Text : The path to the file which should be opened.

Outputs:
- Workbook Name : Text : The name of the workbook that Excel uses to identify it.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-255" y="-165" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="753ce277-ee09-4ee9-841b-827037917616" name="Start" type="Start"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The path and name of the file which should be opened." stage="filename" /></inputs><onsuccess>9e0df7e0-ab34-4a97-9f69-db66c88ff5f4</onsuccess></stage><stage stageid="18a306bf-d323-4c4e-83b5-4b226773161c" name="End" type="End"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Workbook Name" narrative="The name used by Excel to identify the workbook - usually this is the file name (without the path)." stage="workbookname" /></outputs></stage><stage stageid="4d2c2635-39a5-41ce-8c67-49eb1db37d55" name="Save Workbook" type="SubSheetInfo"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><narrative>Saves the workbook using the current name as a filename.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be saved. The default of 0 indicates the current instance.
- Workbook Name : The name of the workbook to be saved. The default of empty indicates that the active workbook should be saved.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c92f23e-cde4-457b-8a6e-2856cf88955e" name="Start" type="Start"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /></inputs><onsuccess>ab6f627b-d630-4bdd-b840-7aac26b5806f</onsuccess></stage><stage stageid="4c75715c-7a4a-491b-804f-261ee86fcd95" name="End" type="End"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cee07b01-63cb-4d6d-9cc4-d1868ae80a0a" name="Save Workbook As" type="SubSheetInfo"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>Save the given workbook using the given file name.

Params :
- handle : Number : The integer identifying the instance on which the workbook resides. Default (0) indicates the current instance
- Workbook Name : Text : The name of the workbook which should be saved. Default ("") indicates the active workbook.
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-180" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f79caf-dea6-4a9a-95f0-0c05bea8b485" name="End" type="End"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook within the instance." stage="newworkbookname" /></outputs></stage><stage stageid="8ff7cce5-b764-42f9-88ed-51eb82a178c0" name="Activate Worksheet" type="SubSheetInfo"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><narrative>Activates / Creates the worksheet specified by the given parameters 

Params:
- handle : Number : The instance handle;
- Workbook Name : Text : is the name of the workbook on which the sheet resides / should be created;
- Sheet name : Text : The name of the worksheet
- Create If Missing? : Flag : Indicates if the worksheet should be created if one with that name doesn't exist on the workbook - if missing, it will *not* create it.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the given worksheet did not exist on the specified workbook.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ddfe7f54-b5c2-410a-8a5d-3c2b52de9550" name="End" type="End"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf681fff-ce18-4dcc-b190-da9870383e35" name="Delete Worksheet" type="SubSheetInfo"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><narrative>Deletes the specified worksheet from the workbook.

Params:
- handle : Number : The excel instance handle
- Workbook Name : Text : The name of the workbook
- Worksheet Name : Text : The name of the sheet to delete.
If the sheet doesn't exist, this will fail silently - ie. nothing will occur.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the named worksheet did not exist on the specified workbook, or if the active sheet was specified and there was no active sheet.</narrative><display x="-240" y="-135" w="360" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c23803d1-15b5-4976-9466-8fb2e49529d3" name="Go To Cell" type="SubSheetInfo"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><narrative>Activates the cell in the given workbook, identified by the given cell reference.

Params:
- handle : Number: The integer handle identifying the excel instance (0 represents 'active' instance)
- Cell Reference : Text : the cell reference to go to
NOTE - the active sheet in the instance is the one on which the cell is active</narrative><display x="-240" y="-135" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="717bb32a-6e60-4972-bdcb-10d6c7b769a0" name="Start" type="Start"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." stage="cellref" /></inputs><onsuccess>dc6f6efd-7724-48b0-8544-8f86f7bb1b8d</onsuccess></stage><stage stageid="f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8" name="End" type="End"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f9a7cb58-89e7-4295-be05-54454641b318" name="Set Cell Value" type="SubSheetInfo"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><narrative>Sets the specified cell's value to the given value.
This has the side-effect of setting the active cell to that which is specified here.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="15cc8816-ce32-4cb4-888f-7e42b5cbc653" name="Start" type="Start"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell value should be set. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference on the speficied sheet identifying the cell which should be set." stage="cellref" /><input type="text" name="Value" narrative="The value to which the specified cell should be set." stage="value" /></inputs><onsuccess>f54da925-167d-4c17-b44c-1861acd36f9b</onsuccess></stage><stage stageid="3efecc12-e41e-4386-b852-2651ab750ecc" name="End" type="End"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="69459b62-2608-4fd7-a65e-40074b837222" name="Get Cell Value" type="SubSheetInfo"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><narrative>Gets the value of the specified cell - note that if the cell has some formatting set in it, this does *not* return the formatted value - See "Get Formatted Cell Value".
Note also that this has the side-effect of making the specified cell active.</narrative><display x="-195" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="232e4bda-508e-44c7-8adb-315ce0fab8af" name="CreateWorkbook" type="Code"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-225" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>1d707fac-863d-4281-b9d0-a65c74bf374c</onsuccess><code><![CDATA[
name = NewWorkbook(handle).Name]]></code></stage><stage stageid="6b5a2269-93b3-4e07-ae32-b53e1a63e772" name="filename" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1365c72e-7420-4330-a305-53b0408ec641" name="cellref" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f4cf65f-1932-4f8c-9902-00080ed74347" name="value" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50be384a-f88b-477b-9bff-ee76cd5684bc" name="Set Cell Value" type="Code"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="value" expr="[value]" /></inputs><onsuccess>3efecc12-e41e-4386-b852-2651ab750ecc</onsuccess><code><![CDATA[
	GetInstance(handle).ActiveCell.Value = value]]></code></stage><stage stageid="155a039e-a678-4192-866d-0a80004f7b1b" name="cellref" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="edbe4d75-3363-4d77-b489-87fb02980fdc" name="Select Cell" type="Code"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><onsuccess>f9e7f87b-06e3-441b-a4ed-7cb2a60b38c8</onsuccess><code><![CDATA[
GetWorkbook(handle, "").ActiveSheet.Range(cellref,cellref).Activate()]]></code></stage><stage stageid="476742dd-c37f-49de-9eb5-1a66e5bcda17" name="handle" type="Data"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><display x="-195" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f54da925-167d-4c17-b44c-1861acd36f9b" name="Go To Cell" type="SubSheet"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>50be384a-f88b-477b-9bff-ee76cd5684bc</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="e7dc5be6-9447-4f5a-b528-e3b4e6e92319" name="handle" type="Data"><subsheetid>5698ca16-b00d-4d62-9d9b-e76e8295b556</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="0b718057-0ae5-4c65-bb5a-d9a14ac2496a" name="handle" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3fe639e8-b4a0-4f50-886f-fb9c99ed04b2" name="Activate Workbook" type="SubSheetInfo"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><narrative>Activates the excel workbook identified by the given handle and name.

Params:
- handle : Number : The identifier of the instance which is holding the workbook; 0 (default) indicates the active instance
- Name : Text : The name of the workbook which should be activated

Exceptions:
- Invalid Input Parameter : If the worksheet name parameter is given
- Bad Handle : If the handle does not correspond to an Excel instance</narrative><display x="-240" y="-165" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8084bde3-efbe-44ec-a484-c9b07c3d0b78" name="Start" type="Start"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." stage="workbookname" /></inputs><onsuccess>6344b53e-9777-411e-bab1-aee5633bbc7d</onsuccess></stage><stage stageid="f8b84adb-3239-4125-af8d-4b1d02c950a6" name="End" type="End"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05b66883-e53e-43f9-a4d8-baa1fb79f412" name="handle" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><display x="-240" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dc6f6efd-7724-48b0-8544-8f86f7bb1b8d" name="Activate Workbook" type="SubSheet"><subsheetid>ed502669-4207-4c88-895d-8c58ec321578</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>edbe4d75-3363-4d77-b489-87fb02980fdc</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="1c1bd122-21c0-4b17-92f4-e5459d7921c6" name="handle" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="5b35f9f6-e395-4e4b-8dc1-5b2e86b17fbe" name="Close Workbook" type="SubSheetInfo"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><narrative>Closes the specified workbook, saving changes if requested.

Params:
- handle : Number : The integer identifying the instance on which the workbook should be closed. 0 indicates the current instance.
- Workbook Name : Text : The name of the workbook which should be closed. "" indicates the active workbook on the specified instance.
- Save Changes : Flag : True to save the changes (the equivalent of calling 'Save Workbook' before closing the workbook); False to discard any changes when closing the workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-540" y="-30" w="450" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f23862f-bb67-4712-ade2-d8d62befeb7b" name="End" type="End"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f308d1c5-88b0-455a-bff7-8163c95d1eab" name="Open Workbook" type="Code"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="name" stage="workbookname" /></outputs><onsuccess>6c2fa22d-1876-46b7-92eb-cf8343d0911f</onsuccess><code><![CDATA[
Dim wb as Object = GetInstance(handle).Workbooks.Open(filename)
name = wb.Name
wb.Activate()]]></code></stage><stage stageid="5d910335-0e44-4e14-8093-292d0737faee" name="handle" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7edfc788-b0ea-4933-ac22-6345453b8c6c" name="filename" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="54e39cf8-9167-44e0-aea5-08d102a67f52" name="Create Instance" type="SubSheetInfo"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><narrative>Creates an instance of Excel, returning a handle with which it can be retrieved using the global object method : GetInstance(handle).</narrative><display x="-255" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2eee0d2a-9595-449a-bbdc-8fb0c5153180" name="Close Instance" type="SubSheetInfo"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><narrative>Closes the instance represented by the given handle, saving the changes or not as specified.

Params:
- handle : Number : The handle identifying the instance that should be closed; The default of 0 will close the 'current active' instance - ie. the last one accessed. Note that following the 'current active' instance being closed, the current instance will not be set.
- Save Changes : Flag : True to save the instance's workbooks before closing; False to just close the instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-255" y="-150" w="390" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b394cfde-b1ec-4f16-b977-d1e1ffd337be" name="Start" type="Start"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be closed. Zero indicates the currently active instance." stage="handle" /><input type="flag" name="Save Changes" narrative="True to save the changes to the open workbooks on the instance, False to discard any changes. Default is False." stage="savechanges" /></inputs><onsuccess>b06ec4ea-540a-4321-a1f9-a645f288eb9e</onsuccess></stage><stage stageid="5d9b206b-bf58-47fe-806b-c2d6807d911e" name="End" type="End"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9798ad3a-b44f-4102-a9d1-0861103be2d8" name="Open Instance" type="SubSheetInfo"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><narrative>Opens a currently running instance of Excel.
If there is no instance of Excel currently running, this will create a new one.

Params:
- WorkbookName : Text : should correspond to the workbook which should be opened - an empty value will cause the first activated instance of Excel to be opened.

Returns:
- handle : Number : The numeric handle with which this instance can be identified</narrative><display x="-210" y="-195" w="270" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d071afd-6ab3-43d1-ac0e-1951c7598b19" name="Start" type="Start"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." stage="workbookname" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" stage="Enable Events" /></inputs><onsuccess>a08aa147-8eee-4f21-a683-142cb1680af6</onsuccess></stage><stage stageid="754832af-1144-48ff-8ab0-bb6c86d3f78e" name="End" type="End"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs></stage><stage stageid="6a0587c3-1640-4af9-9199-62382cc11cdb" name="Start" type="Start"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>c642c278-2fc8-4504-826c-25e0281a26af</onsuccess></stage><stage stageid="d337a2cf-1121-4619-a1b1-f7f19bea974e" name="End" type="End"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="c642c278-2fc8-4504-826c-25e0281a26af" name="Create Instance" type="Code"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>a13edde2-3883-4007-9719-92f0e1009ddd</onsuccess><code><![CDATA[
Dim excel as Object = CreateObject("Excel.Application")

' Create a GUID with which we can kill the instance later
' if we have to play hardball to get rid of it.
excel.Caption = System.Guid.NewGuid().ToString().ToUpper()

handle = GetHandle(excel)]]></code></stage><stage stageid="56408aa5-2607-4026-bbb0-ee39b8c304be" name="handle" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bb0ff5ea-0f21-4e70-a3b3-2eaf0baa3dc5" name="Set Current Instance" type="SubSheetInfo"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><narrative>Sets the "current active" instance to that specified.

Params:
- handle : Number : The handle of the instance that should be set as the current instance. The default of zero only has the effect of throwing an exception if no current instance is set, otherwise it's a no-op.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-135" w="330" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="773582ee-ed72-4483-9b24-9e4f66cf590e" name="Start" type="Start"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should be made the 'current' one. The default of zero indicates the current, er, 'current' one - ie. this action has no effect other than validating that there is a current instance." stage="handle" /></inputs><onsuccess>79986761-82ee-46d2-83d5-4e3375b886be</onsuccess></stage><stage stageid="b272722b-ab35-4a09-9082-3cc31a0999b5" name="End" type="End"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d7897c32-9be3-483a-bca8-3fee7d1af8b5" name="handle" type="Data"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3866da9-69bc-4edc-9173-0f9d0013190a" name="handle" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7e31a12c-4578-4202-b034-a306f3ee679d" name="Close Instance" type="Code"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="savechanges" expr="[savechanges]" /></inputs><onsuccess>5d9b206b-bf58-47fe-806b-c2d6807d911e</onsuccess><code><![CDATA[
Try
CloseInstance(handle, savechanges)
Catch ex as Exception
MessageBox.Show(ex.ToString())
End Try]]></code></stage><stage stageid="eaefcb8d-64bd-4782-a39c-6ea00bb157b2" name="CheckInstanceHandle" type="SubSheetInfo"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><narrative>Checks if the handle given can be used to access a valid instance.

This means that the handle is a non-zero value which represents a handle, or it is zero and a 'current instance' is set (current instance is set every time an instance is created or accessed using GetInstance() - it may be set to Nothing if an instance is closed).

- handle is the handle to check that it represents a valid instance

Exceptions:
- Bad Handle : If the given handle doesn't represent an instance</narrative><display x="-300" y="-120" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19668af6-5fa9-48b7-9f6e-e2caf5795b69" name="Start" type="Start"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." stage="handle" /></inputs><onsuccess>34b692da-278c-4018-96ec-a9d03f696b43</onsuccess></stage><stage stageid="a4c8054c-d063-42e0-8063-c8972459baa3" name="End" type="End"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b06ec4ea-540a-4321-a1f9-a645f288eb9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7e31a12c-4578-4202-b034-a306f3ee679d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="34b692da-278c-4018-96ec-a9d03f696b43" name="Check Handle" type="Code"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="flag" name="HandleMissing" stage="HandleMissing" /></outputs><onsuccess>a7383095-97e9-4fa8-90e0-ad186e9df285</onsuccess><code><![CDATA[
' Just ensure that the handle references a valid instance
HandleMissing = (GetInstance(handle) is Nothing)]]></code></stage><stage stageid="1468c19b-a6a0-44e0-b096-5f325448f3fb" name="handle" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52d17605-ad90-4a36-aa9d-47e5418dba04" name="HandleMissing" type="Data"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="-195" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7383095-97e9-4fa8-90e0-ad186e9df285" name="Is Handle Missing?" type="Decision"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[HandleMissing]" /><ontrue>8b5e76e6-a81e-4377-b161-1bef1ff3d753</ontrue><onfalse>a4c8054c-d063-42e0-8063-c8972459baa3</onfalse></stage><stage stageid="8b5e76e6-a81e-4377-b161-1bef1ff3d753" name="Bad Instance Handle" type="Exception"><subsheetid>492548e8-2fa5-473e-9061-df8326d46e4c</subsheetid><display x="135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Bad Handle" detail="&quot;Handle: &quot; &amp; [handle] &amp; &quot; does not correspond to an Excel Instance&quot;" /></stage><stage stageid="79986761-82ee-46d2-83d5-4e3375b886be" name="CheckInstanceHandle" type="SubSheet"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>b272722b-ab35-4a09-9082-3cc31a0999b5</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2db56ca3-8def-419f-a3e3-ac8408915c69" name="Open Named Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="WorkbookName" expr="[workbookname]" /></inputs><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(WorkbookName,"Excel.Application"))]]></code></stage><stage stageid="6e2accad-a08b-4b28-9551-f44a9a291607" name="handle" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fe8e6a89-2552-4e75-9d44-72240a365783" name="workbookname" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a08aa147-8eee-4f21-a683-142cb1680af6" name="Is WorkbookName empty?" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([workbookname])=&quot;&quot;" /><ontrue>aaa7ff33-69b5-4636-8766-e0556ee48bec</ontrue><onfalse>2db56ca3-8def-419f-a3e3-ac8408915c69</onfalse></stage><stage stageid="aaa7ff33-69b5-4636-8766-e0556ee48bec" name="Open Arbitrary Instance" type="Code"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" stage="handle" /></outputs><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess><code><![CDATA[
	handle = GetHandle(GetObject(,"Excel.Application"))]]></code></stage><stage stageid="fba0fa7c-4ed5-4652-b4ae-08770f5f3867" name="No Open Instances" type="Recover"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>59ebf811-1faf-4486-8630-6d2de19027f5</onsuccess></stage><stage stageid="df0b2b99-8c10-4cf4-9d2d-c3ccf515c960" name="Carry On, Bertram" type="Resume"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7fb1ba2f-64f1-417b-9b97-479efb954a9d</onsuccess></stage><stage stageid="a6205e66-5e1f-4360-86a2-8f1325751c3c" name="Create Instance" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" expr="True" /></inputs><outputs><output type="number" name="handle" narrative="An integer which can be used to identify the created instance in subsequent actions" stage="handle" /></outputs><onsuccess>df0b2b99-8c10-4cf4-9d2d-c3ccf515c960</onsuccess><processid>99e648cc-a136-471c-8424-19071c0fd9e7</processid></stage><stage stageid="852ff62f-6d2b-4031-b675-ec155fd88908" name="CheckInstanceHandle" type="SubSheet"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><loginhibit /><display x="-15" y="-300" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>232e4bda-508e-44c7-8adb-315ce0fab8af</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="59ebf811-1faf-4486-8630-6d2de19027f5" name="CheckType" type="Decision"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="ExceptionType()=&quot;Internal&quot;" /><ontrue>a6205e66-5e1f-4360-86a2-8f1325751c3c</ontrue><onfalse>567674ba-270a-4107-ada5-1dae59125522</onfalse></stage><stage stageid="567674ba-270a-4107-ada5-1dae59125522" name="RethrowException" type="Exception"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="555" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="9e0df7e0-ab34-4a97-9f69-db66c88ff5f4" name="CheckInstanceHandle" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>41c51e08-6c3e-4cbc-bc30-31936476aa7d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="4a034863-88fc-4111-a656-18471e002741" name="workbookname" type="Data"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-240" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="366f8bd4-fafd-47cc-98a3-0afb7d697fe9" name="ActivateWorkbook" type="Code"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>f8b84adb-3239-4125-af8d-4b1d02c950a6</onsuccess><code><![CDATA[
GetWorkbook(handle,name).Activate()]]></code></stage><stage stageid="e74de56c-16cf-4cd7-8ecf-fabdf05e7311" name="handle" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e45f2d66-35c1-40fd-a729-754cfabbb5ab" name="SaveWorkbook" type="Code"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>4c75715c-7a4a-491b-804f-261ee86fcd95</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application
excel.DisplayAlerts = False
wb.Save()
excel.DisplayAlerts = True
]]></code></stage><stage stageid="8ba3f3c5-2585-44db-9393-a681e9ff1111" name="workbookname" type="Data"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6bc9d285-c937-4336-89b3-aa7acf379075" name="Start" type="Start"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be saved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be saved" stage="workbookname" /><input type="text" name="Filename" narrative="The full path and filename to which the workbook should be saved." stage="filename" /></inputs><onsuccess>7fa4c0ab-6c38-4a55-915a-48e7ce529979</onsuccess></stage><stage stageid="a6943793-fb0e-491c-bdc1-ccf04ee31e6d" name="workbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8b526d9f-c7bd-4190-8c33-a6f5ad7982fa" name="SaveWorkbookAs" type="Code"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="text" name="newworkbookname" stage="workbookname" /></outputs><onsuccess>b4f79caf-dea6-4a9a-95f0-0c05bea8b485</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,workbookname)
Dim excel as Object = wb.Application

excel.DisplayAlerts = False
wb.SaveAs(filename)
excel.DisplayAlerts = True

newworkbookname = wb.Name]]></code></stage><stage stageid="a7fd5308-fe75-448e-99ad-e104521ee580" name="CheckInstanceAndWorkbook" type="SubSheetInfo"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Checks the instance and workbook values, throwing an exception if they are invalid.

Params:
- instance : Number : The integer value representing an Excel instance. The default value of zero represents the last activated instance.
- Workbook Name : Text : The name of the workbook on the instance to check. An empty string represents the 'active' workbook.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-240" y="-150" w="360" h="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d69e69ce-7251-40e1-b779-c9951ee36cbb" name="Start" type="Start"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" stage="handle" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" stage="workbookname" /></inputs><onsuccess>16e7e153-e022-4c0b-9af2-ac69b52f855a</onsuccess></stage><stage stageid="bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d" name="End" type="End"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="16e7e153-e022-4c0b-9af2-ac69b52f855a" name="CheckInstanceHandle" type="SubSheet"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>d4997ba5-8e1f-4585-a093-376eb725f14d</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118" name="Workbook Found?" type="Decision"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[workbookfound]" /><ontrue>bf3ac1a2-7f2a-4071-89c6-73cfa8f8c60d</ontrue><onfalse>62e3710c-2e7e-4507-a49b-0009b3585ba3</onfalse></stage><stage stageid="62e3710c-2e7e-4507-a49b-0009b3585ba3" name="Workbook Not Found" type="Exception"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><narrative>Thrown when a workbook name was not found</narrative><display x="195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Workbook Not Found" detail="&quot;Workbook named: &quot; &amp; [workbookname] &amp; &quot; not found in instance: &quot; &amp; [handle]" /></stage><stage stageid="c3051222-78b2-48d6-9813-d71f854c5e81" name="handle" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6bcb687a-3390-4a83-8690-fba44345b1a8" name="workbookname" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><narrative>The name of the workbook</narrative><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba694738-8f03-4a1c-a7b1-d946dc55c028" name="workbookfound" type="Data"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="d4997ba5-8e1f-4585-a093-376eb725f14d" name="CheckWorkbook" type="Code"><subsheetid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="workbookfound" stage="workbookfound" /></outputs><onsuccess>b6c9fba5-0c8e-4e66-9cf2-8f2f1e5f6118</onsuccess><code><![CDATA[
Try
	GetWorkbook(handle,workbookname)
	workbookfound = True
Catch ex as Exception
	If ex.Message.IndexOf("DISP_E_BADINDEX")<>-1 Then
		workbookfound = False
	Else
		Throw ex
	End If
End Try]]></code></stage><stage stageid="ab6f627b-d630-4bdd-b840-7aac26b5806f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6e7cb0ad-5910-4065-aab2-2919726bae39</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e45f2d66-35c1-40fd-a729-754cfabbb5ab</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="7fa4c0ab-6c38-4a55-915a-48e7ce529979" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>8b526d9f-c7bd-4190-8c33-a6f5ad7982fa</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="d52e7a12-1a97-4bcf-9014-5a4ad93aa054" name="Close Workbook" type="Code"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="name" expr="[workbookname]" /></inputs><onsuccess>5f23862f-bb67-4712-ade2-d8d62befeb7b</onsuccess><code><![CDATA[
Dim wb as Object = GetWorkbook(handle,name)
Dim app as Object = wb.Application

app.DisplayAlerts = False
wb.Close(False)
app.DisplayAlerts = True]]></code></stage><stage stageid="3a83f920-ccd5-4dc3-95ee-4c5a195c5191" name="handle" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7b233620-de4e-40ff-9a99-af09b1574d08" name="workbookname" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><display x="-465" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85080efc-4429-45d0-9248-dfcceaa60a27" name="Start" type="Start"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which should be closed." stage="workbookname" /><input type="flag" name="Save Data" narrative="True to save the data before closing the workbook; The default of False will discard any changes before closing the workbook." stage="savedata" /></inputs><onsuccess>52c31124-7463-40b9-8d24-9ffebe12e167</onsuccess></stage><stage stageid="b481dbd1-022d-42b5-a2bc-5bfbbc233772" name="savedata" type="Data"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-465" y="210" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="52c31124-7463-40b9-8d24-9ffebe12e167" name="Save Data?" type="Decision"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[savedata]" /><ontrue>16f6c60c-721b-44be-9e97-b5b518e0f360</ontrue><onfalse>68e0d10e-5b8a-4ccb-a42b-67192ce2ede1</onfalse></stage><stage stageid="16f6c60c-721b-44be-9e97-b5b518e0f360" name="Save Workbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /></inputs><onsuccess>cf877504-31ed-4e77-b72f-b00469c37fc7</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="68e0d10e-5b8a-4ccb-a42b-67192ce2ede1" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-255" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="cf877504-31ed-4e77-b72f-b00469c37fc7" name="anchor1" type="Anchor"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><display x="-120" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d52e7a12-1a97-4bcf-9014-5a4ad93aa054</onsuccess></stage><stage stageid="cdb03710-27a7-4412-964a-73e4b9bd1a07" name="noteybenny" type="Note"><subsheetid>6ccaae8b-c06f-45c8-8772-835218881458</subsheetid><loginhibit /><narrative>Note: CheckInstanceAndWorkbook is done as part of SaveWorkbook, so no need to do it again</narrative><display x="15" y="60" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f39e78b7-d81a-43de-af4f-ea3ce7a918a2" name="handle" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f02e77b-3ca1-40a7-a64b-35fdad519172" name="workbookname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-300" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6344b53e-9777-411e-bab1-aee5633bbc7d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>6632ed99-8751-4c2a-ad00-3cc016300e08</subsheetid><loginhibit /><display x="45" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>366f8bd4-fafd-47cc-98a3-0afb7d697fe9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="ba48be23-80aa-4b44-beef-dbc6a7fb5901" name="VerifyFileExists" type="SubSheetInfo"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><narrative>Checks if the given file exists.

Params:
- File name : Text : Path to the file to check

Exceptions:
- File Not Found : If the given file does not exist or is not a file.</narrative><display x="-210" y="-120" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c6df86d-8ca7-4778-adeb-2c570998768f" name="Start" type="Start"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" narrative="The filename to check to ensure it exists." stage="filename" /></inputs><onsuccess>e28c5aa8-d587-4390-843e-b97c32c2cdb8</onsuccess></stage><stage stageid="d465101e-fa27-4434-8413-515e331d1389" name="End" type="End"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8d315224-d32b-4a85-aae0-3ee4d3b98c9c" name="filename" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86877e71-923f-4480-9b41-a5a7f4dc60a5" name="fileexists" type="Data"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e28c5aa8-d587-4390-843e-b97c32c2cdb8" name="File Exists?" type="Code"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><outputs><output type="flag" name="fileexists" stage="fileexists" /></outputs><onsuccess>d43bfe27-76d7-4542-b7ad-ba696468713e</onsuccess><code><![CDATA[
fileexists = File.Exists(filename)]]></code></stage><stage stageid="d43bfe27-76d7-4542-b7ad-ba696468713e" name="Does File Exist?" type="Decision"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><loginhibit /><display x="-15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[fileexists]" /><ontrue>d465101e-fa27-4434-8413-515e331d1389</ontrue><onfalse>11a4a0e7-8810-493b-9409-df70ca4dc5b2</onfalse></stage><stage stageid="11a4a0e7-8810-493b-9409-df70ca4dc5b2" name="File Not Found" type="Exception"><subsheetid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</subsheetid><display x="135" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;File: &quot; &amp; [filename] &amp; &quot; does not exist or is not a file&quot;" /></stage><stage stageid="41c51e08-6c3e-4cbc-bc30-31936476aa7d" name="VerifyFileExists" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[filename]" /></inputs><onsuccess>f308d1c5-88b0-455a-bff7-8163c95d1eab</onsuccess><processid>41a07606-d51b-4fe3-a076-7a77a4ca2cde</processid></stage><stage stageid="60533ca6-ea95-4425-b684-87e7517782aa" name="Start" type="Start"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." stage="createifmissing" /></inputs><onsuccess>b5d5c5b0-1e3b-438b-b988-6058174ec5ba</onsuccess></stage><stage stageid="63d363e1-c78b-4332-815c-06f9d6f7a7df" name="OpenWorksheet" type="Code"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="flag" name="createifmissing" expr="[createifmissing]" /></inputs><outputs><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>3a854b87-0e5a-46dd-8181-a58f97555aa8</onsuccess><code><![CDATA[
Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,createifmissing)
sheetexists = ws IsNot Nothing 
If sheetexists then ws.Activate()]]></code></stage><stage stageid="b5d5c5b0-1e3b-438b-b988-6058174ec5ba" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>63d363e1-c78b-4332-815c-06f9d6f7a7df</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="1dccafb3-fd07-4362-b343-e87c1a67e83e" name="worksheetname" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b35d569-0eb2-4c01-bb88-e5f7c41bde81" name="End" type="End"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fab4ac4b-d2f7-4f1c-a0c3-d6dd0cd01f9b" name="handle" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="60f1e726-ab7f-437a-8bda-36148238d510" name="workbookname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13ac609e-b9ca-4a72-907c-d7656496f5ab" name="Start" type="Start"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be deleted resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet to be deleted. The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet to be deleted. The default empty value indicates the currently active worksheet." stage="worksheetname" /></inputs><onsuccess>5346c305-4024-4d1d-8806-c1b20f16c10d</onsuccess></stage><stage stageid="982dd82e-af43-49cb-a4b1-58da1ccfeb33" name="Delete Worksheet" type="Code"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="flag" name="sheetexisted" stage="sheetexisted" /></outputs><onsuccess>56c2259b-9d71-4364-bede-79b4af1e3e96</onsuccess><code><![CDATA[
Dim Inst As Object = GetInstance(handle)
Inst.DisplayAlerts = False

Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname,False)
sheetexisted = ws IsNot Nothing
If sheetexisted Then ws.Delete()

Inst.DisplayAlerts = True]]></code></stage><stage stageid="5346c305-4024-4d1d-8806-c1b20f16c10d" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="-135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>982dd82e-af43-49cb-a4b1-58da1ccfeb33</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="6ca6d1da-9270-43f8-89d4-c0ece0a353cb" name="worksheetname" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ae9d880b-4f92-4620-94e8-36d06f4e2181" name="Start" type="Start"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." stage="cellref" /></inputs><onsuccess>9a734ecf-7e58-4aa4-b7ff-5aa4494ec687</onsuccess></stage><stage stageid="ca24190a-a9cb-4c37-b5d2-78bcd838ef40" name="End" type="End"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="value" /></outputs></stage><stage stageid="b659eb08-bf67-463a-a8cc-556b152d8032" name="cellref" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="257d1cf8-2a6f-47d2-88ee-1d0a125cb27d" name="value" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a04a5ea1-798c-4659-ac77-0c966c305cba" name="Get Cell Value" type="Code"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>ca24190a-a9cb-4c37-b5d2-78bcd838ef40</onsuccess><code><![CDATA[
	Dim cellVal as String = GetInstance(handle).ActiveCell.Value
	value = IIf(cellVal Is Nothing, "", cellVal)]]></code></stage><stage stageid="39135f99-dd54-4a2b-bff2-555714753a6d" name="Go To Cell" type="SubSheet"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="c533ffd2-866d-4944-82be-7e6a6ede4c9a" name="handle" type="Data"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e3fe8fb5-4290-4e6e-8d8f-780f47e78d27" name="workbookname" type="Data"><subsheetid>73b8ddb4-b679-4697-b3c4-79ce833a9456</subsheetid><display x="-240" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7dc88f-16d6-41f8-a4f1-4ca8921bf024" name="Get Worksheet As Collection" type="SubSheetInfo"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><narrative>Gets the current worksheet into a collection. This will read the worksheet and store the contents into the collection. The first row will be treated as the column names and will be used as the column names in the generated collection.

Params:
- handle : Number : The integer identifying the instance in which the worksheet resides. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook on which the sheet resides. Default ("") indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet which is required as a collection. Default ("") indicates the active sheet within the workbook.

Output:
Data - Collection - The data from the worksheet.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- Worksheet Not Found : If the specified worksheet does not exist on the specified workbook.</narrative><display x="-285" y="-195" w="420" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cf5b0880-2cac-4221-946a-e4e3d7f0bc99" name="End" type="End"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The collection containing the data from the specified worksheet - the column IDs will be gleaned from the first row on the sheet being retrieved." stage="worksheetcollection" /></outputs></stage><stage stageid="c42e68de-468d-4aac-bcd2-283b9f578565" name="handle" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ed8d683e-8efe-426c-8be6-85136cbdf337" name="workbookname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14362f26-4336-4848-adf6-2e710eb2a69d" name="Start" type="Start"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook which contains the sheet required. The default empty text indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /></inputs><onsuccess>23c90658-57ef-456a-92fa-970b0161d0f8</onsuccess></stage><stage stageid="36a8c859-cf71-4b54-b7ed-317997b94589" name="GetWorksheetAsCollection" type="Code"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>b6d0da26-0322-4b43-b1d5-304466ff29fb</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname, False)

	' Do we have a sheet?
	sheetexists = ws IsNot Nothing
	' No sheet? No entry.
	If Not sheetexists Then Return

	ws.Activate()
	ws.UsedRange.Select()
	ws.UsedRange.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="23c90658-57ef-456a-92fa-970b0161d0f8" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>36a8c859-cf71-4b54-b7ed-317997b94589</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="51a0a405-79a5-4a53-9a36-a40b08481389" name="worksheetname" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4c01041-da7a-4cd3-9990-a0a236064fa5" name="worksheetcollection" type="Collection"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9b8dd3a0-045b-4019-b977-8716d12d92c6" name="workbookname" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="-210" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ba94499-d376-4a0b-9486-f4bced0a6a23" name="Close All Instances" type="SubSheetInfo"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><narrative>Closes all instances of excel which have been opened by this business object, either through "Create Instance" or "Open Instance" and which have not been discarded through "Close Instance" or "Release Instance"</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e8745127-ee68-4c60-8b52-0b68e91835bf" name="Start" type="Start"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8f8060c8-cea7-41c9-93c1-b181ca345fa9</onsuccess></stage><stage stageid="85215f92-002d-4d9c-8fe7-652c149d0206" name="End" type="End"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8f8060c8-cea7-41c9-93c1-b181ca345fa9" name="CloseAllInstances" type="Code"><subsheetid>feb8ce9f-299e-4152-85a1-354a5f9d995c</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>85215f92-002d-4d9c-8fe7-652c149d0206</onsuccess><code><![CDATA[
Dim clone as Dictionary(Of Integer,Object) = _
	new Dictionary(Of Integer,Object)(HandleMap)

For Each Handle As Integer In clone.Keys
	CloseInstance(Handle,False)
Next]]></code></stage><stage stageid="15437c28-7f56-4c1b-b98a-769b875b9d57" name="Find Next Empty Cell" type="SubSheetInfo"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><narrative>Searches for the next empty cell in the direction given.
This can either activate that cell before returning, or just return the cell reference while leaving the active cell as it was.

Params:
- handle : Number : The integer handle identifying the Excel instance to use. The default of zero indicates the 'current' instance.
- Direction : Text : The direction in which to go, this should start with "U", "D", "L" or "R" (not case-sensitive) - the rest of the string is ignored, so you can use "Up", "DOWN" "left" and, indeed, "r"
- Activate Cell? : Flag : True to activate the found cell, False to just return the reference. Default is False.

Returns:
- Cell Reference : Text : The cell ID which represents the next empty cell in the required direction. This will be blank if no empty cell was found in the given direction.

Exceptions:
Invalid Direction Parameter : If the given direction parameter was invalid - ie. did not start with one of the (case-insensitive) letters "U", "D", "L" or "R".</narrative><display x="-300" y="-195" w="450" h="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3707693-ef57-453a-b8b2-16e8d8aee39f" name="Start" type="Start"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." stage="direction" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." stage="activatecell" /></inputs><onsuccess>ea536eb5-62b7-4b15-b0b9-0c5415414692</onsuccess></stage><stage stageid="65e26d12-b37e-4df9-a00b-07340967e5b2" name="End" type="End"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs></stage><stage stageid="2d159e37-f93b-42db-b8a7-3ea3e5300c76" name="direction" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bf3a1953-80c7-4d24-92fe-1e6823202956" name="cellref" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea536eb5-62b7-4b15-b0b9-0c5415414692" name="Direction Valid?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><narrative>Direction must start with one of the following:
- U : Indicates 'up'
- D : Indicates 'down'
- L : Indicates 'left'
- R : Indicates 'right'
Any other value (including empty text) is invalid</narrative><display x="-15" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([direction]))&gt;0 AND InStr(&quot;UDLR&quot;,Upper(Left(Trim([direction]),1)))&lt;&gt;0" /><ontrue>e8cca858-4b46-40a0-81fc-3112398c4a42</ontrue><onfalse>382555c6-554f-465d-bbac-43e5b0ec06ed</onfalse></stage><stage stageid="382555c6-554f-465d-bbac-43e5b0ec06ed" name="Invalid Direction Parameter" type="Exception"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="150" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Direction Parameter" detail="&quot;Direction: '&quot; &amp; [direction] &amp; &quot;' is invalid - it must start with 'U', 'D', 'L' or 'R' (up, down, left or right)&quot;" /></stage><stage stageid="e8cca858-4b46-40a0-81fc-3112398c4a42" name="FindEmptyCell" type="Code"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="direction" expr="[direction]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>a47f3c07-957d-4909-bc43-4c56e5f58ae6</onsuccess><code><![CDATA[
' The initial char of the direction (capitalised)
Dim strDir as String = direction.Trim().Substring(0,1).ToUpper()

' The excel instance
Dim excel as Object = GetInstance(handle)

' The excel enum representing the direction
' Note: setting to zero is just to nix a duff compiler warning
Dim dirn as Integer = 0

' xlDirection enum values from: 
' http://msdn.microsoft.com/en-us/library/bb241212.aspx

' Get the direction we need to go
Select Case strDir
	Case "U"
		dirn = -4162 ' Excel.XlDirection.xlToUp
	Case "D"
		dirn = -4121 ' Excel.XlDirection.xlToDown
	Case "L"
		dirn = -4159 ' Excel.XlDirection.xlToLeft
	Case "R"
		dirn = -4161 ' Excel.XlDirection.xlToRight
	Case Else
		Throw New ArgumentException("Invalid Direction: " & strDir)
End Select

Dim cell as Object = excel.ActiveCell

While True

	' First check the next one along - if that's blank then we're away..
	Dim nextCell as Object = GetNextCell(cell, strDir)

	' If the cell address is the same on moving - that indicates we're
	' at a limit (eg. 1st column going left, last row going down etc.)
	' Just return empty to indicate that there are no blank cells in
	' that direction.
	If cell.Address = nextCell.Address Then
		cellref = ""
		Return
	ElseIf nextCell.Value = Nothing Then ' We've found our blank
		cellref = nextCell.Address(False,False)
		Return
	End If
	
	cell = nextCell
	
	' Quick way (rather than plodding from one cell to the next)
	' is to effectively press the 'End' key - but this is highly
	' inconsistent in what it returns.
	' Go to the 'end' of the range - ie. the last filled cell
	' cell = cell.End(dirn)
	' Now we need to go one beyond, ie. to the next cell
	' cell = GetNextCell(cell, strDir)

End While
]]></code></stage><stage stageid="facf151b-ee72-46d1-b528-a921e6945048" name="handle" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-240" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c507994e-eb49-43c1-bf77-9bf7cf88e0e6" name="Get Formatted Cell Value" type="SubSheetInfo"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><narrative>Gets the formatted value of the desired cell. This will apply any formatting which is in place in the specified cell before outputting the value.</narrative><display x="-195" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c0ed8b3d-fb86-442b-959e-a601d2d5f84f" name="Start" type="Start"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance within which the cell is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose value is required. Note that a side-effect of this action is that the specified cell will become the active cell on the specified instance. An empty value indicates the currently active cell." stage="cellref" /></inputs><onsuccess>29427d7f-a2d9-4b65-b6c4-773881bd285d</onsuccess></stage><stage stageid="722e3ab7-97b7-4cd6-886e-53bf4ac022ec" name="End" type="End"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The formatted value at the given cell reference." stage="value" /></outputs></stage><stage stageid="1260d770-e90c-4ea2-9e64-e3442c7de787" name="cellref" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6618eccc-3c6e-4660-997c-5f9142e71dc8" name="value" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94dc11fe-505e-4544-a26b-80d3d88d0951" name="Get Cell Text" type="Code"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="cellref" expr="[cellref]" /></inputs><outputs><output type="text" name="value" stage="value" /></outputs><onsuccess>722e3ab7-97b7-4cd6-886e-53bf4ac022ec</onsuccess><code><![CDATA[
	value = GetInstance(handle).ActiveCell.Text]]></code></stage><stage stageid="3e695c2e-2110-4655-ba2e-31a41f453383" name="handle" type="Data"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d9fc29b1-af47-4caf-882b-d9fc56955a8b" name="Split Worksheet" type="SubSheetInfo"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><narrative>Splits the specified worksheet into separate workbooks, creating a new sheet on each one and copying a subset of rows across to it.

Params:
- handle : Number : The integer representing the Excel instance - 0 represents the 'active' excel instance.
- Rows per sheet : Number : The number of rows which should be copied into each separate workbook.
- Workbook Name : Text : The name of the workbook from which the sheet should be split. "" indicates the active workbook on the instance.
- Worksheet Name : Text : The name of the worksheet from which the data should be split. "" indicates the active worksheet on the instance.
- Path : Text : The directory in which the resultant workbooks should be saved.
- No Title Row : Flag : True to indicate that the first row should *not* be used as a title row and copied across each of the generated workbooks.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.
- File Not Found : If the given path did not exist or was not a directory</narrative><display x="-240" y="-180" w="510" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6" name="End" type="End"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="052dc2d6-2989-49fb-9dbd-d4db6e106c98" name="Start" type="Start"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be retrieved resides. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows per worksheet" narrative="The number of rows which should appear in each worksheet. Zero indicates all rows." stage="rowspersheet" /><input type="text" name="Workbook Name" narrative="The name of the workbook within the specified instance which contains the sheet to be split. The default empty text indicates the currently active workbook within the specified instance should be used." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook to split - The default empty value indicates that the currently active sheet within the workbook should be used." stage="worksheetname" /><input type="flag" name="No Title Row" narrative="True to indicate that the rows should just be split across without using the first row as a title row (ie. as a list of column headers). False to indicate that the first row contains the column headers which should be replicated across all generated sheets." stage="notitle" /><input type="text" name="Path" narrative="The path to the directory in which the generated workbooks should be created. The files will be created with a name of &quot;{Workbook Name}_SECTION_nnnn&quot;, where nnnn is an number incrementing with each section generated." stage="path" /></inputs><onsuccess>ee1e1e11-a16a-4060-9ea0-0848320dfbaf</onsuccess></stage><stage stageid="3200e67b-1f79-4672-9828-e9e4438f565b" name="handle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="177b7483-8cfb-41a7-8644-e4fdc19ecf2a" name="rowspersheet" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd48b9ea-dee0-4b1a-a9bb-7c84a64fa132" name="workbookname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f865844-bba2-4377-8b24-5d089cbfb8c4" name="worksheetname" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1e1e11-a16a-4060-9ea0-0848320dfbaf" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>359dbb2d-d57f-48c1-9c7f-1d22ef094036</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="359dbb2d-d57f-48c1-9c7f-1d22ef094036" name="Split Worksheet" type="Code"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="number" name="rowspersheet" expr="[rowspersheet]" /><input type="flag" name="notitle" expr="[notitle]" /><input type="text" name="path" expr="[path]" /></inputs><outputs><output type="flag" name="filefound" stage="filefound" /><output type="flag" name="sheetexists" stage="sheetexists" /></outputs><onsuccess>5cb56c9a-aa29-4ed4-84e1-9a65976ba50f</onsuccess><code><![CDATA[Dim sheet as Object = GetWorksheet(handle,workbookname,worksheetname,False)

sheetexists = sheet IsNot Nothing
If Not sheetexists Then Return

Dim book as Object = sheet.Parent
Dim excel as Object = sheet.Application

Dim prefix as String = book.Name
If prefix.ToLower().EndsWith(".xls") Then
	prefix = prefix.Substring(0,prefix.Length - 4)
End If

If Not path.EndsWith("\") Then
	path += "\"
End If

filefound = Directory.Exists(path)
If Not filefound Then ' Might as well quit now 
	Return
End If

Dim lastCell as Object = sheet.Cells.Find("*", , , , , 2)			 'Excel.XlSearchDirection.xlPrevious=2
'loop through the worksheet in blocks of Numblines lines

' Force overwrites if the excel book already exists.
excel.DisplayAlerts = False ' Hide alerts

Dim loopCount as Integer = 0
For row as Integer = 1 To lastCell.Row-1 Step rowspersheet ' -1 to cope with total-rows = rowspersheet
	loopCount = loopCount + 1
	Dim newbook as Object = excel.Workbooks.Add
	If notitle Then
		'copy each block into the new worksheet
		sheet.Range(sheet.Cells(row, 1), sheet.Cells(loopCount * rowspersheet, sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
	Else
		'in here - so there must be a title row that needs copying to all the new worksheets
		If row = 1 Then
			'copy row 1-201 into new worksheet (including title row at #1)
			sheet.Range(sheet.Cells(row, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
		Else
			'copy title row into new worksheet
			sheet.Range(sheet.Cells(1, 1),sheet.Cells(1,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A1"))
			'next copy row iloop+1 to iloop+NumbLines into new worksheet (i.e. 202-401)
			sheet.Range(sheet.Cells(row + 1, 1),sheet.Cells(row + rowspersheet,sheet.Columns.Count)).EntireRow.Copy(newbook.Sheets(1).Range("A2"))
		End If
	End If
	'close and save the new workbook
	newbook.Close(True, path & prefix & "_SECTION_" & (loopCount+1000).ToString().Substring(1) & ".xls")
Next]]></code></stage><stage stageid="cfd178fc-26e5-4e7c-b9f3-cb49ea4de27e" name="notitle" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="acee6017-400e-44c3-8b07-611d7318fecf" name="path" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dec5f88-d7e5-4ad4-be54-8744dc5cac54" name="filefound" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-150" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="859597f9-d048-46a3-bf99-2f3f6588c2c5" name="Was file found?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[filefound]" /><ontrue>aa8bb9c5-c392-43d5-b8fb-6a6308c40ad6</ontrue><onfalse>6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733</onfalse></stage><stage stageid="6b2c84c0-9ceb-4f05-8746-5dfbf7ed3733" name="No Such Directory" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="File Not Found" detail="&quot;Directory : &quot; &amp; [path] &amp; &quot; does not exist or is not a directory&quot;" /></stage><stage stageid="e9c5ba22-79d3-4bd7-ae8f-3b36c06dd51e" name="Get Number Of Rows" type="SubSheetInfo"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><narrative>Actually, I've no idea whatsoever what this does.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="555b5c2d-9106-444b-9c96-f1ff4699a988" name="End" type="End"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Number of rows" narrative="The number of rows." stage="rowcount" /></outputs></stage><stage stageid="1c4aa0dc-e628-424b-8df8-eaf16dbd668d" name="Start" type="Start"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the number of rows is required. The default empty text value indicates the currently active sheet on the specified workbook." stage="worksheetname" /></inputs><onsuccess>35173317-eeae-482b-8a2a-ea46406fcb4f</onsuccess></stage><stage stageid="35173317-eeae-482b-8a2a-ea46406fcb4f" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>aa3ba555-86e5-42ae-bdb5-b614c46bdaf9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="aa3ba555-86e5-42ae-bdb5-b614c46bdaf9" name="Count Rows" type="Code"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /></inputs><outputs><output type="number" name="rowcount" stage="rowcount" /></outputs><onsuccess>555b5c2d-9106-444b-9c96-f1ff4699a988</onsuccess><code><![CDATA[
' enum - Excel.XlSearchDirection.xlPrevious=2
rowcount = GetWorksheet(handle,workbookname,worksheetname).Cells.Find("*", , , , , 2).Row
'GetWorksheet(handle,workbookname,worksheetname).Range("G:G").Autofit]]></code></stage><stage stageid="fbf7b5e7-f86b-48f0-8d2a-8658bcabfe72" name="handle" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ae17d409-d655-459f-a6fe-1c4ed04c7023" name="workbookname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4f2032a3-62ce-48a2-b098-ed275a569931" name="worksheetname" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-270" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac9321b0-2209-4f44-bd1e-3876c05fc35f" name="rowcount" type="Data"><subsheetid>dc139ac7-b971-481e-9528-b1521ae9fc92</subsheetid><display x="-150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1bb96d7-94f9-4570-85a9-f1bcff4f31ae" name="Is Read Only" type="SubSheetInfo"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><narrative>Checks if the given workbook is read only or not.

Params:
- handle : Number : The integer identifying the excel instance to check. Default (0) indicates the current instance.
- Workbook Name : Text : The name of the workbook to be checked. Default ("") indicates the active workbook on the given instance.

Output:
Read Only? : Flag : True to indicate that the workbook is read only; False to indicate that it is writable.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-300" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bb6cb4de-9a8f-424e-82d8-52d766ab5da5" name="Start" type="Start"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be checked resides. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook to test to see if it is read-only or not." stage="workbookname" /></inputs><onsuccess>91487aa9-0d65-4895-940d-c4fed2212eec</onsuccess></stage><stage stageid="1e8fe949-d784-437f-a724-b5003709f18c" name="End" type="End"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Read Only?" narrative="True to indicate that the specified workbook is read-only; False to indicate that it can be written to." stage="isreadonly" /></outputs></stage><stage stageid="cfa1438f-ab60-4810-a5b5-ede71fc7b700" name="handle" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="da3c5815-0a1f-4d3d-af8a-09e5f8a1d262" name="workbookname" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-270" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="91487aa9-0d65-4895-940d-c4fed2212eec" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>e412638c-10ff-49e6-ae71-6b5c86f40ddb</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="b7057d73-acb5-4298-a652-5f91898d67d6" name="isreadonly" type="Data"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><display x="-150" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e412638c-10ff-49e6-ae71-6b5c86f40ddb" name="Check Read Only" type="Code"><subsheetid>ddb3c741-0c59-4ac8-a260-258fb8eb1674</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="flag" name="isreadonly" stage="isreadonly" /></outputs><onsuccess>1e8fe949-d784-437f-a724-b5003709f18c</onsuccess><code><![CDATA[
isreadonly = GetWorkbook(handle,workbookname).ReadOnly]]></code></stage><stage stageid="fedc107e-577b-47d9-a445-c3a3e66ef516" name="Close All Instances" type="SubSheet"><subsheetid>ab6c7fcd-9997-4c5c-9ff1-2dcb5879975a</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d2814bb7-61fc-4b4f-8fd9-2dd9f79c06ba</onsuccess><processid>feb8ce9f-299e-4152-85a1-354a5f9d995c</processid></stage><stage stageid="f6285d0d-f7fe-4987-96cf-4d0e27180f81" name="Show" type="SubSheetInfo"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><narrative>Shows a window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to show. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-225" y="-105" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="865342da-5035-45ef-9902-c74ba855f521" name="Start" type="Start"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window displayed. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>6562ae8e-f16f-4f89-8787-7884cc6a57db</onsuccess></stage><stage stageid="565f4f77-b276-4735-9c18-000ce13946a7" name="End" type="End"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6562ae8e-f16f-4f89-8787-7884cc6a57db" name="CheckInstanceHandle" type="SubSheet"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7785ca63-e0a8-40c6-940b-0d9e73944b25</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="97a05e5a-864b-4413-8623-d939827e5c39" name="Hide" type="SubSheetInfo"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><narrative>Hides the window attached to the instance identified.

Params:
- handle : Number : The handle identifying the excel instance to hide. The default of zero shows the currently active instance.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-120" w="360" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7785ca63-e0a8-40c6-940b-0d9e73944b25" name="ShowInstance" type="Code"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><loginhibit /><display x="15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>565f4f77-b276-4735-9c18-000ce13946a7</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = True]]></code></stage><stage stageid="f65b17c8-19fe-4381-9b68-8909f6aa312d" name="handle" type="Data"><subsheetid>268628ce-c0f3-492a-be5c-87b432e16d1d</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="11f4ca85-d053-4b2e-a46d-705fe87040c0" name="Start" type="Start"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance which should have its window hidden. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>ebc908b3-4501-4500-9648-a35ebbabddda</onsuccess></stage><stage stageid="6106570f-43e1-4a42-9f67-c8f2522a910c" name="End" type="End"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ebc908b3-4501-4500-9648-a35ebbabddda" name="CheckInstanceHandle" type="SubSheet"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>1cc2d38f-3783-42f7-8b75-78243c367fb3</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="1cc2d38f-3783-42f7-8b75-78243c367fb3" name="HideInstance" type="Code"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>6106570f-43e1-4a42-9f67-c8f2522a910c</onsuccess><code><![CDATA[
	GetInstance(handle).Visible = False]]></code></stage><stage stageid="11e05865-7edb-4526-b015-b4b5f725fbc4" name="handle" type="Data"><subsheetid>ef10421c-e1ff-4227-b367-c53059a6766d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2e480365-7061-4a6c-81ea-380e5bd06ef7" name="Save Current Workbook As" type="SubSheetInfo"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><narrative>Save the current workbook using the given file name. This is the equivalent of calling the 'Save Workbook As' action with the default values for 'handle' (0) and 'Workbook Name' ("")

Params :
- File name : Text : The path and name of the file to which the workbook should be saved.

Output :
- New Workbook Name : Text : The new name with which the workbook is identified within the excel instance.</narrative><display x="-285" y="-150" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7e1a622f-6438-41c8-9b86-e0d93c8267cb" name="Start" type="Start"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance for which the current workbook which should be saved. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="File name" narrative="The full path and file name to which the current workbook should be saved." stage="filename" /></inputs><onsuccess>ec111fc5-c308-4507-8b78-8fa3a8cfa136</onsuccess></stage><stage stageid="acb62e2e-bb38-4f8b-8ceb-61ec851d8986" name="End" type="End"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="New Workbook Name" narrative="The new workbook name which Excel will use to identify the workbook." stage="newworkbookname" /></outputs></stage><stage stageid="c5eee5f9-2db2-4efb-8f47-46e98073dedb" name="filename" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec111fc5-c308-4507-8b78-8fa3a8cfa136" name="Save Workbook As" type="SubSheet"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Filename" expr="[filename]" /></inputs><outputs><output type="text" name="New Workbook Name" stage="newworkbookname" /></outputs><onsuccess>acb62e2e-bb38-4f8b-8ceb-61ec851d8986</onsuccess><processid>21a53e34-8128-41cb-ad73-17250758ff23</processid></stage><stage stageid="09b432b9-8774-440c-8468-a5effa8bfe98" name="Exit" type="SubSheetInfo"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><narrative>Here for backward compatibility - exits the current instance of Excel without saving any changes.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4f9b1c2f-8b07-4ff1-95bc-12d1de8ec1a8" name="Start" type="Start"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc97b188-f45e-46f4-a66e-f592917cabb1</onsuccess></stage><stage stageid="c6c7615b-e18b-42aa-9e83-88884e01e23b" name="End" type="End"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fc97b188-f45e-46f4-a66e-f592917cabb1" name="Close Instance" type="SubSheet"><subsheetid>dc33871a-9aec-4a29-b811-3ab205ddf41e</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="flag" name="Save Changes" expr="False" /></inputs><onsuccess>c6c7615b-e18b-42aa-9e83-88884e01e23b</onsuccess><processid>6ec3006a-6553-4526-b522-32526c4aa3cc</processid></stage><stage stageid="f441e8a4-9990-4a87-a011-cb9f6c56a3f3" name="Save Current Workbook" type="SubSheetInfo"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><narrative>Saves the current workbook using the workbook name as the file name.
This is the equivalent of calling the Save Workbook action with the default values for 'handle' (0) and 'Workbook Name' ("")

Exceptions: 
- Bad Handle : If there is no active instance.
- Workbook Not Found : If there is no active workbook on the instance.</narrative><display x="-270" y="-90" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ed1db4c8-9563-4f9f-9606-a26b934a1db5" name="Start" type="Start"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0d75fe69-c13e-4536-a444-0f915cb6844a</onsuccess></stage><stage stageid="097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e" name="End" type="End"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0d75fe69-c13e-4536-a444-0f915cb6844a" name="Save Workbook" type="SubSheet"><subsheetid>76d598ed-b254-4c1e-8004-d4f2928b1450</subsheetid><loginhibit /><display x="-45" y="-75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /></inputs><onsuccess>097cd2c8-6d4c-42dc-a542-6e1f1e5a1b7e</onsuccess><processid>6e7cb0ad-5910-4065-aab2-2919726bae39</processid></stage><stage stageid="4e15b86d-9a5b-40ce-babe-c9fb02cf8764" name="createifmissing" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-180" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="dabb4d29-516f-442c-b2da-32cc45ae4df3" name="Get Worksheet As Collection (Fast)" type="SubSheetInfo"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><narrative>Here for back-compatability. Should be considered deprecated and calls should be replaced by "Get Worksheet As Collection", but right now this gets the active worksheet on the active workbook in the current instance of Excel into a collection. It is the equivalent of calling GetWorksheet As Collection with all the default input values.

Output:
Data : Collection : The active sheet's data in a collection.</narrative><display x="-300" y="-120" w="330" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c9ce0be6-6a88-4147-aeb3-e8974bb74970" name="Start" type="Start"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a3308402-1446-47b9-9e40-cc105a30db14</onsuccess></stage><stage stageid="aa04eeb6-e87c-4392-b7d2-52e4eb0b28af" name="End" type="End"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The data output" stage="worksheetcollection" /></outputs></stage><stage stageid="98e74d10-88b7-40dd-b771-0a137c8d0665" name="worksheetcollection" type="Collection"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><display x="-210" y="-15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a3308402-1446-47b9-9e40-cc105a30db14" name="Get Worksheet As Collection" type="SubSheet"><subsheetid>e58a482d-f349-4f40-9b03-a903156ce1b5</subsheetid><loginhibit /><display x="-45" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="0" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="text" name="Worksheet Name" expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs><onsuccess>aa04eeb6-e87c-4392-b7d2-52e4eb0b28af</onsuccess><processid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</processid></stage><stage stageid="078c6299-d93e-41b7-9a05-e26f0436b301" name="Format Cell" type="SubSheetInfo"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><narrative>Sets the number format at the given cell to that specified.
Oddly, this *doesn't* set the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="584cad36-fa91-4f11-83b7-4829f89f9a35" name="Start" type="Start"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." stage="cellref" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>6ed5e96a-3604-426e-b112-0be4f4f4b9a8</onsuccess></stage><stage stageid="59f040b8-35ab-48a1-8321-ab6d321172f4" name="cellref" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1867e11e-a153-4421-9512-848674ac9bea" name="format" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f19aada3-d5b7-49ca-8f65-824a0be6abea" name="handle" type="Data"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bc1c92c3-d8fd-4e00-86eb-cf22a3331a93" name="Format Current Cell" type="SubSheetInfo"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><narrative>Sets a cell format for the currently active cell.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fea1a9b-6cad-487c-a1d4-0b7a31c0b1e6" name="Start" type="Start"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" stage="format" /></inputs><onsuccess>a8dd2eb1-5144-4f87-b5fc-87dc562df875</onsuccess></stage><stage stageid="936f31ef-fa8e-4960-aa8a-1653cc6d7de2" name="Get Active Cell" type="SubSheetInfo"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><narrative>Gets a reference to the currently active cell on the given instance.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4a8f71f-cdb8-4091-99f6-f127fb3ec48d" name="Start" type="Start"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>0f68d429-d637-41bc-ab1c-3890e4e57da6</onsuccess></stage><stage stageid="de4f91e6-efde-42cd-9efa-700811c74c15" name="End" type="End"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs></stage><stage stageid="3251089f-0682-4cd7-84d1-78fd6a3f68db" name="handle" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a88df339-9204-419b-9dd7-4553548f1dff" name="cellref" type="Data"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><display x="-180" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f68d429-d637-41bc-ab1c-3890e4e57da6" name="CheckInstanceHandle" type="SubSheet"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>0749822c-e521-461c-a3cc-23f5a695980b</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="0749822c-e521-461c-a3cc-23f5a695980b" name="GetActiveCell" type="Code"><subsheetid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</subsheetid><loginhibit /><display x="0" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>de4f91e6-efde-42cd-9efa-700811c74c15</onsuccess><code><![CDATA[
cellref = GetInstance(handle).ActiveCell.Address(False,False)]]></code></stage><stage stageid="035e5e46-b65c-4bb5-8684-b433aa67ec7b" name="activatecell" type="Data"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><display x="-150" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="a47f3c07-957d-4909-bc43-4c56e5f58ae6" name="Activate Cell?" type="Decision"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="-15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[activatecell]" /><ontrue>e17eb74e-6764-4980-a96c-dd500de13181</ontrue><onfalse>65e26d12-b37e-4df9-a00b-07340967e5b2</onfalse></stage><stage stageid="e17eb74e-6764-4980-a96c-dd500de13181" name="Go To Cell" type="SubSheet"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Cell Reference" expr="[cellref]" /></inputs><onsuccess>23c196fc-bba5-4cc0-8e36-c8d6db96e360</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="23c196fc-bba5-4cc0-8e36-c8d6db96e360" name="anchor2" type="Anchor"><subsheetid>0b5de6c6-ed9a-443d-95b8-142dd521120e</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>65e26d12-b37e-4df9-a00b-07340967e5b2</onsuccess></stage><stage stageid="5c445c44-609a-45b3-8c4a-ff4a670213df" name="Go To Next Empty Cell Left" type="SubSheetInfo"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><narrative>Activates the next empty cell that can be found on the left of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="75944053-c0d7-42b9-9231-b173e13066f5" name="Start" type="Start"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>10b0cef9-77af-42e0-b42e-6fc1870587a4</onsuccess></stage><stage stageid="63d50db2-a5f9-48a9-ae16-9a801712b53c" name="End" type="End"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="10b0cef9-77af-42e0-b42e-6fc1870587a4" name="Find Next Empty Cell" type="SubSheet"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;L&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>63d50db2-a5f9-48a9-ae16-9a801712b53c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="f6b88b10-a188-436b-830e-b7eaf783495c" name="handle" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="6b1312d6-de01-4272-b3cd-765b4835a9f2" name="cellref" type="Data"><subsheetid>eaafa766-b0ce-4891-8e6e-de12d6283ae0</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ffa60dc-058f-4edc-9140-a43050494dee" name="Go To Next Empty Cell Right" type="SubSheetInfo"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><narrative>Activates the next empty cell that can be found on the right of the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="78bf9f71-b3ba-4ef3-8142-08be21698287" name="Go To Next Empty Cell Up" type="SubSheetInfo"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><narrative>Activates the next empty cell that can be found above the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0a069347-2e66-4668-ab57-b59e6536c5d0" name="Go To Next Empty Cell Down" type="SubSheetInfo"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><narrative>Activates the next empty cell that can be found below the active cell.</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3b21101-6815-4f78-b7af-06f0a73a4070" name="Start" type="Start"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>782731b8-b7fb-4bec-8b35-b0438a5d8cec</onsuccess></stage><stage stageid="650fc617-bcbd-4d39-b835-748d94773ec6" name="End" type="End"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="782731b8-b7fb-4bec-8b35-b0438a5d8cec" name="Find Next Empty Cell" type="SubSheet"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;R&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>650fc617-bcbd-4d39-b835-748d94773ec6</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="56afae5f-81d8-4fdc-b521-cb4b99fac5c3" name="handle" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="347d2c28-0ea0-4ed0-95ce-14e5925f7193" name="cellref" type="Data"><subsheetid>d2d4c80d-3058-4d60-8e96-7b9b12f9ae58</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4636685a-21dc-420d-ae4b-e435f9861298" name="Start" type="Start"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>c01227ef-86b5-48c4-8cbc-6db80b1df2c6</onsuccess></stage><stage stageid="c7e480b2-caf7-430d-b419-49c70c452c4f" name="End" type="End"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="c01227ef-86b5-48c4-8cbc-6db80b1df2c6" name="Find Next Empty Cell" type="SubSheet"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;U&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>c7e480b2-caf7-430d-b419-49c70c452c4f</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="2d6e7e4e-d6f5-45b7-b4ae-33658d6d38fd" name="handle" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="287aee08-8696-49f9-b659-244e88067d0a" name="cellref" type="Data"><subsheetid>5a78c1a5-e339-4f76-9203-d180bee31770</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4791458d-f683-4adf-ad1c-1591b3d2fab2" name="Start" type="Start"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be found. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>072dae62-8d0d-4522-904c-6d253988874d</onsuccess></stage><stage stageid="b90c78f9-6a37-4db4-b30f-ac96d30c730c" name="End" type="End"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the cell which has been found to be empty - an empty value indicates that no empty cells were found." stage="cellref" /></outputs></stage><stage stageid="072dae62-8d0d-4522-904c-6d253988874d" name="Find Next Empty Cell" type="SubSheet"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><loginhibit /><display x="-30" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be sought. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Direction" narrative="The direction in which the next empty cell is required. This should start with any of &quot;U&quot;, &quot;D&quot;, &quot;L&quot; or &quot;R&quot; to find a cell up, down, left or right respectively. The direction parameter is not case-sensitive." expr="&quot;D&quot;" /><input type="flag" name="Activate Cell?" narrative="True to activate the cell which is found; False to just return the reference and leave the active cell as it was before. Default is False." expr="True" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The cell reference identifying the next empty cell from the active cell in the direction given. An empty value indicates that there were no empty cells between the active cell and a boundary." stage="cellref" /></outputs><onsuccess>b90c78f9-6a37-4db4-b30f-ac96d30c730c</onsuccess><processid>0b5de6c6-ed9a-443d-95b8-142dd521120e</processid></stage><stage stageid="c9e817ca-81d1-4d65-b9d1-27fe80445871" name="handle" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1f9a80c2-fd03-43e2-a333-5f2c6b7ad0e2" name="cellref" type="Data"><subsheetid>82492075-b486-413c-9bd4-05eba466843e</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="febdcc05-5a8a-4445-a188-d0259dfd21a5" name="handle" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3" name="End" type="End"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="111cd676-ae8c-4b83-9bb1-5567fe0735bd" name="FormatCell" type="Code"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="cellref" expr="[cellref]" /><input type="text" name="format" expr="[format]" /><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>9cbae4e4-6b41-4a38-a05e-0dc4df5d25a3</onsuccess><code><![CDATA[
GetWorkbook(handle,Nothing).ActiveSheet.Range(cellref,cellref).NumberFormat = format]]></code></stage><stage stageid="6ed5e96a-3604-426e-b112-0be4f4f4b9a8" name="Activate Workbook" type="SubSheet"><subsheetid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>111cd676-ae8c-4b83-9bb1-5567fe0735bd</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="a8dd2eb1-5144-4f87-b5fc-87dc562df875" name="Get Active Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the currently active cell is required. The default of zero indicates the currently active instance." expr="[handle]" /></inputs><outputs><output type="text" name="Cell Reference" narrative="The reference identifying the currently active cell on the specified sheet." stage="cellref" /></outputs><onsuccess>22a903ea-24b0-4f4b-ad3d-590aa6ab3d97</onsuccess><processid>31ed0ec6-5d0f-4f9e-90c8-1fb7e73e5d5c</processid></stage><stage stageid="8480e1e0-5e73-4bec-bc84-ab2b4a5f43fa" name="cellref" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22a903ea-24b0-4f4b-ad3d-590aa6ab3d97" name="Format Cell" type="SubSheet"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell to be formatted is contained. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The reference to the cell whose format should be changed." expr="[cellref]" /><input type="text" name="Cell Format" narrative="The format required for the cell - this can be the name of the default format (eg. &quot;General&quot;) or a sequence of formatting codes (eg. &quot;£#,##0.00_);[Red](£#,##0.00)&quot;)" expr="[format]" /></inputs><onsuccess>2776814b-74bd-42b3-b282-80a156b933cd</onsuccess><processid>a031ba9a-3bd2-49b3-8d9b-6f982b34eb3c</processid></stage><stage stageid="dc6c799a-7fa3-4623-9bf8-e966d530b67d" name="format" type="Data"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2776814b-74bd-42b3-b282-80a156b933cd" name="End3" type="End"><subsheetid>9b535bfc-4f80-4d7c-88b5-49b941688030</subsheetid><loginhibit /><display x="-30" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04fbbbb0-aba9-4518-8bc7-d26273986f9e" name="Set Window Size" type="SubSheetInfo"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><narrative>Sets the window size of the specified instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7a197c45-c253-4fb8-bed5-e01508e93824" name="Start" type="Start"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle specifying the instance on which the bounds should be changed." stage="handle" /><input type="number" name="Width" narrative="The width to which the instance's window should be set" stage="width" /><input type="number" name="Height" narrative="The height to which the instance's window should be set." stage="height" /></inputs><onsuccess>3d73ff94-84e6-4e12-947e-76d14884579c</onsuccess></stage><stage stageid="a952606a-38e1-4585-821a-7395c94d70cb" name="End" type="End"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4c82574-5577-49e8-80a8-79a27ace5ffb" name="Set Window Location" type="SubSheetInfo"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><narrative>Moves the specified instance's window to the required location.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="67ee4120-06af-41a6-ae0a-629e1bd3bd05" name="Start" type="Start"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window location should be set." stage="handle" /><input type="number" name="X" narrative="The x co-ordinate to which the window should be moved." stage="x" /><input type="number" name="Y" narrative="The y co-ordinate to which the window should be moved." stage="y" /></inputs><onsuccess>3f663a38-1c01-438f-a02a-aa56ded74764</onsuccess></stage><stage stageid="5b24c512-8930-4c34-9083-7834083ab65c" name="End" type="End"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="129fe5f1-311c-4b58-964f-74b62d5f17ad" name="Set Window State" type="SubSheetInfo"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><narrative>Minimizes / maximizes / restores the window attached to the specified excel instance.

Exceptions:
Invalid Input Parameter : If the given state was not "normal" and did not start with either "min" or "max"</narrative><display x="-240" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="44e95a42-ad61-4e8d-af8a-aed037662ba8" name="Go To Next Cell" type="SubSheetInfo"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><narrative>Moves a specified number of rows and columns from the currently active cell and returns the new cell reference.
If the resultant cell reference is the same as the active cell before this action was called, this action has 'failed'. This is usually because the active cell is too close to a boundary.</narrative><display x="-330" y="-135" w="420" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a87664dd-017d-4b12-b9c3-7230d7910326" name="Start" type="Start"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="Rows" narrative="The number of rows to navigate down. A negative value indicates that the action should navigate UP the required number of rows." stage="rows" /><input type="number" name="Columns" narrative="The number of columns to navigate to the right. A negative value indicates that the action should navigate to the left." stage="cols" /></inputs><onsuccess>fdbdccce-2959-40cb-b4b4-d53556dd97a1</onsuccess></stage><stage stageid="dcae25b1-7e8b-4ee2-9ffc-11aacd935154" name="Close Current Workbook" type="SubSheetInfo"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><narrative>Closes the current workbook on the current excel instance.
This is the equivalent of calling the 'Close Workbook' action with the default values for 'handle' (0) and 'Workbook Name' ("")</narrative><display x="-210" y="-105" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8fccb8ba-397f-406d-a6cd-85cb3c09ba17" name="Start" type="Start"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook which should be closed resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5</onsuccess></stage><stage stageid="160a79e4-be77-47f7-b8f2-271a170a762f" name="End" type="End"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9dbc3256-ac5d-4bb3-880c-a4aaaaf33bc5" name="Close Workbook" type="SubSheet"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="&quot;&quot;" /><input type="flag" name="Save Data" expr="False" /></inputs><onsuccess>160a79e4-be77-47f7-b8f2-271a170a762f</onsuccess><processid>6ccaae8b-c06f-45c8-8772-835218881458</processid></stage><stage stageid="a9a3eac3-7c04-4983-9224-bbf490c75af1" name="handle" type="Data"><subsheetid>efe9d5bd-c8f0-42e1-aadc-6c7b0bfdd92c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="00fbd16c-c443-4d2e-ae2a-4539f816c297" name="rows" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2fa354e6-61e2-452d-b0c4-208150e9076d" name="cols" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="50344da8-13a3-4d20-899b-bfd3b5507681" name="End" type="End"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Cell Reference" narrative="The reference of the currently active cell after navigating the required number of rows / columns. If the action could not navigate the desired number of rows / columns (eg. the active cell is near a boundary), then the active cell will not have been change, and this cell reference will represent the same cell that was active before this action was initiated." stage="cellref" /></outputs></stage><stage stageid="30a3c6c6-5324-4fe2-a0b2-3026f1a5e379" name="GoToNextCell" type="Code"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="cols" expr="[cols]" /><input type="number" name="rows" expr="[rows]" /></inputs><outputs><output type="text" name="cellref" stage="cellref" /></outputs><onsuccess>50344da8-13a3-4d20-899b-bfd3b5507681</onsuccess><code><![CDATA[
Dim Instance As Object = GetInstance(handle)

If Instance.ActiveCell Is Nothing Then
	Dim wb As Object = Instance.ActiveWorkBook 
	If wb IsNot Nothing Then
		Dim ws As Object = wb.ActiveSheet
		If ws IsNot Nothing Then
			ws.Range(1,1).Activate()
		Else
			Throw New Exception("There is no active worksheet")
		End If
	Else
		Throw New Exception("There is no active workbook")
	End If
Else
	Try
		Instance.ActiveCell.Offset(rows,cols).Activate()
	Catch ex As Exception
	End Try
End If
cellref = Instance.ActiveCell.Address(False,False)
]]></code></stage><stage stageid="fdbdccce-2959-40cb-b4b4-d53556dd97a1" name="Activate Workbook" type="SubSheet"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><loginhibit /><display x="-45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="&quot;&quot;" /></inputs><onsuccess>30a3c6c6-5324-4fe2-a0b2-3026f1a5e379</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="5742c4d1-0b40-4dd9-8cf0-e66b9adeab4b" name="handle" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="437bf59c-d85b-45c9-8828-2e2c665afd10" name="cellref" type="Data"><subsheetid>b0b877cd-07ce-4df1-a63b-89fa4d315c4c</subsheetid><display x="105" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc5149d8-0c99-413a-81c8-ba9efc719cdc" name="handle" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a87fd94f-f26f-4c2e-bb67-1ae4c0bed939" name="width" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59a65ce5-cfb1-4190-8449-e4fb5ced121a" name="height" type="Data"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><display x="-195" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d73ff94-84e6-4e12-947e-76d14884579c" name="CheckInstanceHandle" type="SubSheet"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>82380eea-db5c-47b3-9a94-2e19338cca95</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="82380eea-db5c-47b3-9a94-2e19338cca95" name="SetWindowSize" type="Code"><subsheetid>39374841-edab-4ea9-86d9-5f2fff3f1a5f</subsheetid><loginhibit /><display x="-15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="height" expr="[height]" /><input type="number" name="width" expr="[width]" /></inputs><onsuccess>a952606a-38e1-4585-821a-7395c94d70cb</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Width = width
excel.Height = height]]></code></stage><stage stageid="8acfecd0-d6d9-4de0-ae9e-46922ed73111" name="x" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b68bc93f-161f-4d6f-825d-2d961690ca56" name="y" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="079ee65b-a90b-4ab6-81b5-801557c07fbf" name="handle" type="Data"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3f663a38-1c01-438f-a02a-aa56ded74764" name="CheckInstanceHandle" type="SubSheet"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>12d30538-38bf-4f9b-a180-41d0b836854c</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="12d30538-38bf-4f9b-a180-41d0b836854c" name="SetWindowLocation" type="Code"><subsheetid>904eeb0d-e6a2-408b-99b5-621307252585</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="x" expr="[x]" /><input type="number" name="y" expr="[y]" /></inputs><onsuccess>5b24c512-8930-4c34-9083-7834083ab65c</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

excel.WindowState = -4143 'Excel.XlWindowState.xlNormal
excel.Left = x
excel.Top = y]]></code></stage><stage stageid="016d76a7-6a95-485e-84f5-faa85a0c0712" name="Start" type="Start"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance whose window state should be set." stage="handle" /><input type="text" name="State" narrative="The state of the window which is required. Should start with &quot;min&quot; (to minimize the window), &quot;max&quot; (to maximise the window) or it should equal &quot;normal&quot; (to restore the window). Anything else will result in an error." stage="state" /></inputs><onsuccess>0f8fc913-9174-4304-823f-d18ffae7217a</onsuccess></stage><stage stageid="ffe49fc1-13a2-4e84-a649-bd692ef7752a" name="End" type="End"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca7b06cd-e6e3-42e1-8980-cb429796aa3b" name="handle" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3db578f3-47a7-4150-9ccc-6f9a16dbe73f" name="CheckInstanceHandle" type="SubSheet"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>458615b7-ea0b-4d96-9dce-87099d6e5950</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="458615b7-ea0b-4d96-9dce-87099d6e5950" name="SetWindowState" type="Code"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="state" expr="[state]" /></inputs><onsuccess>ffe49fc1-13a2-4e84-a649-bd692ef7752a</onsuccess><code><![CDATA[Dim excel as Object = GetInstance(handle)

If state.ToLower().StartsWith("min") Then
	excel.WindowState = -4140
ElseIf state.ToLower().StartsWith("max") Then
	excel.WindowState = -4137
ElseIf state.ToLower() = "normal" Then
	excel.WindowState = -4143
End If]]></code></stage><stage stageid="4686174e-a845-4f2b-9a0a-70325a2df399" name="Valid State?" type="Decision"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><narrative>Checks if the given state is a valid value</narrative><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="StartsWith([state],&quot;max&quot;) or StartsWith([state],&quot;min&quot;) or [state]=&quot;normal&quot;" /><ontrue>3db578f3-47a7-4150-9ccc-6f9a16dbe73f</ontrue><onfalse>c0e54c49-a9fc-48c4-a54e-2b85581d4ba5</onfalse></stage><stage stageid="1537f595-55fc-4726-910a-1d5ef88bf7a4" name="state" type="Data"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="-195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c0e54c49-a9fc-48c4-a54e-2b85581d4ba5" name="Invalid State Exception" type="Exception"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><display x="135" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Invalid Input Parameter" detail="&quot;Invalid Window State Parameter : &quot; &amp; [state] &amp; &quot; - must start with 'min', 'max' or equal 'normal'&quot;" /></stage><stage stageid="9d0e19ce-07b8-4074-a34c-6186bcd3ca77" name="newworkbookname" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04e9d703-4b1c-4196-b1ff-7bf68a12faae" name="newworkbookname" type="Data"><subsheetid>21a53e34-8128-41cb-ad73-17250758ff23</subsheetid><narrative>The new workbook name assigned by Excel after saving the book</narrative><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ab01750-1bb3-4299-add0-8a1d08f6bf41" name="handle" type="Data"><subsheetid>81b9e5cd-a91d-4a33-bc23-1602c5fe878f</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f778bc6c-8cdd-4e56-80b8-b7cdb1fd11ae" name="Release Instance" type="SubSheetInfo"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><narrative>Removes an instance from this business object *without* closing or quitting it - after running this action, the instance in question will not be accessible by this object unless it is re-attached to using 'Open Instance'.

Params:
- handle : Number : The handle of the instance to be released. The default of 0 indicates the currently active instance. Note that following the current instance being released, the current instance will not be set.

Exceptions:
- Bad Handle : If the given handle did not correspond to an instance.
</narrative><display x="-240" y="-135" w="360" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66fece2a-2c82-48bb-92fe-211ee6556a24" name="Start" type="Start"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance to be released. The default value of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1d0738a9-7841-446d-b3ed-1a4bafeccc1b</onsuccess></stage><stage stageid="dc556131-4dde-459f-9af8-8c854fcae760" name="End" type="End"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6da262c1-9a82-4bc8-9363-ede171f125e5" name="handle" type="Data"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><display x="-225" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="1d0738a9-7841-446d-b3ed-1a4bafeccc1b" name="CheckInstanceHandle" type="SubSheet"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>2e67a2b9-10bf-4d4d-9bd9-db68edaf7662</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="2e67a2b9-10bf-4d4d-9bd9-db68edaf7662" name="Release Instance" type="Code"><subsheetid>4fb11e41-83d8-461d-8c0d-04cdd2f670e2</subsheetid><loginhibit /><display x="15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>dc556131-4dde-459f-9af8-8c854fcae760</onsuccess><code><![CDATA[
	Dim current as Object = CurrentInstance
	Dim inst as Object = GetInstance(handle) ' Careful - sets the 'current instance' to inst

	HandleMap.Remove(handle)
	InstanceMap.Remove(inst)

	If Object.ReferenceEquals(inst, current) Then
		CurrentInstance = Nothing
	Else
		CurrentInstance = current
	End If
]]></code></stage><stage stageid="0f04ef58-eacb-4204-ba2b-d073285c2be8" name="Note1" type="Note"><subsheetid>859e3c31-acbc-48dd-8535-ef2ce9385d70</subsheetid><loginhibit /><narrative>Don't need to anything - a side-effect of the check is to set the current instance... makes it simple.</narrative><display x="150" y="-120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f0ee2a73-65b2-418e-8b77-6dc802046c5d" name="Attach" type="SubSheetInfo"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><narrative>Back-compatible link to 'Open Instance'. This opens the first running instance of Excel found and links to it in this object.

Returns:
- handle : Number : An integer with which the instance opened can be identified.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True</narrative><display x="-210" y="-120" w="240" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="92e3475b-ed7d-4ae1-940c-7eb554a7cea8" name="Start" type="Start"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>ba67509b-7301-4ce1-a467-e9970249b392</onsuccess></stage><stage stageid="c74db74c-8822-4391-8593-d9919e357a5b" name="End" type="End"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle which identifies the excel instance in subsequent actions" stage="handle" /></outputs></stage><stage stageid="f68ab231-3cbb-423e-84de-9103b9f971f4" name="handle" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba67509b-7301-4ce1-a467-e9970249b392" name="Open Instance" type="SubSheet"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="&quot;&quot;" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>c74db74c-8822-4391-8593-d9919e357a5b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="fa5aede4-db23-4781-8954-3baaf0fd0740" name="Attach to workbook" type="SubSheetInfo"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><narrative>Back compatible link to 'Open instance' - attaches to the excel instance containing the current workbook. Note that if the instance containing the workbook could not be found, a new instance will be created.

Params:
- File name : Text : The name of the file in the instance that should be opened.
- Enable Events : Flag : Indicates that events should be enabled / disabled on the attached instance - defaulted to True
Returns:
- handle : Number : The integer that can be used to reference this instance later.</narrative><display x="-195" y="-135" w="390" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="431ac081-4d84-414a-80dd-cb137dd67a73" name="Start" type="Start"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="60" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File name" narrative="The name of the file which should be opened" stage="filename" /><input type="flag" name="Enable Events" narrative="Flag to indicate that events should be enabled / disabled on the attached instance - defaulted to True" stage="Enable Events" /></inputs><onsuccess>4a719c51-85b9-4750-9593-bf0e3166edfc</onsuccess></stage><stage stageid="ba3c2775-b5ac-44a8-be6b-05befaea619b" name="End" type="End"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="handle" narrative="The integer handle indentifying the instance opened. This can be used in subsequent actions to identify the instance." stage="handle" /></outputs></stage><stage stageid="0283fb0e-8dda-4956-b434-ea1d6c99e063" name="handle" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a719c51-85b9-4750-9593-bf0e3166edfc" name="Open Instance" type="SubSheet"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><loginhibit /><display x="60" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Workbook Name" narrative="The name of the workbook which should be opened. An empty value indicates that the first activated instance of Excel should be opened." expr="[filename]" /><input type="flag" name="Enable Events?" narrative="Flag to indicate whether events (ie. macros) should be enabled on the given instance. Default is True" expr="[Enable Events]" /></inputs><outputs><output type="number" name="handle" narrative="The integer handle with which the instance can be identified in later actions." stage="handle" /></outputs><onsuccess>ba3c2775-b5ac-44a8-be6b-05befaea619b</onsuccess><processid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</processid></stage><stage stageid="c99c412d-dbb6-4a6a-a7e2-9834a74052d0" name="filename" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a734ecf-7e58-4aa4-b7ff-5aa4494ec687" name="cellref empty?" type="Decision"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>bed65abf-b1ad-4f7e-83be-c8a96e3ea162</ontrue><onfalse>39135f99-dd54-4a2b-bff2-555714753a6d</onfalse></stage><stage stageid="bed65abf-b1ad-4f7e-83be-c8a96e3ea162" name="anchor3" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b98f8e72-e995-42a4-b3f9-df0acf2a5944</onsuccess></stage><stage stageid="b98f8e72-e995-42a4-b3f9-df0acf2a5944" name="anchor4" type="Anchor"><subsheetid>0e031661-2f5e-4cb2-949b-97babe59ff81</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a04a5ea1-798c-4659-ac77-0c966c305cba</onsuccess></stage><stage stageid="250bb1db-ca8e-4edb-b9a4-52fa39261823" name="Go To Cell" type="SubSheet"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required cell should be navigated to. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference on the currently active sheet within the specified instance which should be navigated to." expr="[cellref]" /></inputs><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess><processid>ed502669-4207-4c88-895d-8c58ec321578</processid></stage><stage stageid="29427d7f-a2d9-4b65-b6c4-773881bd285d" name="cellref empty?" type="Decision"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[cellref]=&quot;&quot;" /><ontrue>e743b184-cb2f-43cb-83c1-b99654286d3d</ontrue><onfalse>250bb1db-ca8e-4edb-b9a4-52fa39261823</onfalse></stage><stage stageid="e743b184-cb2f-43cb-83c1-b99654286d3d" name="anchor3" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="-90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dea637ce-5933-4805-94a4-f2bbd9b99d0b</onsuccess></stage><stage stageid="dea637ce-5933-4805-94a4-f2bbd9b99d0b" name="anchor4" type="Anchor"><subsheetid>17f8ab72-203a-42d4-a59b-a073ccd57bb0</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>94dc11fe-505e-4544-a26b-80d3d88d0951</onsuccess></stage><stage stageid="bcf597f1-97f7-449c-8865-ff8ca139dd6c" name="Get Active Cell Value" type="SubSheetInfo"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><narrative>Gets the value of the currently active cell.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b69207e1-2811-4150-a61f-4746ef8489d4" name="Start" type="Start"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the cell whose value is required resides. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>af8aab5e-4539-4acc-a5cc-1bd632282587</onsuccess></stage><stage stageid="73e8408e-ff97-4d9f-b0e0-5a0e844b731c" name="End" type="End"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The (unformatted) value found at the specified cell." stage="Value" /></outputs></stage><stage stageid="af8aab5e-4539-4acc-a5cc-1bd632282587" name="Get Active Cell Value" type="SubSheet"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><loginhibit /><display x="-45" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance from which the required cell value should be retrieved. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Cell Reference" narrative="The cell reference indicating which cell's value should be retrieved. An empty value indicates that the currently active cell's value should be retrieved." expr="&quot;&quot;" /></inputs><outputs><output type="text" name="Value" narrative="The (unformatted) value from the required cell." stage="Value" /></outputs><onsuccess>73e8408e-ff97-4d9f-b0e0-5a0e844b731c</onsuccess><processid>0e031661-2f5e-4cb2-949b-97babe59ff81</processid></stage><stage stageid="88d7196d-2443-4439-8261-6700e9673d0a" name="handle" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e4cdc61b-a1e1-461e-8d91-a98cd40a2c5a" name="Value" type="Data"><subsheetid>d96215cc-750e-4616-8852-1d4d44a9f21b</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="69cd13bc-f818-4a5b-be64-b6fb7de62c61" name="Create Worksheet" type="SubSheetInfo"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><narrative>Creates a new worksheet in the specified workbook with the given name. If a sheet with the given name already exists, this will activate that sheet.

Params:
- handle : Number : The number identifying the instance required.
- Workbook Name : Text : The name of the workbook to add it to. An empty string (the default) indicates the active workbook in the instance.
- Worksheet Name : Text : The name of the worksheet that is required. Note that if the name matches a worksheet already in the workbook a new worksheet will not be created, but that worksheet will be activated.

Exceptions: 
- Bad Handle : If the given handle did not correspond to an instance.
- Workbook Not Found : If the given workbook did not exist on the specified instance.</narrative><display x="-285" y="-165" w="420" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2a0c385f-fe76-4eb3-a36f-4936eb7ac84a" name="Start" type="Start"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet should be created. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet should be created - The default empty value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." stage="worksheetname" /></inputs><onsuccess>89240340-492e-44ab-9fed-c64a6d3fffdf</onsuccess></stage><stage stageid="5d624e42-813e-467d-bda1-ebb3e410045c" name="End" type="End"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="89240340-492e-44ab-9fed-c64a6d3fffdf" name="Activate Worksheet" type="SubSheet"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><loginhibit /><display x="-30" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="Workbook Name" expr="[workbookname]" /><input type="flag" name="Create If Missing?" expr="True" /><input type="text" name="Worksheet Name" expr="[worksheetname]" /></inputs><onsuccess>5d624e42-813e-467d-bda1-ebb3e410045c</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="ab7509fd-0572-44d9-9050-b9c9907c49ac" name="handle" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="544db1ef-b84c-403c-b4ee-de2d660ec253" name="worksheetname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df17296d-4f63-46cf-bcd9-4acd7eefed34" name="workbookname" type="Data"><subsheetid>f78a5f80-c2d5-4e9b-ae08-a56fb8007b18</subsheetid><display x="-195" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64089c9a-4a30-4db5-bf87-7ba017ba54e7" name="Write Collection" type="SubSheetInfo"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><narrative>Writes the given collection into the specified sheet.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a1ab274b-c2fb-47c7-94f8-292590df5765" name="Start" type="Start"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the specified collection should be written. The default of zero indicates the currently active instance." stage="handle" /><input type="collection" name="Collection" narrative="The collection containing the data which should be written to the worksheet." stage="collection" /><input type="text" name="Workbook Name" narrative="The name of the workbook within which the data should be written. The default empty value indicates the current workbook within the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet on which the given data should be written. The default empty value indicates the current sheet within the specified workbook." stage="worksheetname" /><input type="text" name="Cell Reference" narrative="The reference at which the collection should be written." stage="cellref" /><input type="flag" name="Include Column Names" narrative="True to indicate that the column names from the collection should be written out as the first row; False to ignore the column names and just write out the data." stage="includecolnames" /></inputs><onsuccess>a3a318c6-e218-4e78-a818-1673f90541b3</onsuccess></stage><stage stageid="8819df51-0132-421d-baae-b24b5082f131" name="End" type="End"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="85afbd6d-2c6e-42f8-8e71-7858a8488167" name="handle" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc024959-b016-4b16-93a8-e230e4ab936d" name="collection" type="Collection"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="71e25266-b464-4b47-b6a7-c8a70cff7514" name="worksheetname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5f2a253-bee4-4ee0-9d8c-ab780265b5db" name="workbookname" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-255" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98c5b0c8-0c25-4972-b9c8-6057e6841ce5" name="includecolnames" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3a318c6-e218-4e78-a818-1673f90541b3" name="Activate Worksheet" type="SubSheet"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the worksheet which should be activated resides. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook in which the sheet exists - The default empty value indicates the currently active workbook on the specified instance." expr="[workbookname]" /><input type="text" name="Worksheet Name" narrative="The name of the sheet which should be activated. The default empty text value indicates that the currently active sheet should be, er, activated, making this a no-op." expr="[worksheetname]" /><input type="flag" name="Create If Missing?" narrative="True to create the sheet if it isn't present on the specified workbook; False to not do so." expr="False" /></inputs><onsuccess>f2ebff4d-5325-45e8-945d-73006f5bd7ce</onsuccess><processid>733c2840-8162-465a-a8f2-7d023087c369</processid></stage><stage stageid="f2ebff4d-5325-45e8-945d-73006f5bd7ce" name="WriteColl" type="Code"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="cellref" expr="[cellref]" /><input type="collection" name="collection" expr="[collection]" /><input type="flag" name="includecolnames" expr="[includecolnames]" /></inputs><onsuccess>8819df51-0132-421d-baae-b24b5082f131</onsuccess><code><![CDATA[	' Get to the cell
	Dim ws as Object = GetWorksheet(handle,workbookname,worksheetname)
	Dim origin as Object = ws.Range(cellref,cellref)
	Dim cell as Object = origin

	Dim colInd as Integer = 0, rowInd as Integer = 0 ' Offsets from the origin cell
	
	' Deal with the column names first
	If includecolnames Then
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			cell.Value = col.ColumnName
			colInd += 1
		Next
		rowInd += 1
	End If
	
	' Now for the data itself
	For Each row as DataRow in collection.Rows
		colInd = 0
		For Each col as DataColumn in collection.Columns
			Try
				cell = origin.Offset(rowInd, colInd)
			Catch ex as Exception ' Hit the edge.
				Exit For
			End Try
			'MessageBox.Show("RowOffset:" & rowInd & "; ColOffset:" & colInd & "; cell: " & cell.Address(False,False))
			cell.Value = row(col)
			colInd += 1
		Next
		rowInd+=1
	Next]]></code></stage><stage stageid="fb353c57-7a8c-4ccb-9428-94761a643715" name="cellref" type="Data"><subsheetid>0dbe03a0-e259-47ab-bee7-7dec41ae32e7</subsheetid><display x="-135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="add1def4-fc64-4534-bbb0-d3ac07611a85" name="anchor5" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>108c176a-92d1-4f50-b460-ac6a3f0dac25</onsuccess></stage><stage stageid="51d7d624-e8bf-42b7-afdd-8d090b584865" name="anchor6" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="195" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>add1def4-fc64-4534-bbb0-d3ac07611a85</onsuccess></stage><stage stageid="4be7292e-9eb1-43f7-9e87-3ae906bd79ed" name="savechanges" type="Data"><subsheetid>6ec3006a-6553-4526-b522-32526c4aa3cc</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0f8fc913-9174-4304-823f-d18ffae7217a" name="state = Lower(state)" type="Calculation"><subsheetid>d4998c94-d432-4713-81a5-e902535089c6</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4686174e-a845-4f2b-9a0a-70325a2df399</onsuccess><calculation expression="Lower([state])" stage="state" /></stage><stage stageid="27e7ff80-4437-42a3-ba14-e499be5bc0e5" name="sheetexists" type="Data"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="-240" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3a854b87-0e5a-46dd-8181-a58f97555aa8" name="Sheet Existed?" type="Decision"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>ddfe7f54-b5c2-410a-8a5d-3c2b52de9550</ontrue><onfalse>9bc52652-698b-46ca-ba0d-ebb170432963</onfalse></stage><stage stageid="9bc52652-698b-46ca-ba0d-ebb170432963" name="No Such Sheet" type="Exception"><subsheetid>733c2840-8162-465a-a8f2-7d023087c369</subsheetid><display x="150" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b396c564-6c31-4c6f-be0a-0cc64f178a19" name="sheetexisted" type="Data"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="-195" y="135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56c2259b-9d71-4364-bede-79b4af1e3e96" name="Sheet Existed?" type="Decision"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><loginhibit /><display x="15" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexisted]" /><ontrue>6b35d569-0eb2-4c01-bb88-e5f7c41bde81</ontrue><onfalse>091e0364-11db-49d4-8e94-8f5f9396fa9c</onfalse></stage><stage stageid="091e0364-11db-49d4-8e94-8f5f9396fa9c" name="No Such Sheet" type="Exception"><subsheetid>37a2442f-8e22-4749-8b44-4ef2980f28a6</subsheetid><display x="150" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="b6d0da26-0322-4b43-b1d5-304466ff29fb" name="Sheet Exists?" type="Decision"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>cf5b0880-2cac-4221-946a-e4e3d7f0bc99</ontrue><onfalse>7e8fce63-9130-4c0f-baea-ea8be793c57d</onfalse></stage><stage stageid="7e8fce63-9130-4c0f-baea-ea8be793c57d" name="No Such Sheet" type="Exception"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="286f9733-2a26-4c00-a7ff-7ac289086919" name="sheetexists" type="Data"><subsheetid>8e22a2d9-d4c3-4fe0-bbf0-4788d1812d30</subsheetid><display x="-195" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cb56c9a-aa29-4ed4-84e1-9a65976ba50f" name="Does sheet exist?" type="Decision"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><loginhibit /><display x="105" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[sheetexists]" /><ontrue>859597f9-d048-46a3-bf99-2f3f6588c2c5</ontrue><onfalse>2b8672dd-8330-4c2d-a522-9f12c9e27ba2</onfalse></stage><stage stageid="2b8672dd-8330-4c2d-a522-9f12c9e27ba2" name="No Such Sheet" type="Exception"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="300" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Worksheet Not Found" detail="&quot;No worksheet was found with the name '&quot; &amp; [worksheetname] &amp; &quot;' on the workbook '&quot; &amp; [workbookname] &amp; &quot;' within the instance with the handle: &quot; &amp; [handle]" /></stage><stage stageid="c50f1065-0989-47f5-aad4-c66396e462e0" name="sheetexists" type="Data"><subsheetid>f743df98-2e69-4559-89b6-32ef6637618d</subsheetid><display x="-285" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b64b13-62f8-4431-94c4-62b7ff1f1c2c" name="Get Worksheet as Collection Offset" type="SubSheetInfo"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="164e0a2b-6c31-48ce-8172-7fb4edd3dbb3" name="End" type="End"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" stage="worksheetcollection" /></outputs></stage><stage stageid="0b6697a7-4aa1-4ec1-86db-bc41f3ca9d5e" name="handle" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2c25e33f-7af9-4998-8c1a-4029c0e2af9e" name="workbookname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee01090-4b0b-4e85-9643-1f3b40d182e2" name="Start" type="Start"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" stage="handle" /><input type="text" name="Workbook Name" stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" stage="Start Cell" /><input type="flag" name="Use Header" stage="Use Header" /></inputs><onsuccess>8f50a819-e470-4c0e-97d5-08bd0f705682</onsuccess></stage><stage stageid="a755a822-d485-45ea-8d7d-426646b4aec0" name="GetWorksheetAsCollectionOffset" type="Code"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="flag" name="Use Header" expr="[Use Header]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>164e0a2b-6c31-48ce-8172-7fb4edd3dbb3</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	ws.Activate()

	Dim cell as Object = ws.Range(Start_Cell)
	Dim r as Object = ws.UsedRange.Offset(cell.row-1,cell.column-1)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = Use_Header
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If Not Use_Header Then
				Dim i As Integer
				For Each field As String in fields
					i += 1
					table.Columns.Add("Field" & i)
				Next
			End If
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="8f50a819-e470-4c0e-97d5-08bd0f705682" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><loginhibit /><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>a755a822-d485-45ea-8d7d-426646b4aec0</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="f82cf955-6669-494b-b6a1-866974c7cc74" name="worksheetname" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="-195" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b329ff1-b62a-41eb-9503-6673f300eb68" name="worksheetcollection" type="Collection"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="225" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3f4b3c3e-515f-4ee7-9e70-5c76c0fb3044" name="Set Events Enabled" type="SubSheetInfo"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><narrative>Enables or disables the events on the specified excel instance.</narrative><display x="-195" y="-105" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb955f7e-320d-42d1-8dad-26b8f55d083b" name="Start" type="Start"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." stage="handle" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" stage="Enable Events" /></inputs><onsuccess>68483479-6865-4fd5-9a77-f4392c4ade9e</onsuccess></stage><stage stageid="3969dd45-fdea-4671-879e-461a56f312be" name="End" type="End"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="68483479-6865-4fd5-9a77-f4392c4ade9e" name="CheckInstanceHandle" type="SubSheet"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle representing the instance." expr="[handle]" /></inputs><onsuccess>21682417-b503-44b4-92f2-a3c80b4fad14</onsuccess><processid>492548e8-2fa5-473e-9061-df8326d46e4c</processid></stage><stage stageid="45553fd7-b75b-4fee-8961-aff490d121b3" name="Enable Events" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="21682417-b503-44b4-92f2-a3c80b4fad14" name="Enable Events" type="Code"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><loginhibit /><display x="0" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="flag" name="enable" expr="[Enable Events]" /></inputs><onsuccess>3969dd45-fdea-4671-879e-461a56f312be</onsuccess><code><![CDATA[
GetInstance(handle).EnableEvents = enable]]></code></stage><stage stageid="3fd7c1fd-f40f-451d-885e-3f5e34c62b77" name="handle" type="Data"><subsheetid>69db5cf5-4908-49c7-9027-8f48e26e5b27</subsheetid><display x="-195" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb99ca56-7dc9-4a0d-860e-651747237d8f" name="Enable Events" type="Data"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="7fb1ba2f-64f1-417b-9b97-479efb954a9d" name="anchor8" type="Anchor"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="375" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>51d7d624-e8bf-42b7-afdd-8d090b584865</onsuccess></stage><stage stageid="108c176a-92d1-4f50-b460-ac6a3f0dac25" name="Enable/Disable Events" type="SubSheet"><subsheetid>ec281dc5-ed57-4b8b-9bf5-212e314657aa</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>754832af-1144-48ff-8ab0-bb6c86d3f78e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="17b0edcc-4892-4e42-93c9-9438a160ed66" name="Enable Events" type="Data"><subsheetid>7ad81501-44a1-48ab-94fd-9b2c35ed20b8</subsheetid><display x="-195" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e24f71a3-1760-49ce-bbcb-4750671f20ad" name="Enable Events" type="Data"><subsheetid>2b3544ad-af96-4f40-9b50-16dfbe0600f1</subsheetid><display x="-195" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="9773e311-bcc9-4426-999e-7c586da425c5" name="Enable Events" type="Data"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><display x="-255" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="a13edde2-3883-4007-9719-92f0e1009ddd" name="Set Events Enabled" type="SubSheet"><subsheetid>99e648cc-a136-471c-8424-19071c0fd9e7</subsheetid><loginhibit /><display x="-15" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>d337a2cf-1121-4619-a1b1-f7f19bea974e</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="7c3abf99-a3ae-44c2-b834-ad050b20a0eb" name="Enable Events" type="Data"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><display x="-210" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="6c2fa22d-1876-46b7-92eb-cf8343d0911f" name="Set Events Enabled" type="SubSheet"><subsheetid>2fb01e3f-e275-43bc-83eb-579001da335b</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer identifier for the instance on which the events should be enabled / disabled. Zero indicates the 'current active' instance." expr="[handle]" /><input type="flag" name="Enable Events" narrative="True to enable events on the specified instance, False to disable events" expr="[Enable Events]" /></inputs><onsuccess>18a306bf-d323-4c4e-83b5-4b226773161c</onsuccess><processid>69db5cf5-4908-49c7-9027-8f48e26e5b27</processid></stage><stage stageid="e13408b2-c348-4d32-9ca3-e878db7cd165" name="Start Cell" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="614b5c49-3b88-427a-9513-c3048d8b716d" name="Get Worksheet Names" type="SubSheetInfo"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ef85b34d-5145-4f90-96a4-0f1abc4c4889" name="End" type="End"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs></stage><stage stageid="7e4ae954-86d5-4183-88b2-d307fecfc6a9" name="Start" type="Start"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /></inputs><onsuccess>9bc4bc33-6a3a-43e0-86e0-7b209978508a</onsuccess></stage><stage stageid="9bc4bc33-6a3a-43e0-86e0-7b209978508a" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><onsuccess>bbd37070-c589-4f9c-8d03-11f2982c59f4</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="bbd37070-c589-4f9c-8d03-11f2982c59f4" name="Get Worksheets" type="Code"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><loginhibit /><display x="150" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" stage="Worksheet Names" /></outputs><onsuccess>ef85b34d-5145-4f90-96a4-0f1abc4c4889</onsuccess><code><![CDATA[Dim wb As Object = GetWorkbook(Handle, WorkbookName)
Dim sheets as Object = wb.Sheets

Worksheet_Names = New DataTable()
Worksheet_Names.Columns.Add("Name", GetType(String))

If sheets IsNot Nothing Then
	For Each sheet as Object in sheets
		Worksheet_Names.Rows.Add(New Object() {sheet.Name})
	Next
End If]]></code></stage><stage stageid="cff86abf-c0f2-493d-942f-759ce2830ff8" name="handle" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d53720-b610-4e5c-bf49-94cbcaf29e20" name="workbookname" type="Data"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="-135" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd45f86-2f78-4a96-8e74-62414e4094e7" name="Worksheet Names" type="Collection"><subsheetid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</subsheetid><display x="255" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9d637f02-8e13-4c65-a606-5756018a9e8c" name="Worksheet Exists" type="SubSheetInfo"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54725352-a686-4ebc-88d8-80fa81af39bc" name="End" type="End"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs></stage><stage stageid="4cd78f5f-29a7-4f71-ab51-5c93e2e50ba3" name="Start" type="Start"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" stage="Worksheet Name" /></inputs><onsuccess>b4bad8df-ac04-4c0f-88cf-21bd3dc6707a</onsuccess></stage><stage stageid="4126c650-c062-413d-b6b3-501c8743b400" name="handle" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a19213a7-dbb4-4a78-b929-7c0ec2f48fa7" name="workbookname" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-180" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4bad8df-ac04-4c0f-88cf-21bd3dc6707a" name="Get Worksheet Names" type="SubSheet"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[workbookname]" /></inputs><outputs><output type="collection" name="Worksheet Names" narrative="A collection of worksheet names found in the specified workbook" stage="Worksheet Names" /></outputs><onsuccess>3124d4f1-6d19-450e-8d71-01e6c2cac8d9</onsuccess><processid>becd6faa-f5c0-4d3a-a48a-cb54d3aa8909</processid></stage><stage stageid="920cf97d-74a9-441c-9e2b-2c47c023ac33" name="Worksheet Names" type="Collection"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="255" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3124d4f1-6d19-450e-8d71-01e6c2cac8d9" name="For Each Name" type="LoopStart"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0e40b339-b952-445b-a957-6d2d0a1bdbac</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid><looptype>ForEach</looptype><loopdata>Worksheet Names</loopdata></stage><stage stageid="27d57e09-d2fa-496d-a5c6-d382be881ad1" name="Next" type="LoopEnd"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aea2b1ba-e24b-4929-a0be-bc2ad811f277</onsuccess><groupid>7adde929-95a8-4bdb-8362-2dcf58807cb2</groupid></stage><stage stageid="4198f8b9-1418-4bbc-a984-4049f1b78df6" name="Worksheet Name" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="180" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e40b339-b952-445b-a957-6d2d0a1bdbac" name="Matches?" type="Decision"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Name] = [Worksheet Names.Name]" /><ontrue>f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1</ontrue><onfalse>27d57e09-d2fa-496d-a5c6-d382be881ad1</onfalse></stage><stage stageid="f284f63f-fccf-4df8-ab7d-d7ef8aca1fb1" name="Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="True" stage="Worksheet Exists" /></stage><stage stageid="f5a7d39b-3edc-4984-89dc-f88f02b5f747" name="Worksheet Exists" type="Data"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><display x="-60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aea2b1ba-e24b-4929-a0be-bc2ad811f277" name="Not Found" type="Calculation"><subsheetid>eacc4634-9985-4a1d-9773-8f79928708ee</subsheetid><loginhibit /><display x="105" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54725352-a686-4ebc-88d8-80fa81af39bc</onsuccess><calculation expression="False" stage="Worksheet Exists" /></stage><stage stageid="a1d81278-4fd7-4ee6-a878-8ec4dcde4793" name="Get Worksheet Range As Collection" type="SubSheetInfo"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f2ee451-c914-4c38-8e19-4d3e3a519dfd" name="End" type="End"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Data" narrative="The spreadsheet data from the specified range, as a collection" stage="worksheetcollection" /></outputs></stage><stage stageid="fa5759e6-b7e3-42d1-8297-90953ec4a343" name="handle" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="832f8dbf-c88e-4488-89ec-d0782439fc34" name="workbookname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7a36655-443b-482f-809b-eb738682ee98" name="Start" type="Start"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><preconditions><condition narrative="" /><condition narrative="" /><condition narrative="" /></preconditions><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." stage="handle" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." stage="workbookname" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet within the specified workbook which should be written to a collection. The default empty text indicates the currently active worksheet within the specified workbook." stage="worksheetname" /><input type="text" name="StartCell" narrative="The starting cell of the range of interest" stage="Start Cell" /><input type="text" name="EndCell" narrative="The end cell of the range of interest" stage="End Cell" /></inputs><onsuccess>c5ca2712-c200-4900-8f8e-70a9fffb3c2e</onsuccess></stage><stage stageid="680eac96-2bd0-4d02-a62b-ac7bf684dae9" name="GetWorksheetRangeAsCollection" type="Code"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="text" name="workbookname" expr="[workbookname]" /><input type="text" name="worksheetname" expr="[worksheetname]" /><input type="text" name="Start Cell" expr="[Start Cell]" /><input type="text" name="End Cell" expr="[End Cell]" /></inputs><outputs><output type="collection" name="worksheetcollection" stage="worksheetcollection" /></outputs><onsuccess>6f2ee451-c914-4c38-8e19-4d3e3a519dfd</onsuccess><code><![CDATA[
	Dim ws as Object = GetWorksheet(handle, workbookname, worksheetname)
	Dim r as Object
	r = ws.Range(Start_Cell & ":" & End_Cell)
	r.Select()
	r.Copy()

	Dim data As String = Clipboard.GetDataObject().GetData(DataFormats.UnicodeText, True)
	
	' The data split into rows
	Dim asRows() As String = Split(data, vbCrLf)
	
	Dim table As New DataTable()
	' Set a flag indicating the header row
	Dim isHeaderRow As Boolean = True
	
	For Each strRow As String In asRows
		If Not String.IsNullOrEmpty(strRow) Then
		
			Dim fields() As String = Split(strRow, vbTab)
			If isHeaderRow Then
			
				isHeaderRow = False
				For Each field As String in fields
					table.Columns.Add(field)
				Next
				
			Else

				Dim row as DataRow = table.NewRow()
				For i As Integer = 0 To fields.Length - 1
					If i < fields.Length Then
						row(i) = fields(i)
					Else
						row(i) = ""
					End If
				Next I
				table.Rows.Add(row)
				
			End If
				
		End If
		
	Next
	worksheetcollection = table]]></code></stage><stage stageid="c5ca2712-c200-4900-8f8e-70a9fffb3c2e" name="CheckInstanceAndWorkbook" type="SubSheet"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><loginhibit /><display x="135" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer representing an Excel instance" expr="[handle]" /><input type="text" name="workbookname" narrative="The name of the workbook to check - &quot;&quot; to indicate the active workbook" expr="[workbookname]" /></inputs><onsuccess>680eac96-2bd0-4d02-a62b-ac7bf684dae9</onsuccess><processid>9f7a4a91-68c9-4871-bb65-417e96cc4ad1</processid></stage><stage stageid="706da482-84a4-4e78-a1ba-002f80123e3f" name="worksheetname" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="-75" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1ec36df-f335-48a9-a0f4-e3f39d6c987d" name="worksheetcollection" type="Collection"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="345" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8054b9c8-5245-4a77-a058-949faeec00a7" name="Start Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="210" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9f43b65-bd92-44fa-b0fe-cf798aaf49be" name="End Cell" type="Data"><subsheetid>f92e2a34-0aa8-4ca1-b4ac-5dce2318ec5e</subsheetid><display x="270" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40717bdb-980d-46a2-8ed8-4c3c283a98ff" name="Use Header" type="Data"><subsheetid>92799072-140a-4621-89cd-2da12475dcda</subsheetid><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a437a6b-8cfe-4bc1-a7d3-ca5a2e026477" name="Remove Blank Rows" type="SubSheetInfo"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><narrative>Removes blank rows in the active excel workbook. The entire row must consist of blank cells.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c883a67c-5093-45d2-82c8-680cf35c2c0e" name="Start" type="Start"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /></inputs><onsuccess>1e0e5735-5bc9-43dc-85c9-4e8735def67f</onsuccess></stage><stage stageid="7023c112-819d-4c9c-82f3-84ab84c9f560" name="End" type="End"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e0e5735-5bc9-43dc-85c9-4e8735def67f" name="Activate Workbook" type="SubSheet"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>4fa6c603-9d6a-4077-ba95-9d213394ee06</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="890b79a0-986e-4982-a010-99e17a8f7173" name="handle" type="Data"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="4fa6c603-9d6a-4077-ba95-9d213394ee06" name="Delete blank rows" type="Code"><subsheetid>67651307-0389-47bf-ae8d-fd94364e808f</subsheetid><loginhibit /><display x="75" y="15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /></inputs><onsuccess>7023c112-819d-4c9c-82f3-84ab84c9f560</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet

Const xlCellTypeLastCell As Integer = 11 
Dim FirstRow As Integer = 1
Dim LastRow As Integer = worksheet.Cells.SpecialCells(xlCellTypeLastCell).Row

For i As Integer = LastRow To FirstRow Step -1
	If worksheet.Application.CountA(worksheet.Rows(i)) = 0 Then
		worksheet.Rows(i).Delete
	End If
Next]]></code></stage><stage stageid="7ea085b3-60ed-4690-9b58-044e3adac69b" name="Move Worksheet" type="SubSheetInfo"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="48fad533-06e9-41b7-b213-bfea2423c61c" name="Start" type="Start"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="number" name="Destination Position" stage="Destination Position" /><input type="flag" name="Copy" stage="Copy" /></inputs><onsuccess>b950e637-fb25-4932-b970-65e4ee21dd1d</onsuccess></stage><stage stageid="51274535-b09a-4b0b-a9bc-fff82557aa0a" name="Handle" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6336e057-ac6a-4b57-b789-906100be58cc" name="Source Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="51bf5410-80ae-4517-8ee8-1ccf54a61e2f" name="Source Worksheet" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="467b75ec-f03c-460e-a57d-d6852ab35293" name="Destination Workbook" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ad740a0-b0e5-483c-9247-2b766533c852" name="Source Worksheet Exists" type="SubSheet"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the number of rows is required. The default of zero indicates the currently active instance." expr="[Handle]" /><input type="text" name="Workbook Name" narrative="The name of the workbook on which the number of rows is required. The default empty text value indicates the currently active workbook on the specified instance." expr="[Source Workbook]" /><input type="text" name="Worksheet Name" narrative="The name of the worksheet of interest; it will be checked for existence" expr="[Source Worksheet]" /></inputs><outputs><output type="flag" name="Worksheet Exists" narrative="Indicates whether or not the named worksheet exists" stage="Worksheet Exists" /></outputs><onsuccess>efca1a70-2f20-4dda-b071-825a986958a6</onsuccess><processid>eacc4634-9985-4a1d-9773-8f79928708ee</processid></stage><stage stageid="4702c382-1a44-441c-9cd1-83281efd10ff" name="Worksheet Exists" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efca1a70-2f20-4dda-b071-825a986958a6" name="Worksheet Exists?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Worksheet Exists]" /><ontrue>e804939a-8a40-4803-89cd-b10e57a97583</ontrue><onfalse>5d46a63f-e90b-4432-8c62-52d2e2380065</onfalse></stage><stage stageid="e804939a-8a40-4803-89cd-b10e57a97583" name="Move Named Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="text" name="SourceWorksheet" expr="[Source Worksheet]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess><code><![CDATA[Dim dBook, sSheet As Object
Dim p As Integer

Try

dBook = GetWorkbook(Handle, DestinationWorkbook)
sSheet = GetWorksheet(Handle, SourceWorkbook, SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(dBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="38d819d9-2dec-4ae8-afe3-76da44096935" name="End2" type="End"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cb823085-c462-43b7-81d0-3ad7f1e026dd" name="Success" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="81e05f5d-ac29-4885-b6cd-fd5a308fcc44" name="Message" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764ea205-800b-4ab5-adc1-273a46ad93b6" name="Success?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="135" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>38d819d9-2dec-4ae8-afe3-76da44096935</ontrue><onfalse>65eda7a6-ce00-4372-9fc9-26931328aba4</onfalse></stage><stage stageid="7b25db9b-d103-4ba0-a8a5-468a16e50dd7" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="345" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="87c0d87a-ef13-4eb7-8e10-085ab67dc0a0" name="Destination Position" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="3e46008f-172e-42b3-b4b3-e7221f0ef6d8" name="Copy and Paste Worksheet Range" type="SubSheetInfo"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="979c420e-1748-448e-9334-e238c47503a1" name="Copy" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5d46a63f-e90b-4432-8c62-52d2e2380065" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Source worksheet not found&quot;" /></stage><stage stageid="b470a541-1a6d-4c08-936a-94d2c6c99aa8" name="Start" type="Start"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Source Workbook" stage="Source Workbook" /><input type="text" name="Source Worksheet" stage="Source Worksheet" /><input type="text" name="Source Range" stage="Source Range" /><input type="text" name="Destination Workbook" stage="Destination Workbook" /><input type="text" name="Destination Worksheet" stage="Destination Worksheet" /><input type="text" name="Destination Range" stage="Destination Range" /></inputs><onsuccess>11afaed8-560c-4915-b3eb-04f45158a941</onsuccess></stage><stage stageid="b4598457-7e50-432e-ae29-7d081367e298" name="Source Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc6e0465-0f54-401c-964f-974f43802264" name="Source Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18b0fe7d-0b86-4fd0-bcd9-6c80841ae464" name="Destination Workbook" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0366fbb1-1c68-4466-87cb-760d499b4cdd" name="Worksheet Exists" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11afaed8-560c-4915-b3eb-04f45158a941" name="Paste Worksheet" type="Code"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Source Workbook" expr="[Source Workbook]" /><input type="text" name="Source Worksheet" expr="[Source Worksheet]" /><input type="text" name="Source Range" expr="[Source Range]" /><input type="text" name="Destination Workbook" expr="[Destination Workbook]" /><input type="text" name="Destination Worksheet" expr="[Destination Worksheet]" /><input type="text" name="Destination Range" expr="[Destination Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>8136ae2b-8fb0-4945-8016-b5b9eae4c2d2</onsuccess><code><![CDATA[Dim sw, dw As Object
Dim ss, ds As Object
Dim excel, sheet, source, destination, cells, cell As Object

Try

sw = GetWorkbook(Handle, Source_Workbook)
dw = GetWorkbook(Handle, Destination_Workbook)

ss = GetWorksheet(Handle, Source_Workbook, Source_Worksheet)
ds = GetWorksheet(Handle, Destination_Workbook, Destination_Worksheet)

sw.Activate()
ss.Activate()
excel = ss.Application
sheet = excel.ActiveSheet
cell = excel.ActiveCell

If Source_Range="" Then
	cells = sheet.Cells
	Destination_Range = "A1"
Else
	cells = sheet.Range(Source_Range)
End If

cells.Select()
source = excel.Selection
source.Copy()
cell.Select()

dw.Activate()
ds.Activate()
sheet = excel.ActiveSheet
cell = excel.ActiveCell
destination = sheet.Range(Destination_Range)
destination.Select()
sheet.Paste()
cell.Select()

My.Computer.Clipboard.Clear()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sw = Nothing
	ss = Nothing
	dw = Nothing
	ds = Nothing
	excel = Nothing
	sheet = Nothing
	source = Nothing
	destination = Nothing
	cells = Nothing
	cell = Nothing
End Try]]></code></stage><stage stageid="70304b7a-b551-4a52-b52d-924f11d328a7" name="End2" type="End"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61bc4bd1-c8ab-4fe3-993e-a7e30fcaf9ef" name="Success" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e558b45-ad3b-459a-978c-048e7f555c4a" name="Message" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="270" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8136ae2b-8fb0-4945-8016-b5b9eae4c2d2" name="Success?" type="Decision"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>70304b7a-b551-4a52-b52d-924f11d328a7</ontrue><onfalse>470e1a49-496c-497e-b59a-537f730059cb</onfalse></stage><stage stageid="470e1a49-496c-497e-b59a-537f730059cb" name="Exception" type="Exception"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy worksheet: &quot; &amp; [Message]" /></stage><stage stageid="2a17d158-14b5-4cec-aa84-2b6789585973" name="Destination Worksheet" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="124d4f6c-b7b5-4935-8d7a-71a253571261" name="Handle" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b950e637-fb25-4932-b970-65e4ee21dd1d" name="Source Worksheet Number?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="IsNumber([Source Worksheet])" /><ontrue>eba296d1-0f89-4c61-892c-b25b40f3f618</ontrue><onfalse>9ad740a0-b0e5-483c-9247-2b766533c852</onfalse></stage><stage stageid="8b56215b-b4e5-4a95-a49d-179871dd1d2b" name="Move Numbered Worksheet" type="Code"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="SourceWorkbook" expr="[Source Workbook]" /><input type="number" name="SourceWorksheet" expr="[Source Worksheet Number]" /><input type="text" name="DestinationWorkbook" expr="[Destination Workbook]" /><input type="number" name="DestinationPosition" expr="[Destination Position]" /><input type="flag" name="Copy" expr="[Copy]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e9db38cf-4c64-49fa-a46b-f2dfa31dfe18</onsuccess><code><![CDATA[Dim sBook, dBook As Object
Dim sSheet As Object
Dim p As Integer

Try

sBook = GetWorkbook(Handle, SourceWorkbook)
dBook = GetWorkbook(Handle, DestinationWorkbook)

sSheet = sBook.Worksheets(SourceWorksheet)

p = Math.Max(1, DestinationPosition)
p = Math.Min(sBook.Worksheets.Count, p)

If DestinationPosition > p Then
	If Copy Then
		sSheet.Copy(After:=dBook.Worksheets(p))
	Else
		sSheet.Move(After:=dBook.Worksheets(p))
	End If
Else
	If Copy Then
		sSheet.Copy(Before:=dBook.Worksheets(p))
	Else
		sSheet.Move(Before:=dBook.Worksheets(p))
	End If
End If

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	sBook = Nothing
	dBook = Nothing
	sSheet = Nothing
End Try]]></code></stage><stage stageid="e9db38cf-4c64-49fa-a46b-f2dfa31dfe18" name="anchor7" type="Anchor"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="195" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>764ea205-800b-4ab5-adc1-273a46ad93b6</onsuccess></stage><stage stageid="65eda7a6-ce00-4372-9fc9-26931328aba4" name="Copy?" type="Decision"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="240" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Copy]" /><ontrue>7b25db9b-d103-4ba0-a8a5-468a16e50dd7</ontrue><onfalse>32d3772b-fe03-4a13-a415-62b4fdd5fa8f</onfalse></stage><stage stageid="32d3772b-fe03-4a13-a415-62b4fdd5fa8f" name="Exception" type="Exception"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="240" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to move worksheet: &quot; &amp; [Message]" /></stage><stage stageid="eba296d1-0f89-4c61-892c-b25b40f3f618" name="Source Workbook Number" type="Calculation"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8b56215b-b4e5-4a95-a49d-179871dd1d2b</onsuccess><calculation expression="[Source Worksheet]" stage="Source Worksheet Number" /></stage><stage stageid="2cc989f3-1c41-4289-98fb-383b0c88ed74" name="Source Worksheet Number" type="Data"><subsheetid>79b9bf7c-222d-4cc3-adc8-5bb337fa6d72</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09bbef8a-09b2-4a43-925d-b1a0b88e692b" name="Get Worksheet Position" type="SubSheetInfo"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4235fac3-2295-4511-828e-090e9c888d38" name="End" type="End"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" stage="Position" /></outputs></stage><stage stageid="46d026ab-934f-4e60-8d1f-68344ac1b103" name="Handle" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3d97151-6742-41e9-9b9a-08ce6b9700d1" name="Workbook" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7ec78a25-f322-4161-8872-54815ffbc0f0" name="Worksheet" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ccd25c1-379e-41cf-92fd-2d02ac1fc7ac" name="Start" type="Start"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>244c946c-e677-4da7-8d5a-de244ec07eea</onsuccess></stage><stage stageid="244c946c-e677-4da7-8d5a-de244ec07eea" name="Get Worksheet Position" type="Code"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="number" name="Position" stage="Position" /></outputs><onsuccess>27d60ef1-833c-44f5-b5ab-0aefb2c0581c</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets
Position = ws(Worksheet).Index

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="f13a2dde-4da4-4811-a0dd-f3f0bb009354" name="Position" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32b13d14-acc8-406c-8d15-9ffdc7355c5d" name="Source Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5fa73a8e-f525-4d57-a0ff-9df54a1d2d63" name="Destination Range" type="Data"><subsheetid>da83b3dd-0312-4b53-9732-e3f8e29c561f</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f1da6ce-caa1-4a5c-b622-70602b8ad49e" name="Select" type="SubSheetInfo"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30e9f460-bd3e-4273-bb7c-77fedbfe445f" name="End" type="End"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a24031db-2c21-4624-9a0b-6643f3e75247" name="Handle" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9504d1-c2d1-49a6-a6f2-cf95da7eeb12" name="Workbook" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcba2fd7-c2e3-4661-a6c4-be512624d70c" name="Worksheet" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f78616ed-e974-46dd-ace5-c44a1b800c11" name="Start" type="Start"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Cell Reference" stage="Cell Reference" /></inputs><onsuccess>34677bae-38d3-4518-917f-c883f9c1677d</onsuccess></stage><stage stageid="92300230-c4b8-4530-9378-f98dfd556895" name="Cell Reference" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34677bae-38d3-4518-917f-c883f9c1677d" name="Select Cells" type="Code"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Reference" expr="[Cell Reference]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>2cb73eba-be13-4568-a11a-02f3a20b9dfe</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)

wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Reference)
range.Select()

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
	excel = Nothing
	sheet = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="2cb73eba-be13-4568-a11a-02f3a20b9dfe" name="Success?" type="Decision"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>30e9f460-bd3e-4273-bb7c-77fedbfe445f</ontrue><onfalse>7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4</onfalse></stage><stage stageid="7cb606b3-cd0e-46f3-bd05-fd635aa9d2d4" name="Exception" type="Exception"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to select row: &quot; &amp; [Message]" /></stage><stage stageid="3e5f45b4-d1b1-4dc1-8be0-29a9b4a55c53" name="Success" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34efe5b1-fcdd-4221-a651-006b1110ebbd" name="Message" type="Data"><subsheetid>9147cb85-5c6f-4a47-adcf-ab472d5a0b5a</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8189dfa8-421a-45da-9d7c-26ac377bc514" name="Delete" type="SubSheetInfo"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a3f17004-6131-48f2-b0a8-e602f24b599e" name="End" type="End"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d0b1914-39fd-4e17-b7b4-55faafd45af7" name="Handle" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="75588f1d-b4d2-4c8c-a51f-61c822a68abb" name="Workbook" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ad8ce293-a3a3-43ca-9b8f-1d680fbdc03e" name="Start" type="Start"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>97daebd3-2794-4944-af67-9698bbaa77b3</onsuccess></stage><stage stageid="57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd" name="Delete Selection" type="Code"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>6f1da154-330d-490b-b615-df266c6767fa</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Delete(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="6f1da154-330d-490b-b615-df266c6767fa" name="Success?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>a3f17004-6131-48f2-b0a8-e602f24b599e</ontrue><onfalse>bb18bdc9-f544-4157-a6ba-e289c8f33c43</onfalse></stage><stage stageid="bb18bdc9-f544-4157-a6ba-e289c8f33c43" name="Exception" type="Exception"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="d0c4907b-2b85-424d-a6ef-8bcfb43d3f72" name="Success" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9dbebe22-4f86-499f-8f29-155baf2cc42d" name="Message" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2110b138-01f6-47af-befd-7a71637b5844" name="Shift" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97daebd3-2794-4944-af67-9698bbaa77b3" name="Shift Left?" type="Decision"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>6e608312-7a91-4039-8f0a-90ccaac7d3cc</ontrue><onfalse>8a8e9a33-5eca-485a-adeb-e5a43592d6d4</onfalse></stage><stage stageid="6e608312-7a91-4039-8f0a-90ccaac7d3cc" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4159" stage="Shift Type" /></stage><stage stageid="4095b231-4d4f-4c98-b74d-6134fb63b9af" name="Shift Type" type="Data"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8e9a33-5eca-485a-adeb-e5a43592d6d4" name="Shift Type" type="Calculation"><subsheetid>3d161cf5-0e7a-4ac7-aa8c-f37a1b380e1a</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>57a5ebdd-ad03-4f7b-a358-8ef0172ed1fd</onsuccess><calculation expression="-4162" stage="Shift Type" /></stage><stage stageid="27122991-d4c6-4811-a366-7fd47a11da5c" name="Copy" type="SubSheetInfo"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bba0e0d4-6894-469c-a9b8-1f07855dadc9" name="End" type="End"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="364a6306-d747-4c70-84ae-4128d8938fbc" name="Handle" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f0139001-74d1-4ab8-a517-4329434df1e5" name="Workbook" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58d750a5-2e0e-4aaa-951a-76aaf6b973da" name="Start" type="Start"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>d8005fde-9fe5-47f9-a980-e4beae15815a</onsuccess></stage><stage stageid="a8acd5cc-0955-4896-b87a-80091b060926" name="Success?" type="Decision"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bba0e0d4-6894-469c-a9b8-1f07855dadc9</ontrue><onfalse>6ceb186e-fea0-48a8-a72d-f104f83699c6</onfalse></stage><stage stageid="6ceb186e-fea0-48a8-a72d-f104f83699c6" name="Exception" type="Exception"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to copy selection: &quot; &amp; [Message]" /></stage><stage stageid="4f25dc7f-bd6f-495d-90e7-0d561dba2662" name="Success" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a8da6c3-ceed-4a32-8e4d-473b53a57602" name="Message" type="Data"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8005fde-9fe5-47f9-a980-e4beae15815a" name="Copy Selection" type="Code"><subsheetid>71ebd060-a411-45fc-8f39-132eb3e5ff79</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>a8acd5cc-0955-4896-b87a-80091b060926</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Copy

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="044c591e-e63e-4f13-80b8-de4217a78b3b" name="Paste" type="SubSheetInfo"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ebf6405-9e3a-45f8-be9c-fdd70f254b34" name="End" type="End"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f23548e-a9f9-48c6-93c3-fbd8fa4f8d8d" name="Handle" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf7ad6-162d-4e2d-9a03-a6ebc54eb526" name="Workbook" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d4b5681-cffa-432d-be94-08d4ddf16986" name="Start" type="Start"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="flag" name="Values Only" stage="Values Only" /></inputs><onsuccess>0d27a545-71b3-4a27-843b-8ed69b1648ce</onsuccess></stage><stage stageid="360c1bdb-1960-4486-ad05-8ec4485ef0ec" name="Success?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>1ebf6405-9e3a-45f8-be9c-fdd70f254b34</ontrue><onfalse>4830e942-edaf-4bd2-8922-9cffafc084ad</onfalse></stage><stage stageid="4830e942-edaf-4bd2-8922-9cffafc084ad" name="Exception" type="Exception"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to paste from clipboard: &quot; &amp; [Message]" /></stage><stage stageid="77b051c2-e570-49a3-8708-b42785a2517f" name="Success" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da93fc46-495b-4511-a724-a1cc7d70cffa" name="Message" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24bf06a1-fd8f-4cd3-bab6-e05552f8bdba" name="Paste Values" type="Code"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Paste Option" expr="[Paste Option]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>360c1bdb-1960-4486-ad05-8ec4485ef0ec</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.PasteSpecial(Paste:=Paste_Option, Operation:=-4142, SkipBlanks:=False, Transpose:=False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
   range = Nothing
End Try]]></code></stage><stage stageid="ba04d5a5-b0f7-4979-af44-2f0fee5237f9" name="Write To Clipboard" type="SubSheetInfo"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1587c068-8225-4476-b636-9403f8acd84a" name="Start" type="Start"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" stage="Value" /></inputs><onsuccess>2279ba0c-3963-48f8-b813-4b0f53f47471</onsuccess></stage><stage stageid="a82e0657-86e9-4273-bd0f-2065d5f70254" name="End" type="End"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eda7181f-a720-4b63-9d69-86221881d965" name="Value" type="Data"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2279ba0c-3963-48f8-b813-4b0f53f47471" name="Write To Clipboard" type="Code"><subsheetid>2c59601b-2b70-4c97-a218-0abf1bf7463a</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Value" expr="[Value]" /></inputs><onsuccess>a82e0657-86e9-4273-bd0f-2065d5f70254</onsuccess><code><![CDATA[
My.Computer.Clipboard.Clear()
My.Computer.Clipboard.SetText(Value)]]></code></stage><stage stageid="79b62074-ec0d-49c6-a258-61823cc8a849" name="Values Only" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0d27a545-71b3-4a27-843b-8ed69b1648ce" name="Values Only?" type="Decision"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Values Only]" /><ontrue>5bd5a242-a414-4d49-b093-0eb8d3978f8a</ontrue><onfalse>f98e8dcf-bff1-418a-9963-4878022c7391</onfalse></stage><stage stageid="f98e8dcf-bff1-418a-9963-4878022c7391" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4104" stage="Paste Option" /></stage><stage stageid="8e80a8c9-867f-46fa-ace9-d251af38eeed" name="Paste Option" type="Data"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd5a242-a414-4d49-b093-0eb8d3978f8a" name="Paste Option" type="Calculation"><subsheetid>035d5ed0-2f39-46ca-80c1-b0127418dc9e</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>24bf06a1-fd8f-4cd3-bab6-e05552f8bdba</onsuccess><calculation expression="-4163" stage="Paste Option" /></stage><stage stageid="7f2dfa02-938c-4179-9e22-216057d33f43" name="Cut" type="SubSheetInfo"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f2f20301-ebd9-4fbd-9b94-ca2074e69294" name="End" type="End"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d29233ea-0e94-44a4-864c-f32568e42c4b" name="Handle" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59232dab-20a4-4e84-8a43-e2016ef6a74c" name="Workbook" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d6c212b-fd48-44cf-a931-8c99060d29cc" name="Start" type="Start"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /></inputs><onsuccess>3dcf0167-85d1-4170-b214-86784cbcab65</onsuccess></stage><stage stageid="581ece97-ebdc-4855-8fdf-45290b4e587d" name="Success?" type="Decision"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>f2f20301-ebd9-4fbd-9b94-ca2074e69294</ontrue><onfalse>797b7b44-cd61-4d3c-8874-82e44868ea1b</onfalse></stage><stage stageid="797b7b44-cd61-4d3c-8874-82e44868ea1b" name="Exception" type="Exception"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to cut selection: &quot; &amp; [Message]" /></stage><stage stageid="3556655c-d270-4054-a989-b2f44854a7ba" name="Success" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9e9b9ba3-e800-4df7-bc87-db6b36f846c9" name="Message" type="Data"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dcf0167-85d1-4170-b214-86784cbcab65" name="Cut Selection" type="Code"><subsheetid>5eee765d-c84b-493f-9132-f6a27f296d0e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>581ece97-ebdc-4855-8fdf-45290b4e587d</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application
range = excel.Selection
range.Cut

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="fc13a15a-74aa-47dc-af68-38bea19af981" name="Protect Workbook" type="SubSheetInfo"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0e32102b-7c0a-4f3e-9fe7-cc267fede407" name="Handle" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03b0377d-35e5-4a7d-b16c-756d690843ee" name="Workbook" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b1610a1c-3532-4a88-8732-39cbfb4495f4" name="Start" type="Start"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="password" name="Password" stage="Password" /></inputs><onsuccess>e47e5f86-b7d0-409e-bf2a-6673cf28bac7</onsuccess></stage><stage stageid="de93c65e-11ae-4507-b8bf-da3f09910f82" name="Password" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e47e5f86-b7d0-409e-bf2a-6673cf28bac7" name="Protect Workbook" type="Code"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="password" name="Password" expr="[Password]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)
wb.Protect(Password, True, True)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="6a177cf9-5ec0-481d-84e9-c5d72177038d" name="Hide Worksheet" type="SubSheetInfo"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0cc70266-582a-410c-9c3a-29ff9dfb795e" name="Handle" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4cf25a3a-b4dd-4b80-8339-06b9d63e56e6" name="Workbook" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8889824-2e30-472c-bb9a-4daad82560f3" name="Worksheet" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2d9d6921-9f68-4152-be57-8b0df6472eda" name="Start" type="Start"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>298fe33e-bd86-4109-8540-f1abe8d02eb8</onsuccess></stage><stage stageid="4a51d886-d307-4904-8ce4-98191c734a17" name="End" type="End"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09dd5e11-1dd3-4f18-bbe0-ed52d1f79fb0" name="Success?" type="Decision"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4a51d886-d307-4904-8ce4-98191c734a17</ontrue><onfalse>fbeb4a74-fc5f-431f-b150-15549afc2a22</onfalse></stage><stage stageid="fbeb4a74-fc5f-431f-b150-15549afc2a22" name="Exception" type="Exception"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protect workbook: &quot; &amp; [Message]" /></stage><stage stageid="298fe33e-bd86-4109-8540-f1abe8d02eb8" name="Hide Worksheet" type="Code"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>66ad2075-9b87-44be-9c6d-0a702d752f57</onsuccess><code><![CDATA[Dim ws As Object

Try

ws = GetWorkSheet(Handle, Workbook, Worksheet)
ws.Visible = False

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	ws = Nothing
End Try]]></code></stage><stage stageid="c2e5c7e9-93a1-489e-a870-523042f050f1" name="End" type="End"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="66ad2075-9b87-44be-9c6d-0a702d752f57" name="Success?" type="Decision"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c2e5c7e9-93a1-489e-a870-523042f050f1</ontrue><onfalse>7dca362f-2e45-443b-adc7-9075f02fc717</onfalse></stage><stage stageid="7dca362f-2e45-443b-adc7-9075f02fc717" name="Exception" type="Exception"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to protehide worksheet: &quot; &amp; [Message]" /></stage><stage stageid="c3b30035-3883-4740-9cf0-49e967ad6306" name="Success" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff6900f6-3524-4b24-be71-4d12c2d4c77e" name="Message" type="Data"><subsheetid>c37e9923-b729-471b-80b1-7d44113ca618</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cea8af9d-95ea-4c09-9932-adc8cc633db6" name="Success" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7888130-7082-4f05-8864-3f0709675831" name="Message" type="Data"><subsheetid>7316eded-6aed-4d1d-9eeb-64fbbb8e53a0</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b9509a6-dfc6-4f25-9474-dba6e8b7ed20" name="Hide Other Worksheets" type="SubSheetInfo"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a81bb6df-46b8-4641-8531-802be8934741" name="Handle" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f349c5cb-454b-448c-b225-5c474ae4e52d" name="Workbook" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="999117c1-6fa6-4172-9512-78106c277a38" name="Worksheet" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6444d8d9-7f26-4eb5-ab31-c98706e6209a" name="Start" type="Start"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>c5ca2626-02e2-4413-9476-9958c1b7b717</onsuccess></stage><stage stageid="c5ca2626-02e2-4413-9476-9958c1b7b717" name="Hide Other Worksheets" type="Code"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>36529e74-e353-4cbd-b6ff-3591c0390efd</onsuccess><code><![CDATA[Dim wb As Object

Try

wb = GetWorkbook(Handle, Workbook)

For Each ws As Object In wb.Worksheets
	ws.Visible = (ws.Name = Worksheet)
Next

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
End Try]]></code></stage><stage stageid="52e20387-128e-4f5c-b182-7d28a9005a71" name="End" type="End"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36529e74-e353-4cbd-b6ff-3591c0390efd" name="Success?" type="Decision"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>52e20387-128e-4f5c-b182-7d28a9005a71</ontrue><onfalse>c5840684-3348-4ee6-a024-dda79500a851</onfalse></stage><stage stageid="c5840684-3348-4ee6-a024-dda79500a851" name="Exception" type="Exception"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to hide worksheets: &quot; &amp; [Message]" /></stage><stage stageid="089eef49-c020-4aea-929e-4d1ae4282215" name="Success" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="370e2ccf-3010-44ea-9155-06babd5e856c" name="Message" type="Data"><subsheetid>e62b9c20-62f8-4d28-8f19-de7610e56e1e</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4996af5e-0cc1-4e24-aedf-20320350469e" name="Import CSV" type="SubSheetInfo"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4b14657-a0f4-4c85-9466-5146878dfbe7" name="Handle" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbfe7495-0fef-4c22-a251-88166b8485d4" name="Workbook" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3c0e661b-9b74-4d25-9a8b-1da52f957ed2" name="Worksheet" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8df3e95e-4a03-4e0a-a649-37fb1d17ff41" name="Start" type="Start"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Destination Handle" stage="Handle" /><input type="text" name="Destination Workbook" stage="Workbook" /><input type="text" name="Destination Worksheet" stage="Worksheet" /><input type="text" name="Destination Range" stage="Range" /><input type="text" name="Source File Path" stage="Path" /><input type="text" name="Source Text Qualifier" stage="Qualifier" /></inputs><onsuccess>a09cfa98-b04d-472f-ad84-87e6a0bdb011</onsuccess></stage><stage stageid="7803cce6-3095-4d46-9cd2-793181eb080d" name="Import CSV" type="Code"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Range" expr="[Range]" /><input type="text" name="Path" expr="[Path]" /><input type="number" name="Qualifier" expr="[Qualifier Code]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>91f84fae-ca36-4b8b-8221-bc3e95cd2ef3</onsuccess><code><![CDATA[Dim dw, ds, dr, qt As Object

Try

dw = GetWorkbook(Handle, Workbook)
ds = GetWorksheet(Handle, Workbook, Worksheet)
dr = ds.Range(Range)
qt = ds.QueryTables.Add(Connection:="TEXT;" & Path, Destination:=dr)

With qt
	.FieldNames = True
	.RowNumbers = False
	.FillAdjacentFormulas = False
	.PreserveFormatting = True
	.RefreshOnFileOpen = False
	.RefreshStyle = 1 'xlInsertDeleteCells
	.SavePassword = False
	.SaveData = True
	.AdjustColumnWidth = True
	.RefreshPeriod = 0
	.TextFilePromptOnRefresh = False
	.TextFilePlatform = 437
	.TextFileStartRow = 1
	.TextFileParseType = 1 'xlDelimited
	.TextFileTextQualifier = Qualifier
	.TextFileConsecutiveDelimiter = False
	.TextFileTabDelimiter = False
	.TextFileSemicolonDelimiter = False
	.TextFileCommaDelimiter = True
	.TextFileSpaceDelimiter = False
	.TextFileTrailingMinusNumbers = True
End With
qt.Refresh(False)

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	dw = Nothing
	ds = Nothing
	dr = Nothing
	qt = Nothing
End Try]]></code></stage><stage stageid="bfe990bf-be29-4c21-ac04-96a798ab1827" name="End" type="End"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="91f84fae-ca36-4b8b-8221-bc3e95cd2ef3" name="Success?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="210" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>bfe990bf-be29-4c21-ac04-96a798ab1827</ontrue><onfalse>6aaf6a41-be76-442d-9c2b-06905c4e0355</onfalse></stage><stage stageid="6aaf6a41-be76-442d-9c2b-06905c4e0355" name="Exception" type="Exception"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="225" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to import CSV: &quot; &amp; [Message]" /></stage><stage stageid="af967b8b-4ec8-4202-ac07-6acbf9d12d46" name="Success" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5335f808-6164-4249-9a2c-682294b9834c" name="Message" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="955e0188-d711-476b-b15b-1362ba3b0ea4" name="Path" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cef84711-b0a0-4f04-a09d-a6e9637ea2cb" name="Qualifier" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a09cfa98-b04d-472f-ad84-87e6a0bdb011" name="Double Quote Qualifier?" type="Decision"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Qualifier]=&quot;&quot;&quot;&quot;" /><ontrue>b0e18e5b-791a-492a-b6c6-112ed2cdf10f</ontrue><onfalse>6e036392-ff83-4dfa-94fe-ff1ed03cd9bc</onfalse></stage><stage stageid="b0e18e5b-791a-492a-b6c6-112ed2cdf10f" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="1" stage="Qualifier Code" /></stage><stage stageid="f9eb7145-ee8c-41cc-8ea2-2417adbcd435" name="Qualifier Code" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc2b8ffb-c597-4ede-8134-1cc80a2c3293" name="Qualifier Code" type="Calculation"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7803cce6-3095-4d46-9cd2-793181eb080d</onsuccess><calculation expression="-4142" stage="Qualifier Code" /></stage><stage stageid="6e036392-ff83-4dfa-94fe-ff1ed03cd9bc" name="Note2" type="Note"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><loginhibit /><narrative>Assume no text qualifier</narrative><display x="15" y="60" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc2b8ffb-c597-4ede-8134-1cc80a2c3293</onsuccess></stage><stage stageid="70744683-2ca9-4e9a-89b9-194945f98e32" name="Range" type="Data"><subsheetid>1487aa65-ac8a-44e9-a6e9-8b16b4be5199</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c8e00b5-ec48-479b-8abf-6a6658752cb5" name="Get Worksheet Name" type="SubSheetInfo"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2af2843d-00f3-464f-ab67-305ae6ccf858" name="End" type="End"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Worksheet" stage="Worksheet" /></outputs></stage><stage stageid="26c465a5-f001-4ff8-ac21-28437489e85f" name="Handle" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2de7e6b6-6118-4b3f-ba2b-179ba64d95d8" name="Workbook" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ee8f628-7829-42f7-ac8c-672d78be654f" name="Worksheet" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c752debc-3eea-4935-a460-f8eb77039d5d" name="Start" type="Start"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="number" name="Worksheet Position" stage="Position" /></inputs><onsuccess>ba712112-b784-4f87-a7ff-5a8721aca35d</onsuccess></stage><stage stageid="ba712112-b784-4f87-a7ff-5a8721aca35d" name="Get Worksheet" type="Code"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Position" expr="[Position]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="text" name="Worksheet" stage="Worksheet" /></outputs><onsuccess>39f8ebfd-a1e8-4517-add5-653f475fe8eb</onsuccess><code><![CDATA[Dim wb, ws As Object

Try

wb = GetWorkbook(Handle, Workbook)
ws = wb.Worksheets(Position)
Worksheet = ws.Name

Success = True

Catch e As Exception
   position = -1
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	ws = Nothing
End Try]]></code></stage><stage stageid="2cbe9309-244f-45ae-8716-0d02bf738530" name="Position" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27d60ef1-833c-44f5-b5ab-0aefb2c0581c" name="Success?" type="Decision"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>4235fac3-2295-4511-828e-090e9c888d38</ontrue><onfalse>8edc5ff8-0139-409d-ba63-7f23bf726964</onfalse></stage><stage stageid="8edc5ff8-0139-409d-ba63-7f23bf726964" name="Exception" type="Exception"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet position: &quot; &amp; [Message]" /></stage><stage stageid="39f8ebfd-a1e8-4517-add5-653f475fe8eb" name="Success?" type="Decision"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><loginhibit /><display x="15" y="30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>2af2843d-00f3-464f-ab67-305ae6ccf858</ontrue><onfalse>636399b4-ec2b-41a7-ac41-27e98637df4c</onfalse></stage><stage stageid="636399b4-ec2b-41a7-ac41-27e98637df4c" name="Exception" type="Exception"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="120" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to get worksheet name: &quot; &amp; [Message]" /></stage><stage stageid="69b153d1-9bd9-4c51-8b96-d45c1112bbfb" name="Success" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="464ca930-cf54-4147-8041-1007cc2416b6" name="Message" type="Data"><subsheetid>b39f7ce9-ba76-4a8c-a404-bccf4c9ffe67</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="def46f81-3f9f-421d-91cf-f12583e956d3" name="Success" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1195aa37-1cbe-4f02-9d00-c39f3e304cfc" name="Message" type="Data"><subsheetid>510b0ce5-bf46-43a1-86a4-72877f427e6f</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5222003b-5cb9-4669-bc35-96d41b028249" name="Insert" type="SubSheetInfo"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7c868cff-a594-49f6-bde7-fc3ba2cd17c6" name="End" type="End"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c34b4fa-4824-48bf-ae2a-b709a25cec17" name="Handle" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dc53e03-3a4f-4ca9-ba70-17573564d976" name="Workbook" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89909450-cca0-4546-bbbc-32cbd4c609bc" name="Start" type="Start"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Shift (Left or Up)" stage="Shift" /></inputs><onsuccess>1f31ede9-3b32-4aaf-9b55-573cb227a850</onsuccess></stage><stage stageid="dc1f9d40-b099-44c3-a2c1-e782413b0914" name="Insert" type="Code"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="number" name="Shift Type" expr="[Shift Type]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>be039ecb-6427-4a80-8a91-9b69561fc2de</onsuccess><code><![CDATA[Dim wb, excel, range As Object

Try

wb = GetWorkbook(Handle, Workbook)
excel = wb.Application

range = excel.Selection
range.Insert(Shift:=[Shift_Type])

Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="be039ecb-6427-4a80-8a91-9b69561fc2de" name="Success?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>7c868cff-a594-49f6-bde7-fc3ba2cd17c6</ontrue><onfalse>741cc1d1-3936-4201-ad74-e95993e64b92</onfalse></stage><stage stageid="741cc1d1-3936-4201-ad74-e95993e64b92" name="Exception" type="Exception"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="225" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="" detail="&quot;Failed to delete selection: &quot; &amp; [Message]" /></stage><stage stageid="aac1165a-4574-4834-a68e-18db8cdd0216" name="Success" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52ea365d-8434-45cb-97ba-cd7c741b7c7c" name="Message" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd2ee59b-4044-4f2c-8439-05e1a9b23c7d" name="Shift" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f31ede9-3b32-4aaf-9b55-573cb227a850" name="Shift Left?" type="Decision"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim(Upper([Shift]))=&quot;LEFT&quot;" /><ontrue>594ef012-6d63-4256-a43c-dd84c172ad15</ontrue><onfalse>21ff25a4-b431-43fb-af46-02fff92627e7</onfalse></stage><stage stageid="594ef012-6d63-4256-a43c-dd84c172ad15" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4161" stage="Shift Type" /></stage><stage stageid="c07375e4-4e0d-4a0d-b7b2-d1bab9884769" name="Shift Type" type="Data"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21ff25a4-b431-43fb-af46-02fff92627e7" name="Shift Type" type="Calculation"><subsheetid>659749b0-1f00-4e33-956d-6be6172a8739</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dc1f9d40-b099-44c3-a2c1-e782413b0914</onsuccess><calculation expression="-4121" stage="Shift Type" /></stage><stage stageid="53f2c5f2-ac8f-40c2-ace8-24614c6d3676" name="Run Macro" type="SubSheetInfo"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><narrative>Runs the specified macro.

Depending on how the macro has been created the name will be one of the following:

A. Just the macro name
e.g. MyMacro

B. The workbook and macro name
e.g. MyWorkbook.xls!MyMacro

C. The workbook, worksheet and the macro name
e.g. 'MyWorkbook.xls!'MyWorksheet.MyMacro</narrative><display x="-225" y="-15" w="300" h="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da9401ad-8267-4f76-bb0d-02d380427eb5" name="Start" type="Start"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" narrative="The integer handle identifying the instance that contains the macro. The default of zero indicates the currently active instance." stage="Handle" /><input type="text" name="Macro Name" narrative="The name of the macro to run" stage="Macro Name" /></inputs><onsuccess>a19d33b9-0a8b-4fb1-b333-7fb65c7733ab</onsuccess></stage><stage stageid="0a6413b8-4ce8-4399-b3e2-974e44d812af" name="End" type="End"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a19d33b9-0a8b-4fb1-b333-7fb65c7733ab" name="Run Macro" type="Code"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Macro Name" expr="[Macro Name]" /></inputs><onsuccess>0a6413b8-4ce8-4399-b3e2-974e44d812af</onsuccess><code><![CDATA[GetInstance(Handle).Run(Macro_Name)]]></code></stage><stage stageid="669163d5-5b66-446d-84fc-ddaaccf6ecc8" name="Handle" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="d95761c1-c5f3-46a0-8b86-7f90e58418cc" name="Macro Name" type="Data"><subsheetid>4229da44-68c0-4b51-9d2c-08be4a9d6727</subsheetid><loginhibit /><display x="165" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f6eda740-cf77-47fa-9304-31c3e5dcd95a" name="AbhiProcess" type="SubSheetInfo"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6307098d-be8b-46f7-ab3e-a22713115ce0" name="Start" type="Start"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the required workbook should be opened. The default of zero indicates the currently active instance." stage="handle" /><input type="number" name="IndexNumber" stage="Number" /></inputs><onsuccess>1f462e0f-f9ed-488f-902d-e1486f34ae3a</onsuccess></stage><stage stageid="b0b3a123-1b60-49ce-b608-b48f421873b0" name="End" type="End"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f462e0f-f9ed-488f-902d-e1486f34ae3a" name="Activate Workbook" type="SubSheet"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="-60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" narrative="The integer handle identifying the instance on which the workbook should be activated. The default of zero indicates the currently active instance." expr="[handle]" /><input type="text" name="Workbook Name" narrative="The workbook name identifying the workbook which should be activated - empty text indicates the currently active workbook, making this a no-op." expr="" /></inputs><onsuccess>48c61dee-3076-4552-9417-ffc2e4e47ee5</onsuccess><processid>6632ed99-8751-4c2a-ad00-3cc016300e08</processid></stage><stage stageid="24cf1225-14ab-4680-9e0d-663946ea16c9" name="handle" type="Data"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="285" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="48c61dee-3076-4552-9417-ffc2e4e47ee5" name="Delete blank rows1" type="Code"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><loginhibit /><display x="135" y="0" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="handle" expr="[handle]" /><input type="number" name="i" expr="[Number]" /></inputs><onsuccess>b0b3a123-1b60-49ce-b608-b48f421873b0</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(handle,Nothing).ActiveSheet
		worksheet.Rows(i).Delete

]]></code></stage><stage stageid="1a133544-4591-41be-8b52-47b6fb61aeb6" name="Number" type="Data"><subsheetid>aef25d68-c6e7-447c-99d2-56885d72b172</subsheetid><display x="285" y="-60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5269b39-1b6b-4155-a933-67769ce987a5" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="debec38b-0f56-41b1-9c9b-95c1e821d574" name="Start" type="Start"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="number" name="Column Number" stage="Column Number" /><input type="text" name="Filter Criteria" stage="Filter Criteria" /></inputs><onsuccess>fda15d7f-221e-4029-bd65-e1915918c0b4</onsuccess></stage><stage stageid="9b92bdb7-1416-40c2-ba12-c948d247d543" name="End" type="End"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="6913783b-a077-46e8-8af7-04b146854c94" name="Handle" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f922204-3dfc-423c-ac58-376ed564c8e8" name="Workbook" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="885fe96f-9d30-43e9-a8c1-af0719d4a595" name="Worksheet" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bbf6ebec-6463-438f-a484-59f953049418" name="Success" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2f004204-ee7a-4954-82ce-dedbf4b0f79d" name="Message" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ea8e44b-9223-4387-b479-5cc215c38b23" name="Select Range" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="-165" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66e3d80d-8284-4fe2-93ce-349e7756a47a" name="Inputs" type="Block"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="-240" y="-90" w="150" h="225" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f0a4570-cfc3-4ca3-adc9-00ad59cebd39" name="Output " type="Block"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="fda15d7f-221e-4029-bd65-e1915918c0b4" name="Filter Excel" type="Code"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="number" name="Column Number" expr="[Column Number]" /><input type="text" name="Filter Criteria" expr="[Filter Criteria]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9b92bdb7-1416-40c2-ba12-c948d247d543</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="79cb756f-5ab9-4e0f-b883-f98e4d786284" name="Filter Criteria" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="105" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09d77b85-ed8c-4037-b475-d7b046b120a3" name="Column Number" type="Data"><subsheetid>e312ef1e-f655-4e1d-9671-8f8c860ef57d</subsheetid><display x="-165" y="45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f2f7ae0-6ade-4964-b600-65c76be1c6e0" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="3fe2b0f2-b023-4363-b89a-5b29a0e74c08" name="Start" type="Start"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>412a95b2-5126-4863-8836-ee9c2b3ecdc1</onsuccess></stage><stage stageid="40057163-511a-4220-a226-604bc0777d4f" name="End" type="End"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="0b83c93b-17d2-4baf-8397-bf8197491366" name="Handle" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e12c96e1-321b-412f-b3d5-1139719c1ffb" name="Workbook" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4316b9a-d36c-484b-9392-f6e6906d9936" name="Worksheet" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="-165" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d69c7833-7f4b-47d4-9c74-087b78a58c74" name="Success" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6591d6e-a7e3-4cc1-8beb-939086489c81" name="Message" type="Data"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7bafdd7d-dcdf-4c8f-a642-ba919f746e8f" name="Inputs" type="Block"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="-240" y="-60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6dd254ae-3d4d-487a-9c70-1e18418a6702" name="Output " type="Block"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="412a95b2-5126-4863-8836-ee9c2b3ecdc1" name="Delete Filtered Values" type="Code"><subsheetid>c9615767-6652-4462-b1f8-fac034e2c3a2</subsheetid><loginhibit /><display x="15" y="15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>40057163-511a-4220-a226-604bc0777d4f</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object
Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
'sheet.Range(Select_Range).AutoFilter(Field:=Column_Number, Criteria1:=Filter_Criteria)
sheet.UsedRange.Offset(1, 0).SpecialCells(12).EntireRow.Delete 
Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="b2b1ad79-fb83-4eff-8ddb-a9484f1b6785" name="Delete Hidden rows " type="SubSheetInfo"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="4d7cfe29-5aaf-4dba-be09-0240d5ab943d" name="Start" type="Start"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /></inputs><onsuccess>9d85cec7-0ba5-46d8-8b27-5a0187128f9e</onsuccess></stage><stage stageid="3c606e10-953e-48f8-ad6b-2dd1222e3334" name="End" type="End"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="203181e0-966c-4f75-a7cb-faeca2afbbd1" name="Handle" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3168c0ea-38b8-49bd-96b8-8fa8084cedc2" name="Workbook" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79329e58-17a3-4cd1-9480-f269630a6e1a" name="Worksheet" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="59806680-25e1-44d4-a85c-1b03789ae553" name="Success" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="82572622-b240-4a22-9109-9be661565a77" name="Message" type="Data"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f65de0e-b7a9-46f0-88ff-8c4ee5596adb" name="Inputs" type="Block"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="-240" y="-90" w="135" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1364c906-9831-49ca-aed6-c3620656c586" name="Output " type="Block"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="9d85cec7-0ba5-46d8-8b27-5a0187128f9e" name="Remove Excel Filter" type="Code"><subsheetid>f5502a7f-1139-434f-8bd9-6009432d1e11</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3c606e10-953e-48f8-ad6b-2dd1222e3334</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
sheet.UsedRange.AutoFilter

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="8aee19f2-9fe7-4626-903b-5b47dfe217f5" name="Format Columns" type="SubSheetInfo"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-135" w="150" h="90" /></stage><stage stageid="c72449fb-d3bd-47e3-8577-c0ddd2914a4e" name="Start" type="Start"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /><input type="text" name="Format Type" narrative="Type can be &quot;Text&quot;, &quot;Percentage&quot;,&quot;Number&quot;,&quot;Fraction&quot;" stage="Format Type" /></inputs><onsuccess>86e43e0f-dfe3-4a8b-9a95-a98fd638fb93</onsuccess></stage><stage stageid="83cdc766-3d21-4342-8318-3685c4a8b91b" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="60" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="67c6c08e-f8d2-42a1-a480-77199f13d298" name="Number Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="60" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>83cdc766-3d21-4342-8318-3685c4a8b91b</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0.00"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="22ed1689-da95-41a2-a4e2-dad0c3079171" name="Handle" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7bce11b7-cdda-43c7-a4ab-f9d770b10c22" name="Workbook" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6373b284-7af2-4479-93e8-db8512d419fe" name="Worksheet" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc1d0539-4181-42f2-abdb-02d99323c4ec" name="Success" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-300" y="-45" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4398eddd-9566-4512-996b-57b086ab2ee4" name="Message" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-315" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f8da730-1626-4f31-ade8-5db1c3a18630" name="Select Range" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86e43e0f-dfe3-4a8b-9a95-a98fd638fb93" name="Select Formatting" type="ChoiceStart"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="15" y="-90" /><groupid>8463325a-cfa6-44af-937e-b204969b093c</groupid><choices><choice expression="[Format Type]=&quot;Number&quot;"><name>Number</name><distance>73.7606</distance><ontrue>67c6c08e-f8d2-42a1-a480-77199f13d298</ontrue></choice><choice expression="[Format Type]=&quot;Percentage&quot;"><name>Percentage</name><distance>147.5212</distance><ontrue>c576f684-ead5-45bb-a793-b9eefb28a5b0</ontrue></choice><choice expression="[Format Type]=&quot;Text&quot;"><name>Text</name><distance>221.2818</distance><ontrue>baadeec0-4d4d-42d5-b546-c0387b270f06</ontrue></choice><choice expression="[Format Type]=&quot;Fraction&quot;"><name>Fraction</name><distance>295.0424</distance><ontrue>50be47e9-3fca-40ca-8c56-995016cc7a94</ontrue></choice><choice expression="[Format Type]=&quot;Date&quot;"><name>Date</name><distance>368.802979</distance><ontrue>836e99a9-468f-4285-bf29-92d861c8f4f0</ontrue></choice><choice expression="[Format Type]=&quot;General&quot;"><name>General</name><distance>442.563568</distance><ontrue>79699fa8-96b5-4c3a-87d3-2a24f0c7a3b6</ontrue></choice><choice expression="[Format Type]=&quot;Year Date&quot;"><name>Date in YYYYMMDD</name><distance>516.324158</distance><ontrue>8ed02a66-163e-417d-8500-d29dc675cb36</ontrue></choice><choice expression="[Format Type]=&quot;1000 separater&quot;"><name>Number 1000 separater</name><distance>590.0848</distance><ontrue>76fee878-0218-4ff9-9fb7-4d6f02b44799</ontrue></choice><choice expression="[Format Type]=&quot;hh:mm:ss&quot;"><name>Time</name><distance>663.8454</distance><ontrue>0f6e8f6e-0b42-4bc3-87fd-f083dcd511b2</ontrue></choice><choice expression="[Format Type]=&quot;Number 0&quot;"><name>Number(Decimal places 0)</name><distance>737.606</distance><ontrue>46c52b43-4688-497c-8d6a-25c1973680d7</ontrue></choice><choice expression="[Format Type]=&quot;Number 1&quot;"><name>Number(no Decimal places )</name><distance>811.366638</distance><ontrue>c0c764c5-db36-4308-89df-3329f720cf9c</ontrue></choice></choices></stage><stage stageid="64a629ed-7ec9-40dc-8df4-84dc0016dc37" name="Otherwise1" type="ChoiceEnd"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="900" y="-75" /><onsuccess>5dfe779c-8fc3-4d9d-ab09-2d2f3de13a2b</onsuccess><groupid>8463325a-cfa6-44af-937e-b204969b093c</groupid></stage><stage stageid="e85e508d-23df-4492-aab7-9dee749bb27b" name="Format Type" type="Data"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><display x="-180" y="75" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2848b67-af11-43b0-a094-e69315d3bffd" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="120" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="c576f684-ead5-45bb-a793-b9eefb28a5b0" name="Percentage Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="120" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e2848b67-af11-43b0-a094-e69315d3bffd</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0.00%"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="d6d92ecc-e044-4ab5-bc76-4f90b7ddb550" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="180" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="baadeec0-4d4d-42d5-b546-c0387b270f06" name="Text Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="180" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d6d92ecc-e044-4ab5-bc76-4f90b7ddb550</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range("J1:J10").Select
excel.Selection.NumberFormat = "@"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="cc6da736-e88e-41f2-ab07-def85817a830" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="240" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="50be47e9-3fca-40ca-8c56-995016cc7a94" name="Fraction Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="240" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>cc6da736-e88e-41f2-ab07-def85817a830</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "# ?/?"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="9e4d8b31-1bfc-474b-984d-8332c9fab97a" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="300" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="836e99a9-468f-4285-bf29-92d861c8f4f0" name="Date Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="300" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9e4d8b31-1bfc-474b-984d-8332c9fab97a</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "m/d/yyyy"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="4ae669b6-e94b-4b4e-b728-838a02af4c7a" name="End" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="360" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="79699fa8-96b5-4c3a-87d3-2a24f0c7a3b6" name="General Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="360" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>4ae669b6-e94b-4b4e-b728-838a02af4c7a</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "General"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="5dfe779c-8fc3-4d9d-ab09-2d2f3de13a2b" name="Set Success" type="MultipleCalculation"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="975" y="-75" /><onsuccess>bf7b21c9-802e-44ce-b9f3-966b6e430536</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Incorrect Selection of Format Type- Format Type should be Text, Number, Percentage, Date and Fraction&quot;" stage="Message" /></steps></stage><stage stageid="bf7b21c9-802e-44ce-b9f3-966b6e430536" name="End1" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="1050" y="-75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="8ed02a66-163e-417d-8500-d29dc675cb36" name="Date Format YYYY" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="420" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e781e0e9-f08e-4252-a8e4-c53ecb89d317</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "YYYYMMDD"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="e781e0e9-f08e-4252-a8e4-c53ecb89d317" name="End4" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="420" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="76fee878-0218-4ff9-9fb7-4d6f02b44799" name="Number Format1" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="480" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>e55360f1-9521-4326-910e-7cccc560860c</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "0,000.00"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="e55360f1-9521-4326-910e-7cccc560860c" name="End5" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="480" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="0f6e8f6e-0b42-4bc3-87fd-f083dcd511b2" name="Time Format" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="615" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>28c18d7b-e361-4ac9-9e63-a1e892182943</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
excel.Selection.NumberFormat = "hh:mm:ss"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="28c18d7b-e361-4ac9-9e63-a1e892182943" name="End6" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="615" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="46c52b43-4688-497c-8d6a-25c1973680d7" name="Number Format2" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="705" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ae118969-1dd5-4960-8b35-be8f5d5d84d0</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
With excel.Selection
	.NumberFomat = "General"
	.Value = .Value
End With

'excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="ae118969-1dd5-4960-8b35-be8f5d5d84d0" name="End7" type="End"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="690" y="75" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="c0c764c5-db36-4308-89df-3329f720cf9c" name="Number Format3" type="Code"><subsheetid>035f75ef-016f-4c45-ab51-5b2cd9eabe87</subsheetid><loginhibit /><display x="780" y="-30" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select Range" expr="[Select Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ae118969-1dd5-4960-8b35-be8f5d5d84d0</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
excel.Range(Select_Range).Select
With excel.Selection
	.NumberFomat = "General"
	.Value = .Value
End With

excel.Selection.NumberFormat = "0"

Success = True
Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing
End Try]]></code></stage><stage stageid="ae824bc5-2ba6-460a-b916-052a61d13db2" name="Auto Fill Range" type="SubSheetInfo"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-255" y="-150" w="150" h="90" /></stage><stage stageid="09d40d0b-2ca7-4d9a-b23b-01f69d79a33b" name="Start" type="Start"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="number" name="Handle" stage="Handle" /><input type="text" name="Workbook" stage="Workbook" /><input type="text" name="Worksheet" stage="Worksheet" /><input type="text" name="Select Range" stage="Select Range" /><input type="text" name="Auto Fill Range" stage="AutoFill Range" /></inputs><onsuccess>46ff1b1d-d024-4217-89a7-7cabe53c3c0c</onsuccess></stage><stage stageid="746038ae-8846-4ede-8ff2-bff9585bb023" name="End" type="End"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="46ff1b1d-d024-4217-89a7-7cabe53c3c0c" name="Auto Fill" type="Code"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Handle" expr="[Handle]" /><input type="text" name="Workbook" expr="[Workbook]" /><input type="text" name="Worksheet" expr="[Worksheet]" /><input type="text" name="Select_range" expr="[Select Range]" /><input type="text" name="Autofill_range" expr="[AutoFill Range]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>746038ae-8846-4ede-8ff2-bff9585bb023</onsuccess><code><![CDATA[Dim wb, ws As Object
Dim excel, sheet, range As Object

Try
wb = GetWorkbook(Handle, Workbook)
ws = GetWorksheet(Handle, Workbook, Worksheet)
wb.Activate()
ws.Activate()
excel = ws.Application
sheet = excel.ActiveSheet
range = sheet.Range(Select_range)
range.Select()
'GetInstance(Handle).ActiveCell.Value = "=SUM(A1,B1)"
sheet.Range(Select_range).AutoFill (sheet.Range(Autofill_range))
Success = True

Catch e As Exception
	Success = False
	Message = e.Message
Finally
	wb = Nothing
	excel = Nothing
	range = Nothing

End Try]]></code></stage><stage stageid="5721b7eb-3017-4280-a1ea-15684aee23ea" name="Handle" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="-60" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76683bbe-b4ef-4eff-8882-1b88960abdad" name="Workbook" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="beddf64f-6e7b-468c-afce-370e0e282877" name="Worksheet" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="-165" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1a2b31c-4d54-4e17-af72-8509e4da5feb" name="Success" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3b172368-db77-42e5-9c50-973a0fce3df8" name="Message" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><display x="255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c18d875-ae92-4155-847c-800660b77ef4" name="Select Range" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-165" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="842e5e49-3996-429e-9db4-40494829eb83" name="AutoFill Range" type="Data"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-165" y="90" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff04b5cd-55ce-4065-aa5d-1f5a0c1c8b9e" name="Inputs" type="Block"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="-240" y="-90" w="150" h="210" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f6d34e7b-4a93-4bf6-a6a2-2cc9b5b827c1" name="Output " type="Block"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><display x="120" y="-45" w="195" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="e976691d-c5d4-49d3-aead-6ac1eff857ef" name="Auto Fill Range" type="Note"><subsheetid>ebb1c9ea-1996-4373-aac5-28640a5ea498</subsheetid><loginhibit /><narrative>Auto Fill Range

This action is used to fill the series in excel rows. This is based on the selection of cell. based on the value of selected cell, it will fill the entire used range rows.</narrative><display x="75" y="-180" w="300" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FF0000" /></stage><stage stageid="5b11bc5d-e131-4290-a0f2-b476e71d4494" name="Delete row" type="SubSheetInfo"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3996e3e0-aa19-4063-b7e5-556478d94b97" name="Start" type="Start"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="handle" stage="handle" /></inputs><onsuccess>1bced6ff-3122-43b8-9dae-3db40751a61e</onsuccess></stage><stage stageid="b7da20a9-06e8-477e-8aff-edc73b8c7dda" name="End" type="End"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1bced6ff-3122-43b8-9dae-3db40751a61e" name="Code1" type="Code"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="handle" expr="[handle]" /></inputs><onsuccess>b7da20a9-06e8-477e-8aff-edc73b8c7dda</onsuccess><code><![CDATA[Dim worksheet As Object
worksheet = GetWorkbook(Handle,Nothing).ActiveSheet
worksheet.Rows(1).Delete]]></code></stage><stage stageid="6873a268-5fbb-4fab-afb2-50358e302241" name="handle" type="Data"><subsheetid>7f4653f3-592a-42ef-999e-7e08447d6587</subsheetid><display x="240" y="-90" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="206bd0b4-0b91-4647-be25-53a6d932b0f5" name="Outlook Shared Mail VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="Outlook Shared Mail VBO" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Business Object for interacting with Microsoft Outlook email functions" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ec75c4f1-6276-470b-b23f-9a88eb7a0f96</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-195</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="The Object requires a MS interop runtime DLL &quot;Microsoft.Office.Interop.Outlook.dll&quot; to be installed in order to run. This DLL can be installed as an optional feature using the Blue Prism installer." /></preconditions><endpoint narrative="" /><subsheet subsheetid="810b21b7-6b6b-4c7b-be10-b0c5f2911afc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-182</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0b58522-643b-42ad-8fdd-4cb5246c5558" type="Normal" published="True"><name>Send Email</name><view><camerax>-98</camerax><cameray>7</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="78125029-0b28-4ee1-a064-c3a9e70ad7ca" type="Normal" published="True"><name>Reply All to Email</name><view><camerax>-25</camerax><cameray>-55</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f6f16944-bdad-4ff4-a5df-b687b904183c" type="Normal" published="True"><name>Reply to Email</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9bf4e24d-5759-4357-97f1-adc1c08c843a" type="Normal" published="True"><name>Forward Email</name><view><camerax>-191</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e6fb66c-9607-4731-829c-e3dfd4510a95" type="Normal" published="True"><name>Save Email As File</name><view><camerax>21</camerax><cameray>122</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5734e4af-7917-40d8-b0b6-83d8e1872074" type="Normal" published="True"><name>Delete Email</name><view><camerax>-8</camerax><cameray>52</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="204201c2-30d3-467a-b6fb-4e0010b046af" type="Normal" published="True"><name>Mark Email As Read</name><view><camerax>-8</camerax><cameray>-298</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2d1820f0-98e4-4a10-8361-8f5322babcee" type="Normal" published="True"><name>Mark Email As Unread</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61b6fc18-b98a-4456-9381-8c8cfe9f6f60" type="Normal" published="True"><name>Move Email to Inbox Sub Folder</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="758f4938-75a1-4157-b0f7-2d9b99144d61" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f" type="Normal" published="True"><name>Save Attachment</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7aafcecd-5e8f-49d4-9987-73958f3cedc3" type="Normal" published="True"><name>Get Sent Items (Basic)</name><view><camerax>27</camerax><cameray>135</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d9c8a6c7-f973-45af-b333-8166a34297c7" type="Normal" published="True"><name>Get Sent Items (Advanced)</name><view><camerax>143</camerax><cameray>30</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="43fde12c-9d96-4cdd-a342-88204c037438" type="Normal" published="True"><name>Get Sent Items (Expert)</name><view><camerax>-42</camerax><cameray>4</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="a2bc0172-492f-4781-b7ed-1f1d550da3ba" type="Normal" published="True"><name>Get Received Items (Basic)</name><view><camerax>15</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f28aad59-a89a-4a9c-98ab-d31d6b69d9a5" type="Normal" published="True"><name>Get Received Items (Advanced)</name><view><camerax>-33</camerax><cameray>147</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ea004198-e1fb-44bc-b549-bf8f7fa06631" type="Normal" published="True"><name>Get Received Items (Expert)</name><view><camerax>49</camerax><cameray>46</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="fb0dd28d-2875-4ec6-b6d5-475120ac222c" type="Normal" published="False"><name>Internal_Get Items</name><view><camerax>-91</camerax><cameray>4</cameray><zoom version="2">1.5625</zoom></view></subsheet><stage stageid="72d471a3-047f-457c-b72a-b8026ed0c984" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5</onsuccess></stage><stage stageid="2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="bf10fbf6-c2a1-4b51-9a5b-9919863cc24b" name="Stage1" type="ProcessInfo"><display x="-180" y="-15" w="150" h="210" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.Office.Interop.Outlook.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.VisualBasic</import><import>Microsoft.Win32</import><import>Microsoft.Office.Interop.Outlook</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="0e25d23b-b518-4ba3-989e-4adf589c7dd3" name="Clean Up" type="SubSheetInfo"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a9d4d214-a0e7-4383-8e44-7a4f068d71cd" name="Start" type="Start"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>253513b1-e08e-49b0-a789-fb3659eeb650</onsuccess></stage><stage stageid="253513b1-e08e-49b0-a789-fb3659eeb650" name="End" type="End"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7d086243-ce98-49a9-8674-b8ca5349db4c" name="Note1" type="Note"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="8c3c4d09-dac0-411e-8e05-4db606c12164" name="Save Email As File" type="SubSheetInfo"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>Stores a specified email as a ".msg" file on any file location (file path).

The Entry ID is the unique idenfier used to determine which email is to be saved.</narrative><display x="-195" y="-75" w="150" h="120" /></stage><stage stageid="2ff43150-6180-4cff-bf98-fd8d855bdbf9" name="Start" type="Start"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="File Path" narrative="Mandatory. The destination file path. Default blank." stage="File Path" /><input type="text" name="File Name" narrative="Mandatory. The File Name for the stored Email." stage="File Name" /></inputs><onsuccess>7287aac3-f380-41fd-99ed-1308db516359</onsuccess></stage><stage stageid="0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef" name="End" type="End"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7287aac3-f380-41fd-99ed-1308db516359" name="Save As" type="Code"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><onsuccess>0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.SaveAs (File_Path & File_Name & ".msg")]]></code></stage><stage stageid="0d8dbc79-fe44-41e3-a7a5-5b60b74fa2cf" name="File Path" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15416548-42aa-42e9-8a36-49d19e45e678" name="Internal_Get Items" type="SubSheetInfo"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Sub function used by multiple actions within VBO. Do not change or publish.

Uses the Restrict method to create a filtered list of folder items. Not intended for publication.

</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6573dfb-b844-470c-bfe7-73c863da28d4" name="Start" type="Start"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." stage="Sub Folder" /><input type="text" name="Shared Email" stage="Shared Email" /></inputs><onsuccess>d9ef3bca-bf49-4f84-9d4c-b3648951f323</onsuccess></stage><stage stageid="26935ec9-3f33-4a4d-982c-0e6b0a5edbc2" name="End" type="End"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d9ef3bca-bf49-4f84-9d4c-b3648951f323" name="Get Items" type="Code"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /><input type="text" name="Shared Email" expr="[Shared Email]" /></inputs><outputs><output type="collection" name="Items" stage="Items" /><output type="number" name="Item Count" stage="Item Count" /></outputs><onsuccess>26935ec9-3f33-4a4d-982c-0e6b0a5edbc2</onsuccess><code><![CDATA[

Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

'Dim folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)

'Shared email Code Starts 

Dim sHEmail = Shared_Email
Dim vRecipient =_nameSpace.CreateRecipient(sHEmail)
Dim folder = _nameSpace.GetSharedDefaultFolder(vRecipient, Outlook_Folder_ID)

'Ends	


If Sub_Folder <> "" Then
	For each name as string in Sub_Folder.Split("\")
	folder = folder.Folders(name)
	Next
End If

'See https://msdn.microsoft.com/en-us/library/office/aa210946(v=office.11).aspx
'for mail item properties
Dim dataTable As New Data.DataTable
dataTable.Columns.Add("EntryID", Type.GetType("System.String"))
dataTable.Columns.Add("To", Type.GetType("System.String"))
dataTable.Columns.Add("CC", Type.GetType("System.String"))
dataTable.Columns.Add("Subject", Type.GetType("System.String"))
dataTable.Columns.Add("Body", Type.GetType("System.String"))
dataTable.Columns.Add("Attachments", Type.GetType("System.String"))
dataTable.Columns.Add("ReceivedOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SentOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SenderName", Type.GetType("System.String"))
dataTable.Columns.Add("SenderEmailAddress", Type.GetType("System.String"))
dataTable.Columns.Add("Unread", Type.GetType("System.Boolean"))

Dim folderItems = If(Filter_Expression <> "", folder.Items.Restrict(Filter_Expression), folder.Items)

For Each item As Object In folderItems
	If Not TypeOf item Is MailItem Then Continue For
	Dim row As Data.DataRow = dataTable.NewRow
	row("EntryID") = item.EntryID
	row("To") = item.To
	row("CC") = item.CC
	row("Subject") = item.Subject
	row("Body") = item.Body
	
	Dim attachments As String = ""
	For Each attachment As Object In item.Attachments
        If attachment.Type = 1 Then
			attachments = attachments & "|" & attachment.DisplayName
		End If
	Next
	
	row("Attachments") = If (attachments.Length = 0, "", attachments.SubString(1))
	row("SentOn") = item.SentOn
	row("ReceivedOn") = item.ReceivedTime
	row("SenderName") = item.SenderName
	row("SenderEmailAddress") = If (item.SenderEmailType = "EX",item.Sender.GetExchangeUser.PrimarySmtpAddress,item.SenderEmailAddress)
	row("Unread") = item.Unread
	dataTable.Rows.Add(row)
	Item_Count += 1
Next
Items = dataTable]]></code></stage><stage stageid="301b8904-3bcd-4b1b-805a-0a190d6a1f23" name="Item Count" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="563eaaf3-d093-48a1-89fe-5b6dcc312f81" name="Filter Expression" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d314f7c0-0af6-4cc5-a2e1-1b2cb29674d9" name="Entry ID" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5106a0ab-6cbb-410f-9e0d-113791019ded" name="Get Received Items (Advanced)" type="SubSheetInfo"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Lists Inbox items matching the filter provided

Eg1 [From]='Mike Coworker' AND [unread]=False

Eg2 [Unread]=True AND [ReceivedTime] &gt;= '2018/01/01'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="38a5b9e1-f5ae-4293-96b5-8e39f6ddad5f" name="Start" type="Start"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /></inputs><onsuccess>bb657ac6-ea98-4042-8df8-0bfec4fe5f42</onsuccess></stage><stage stageid="88b1aeeb-8765-4f0c-98b3-a64aa3effa2c" name="Item Count" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9952465-1c95-422d-9bfe-1735745d3012" name="Filter Expression" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d97db59-defd-4f2b-80a0-50ae2c87c68e" name="Outlook Folder ID" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="bb657ac6-ea98-4042-8df8-0bfec4fe5f42" name="Internal_Get Items" type="SubSheet"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Shared Email" expr="[Shared Email]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>87fa8e80-f1f1-4329-8256-0224c2a2164c</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="036baecd-65dc-4916-9438-165b479478b1" name="Outlook Folder ID" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="7c584784-b258-4700-ae02-482668348ae9" name="Get Sent Items (Expert)" type="SubSheetInfo"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Lists Sent Items matching the query provided.

Eg1 @SQL=urn:schemas:httpmail:subject='Data Input'

Eg2 @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')"

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ecc59d78-3d95-4f68-8f6d-7dfa2ad7c6d4" name="Start" type="Start"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Shared Email" stage="Shared Email" /></inputs><onsuccess>ef7b49fa-9e40-4ce5-b6ac-67e5c3171164</onsuccess></stage><stage stageid="68c67a7a-d81f-4def-823b-761b317fc9f5" name="Item Count" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78a90b2a-607e-4d8d-8f04-7c3a81e8bf63" name="Filter Expression" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="920c79f3-90b3-487b-a30c-4e95162d5ecb" name="Outlook Folder ID" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="ef7b49fa-9e40-4ce5-b6ac-67e5c3171164" name="Internal_Get Items" type="SubSheet"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Shared Email" expr="[Shared Email]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>88475529-0d3e-40b9-8ead-79cedfbdf8c6</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="89de27c3-f759-42a1-956d-49dc91baa367" name="Send Email" type="SubSheetInfo"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Sends an Email </narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2f285e28-d6bb-4e7b-be7b-2631c3a8ac84" name="End" type="End"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="120" /></stage><stage stageid="79296089-edc5-4338-bf95-6734ad47825d" name="Send Item" type="Code"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /></inputs><onsuccess>2f285e28-d6bb-4e7b-be7b-2631c3a8ac84</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim mail = app.CreateItem(0)
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve  
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
	
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next

End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.Subject = Subject
mail.HTMLBody = Message

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	mail.Attachments.Add(att)
Next

mail.Save
mail.Send

]]></code></stage><stage stageid="e8e74832-24e7-4d9b-977d-f3720a5f58a3" name="Subject" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9254c70d-8233-413f-a7c8-5b920c8d7595" name="To" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c4cefa2-e465-4d3a-adae-410a8e2d6b73" name="Message" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3106293e-e64d-4d13-9671-b39e8c6be771" name="Attachments" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9418ede2-db6d-4912-bcd8-209a495359dc" name="Save Attachments" type="SubSheetInfo"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>Downloads all attachments to a folder. 

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f3f87040-02dc-44e3-94ac-4e94444ce722" name="End" type="End"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2e36171f-a7a2-4de1-b778-bd029753aad5" name="Start" type="Start"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Pattern" narrative="File Pattern" stage="File Pattern" /></inputs><onsuccess>0ec3c501-009c-4736-9511-3b84c98dcc66</onsuccess></stage><stage stageid="0ec3c501-009c-4736-9511-3b84c98dcc66" name="Save Attachments" type="Code"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Folder Path" expr="[Folder Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Pattern" expr="[File Pattern]" /></inputs><onsuccess>f3f87040-02dc-44e3-94ac-4e94444ce722</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
If item Is Nothing Then Return

If Not Folder_Path.EndsWith("\") Then Folder_Path &="\"

For Each attachment As Object In item.Attachments
	If attachment.Type = 1 AndAlso attachment.FileName Like File_Pattern Then
		attachment.SaveAsFile(Folder_Path & attachment.FileName)
	End If
Next
]]></code></stage><stage stageid="38d69990-6a5f-40ce-a4bb-541e49726b64" name="Folder Path" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f357ec6-15f4-4133-8da8-5061d4359d38" name="Entry ID" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a88d805-9f51-4298-9905-cb28610dae96" name="File Pattern" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">*.*</initialvalue><private /><alwaysinit /></stage><stage stageid="ad2e31ff-e5ef-4467-a348-13dc9a8a1acb" name="Save Attachment" type="SubSheetInfo"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>Downloads a specfic attachment to a folder. E.g. use cases are "*.txt" or "*.docx" etc.

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a8e9b1e1-4b0f-487d-89a5-6cacb4092be4" name="End" type="End"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2d1786e1-24e4-45da-b52c-bffa330fb007" name="Start" type="Start"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Name" narrative="Optional, Default value is *.* but common cases inlcude &quot;.docx&quot; , &quot;.pdf&quot; , &quot;.xlsx&quot; etc." stage="File Name" /></inputs><onsuccess>b1663b58-d99f-4f8e-9641-4b3db50ca615</onsuccess></stage><stage stageid="d2e8f631-485a-489a-8cbc-aac247d721f9" name="Folder Path" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7649073-c4eb-42b1-aaa4-7c50430a5cf3" name="Entry ID" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b7a4371-4fa0-4a3e-a132-5315118f7cae" name="File Name" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9a607b6-73e8-49ec-b2bc-a8032c0ab747" name="Save Attachments" type="SubSheet"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." expr="[Entry ID]" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." expr="[Folder Path]" /><input type="text" name="File Pattern" narrative="File Pattern" expr="[File Name]" /></inputs><onsuccess>a8e9b1e1-4b0f-487d-89a5-6cacb4092be4</onsuccess><processid>758f4938-75a1-4157-b0f7-2d9b99144d61</processid></stage><stage stageid="16e667f4-007c-48aa-91ad-4f253b96fc00" name="CC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc158b15-69a9-4850-a4e2-d67f53c55d87" name="BCC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="983656a5-d686-4ef0-ab54-aa50aa32e7d5" name="Delete Email" type="SubSheetInfo"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>Deletes a specific email item.

The Entry ID is the unique idenfier used to determine which email is to be deleted.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5f395532-0166-41e3-9087-6eb241347133" name="Start" type="Start"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>29bbbced-f689-4200-b43b-27e7b01a3c5d</onsuccess></stage><stage stageid="a191ef9e-e78a-4de9-901b-19e7ca766c72" name="End" type="End"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="29bbbced-f689-4200-b43b-27e7b01a3c5d" name="Delete" type="Code"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>a191ef9e-e78a-4de9-901b-19e7ca766c72</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Delete]]></code></stage><stage stageid="2d8d8f32-8e9d-49fc-a345-a25e3050ecac" name="Entry ID" type="Data"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1dcba3a-0e74-4632-809f-7b942c719eeb" name="Reply All to Email" type="SubSheetInfo"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>Reply to all Emails recipients of a specific email.

The &lt;Reply All to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><display x="-195" y="-60" w="150" h="120" /></stage><stage stageid="91e5fe6f-95fe-4c43-aac6-317ccb565fa8" name="End" type="End"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="719856cc-820a-4771-b362-9f0d98896f7b" name="Start" type="Start"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /><input type="text" name="Attachments" stage="Attachments" /></inputs><onsuccess>a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96</onsuccess></stage><stage stageid="a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96" name="Reply All" type="Code"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /></inputs><onsuccess>91e5fe6f-95fe-4c43-aac6-317ccb565fa8</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.ReplyAll

reply.Subject = item.Subject
reply.HTMLBody = Message & vbCrLf & item.HTMLBody

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	reply.Attachments.Add(att)
Next
reply.Send]]></code></stage><stage stageid="c0de4880-e914-4cbd-9b40-fd4b87639b56" name="Entry ID" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4aa3eccc-d10e-460b-96ce-82f3d86a5c36" name="Message" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="502b5d9b-0ef4-4f7d-9e45-2740f2866f3a" name="Forward Email" type="SubSheetInfo"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>Forward Email to recipients (To/CC/BCC) including (Message) as input parameters.

The &lt;Forward Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><display x="-195" y="-45" w="150" h="150" /></stage><stage stageid="d398f6bf-9903-432b-9d08-93ca68a5ce15" name="End" type="End"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b5542c2e-3ef3-4636-82e6-10fcb6b9f5ef" name="Entry ID" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd6ecc76-eb50-4203-95cd-c77e9fcf2ad5" name="Message" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9886ff21-e65d-440d-b60a-9869153650be" name="Forward" type="Code"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>d398f6bf-9903-432b-9d08-93ca68a5ce15</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim mail = item.Forward
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next

End If

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve	
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC
	Next

End If
	
If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.HTMLBody = Message & vbCrLf & mail.HTMLBody
mail.Save
mail.Send]]></code></stage><stage stageid="9a9158e0-2caf-4e8b-8277-bcfa3f0b8565" name="To" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fba137b6-ad3b-48a5-b887-6302a10956ec" name="CC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d683ac76-a352-4994-89a5-d8a249f84648" name="BCC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ed52409-4c74-4cd4-8b16-9e9d057097b4" name="Start" type="Start"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>9886ff21-e65d-440d-b60a-9869153650be</onsuccess></stage><stage stageid="276590e9-5fa1-42bb-8bb0-3640cd595e46" name="Message Is HTML" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c36190da-7569-4737-a401-bec5b006c53f" name="Start" type="Start"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Comma-separated file paths. Default blank." stage="Attachments" /></inputs><onsuccess>79296089-edc5-4338-bf95-6734ad47825d</onsuccess></stage><stage stageid="6e74a6d0-d073-418d-bcee-5efe9f5733bb" name="Sub Folder" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df4f0bad-ced5-4315-8edc-e3138d7a7123" name="Sub Folder" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80516df7-3359-4f2c-8547-9312e5b237c2" name="Items" type="Collection"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="135" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="88475529-0d3e-40b9-8ead-79cedfbdf8c6" name="End" type="End"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="87fa8e80-f1f1-4329-8256-0224c2a2164c" name="End" type="End"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="93f4c073-8a54-4ee0-9b01-776c516fec9d" name="Reply to Email" type="SubSheetInfo"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>Reply to Email sender of a specific email.

The &lt;Reply to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><display x="-165" y="-60" w="150" h="120" /></stage><stage stageid="7273229e-a2d0-4468-a343-efaf656b1598" name="End" type="End"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f68ab080-2e34-44d9-93af-67409139a21d" name="Start" type="Start"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>52a97793-74c5-49d7-b4fc-55d03d5b81a2</onsuccess></stage><stage stageid="52a97793-74c5-49d7-b4fc-55d03d5b81a2" name="Reply" type="Code"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /></inputs><onsuccess>7273229e-a2d0-4468-a343-efaf656b1598</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.Reply

reply.Subject = item.Subject
reply.HTMLBody = Message & vbCrLf & item.HTMLBody
reply.Send
]]></code></stage><stage stageid="b129ab89-df26-4975-a3b1-30127f6e78af" name="Entry ID" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-165" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34d6dbc0-3597-4b72-8a65-5a90f164b75a" name="Message" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da3ecbf5-d75b-47d2-90f4-fa09e80b656b" name="Move Email to Inbox Sub Folder" type="SubSheetInfo"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>Moves an email to a subfolder within the inbox folder.

The Entry ID is the unique idenfier used to determine which email is to be moved.

Example
Inbox to Inbox\SubFolder </narrative><display x="-180" y="-60" w="150" h="120" /></stage><stage stageid="9033fc52-da65-4e8d-92a5-b67a33a0379a" name="Start" type="Start"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Destination Folder" narrative="Mandatory. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Destination Folder" /></inputs><onsuccess>3fa82add-9fd2-4264-8fbe-02536dae2237</onsuccess></stage><stage stageid="5461bd38-d7d7-4a3c-b23b-35857aa8a5ef" name="End" type="End"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="New Entry ID" narrative="Returns the new Entry ID from the Moved Email Object" stage="New Entry ID" /></outputs></stage><stage stageid="3fa82add-9fd2-4264-8fbe-02536dae2237" name="Move" type="Code"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Destination Folder" expr="[Destination Folder]" /><input type="text" name="Outlook Folder ID" expr="[Outlook Folder ID]" /></inputs><outputs><output type="text" name="New Entry ID" stage="New Entry ID" /></outputs><onsuccess>5461bd38-d7d7-4a3c-b23b-35857aa8a5ef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")
Dim folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)
Dim item = _nameSpace.GetItemFromID(Entry_ID)

If Destination_Folder <> "" Then
	For each name as string in Destination_Folder.Split("\")
	folder = folder.Folders(name)
	Next
End If

New_Entry_ID = item.Move(folder).EntryID]]></code></stage><stage stageid="18da11cb-f313-4820-b7e7-8c9bd6f12675" name="Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-180" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41304024-3f20-476e-b6bf-1e12ff6ead9a" name="Outlook Folder ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>MS Outlook - OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-180" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="9d9afabb-e65b-471a-8a66-913480436037" name="Destination Folder" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9964be-3e71-4206-88f6-74e09c1f1415" name="File Name" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30cb5e90-86c2-4790-9204-89ddbd70d778" name="Get Sent Items (Basic)" type="SubSheetInfo"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Lists Sent Items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4070f66-8405-4c2f-87f1-4d34a75561b8" name="Start" type="Start"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sent To" narrative="Optional. The To display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Sent To" /><input type="text" name="Copied To" narrative="Optional. The CC display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a semi-colon separated list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Copied To" /><input type="datetime" name="Sent Earliest" narrative="Optional. The earliest date to search from." stage="Sent Earliest" /><input type="datetime" name="Sent Latest" narrative="Optional. The latest date to search to." stage="Sent Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="text" name="Shared Email" stage="Shared Email" /></inputs><onsuccess>69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c</onsuccess></stage><stage stageid="905b5da3-5ab3-4c57-8c5f-33ed85e5c4a8" name="Item Count" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97127f0f-f77c-4b85-9c18-18e6556fbfa4" name="Outlook Folder ID" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="5097438d-04b5-4688-9fd5-c93dbe0d26c4" name="Internal_Get Items" type="SubSheet"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="285" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Shared Email" expr="[Shared Email]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>20b10fc6-ced8-4cf1-b991-19fbff8e181a</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="20b10fc6-ced8-4cf1-b991-19fbff8e181a" name="End" type="End"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="345" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="2fc294dd-0be1-48ae-85b7-f811d7015b19" name="Filter Expression" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29639c3b-dcc7-4427-bc90-57319d2ae6e8" name="Sent Earliest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="-45" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28d1cc10-ae57-4ea2-b01c-b9a8bded12ad" name="Sent Latest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="0" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3d2888f-df21-47e3-8405-7f6f4564a71b" name="Clean" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="240" /><onsuccess>5097438d-04b5-4688-9fd5-c93dbe0d26c4</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="b1ccbeb8-4c66-4932-a81f-c8c55c156731" name="Copied To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67f7a5fe-f2d5-480e-be1c-6a18d5a79508" name="Sent To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c54a3bb-1c08-4f3e-9ab2-3ceae0478554" name="Get Received Items (Basic)" type="SubSheetInfo"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Lists Inbox items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b5946711-b185-44bd-b97e-cfe91f9b05a2" name="Item Count" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32bea08c-862f-440c-bc83-c05ca252286c" name="Internal_Get Items" type="SubSheet"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="420" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Shared Email" expr="[Shared Email]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>717dbab6-6472-4f2d-9370-0ae2d5893829</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="cc00500b-17df-437f-816e-59bd2b9b6a11" name="Outlook Folder ID" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="0a3d1d6c-696a-4e50-a124-af43552a1c59" name="Sub Folder" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="717dbab6-6472-4f2d-9370-0ae2d5893829" name="End" type="End"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="480" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="fa7fc102-6824-4d83-9171-9b36913fb323" name="Subject" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0149c9d2-5846-4f23-8eb9-e639be1f7435" name="Start" type="Start"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sender Name" narrative="Optional. The From display name, which might be a name (eg John Smith) or email address (eg admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the From field." stage="Sender Name" /><input type="text" name="Sender Email" narrative="Optional. The sender email address." stage="Sender Email" /><input type="datetime" name="Received Earliest" narrative="Optional. The earliest date to search from." stage="Received Earliest" /><input type="datetime" name="Received Latest" narrative="Optional. The latest date to search to." stage="Received Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="flag" name="Include Read" narrative="Optional, default True" stage="Include Read" /><input type="flag" name="Include Unread" narrative="Optional, default True" stage="Include Unread" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Shared Email" stage="Shared Email" /></inputs><onsuccess>6b969896-5d1a-4f3c-9112-66df0d584150</onsuccess></stage><stage stageid="9d18dd85-49e7-4434-b66e-2f6bdedb4dad" name="Received Earliest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="135" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3fc67bd-0f5c-4d13-bb51-0b378401d726" name="Received Latest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="180" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f180ecf8-78fc-4b37-8a12-69b310abf874" name="Filter Expression" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b969896-5d1a-4f3c-9112-66df0d584150" name="Sender Name?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="[Sender Name]&lt;&gt;&quot;&quot;" /><ontrue>1eaeb40e-7ba5-4437-86fb-8490d10d7e99</ontrue><onfalse>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onfalse></stage><stage stageid="1eaeb40e-7ba5-4437-86fb-8490d10d7e99" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:sendername LIKE '&quot;&amp;Replace([Sender Name], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="cf1214bb-b7fd-4fec-ab0b-dde176bcca9a" name="Clean Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="330" /><onsuccess>2bc9f050-ac4b-4e53-833b-77f8fd75e0ab</onsuccess><calculation expression="Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="0a1a6586-94ea-4da3-a8af-cb1ea4a13659" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>f24225cb-32e2-4f31-b9f8-f75390a670a9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="747ae4c1-94e5-4288-a0cf-573663610ed9" name="Subject?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>0a1a6586-94ea-4da3-a8af-cb1ea4a13659</ontrue><onfalse>f24225cb-32e2-4f31-b9f8-f75390a670a9</onfalse></stage><stage stageid="4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20" name="Sender Email?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="[Sender Email]&lt;&gt;&quot;&quot;" /><ontrue>9153efb4-8f18-48c4-9833-9f3364eeea6a</ontrue><onfalse>747ae4c1-94e5-4288-a0cf-573663610ed9</onfalse></stage><stage stageid="9153efb4-8f18-48c4-9833-9f3364eeea6a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>747ae4c1-94e5-4288-a0cf-573663610ed9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:senderemail LIKE '&quot;&amp;Replace([Sender Email], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="a72f4464-acf3-4e70-825d-a0ae628fb772" name="Sender Name" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="-45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da4b8732-2d70-4ad2-8757-603e1aa7d769" name="Sender Email" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2bc9f050-ac4b-4e53-833b-77f8fd75e0ab" name="Filter Expression?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="375" /><decision expression="[Filter Expression]&lt;&gt;&quot;&quot;" /><ontrue>cf067e4c-9a82-41b9-acb9-9643cb195100</ontrue><onfalse>32bea08c-862f-440c-bc83-c05ca252286c</onfalse></stage><stage stageid="cf067e4c-9a82-41b9-acb9-9643cb195100" name="Prepend" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="375" /><onsuccess>32bea08c-862f-440c-bc83-c05ca252286c</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;[Filter Expression]" stage="Filter Expression" /></stage><stage stageid="b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=0&quot;" stage="Filter Expression" /></stage><stage stageid="e3df62cc-bf1a-4ea1-8c56-de279ca09c6b" name="Sent To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Sent To]&lt;&gt;&quot;&quot;" /><ontrue>efe53d68-d29a-4388-afbd-b2866cb03c87</ontrue><onfalse>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onfalse></stage><stage stageid="efe53d68-d29a-4388-afbd-b2866cb03c87" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displayto LIKE '&quot;&amp;Replace([Sent To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="3ac23120-2c22-4fc7-b0ef-bbbc45a030b1" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="4df1ab8f-9b5e-4224-976f-67c1073cabfb" name="Subject?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>3ac23120-2c22-4fc7-b0ef-bbbc45a030b1</ontrue><onfalse>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onfalse></stage><stage stageid="4cc56a65-c57b-4daa-86ed-8033d486e7b9" name="Copied To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Copied To]&lt;&gt;&quot;&quot;" /><ontrue>9533d2e4-6aa7-4fd8-84aa-328875bd17d3</ontrue><onfalse>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onfalse></stage><stage stageid="9533d2e4-6aa7-4fd8-84aa-328875bd17d3" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displaycc LIKE '&quot;&amp;Replace([Copied To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>e42900f2-2408-444c-b8c0-7077cfc7ab63</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Sent Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c" name="Earliest?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="IsDate([Sent Earliest])" /><ontrue>c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4</ontrue><onfalse>e42900f2-2408-444c-b8c0-7077cfc7ab63</onfalse></stage><stage stageid="e42900f2-2408-444c-b8c0-7077cfc7ab63" name="Latest" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="IsDate([Sent Latest])" /><ontrue>bbfb0329-e644-42ca-8e5b-91a771933be0</ontrue><onfalse>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onfalse></stage><stage stageid="bbfb0329-e644-42ca-8e5b-91a771933be0" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Sent Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f47c58b8-fa7d-43e4-9879-9489b3c45b64" name="Get Sent Items (Advanced)" type="SubSheetInfo"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Lists Sent Items matching the filter provided.

Eg1 [Subject]='Exception Report'

Eg2 [To]='Mike Colleague' OR [To]='Mike Coworker'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="120" /></stage><stage stageid="8eb9cd1f-4784-4a10-b9f5-9257375fa249" name="Start" type="Start"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [To]='Mike Colleague' AND [SentOn]&gt;='15 January 2018 09:00' AND [SentOn]&lt;='19 January 2018 17:00'" stage="Filter Expression" /><input type="text" name="Shared Email" stage="Shared Email" /></inputs><onsuccess>86fdf439-537b-402e-bf87-83a0aa0186aa</onsuccess></stage><stage stageid="0db44ad5-c704-4846-be43-d47afae7ddff" name="Item Count" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7038439e-d7a5-4958-a2a6-b7076ad6e877" name="Filter Expression" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8b0ade5-d70a-469c-b475-5e38be742df6" name="Outlook Folder ID" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="86fdf439-537b-402e-bf87-83a0aa0186aa" name="Internal_Get Items" type="SubSheet"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /><input type="text" name="Shared Email" expr="[Shared Email]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>9be25db3-9033-4941-81dc-97124e0e4917</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="9be25db3-9033-4941-81dc-97124e0e4917" name="End" type="End"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="f223606b-95bb-4058-9217-4ed244648a97" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>b846e5cd-ed99-489e-9671-08f3d63a07ff</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Received Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="020266f4-5352-4942-9ca5-2b5b2c28ba9e" name="Earliest?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="IsDate([Received Earliest])" /><ontrue>f223606b-95bb-4058-9217-4ed244648a97</ontrue><onfalse>b846e5cd-ed99-489e-9671-08f3d63a07ff</onfalse></stage><stage stageid="b846e5cd-ed99-489e-9671-08f3d63a07ff" name="Latest" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="IsDate([Received Latest])" /><ontrue>46ee2d04-b46b-4315-bd1a-abadb043b648</ontrue><onfalse>4d51e55a-9744-4090-b1d2-83bc995adeb5</onfalse></stage><stage stageid="46ee2d04-b46b-4315-bd1a-abadb043b648" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>4d51e55a-9744-4090-b1d2-83bc995adeb5</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Received Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="dd6e1514-fd6a-4d97-905d-55b4c8076300" name="Include Unread" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4931c0a2-5942-4727-aa8e-c354a58dc3d9" name="Include Read" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4d51e55a-9744-4090-b1d2-83bc995adeb5" name="Unread Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="225" /><decision expression="[Include Unread]=True AND [Include Read]=False" /><ontrue>b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9</ontrue><onfalse>1d38891a-a1cf-47ac-952b-2e4f9879a947</onfalse></stage><stage stageid="1d38891a-a1cf-47ac-952b-2e4f9879a947" name="Read Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="225" /><decision expression="[Include Read]=True AND [Include Unread]=False" /><ontrue>9ec12e81-08b4-4b01-a8ea-02ed52fafbf6</ontrue><onfalse>b8b8afa2-e3b6-490d-b4d1-b636fc831a96</onfalse></stage><stage stageid="9ec12e81-08b4-4b01-a8ea-02ed52fafbf6" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="270" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=1&quot;" stage="Filter Expression" /></stage><stage stageid="b8b8afa2-e3b6-490d-b4d1-b636fc831a96" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="225" w="10" h="10" /><onsuccess>faa2ec03-a715-4589-a137-e014002ddca2</onsuccess></stage><stage stageid="faa2ec03-a715-4589-a137-e014002ddca2" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="330" w="10" h="10" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess></stage><stage stageid="59dcb54a-0ca1-49a8-9543-3581d721886e" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="330" w="10" h="10" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess></stage><stage stageid="fd8830ea-eced-4fa2-8bbb-3537fca5a68b" name="Get Received Items (Expert)" type="SubSheetInfo"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Lists Inbox Items matching the filters provided.

Eg1 @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND urn:schemas:httpmail:read=0

Eg2 @SQL=urn:schemas:httpmail:fromname='The Boss' AND urn:schemas:httpmail:subject LIKE '%Urgent%'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fcb20265-28c5-415d-a083-d217916df151" name="Start" type="Start"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /><input type="text" name="Shared Email" stage="Shared Email" /></inputs><onsuccess>4828b977-8cfe-494b-9d2a-5ac65c8b6834</onsuccess></stage><stage stageid="b0aadff2-6a6a-4209-aea3-5c4ad4d2161d" name="Item Count" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea0ad1b6-12ef-43fb-b290-11b329c2ca27" name="Filter Expression" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef288d41-1da1-46bc-ad92-e063e9e51137" name="Outlook Folder ID" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="4828b977-8cfe-494b-9d2a-5ac65c8b6834" name="Internal_Get Items" type="SubSheet"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="[Sub Folder]" /><input type="text" name="Shared Email" expr="[Shared Email]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>829daa3f-c9ac-41b0-b6c9-39caf538c87e</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="829daa3f-c9ac-41b0-b6c9-39caf538c87e" name="End" type="End"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d2fdf5b2-86dd-4f37-86cb-4bc8cc7b80b9" name="Sub Folder" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c56f0cd2-e7f6-4a5d-a859-901d8bd2b9a1" name="Mark Email As Read" type="SubSheetInfo"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>Marks a specific email as read.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="649120fc-a08c-44c6-949e-01c69a4c4d56" name="Start" type="Start"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>55267a5b-cc4a-4cc5-b141-a7c9a032924a</onsuccess></stage><stage stageid="af27f0d8-4b35-4ebb-a259-04758f73dcc3" name="End" type="End"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="55267a5b-cc4a-4cc5-b141-a7c9a032924a" name="Mark Read" type="Code"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>af27f0d8-4b35-4ebb-a259-04758f73dcc3</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = False]]></code></stage><stage stageid="84646f19-6d1f-4d92-a977-3058f4c582ff" name="Entry ID" type="Data"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b9646e7-1b30-4f67-833a-3121344437ab" name="Mark Email As Unread" type="SubSheetInfo"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>Marks a specific email as unread.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4868521a-c295-4724-960a-b8a60dceae6c" name="Start" type="Start"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa</onsuccess></stage><stage stageid="2b8b0ae1-c806-485b-9b87-0875c17ba062" name="End" type="End"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa" name="Mark Unread" type="Code"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>2b8b0ae1-c806-485b-9b87-0875c17ba062</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = True]]></code></stage><stage stageid="9e08a8d3-4d6c-49e8-856f-664eb6e5e175" name="Entry ID" type="Data"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7643fd53-5368-45a9-8412-89b5d574c204" name="Items" type="Collection"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="4c60b4ac-e0f8-4ef7-870d-f88f5a6edade" name="Items" type="Collection"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="4ee04419-4388-4a3a-87f2-06fbe4585fdf" name="Items" type="Collection"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="120" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="c7be666f-19fe-421d-bb4d-95085817f37e" name="Items" type="Collection"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="195" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="ecaed312-c8a9-4755-b673-bdf8ce1ba59d" name="Items" type="Collection"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="135" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="2d58da80-f8b4-414e-80bb-2d87d9ce0cc4" name="Items" type="Collection"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="135" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="dc080a71-625d-45b0-bf8d-1cf2a77b3b48" name="Note2" type="Note"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative>NOT FOR PUBLICATION</narrative><display x="15" y="-135" w="150" h="30" /><font family="Segoe UI" size="20" style="Regular" color="FF0000" /></stage><stage stageid="0b72d21e-2753-42b8-846a-bae349f2c179" name="Message" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c46c352-79de-438b-9ce3-422dcc0fb10b" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>a3d2888f-df21-47e3-8405-7f6f4564a71b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b" name="Message?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>0c46c352-79de-438b-9ce3-422dcc0fb10b</ontrue><onfalse>a3d2888f-df21-47e3-8405-7f6f4564a71b</onfalse></stage><stage stageid="9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f24225cb-32e2-4f31-b9f8-f75390a670a9" name="Message?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a</ontrue><onfalse>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onfalse></stage><stage stageid="b4632ee7-bf2b-4b55-9dca-e9a7fafca663" name="Message" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a24cb43c-102d-4964-a916-09e44168a4c1" name="Input" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1fdeae66-adae-4ae5-bf8d-61ddb71fc904" name="Output" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="48aa1db4-2765-4c9e-a7b6-fb0989ed93f3" name="Subject" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8eb18cc7-2d34-4dba-bcd7-32cd82d688c9" name="Input" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e48a94c8-7d5d-40ad-89d8-4d953b6791c3" name="Output" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="94557554-0d80-4cc4-ae14-8806264969e5" name="Input" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="416d4ee0-5f16-4282-bec4-42328e03acb4" name="Output" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="42b922f9-dd32-475f-a8ec-67ad770ce8ad" name="Input" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e6d1a1b7-3b51-4ee1-8756-585e34aa936d" name="Output" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="71f3829b-c755-4e45-a175-c3b7075af273" name="Input" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e7e22486-0749-492f-8e67-586aa2c271ab" name="Output" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="1846bfcf-e7b1-48ca-83fe-bd2b5a1bcbeb" name="Input" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5cd2cea7-99cf-42af-b4eb-7cf6b2d62958" name="Output" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="e33d69e8-faec-46fc-a225-2ac747bddd65" name="Input" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49f3281d-7765-48aa-8547-fc87ba0bd110" name="Output" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="5cfc97b8-86c5-4a5b-ae62-71e55abd988d" name="Input" type="Block"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="73da0a90-8718-4f31-a8dd-2a56a45265ed" name="Input" type="Block"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-270" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ec957629-3e89-4cd3-963b-fb0ab19dc116" name="Input" type="Block"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-240" y="30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bbd7d428-080a-47f0-8431-837da5d25290" name="Input" type="Block"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e15d0e55-ef6a-4836-bdb5-3ccf92b362fa" name="Input" type="Block"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="-270" y="0" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e470b377-ed2e-449e-b7b1-5954285a57c1" name="Input" type="Block"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d24d2f3f-a3dd-4e54-8c2e-dd886cb74e42" name="Input" type="Block"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="07fac98a-a954-4be7-9aff-79b761ec658d" name="Input" type="Block"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="023dcb4e-5dbd-4015-a4a4-d9825ca509b2" name="Input" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="45c2b8cf-a653-4a26-bc25-a2009c8d3501" name="Input" type="Block"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ad7ba6e4-ef09-4fac-9dea-f535bb81aac2" name="Input" type="Block"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dd8c58ce-3a4e-44a6-b4d8-248309fac791" name="Default" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="120" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="63823440-c2ee-48b1-a2db-527efc5b94f7" name="Note3" type="Note"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-45" w="480" h="210" /></stage><stage stageid="528d4d34-61bc-4a7b-b329-4bda0e6309fa" name="Note4" type="Note"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="702f380f-35f2-4112-95d8-cdc6a3521101" name="Note3" type="Note"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-60" w="480" h="210" /></stage><stage stageid="13bf2bea-2785-44ac-bda2-1e04f3c2a1e1" name="Note4" type="Note"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="b1663b58-d99f-4f8e-9641-4b3db50ca615" name="Clean Up" type="Calculation"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-75" /><onsuccess>d9a607b6-73e8-49ec-b2bc-a8032c0ab747</onsuccess><calculation expression="Replace([File Name],&quot;&quot;&quot;&quot;,&quot;&quot;)" stage="File Name" /></stage><stage stageid="80208144-c05c-4b32-bd6a-de8320da32e5" name="New Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9802fc5c-141b-44d8-8dd6-dd5f029b23de" name="Shared Email" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-480" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41e18769-0eeb-4fb9-9325-b87443c6dae2" name="Shared Email" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-420" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="916e9e23-a6ab-47e5-bd01-a9bb1cb9574c" name="Shared Email" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-360" y="180" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dff071c0-ed0c-4164-8f6f-4e5868278a67" name="Shared Email" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-330" y="375" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f28af015-8de3-489c-958f-c6cc9a4602d5" name="Shared Email" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="165" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa4b0bd8-0d7d-4efa-9956-b49f9ba61ee7" name="Shared Email" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="165" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdfba55e-7fbb-403c-bce3-311fe58fa808" name="Shared Email" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="135" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dcc7ac6f-29e5-4841-b503-99c05c87edac" name="Attachments" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-60" y="-165" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="515c2352-3631-46e5-b1c2-ef37a846689d" name="Outlook VBO Modified" xmlns="http://www.blueprism.co.uk/product/process"><process name="Outlook VBO Modified" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Business Object for interacting with Microsoft Outlook email functions" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>ec75c4f1-6276-470b-b23f-9a88eb7a0f96</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-195</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="The Object requires a MS interop runtime DLL &quot;Microsoft.Office.Interop.Outlook.dll&quot; to be installed in order to run. This DLL can be installed as an optional feature using the Blue Prism installer." /></preconditions><endpoint narrative="" /><subsheet subsheetid="810b21b7-6b6b-4c7b-be10-b0c5f2911afc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>-182</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e0b58522-643b-42ad-8fdd-4cb5246c5558" type="Normal" published="True"><name>Send Email</name><view><camerax>-98</camerax><cameray>7</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="78125029-0b28-4ee1-a064-c3a9e70ad7ca" type="Normal" published="True"><name>Reply All to Email</name><view><camerax>-25</camerax><cameray>-55</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f6f16944-bdad-4ff4-a5df-b687b904183c" type="Normal" published="True"><name>Reply to Email</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9bf4e24d-5759-4357-97f1-adc1c08c843a" type="Normal" published="True"><name>Forward Email</name><view><camerax>-191</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e6fb66c-9607-4731-829c-e3dfd4510a95" type="Normal" published="True"><name>Save Email As File</name><view><camerax>21</camerax><cameray>122</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5734e4af-7917-40d8-b0b6-83d8e1872074" type="Normal" published="True"><name>Delete Email</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="204201c2-30d3-467a-b6fb-4e0010b046af" type="Normal" published="True"><name>Mark Email As Read</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2d1820f0-98e4-4a10-8361-8f5322babcee" type="Normal" published="True"><name>Mark Email As Unread</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="61b6fc18-b98a-4456-9381-8c8cfe9f6f60" type="Normal" published="True"><name>Move Email to Inbox Sub Folder</name><view><camerax>-8</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="758f4938-75a1-4157-b0f7-2d9b99144d61" type="Normal" published="True"><name>Save Attachments</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f" type="Normal" published="True"><name>Save Attachment</name><view><camerax>20</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7aafcecd-5e8f-49d4-9987-73958f3cedc3" type="Normal" published="True"><name>Get Sent Items (Basic)</name><view><camerax>27</camerax><cameray>198</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d9c8a6c7-f973-45af-b333-8166a34297c7" type="Normal" published="True"><name>Get Sent Items (Advanced)</name><view><camerax>143</camerax><cameray>30</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="43fde12c-9d96-4cdd-a342-88204c037438" type="Normal" published="True"><name>Get Sent Items (Expert)</name><view><camerax>-42</camerax><cameray>4</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="a2bc0172-492f-4781-b7ed-1f1d550da3ba" type="Normal" published="True"><name>Get Received Items (Basic)</name><view><camerax>103</camerax><cameray>189</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f28aad59-a89a-4a9c-98ab-d31d6b69d9a5" type="Normal" published="True"><name>Get Received Items (Advanced)</name><view><camerax>-33</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ea004198-e1fb-44bc-b549-bf8f7fa06631" type="Normal" published="True"><name>Get Received Items (Expert)</name><view><camerax>49</camerax><cameray>-101</cameray><zoom version="2">1.5625</zoom></view></subsheet><subsheet subsheetid="fb0dd28d-2875-4ec6-b6d5-475120ac222c" type="Normal" published="False"><name>Internal_Get Items</name><view><camerax>-91</camerax><cameray>4</cameray><zoom version="2">1.5625</zoom></view></subsheet><stage stageid="72d471a3-047f-457c-b72a-b8026ed0c984" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5</onsuccess></stage><stage stageid="2f4e925d-3b3b-4bbb-b2db-a1e713c23ee5" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="bf10fbf6-c2a1-4b51-9a5b-9919863cc24b" name="Stage1" type="ProcessInfo"><display x="-180" y="-15" w="150" h="210" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.Office.Interop.Outlook.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.VisualBasic</import><import>Microsoft.Win32</import><import>Microsoft.Office.Interop.Outlook</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="0e25d23b-b518-4ba3-989e-4adf589c7dd3" name="Clean Up" type="SubSheetInfo"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a9d4d214-a0e7-4383-8e44-7a4f068d71cd" name="Start" type="Start"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>253513b1-e08e-49b0-a789-fb3659eeb650</onsuccess></stage><stage stageid="253513b1-e08e-49b0-a789-fb3659eeb650" name="End" type="End"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7d086243-ce98-49a9-8674-b8ca5349db4c" name="Note1" type="Note"><subsheetid>810b21b7-6b6b-4c7b-be10-b0c5f2911afc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="8c3c4d09-dac0-411e-8e05-4db606c12164" name="Save Email As File" type="SubSheetInfo"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>Stores a specified email as a ".msg" file on any file location (file path).

The Entry ID is the unique idenfier used to determine which email is to be saved.</narrative><display x="-195" y="-75" w="150" h="120" /></stage><stage stageid="2ff43150-6180-4cff-bf98-fd8d855bdbf9" name="Start" type="Start"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="File Path" narrative="Mandatory. The destination file path. Default blank." stage="File Path" /><input type="text" name="File Name" narrative="Mandatory. The File Name for the stored Email." stage="File Name" /></inputs><onsuccess>7287aac3-f380-41fd-99ed-1308db516359</onsuccess></stage><stage stageid="0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef" name="End" type="End"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="7287aac3-f380-41fd-99ed-1308db516359" name="Save As" type="Code"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><onsuccess>0ab2dc8d-39a7-4788-b7d2-7e6ff62b4cef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.SaveAs (File_Path & File_Name & ".msg")]]></code></stage><stage stageid="0d8dbc79-fe44-41e3-a7a5-5b60b74fa2cf" name="File Path" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15416548-42aa-42e9-8a36-49d19e45e678" name="Internal_Get Items" type="SubSheetInfo"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Sub function used by multiple actions within VBO. Do not change or publish.

Uses the Restrict method to create a filtered list of folder items. Not intended for publication.

</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6573dfb-b844-470c-bfe7-73c863da28d4" name="Start" type="Start"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="-90" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" stage="Outlook Folder ID" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." stage="Sub Folder" /></inputs><onsuccess>d9ef3bca-bf49-4f84-9d4c-b3648951f323</onsuccess></stage><stage stageid="26935ec9-3f33-4a4d-982c-0e6b0a5edbc2" name="End" type="End"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="105" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d9ef3bca-bf49-4f84-9d4c-b3648951f323" name="Get Items" type="Code"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Sub Folder" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" stage="Items" /><output type="number" name="Item Count" stage="Item Count" /></outputs><onsuccess>26935ec9-3f33-4a4d-982c-0e6b0a5edbc2</onsuccess><code><![CDATA[

Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)

If Sub_Folder <> "" Then
	For each name as string in Sub_Folder.Split("\")
	folder = folder.Folders(name)
	Next
End If

'See https://msdn.microsoft.com/en-us/library/office/aa210946(v=office.11).aspx
'for mail item properties
Dim dataTable As New Data.DataTable
dataTable.Columns.Add("EntryID", Type.GetType("System.String"))
dataTable.Columns.Add("To", Type.GetType("System.String"))
dataTable.Columns.Add("CC", Type.GetType("System.String"))
dataTable.Columns.Add("Subject", Type.GetType("System.String"))
dataTable.Columns.Add("Body", Type.GetType("System.String"))
dataTable.Columns.Add("Attachments", Type.GetType("System.String"))
dataTable.Columns.Add("ReceivedOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SentOn", Type.GetType("System.DateTime"))
dataTable.Columns.Add("SenderName", Type.GetType("System.String"))
dataTable.Columns.Add("SenderEmailAddress", Type.GetType("System.String"))
dataTable.Columns.Add("Unread", Type.GetType("System.Boolean"))

Dim folderItems = If(Filter_Expression <> "", folder.Items.Restrict(Filter_Expression), folder.Items)

For Each item As Object In folderItems
	If Not TypeOf item Is MailItem Then Continue For
	Dim row As Data.DataRow = dataTable.NewRow
	row("EntryID") = item.EntryID
	row("To") = item.To
	row("CC") = item.CC
	row("Subject") = item.Subject
	row("Body") = item.Body
	
	Dim attachments As String = ""
	For Each attachment As Object In item.Attachments
        If attachment.Type = 1 Then
			attachments = attachments & "|" & attachment.DisplayName
		End If
	Next
	
	row("Attachments") = If (attachments.Length = 0, "", attachments.SubString(1))
	row("SentOn") = item.SentOn
	row("ReceivedOn") = item.ReceivedTime
	row("SenderName") = item.SenderName
	row("SenderEmailAddress") = If (item.SenderEmailType = "EX",item.Sender.GetExchangeUser.PrimarySmtpAddress,item.SenderEmailAddress)
	row("Unread") = item.Unread
	dataTable.Rows.Add(row)
	Item_Count += 1
Next
Items = dataTable]]></code></stage><stage stageid="301b8904-3bcd-4b1b-805a-0a190d6a1f23" name="Item Count" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="563eaaf3-d093-48a1-89fe-5b6dcc312f81" name="Filter Expression" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d314f7c0-0af6-4cc5-a2e1-1b2cb29674d9" name="Entry ID" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5106a0ab-6cbb-410f-9e0d-113791019ded" name="Get Received Items (Advanced)" type="SubSheetInfo"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Lists Inbox items matching the filter provided

Eg1 [From]='Mike Coworker' AND [unread]=False

Eg2 [Unread]=True AND [ReceivedTime] &gt;= '2018/01/01'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="38a5b9e1-f5ae-4293-96b5-8e39f6ddad5f" name="Start" type="Start"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /></inputs><onsuccess>bb657ac6-ea98-4042-8df8-0bfec4fe5f42</onsuccess></stage><stage stageid="88b1aeeb-8765-4f0c-98b3-a64aa3effa2c" name="Item Count" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9952465-1c95-422d-9bfe-1735745d3012" name="Filter Expression" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d97db59-defd-4f2b-80a0-50ae2c87c68e" name="Outlook Folder ID" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="bb657ac6-ea98-4042-8df8-0bfec4fe5f42" name="Internal_Get Items" type="SubSheet"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>87fa8e80-f1f1-4329-8256-0224c2a2164c</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="036baecd-65dc-4916-9438-165b479478b1" name="Outlook Folder ID" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="7c584784-b258-4700-ae02-482668348ae9" name="Get Sent Items (Expert)" type="SubSheetInfo"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Lists Sent Items matching the query provided.

Eg1 @SQL=urn:schemas:httpmail:subject='Data Input'

Eg2 @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')"

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ecc59d78-3d95-4f68-8f6d-7dfa2ad7c6d4" name="Start" type="Start"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /></inputs><onsuccess>ef7b49fa-9e40-4ce5-b6ac-67e5c3171164</onsuccess></stage><stage stageid="68c67a7a-d81f-4def-823b-761b317fc9f5" name="Item Count" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78a90b2a-607e-4d8d-8f04-7c3a81e8bf63" name="Filter Expression" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="920c79f3-90b3-487b-a30c-4e95162d5ecb" name="Outlook Folder ID" type="Data"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="ef7b49fa-9e40-4ce5-b6ac-67e5c3171164" name="Internal_Get Items" type="SubSheet"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>88475529-0d3e-40b9-8ead-79cedfbdf8c6</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="89de27c3-f759-42a1-956d-49dc91baa367" name="Send Email" type="SubSheetInfo"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><narrative>Sends an Email </narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2f285e28-d6bb-4e7b-be7b-2631c3a8ac84" name="End" type="End"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="120" /></stage><stage stageid="79296089-edc5-4338-bf95-6734ad47825d" name="Send Item" type="Code"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Attachments" expr="[Attachments]" /><input type="flag" name="Message Is HTML" expr="[Message Is HTML]" /></inputs><onsuccess>2f285e28-d6bb-4e7b-be7b-2631c3a8ac84</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim mail = app.CreateItem(0)
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve  
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next 
	
End if

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC 
	Next

End If

If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.Subject = Subject
mail.HTMLBody = Message

For Each att As String In Attachments.Split(";"c)
	If att = "" Then Continue For
	mail.Attachments.Add(att)
Next

mail.Save
mail.Send

]]></code></stage><stage stageid="e8e74832-24e7-4d9b-977d-f3720a5f58a3" name="Subject" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9254c70d-8233-413f-a7c8-5b920c8d7595" name="To" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c4cefa2-e465-4d3a-adae-410a8e2d6b73" name="Message" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3106293e-e64d-4d13-9671-b39e8c6be771" name="Attachments" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9418ede2-db6d-4912-bcd8-209a495359dc" name="Save Attachments" type="SubSheetInfo"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>Downloads all attachments to a folder. 

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f3f87040-02dc-44e3-94ac-4e94444ce722" name="End" type="End"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2e36171f-a7a2-4de1-b778-bd029753aad5" name="Start" type="Start"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Pattern" narrative="File Pattern" stage="File Pattern" /></inputs><onsuccess>0ec3c501-009c-4736-9511-3b84c98dcc66</onsuccess></stage><stage stageid="0ec3c501-009c-4736-9511-3b84c98dcc66" name="Save Attachments" type="Code"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Folder Path" expr="[Folder Path]" /><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="File Pattern" expr="[File Pattern]" /></inputs><onsuccess>f3f87040-02dc-44e3-94ac-4e94444ce722</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
If item Is Nothing Then Return

If Not Folder_Path.EndsWith("\") Then Folder_Path &="\"

For Each attachment As Object In item.Attachments
	If attachment.Type = 1 AndAlso attachment.FileName Like File_Pattern Then
		attachment.SaveAsFile(Folder_Path & attachment.FileName)
	End If
Next
]]></code></stage><stage stageid="38d69990-6a5f-40ce-a4bb-541e49726b64" name="Folder Path" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9f357ec6-15f4-4133-8da8-5061d4359d38" name="Entry ID" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a88d805-9f51-4298-9905-cb28610dae96" name="File Pattern" type="Data"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">*.*</initialvalue><private /><alwaysinit /></stage><stage stageid="ad2e31ff-e5ef-4467-a348-13dc9a8a1acb" name="Save Attachment" type="SubSheetInfo"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>Downloads a specfic attachment to a folder. E.g. use cases are "*.txt" or "*.docx" etc.

The Entry ID is the unique idenfier used to determine which email is to be actioned.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a8e9b1e1-4b0f-487d-89a5-6cacb4092be4" name="End" type="End"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="2d1786e1-24e4-45da-b52c-bffa330fb007" name="Start" type="Start"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." stage="Folder Path" /><input type="text" name="File Name" narrative="Optional, Default value is *.* but common cases inlcude &quot;.docx&quot; , &quot;.pdf&quot; , &quot;.xlsx&quot; etc." stage="File Name" /></inputs><onsuccess>b1663b58-d99f-4f8e-9641-4b3db50ca615</onsuccess></stage><stage stageid="d2e8f631-485a-489a-8cbc-aac247d721f9" name="Folder Path" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7649073-c4eb-42b1-aaa4-7c50430a5cf3" name="Entry ID" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9b7a4371-4fa0-4a3e-a132-5315118f7cae" name="File Name" type="Data"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9a607b6-73e8-49ec-b2bc-a8032c0ab747" name="Save Attachments" type="SubSheet"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." expr="[Entry ID]" /><input type="text" name="Folder Path" narrative="Mandatory. The destination folder path for the attachments to be stored. Example &quot;C:\Temp&quot;." expr="[Folder Path]" /><input type="text" name="File Pattern" narrative="File Pattern" expr="[File Name]" /></inputs><onsuccess>a8e9b1e1-4b0f-487d-89a5-6cacb4092be4</onsuccess><processid>758f4938-75a1-4157-b0f7-2d9b99144d61</processid></stage><stage stageid="16e667f4-007c-48aa-91ad-4f253b96fc00" name="CC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc158b15-69a9-4850-a4e2-d67f53c55d87" name="BCC" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="983656a5-d686-4ef0-ab54-aa50aa32e7d5" name="Delete Email" type="SubSheetInfo"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>Deletes a specific email item.

The Entry ID is the unique idenfier used to determine which email is to be deleted.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5f395532-0166-41e3-9087-6eb241347133" name="Start" type="Start"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>29bbbced-f689-4200-b43b-27e7b01a3c5d</onsuccess></stage><stage stageid="a191ef9e-e78a-4de9-901b-19e7ca766c72" name="End" type="End"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="29bbbced-f689-4200-b43b-27e7b01a3c5d" name="Delete" type="Code"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>a191ef9e-e78a-4de9-901b-19e7ca766c72</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Delete]]></code></stage><stage stageid="2d8d8f32-8e9d-49fc-a345-a25e3050ecac" name="Entry ID" type="Data"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1dcba3a-0e74-4632-809f-7b942c719eeb" name="Reply All to Email" type="SubSheetInfo"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>Reply to all Emails recipients of a specific email.

The &lt;Reply All to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><display x="-195" y="-60" w="150" h="120" /></stage><stage stageid="91e5fe6f-95fe-4c43-aac6-317ccb565fa8" name="End" type="End"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="719856cc-820a-4771-b362-9f0d98896f7b" name="Start" type="Start"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96</onsuccess></stage><stage stageid="a5f3fe96-39cd-4d2f-ad7f-a03fe9295f96" name="Reply All" type="Code"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /></inputs><onsuccess>91e5fe6f-95fe-4c43-aac6-317ccb565fa8</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.ReplyAll

reply.Subject = item.Subject
reply.HTMLBody = Message & vbCrLf & item.HTMLBody
reply.Send]]></code></stage><stage stageid="c0de4880-e914-4cbd-9b40-fd4b87639b56" name="Entry ID" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4aa3eccc-d10e-460b-96ce-82f3d86a5c36" name="Message" type="Data"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="502b5d9b-0ef4-4f7d-9e45-2740f2866f3a" name="Forward Email" type="SubSheetInfo"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>Forward Email to recipients (To/CC/BCC) including (Message) as input parameters.

The &lt;Forward Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><display x="-195" y="-45" w="150" h="150" /></stage><stage stageid="d398f6bf-9903-432b-9d08-93ca68a5ce15" name="End" type="End"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b5542c2e-3ef3-4636-82e6-10fcb6b9f5ef" name="Entry ID" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="195" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd6ecc76-eb50-4203-95cd-c77e9fcf2ad5" name="Message" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9886ff21-e65d-440d-b60a-9869153650be" name="Forward" type="Code"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="To" expr="[To]" /><input type="text" name="CC" expr="[CC]" /><input type="text" name="BCC" expr="[BCC]" /><input type="text" name="Message" expr="[Message]" /><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>d398f6bf-9903-432b-9d08-93ca68a5ce15</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim mail = item.Forward
Dim addressCount As Integer

If [To] <> "" Then
	Dim toAddresses = Split([To], ";")
	For addressCount = LBound(toAddresses) To UBound(toAddresses)
	Dim recipient = mail.Recipients.Add(toAddresses(addressCount)) 
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olTo
	Next

End If

If CC <> "" Then
	Dim ccAddresses = Split([CC], ";")
	addressCount = 0
	For addressCount = LBound(ccAddresses) To UBound(ccAddresses)
	Dim recipient = mail.Recipients.Add(ccAddresses(addressCount))
	recipient.Resolve	
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olCC
	Next

End If
	
If BCC <> "" Then
	Dim bccAddresses = Split([BCC], ";")
	addressCount = 0
	For addressCount = LBound(bccAddresses) To UBound(bccAddresses)
	Dim recipient = mail.Recipients.Add(bccAddresses(addressCount))
	recipient.Resolve
	If recipient.Resolved Then recipient.Type = OlMailRecipientType.olBCC
	Next

End If

mail.HTMLBody = Message & vbCrLf & mail.HTMLBody
mail.Save
mail.Send]]></code></stage><stage stageid="9a9158e0-2caf-4e8b-8277-bcfa3f0b8565" name="To" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-195" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fba137b6-ad3b-48a5-b887-6302a10956ec" name="CC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d683ac76-a352-4994-89a5-d8a249f84648" name="BCC" type="Data"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><display x="-195" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5ed52409-4c74-4cd4-8b16-9e9d057097b4" name="Start" type="Start"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>9886ff21-e65d-440d-b60a-9869153650be</onsuccess></stage><stage stageid="276590e9-5fa1-42bb-8bb0-3640cd595e46" name="Message Is HTML" type="Data"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c36190da-7569-4737-a401-bec5b006c53f" name="Start" type="Start"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" narrative="Mandatory. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;" stage="To" /><input type="text" name="CC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="CC" /><input type="text" name="BCC" narrative="Optional. Any alphanumeric value allowed. Single Recipient = &quot;Name1@emaill.com&quot;; Multi Recipient = &quot;Name1@emaill.com; Name2@email.com&quot;. Default blank" stage="BCC" /><input type="text" name="Subject" narrative="Optional. Any alphanumeric value allowed." stage="Subject" /><input type="text" name="Message" narrative="Optional, HTML or plain text" stage="Message" /><input type="text" name="Attachments" narrative="Optional, Comma-separated file paths. Default blank." stage="Attachments" /></inputs><onsuccess>79296089-edc5-4338-bf95-6734ad47825d</onsuccess></stage><stage stageid="6e74a6d0-d073-418d-bcee-5efe9f5733bb" name="Sub Folder" type="Data"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="df4f0bad-ced5-4315-8edc-e3138d7a7123" name="Sub Folder" type="Data"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80516df7-3359-4f2c-8547-9312e5b237c2" name="Items" type="Collection"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><display x="-195" y="135" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="88475529-0d3e-40b9-8ead-79cedfbdf8c6" name="End" type="End"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="87fa8e80-f1f1-4329-8256-0224c2a2164c" name="End" type="End"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="93f4c073-8a54-4ee0-9b01-776c516fec9d" name="Reply to Email" type="SubSheetInfo"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>Reply to Email sender of a specific email.

The &lt;Reply to Email&gt; action will only call one ID specific (Entry ID) email item. 

If multiple emails are expected to be called, the process design would need to reflect that requirement.</narrative><display x="-165" y="-60" w="150" h="120" /></stage><stage stageid="7273229e-a2d0-4468-a343-efaf656b1598" name="End" type="End"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="f68ab080-2e34-44d9-93af-67409139a21d" name="Start" type="Start"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Message" narrative="Mandatory, Any alphanumeric value allowed. HTML or plain text." stage="Message" /></inputs><onsuccess>52a97793-74c5-49d7-b4fc-55d03d5b81a2</onsuccess></stage><stage stageid="52a97793-74c5-49d7-b4fc-55d03d5b81a2" name="Reply" type="Code"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Message" expr="[Message]" /></inputs><onsuccess>7273229e-a2d0-4468-a343-efaf656b1598</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
Dim reply = item.Reply

reply.Subject = item.Subject
reply.HTMLBody = Message & vbCrLf & item.HTMLBody
reply.Send
]]></code></stage><stage stageid="b129ab89-df26-4975-a3b1-30127f6e78af" name="Entry ID" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-165" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="34d6dbc0-3597-4b72-8a65-5a90f164b75a" name="Message" type="Data"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><display x="-165" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da3ecbf5-d75b-47d2-90f4-fa09e80b656b" name="Move Email to Inbox Sub Folder" type="SubSheetInfo"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>Moves an email to a subfolder within the inbox folder.

The Entry ID is the unique idenfier used to determine which email is to be moved.

Example
Inbox to Inbox\SubFolder </narrative><display x="-180" y="-60" w="150" h="120" /></stage><stage stageid="9033fc52-da65-4e8d-92a5-b67a33a0379a" name="Start" type="Start"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /><input type="text" name="Destination Folder" narrative="Mandatory. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Destination Folder" /></inputs><onsuccess>3fa82add-9fd2-4264-8fbe-02536dae2237</onsuccess></stage><stage stageid="5461bd38-d7d7-4a3c-b23b-35857aa8a5ef" name="End" type="End"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="New Entry ID" narrative="Returns the new Entry ID from the Moved Email Object" stage="New Entry ID" /></outputs></stage><stage stageid="3fa82add-9fd2-4264-8fbe-02536dae2237" name="Move" type="Code"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /><input type="text" name="Destination Folder" expr="[Destination Folder]" /><input type="text" name="Outlook Folder ID" expr="[Outlook Folder ID]" /></inputs><outputs><output type="text" name="New Entry ID" stage="New Entry ID" /></outputs><onsuccess>5461bd38-d7d7-4a3c-b23b-35857aa8a5ef</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")
Dim folder = _nameSpace.GetDefaultFolder(Outlook_Folder_ID)
Dim item = _nameSpace.GetItemFromID(Entry_ID)

If Destination_Folder <> "" Then
	For each name as string in Destination_Folder.Split("\")
	folder = folder.Folders(name)
	Next
End If

New_Entry_ID = item.Move(folder).EntryID]]></code></stage><stage stageid="18da11cb-f313-4820-b7e7-8c9bd6f12675" name="Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-180" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41304024-3f20-476e-b6bf-1e12ff6ead9a" name="Outlook Folder ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><narrative>MS Outlook - OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-180" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="9d9afabb-e65b-471a-8a66-913480436037" name="Destination Folder" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa9964be-3e71-4206-88f6-74e09c1f1415" name="File Name" type="Data"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><display x="-195" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30cb5e90-86c2-4790-9204-89ddbd70d778" name="Get Sent Items (Basic)" type="SubSheetInfo"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Lists Sent Items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4070f66-8405-4c2f-87f1-4d34a75561b8" name="Start" type="Start"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sent To" narrative="Optional. The To display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Sent To" /><input type="text" name="Copied To" narrative="Optional. The CC display name, which might be a name (eg John Smith), an email address (eg admin@client.com), or a semi-colon separated list (eg John Smith; Ann Jones; admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the To field." stage="Copied To" /><input type="datetime" name="Sent Earliest" narrative="Optional. The earliest date to search from." stage="Sent Earliest" /><input type="datetime" name="Sent Latest" narrative="Optional. The latest date to search to." stage="Sent Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /></inputs><onsuccess>69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c</onsuccess></stage><stage stageid="905b5da3-5ab3-4c57-8c5f-33ed85e5c4a8" name="Item Count" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="97127f0f-f77c-4b85-9c18-18e6556fbfa4" name="Outlook Folder ID" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="5097438d-04b5-4688-9fd5-c93dbe0d26c4" name="Internal_Get Items" type="SubSheet"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="285" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>20b10fc6-ced8-4cf1-b991-19fbff8e181a</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="20b10fc6-ced8-4cf1-b991-19fbff8e181a" name="End" type="End"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="345" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="2fc294dd-0be1-48ae-85b7-f811d7015b19" name="Filter Expression" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29639c3b-dcc7-4427-bc90-57319d2ae6e8" name="Sent Earliest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="-45" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28d1cc10-ae57-4ea2-b01c-b9a8bded12ad" name="Sent Latest" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="0" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3d2888f-df21-47e3-8405-7f6f4564a71b" name="Clean" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="240" /><onsuccess>5097438d-04b5-4688-9fd5-c93dbe0d26c4</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="b1ccbeb8-4c66-4932-a81f-c8c55c156731" name="Copied To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67f7a5fe-f2d5-480e-be1c-6a18d5a79508" name="Sent To" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c54a3bb-1c08-4f3e-9ab2-3ceae0478554" name="Get Received Items (Basic)" type="SubSheetInfo"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Lists Inbox items matching the parameters provided</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b5946711-b185-44bd-b97e-cfe91f9b05a2" name="Item Count" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="240" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32bea08c-862f-440c-bc83-c05ca252286c" name="Internal_Get Items" type="SubSheet"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="420" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>717dbab6-6472-4f2d-9370-0ae2d5893829</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="cc00500b-17df-437f-816e-59bd2b9b6a11" name="Outlook Folder ID" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="0a3d1d6c-696a-4e50-a124-af43552a1c59" name="Sub Folder" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="717dbab6-6472-4f2d-9370-0ae2d5893829" name="End" type="End"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="480" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="fa7fc102-6824-4d83-9171-9b36913fb323" name="Subject" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0149c9d2-5846-4f23-8eb9-e639be1f7435" name="Start" type="Start"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sender Name" narrative="Optional. The From display name, which might be a name (eg John Smith) or email address (eg admin@client.com). Asterisk wildcard permitted, eg *John Smith* for any mail where the text 'John Smith' appears in the From field." stage="Sender Name" /><input type="text" name="Sender Email" narrative="Optional. The sender email address." stage="Sender Email" /><input type="datetime" name="Received Earliest" narrative="Optional. The earliest date to search from." stage="Received Earliest" /><input type="datetime" name="Received Latest" narrative="Optional. The latest date to search to." stage="Received Latest" /><input type="text" name="Subject" narrative="Optional. Asterisk wildcard permitted, eg *Project Update for 'Project Update', 'RE: Project Update' etc." stage="Subject" /><input type="text" name="Message" narrative="Optional. Asterisk wildcard permitted, eg *Blue Prism*" stage="Message" /><input type="flag" name="Include Read" narrative="Optional, default True" stage="Include Read" /><input type="flag" name="Include Unread" narrative="Optional, default True" stage="Include Unread" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /></inputs><onsuccess>6b969896-5d1a-4f3c-9112-66df0d584150</onsuccess></stage><stage stageid="9d18dd85-49e7-4434-b66e-2f6bdedb4dad" name="Received Earliest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="135" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d3fc67bd-0f5c-4d13-bb51-0b378401d726" name="Received Latest" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="180" w="150" h="30" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f180ecf8-78fc-4b37-8a12-69b310abf874" name="Filter Expression" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b969896-5d1a-4f3c-9112-66df0d584150" name="Sender Name?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="[Sender Name]&lt;&gt;&quot;&quot;" /><ontrue>1eaeb40e-7ba5-4437-86fb-8490d10d7e99</ontrue><onfalse>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onfalse></stage><stage stageid="1eaeb40e-7ba5-4437-86fb-8490d10d7e99" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:sendername LIKE '&quot;&amp;Replace([Sender Name], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="cf1214bb-b7fd-4fec-ab0b-dde176bcca9a" name="Clean Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="330" /><onsuccess>2bc9f050-ac4b-4e53-833b-77f8fd75e0ab</onsuccess><calculation expression="Trim(Mid([Filter Expression], 6, Len([Filter Expression])))" stage="Filter Expression" /></stage><stage stageid="0a1a6586-94ea-4da3-a8af-cb1ea4a13659" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>f24225cb-32e2-4f31-b9f8-f75390a670a9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="747ae4c1-94e5-4288-a0cf-573663610ed9" name="Subject?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>0a1a6586-94ea-4da3-a8af-cb1ea4a13659</ontrue><onfalse>f24225cb-32e2-4f31-b9f8-f75390a670a9</onfalse></stage><stage stageid="4b48c6b0-a2af-431b-ab0d-d43ee5ebfd20" name="Sender Email?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="[Sender Email]&lt;&gt;&quot;&quot;" /><ontrue>9153efb4-8f18-48c4-9833-9f3364eeea6a</ontrue><onfalse>747ae4c1-94e5-4288-a0cf-573663610ed9</onfalse></stage><stage stageid="9153efb4-8f18-48c4-9833-9f3364eeea6a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>747ae4c1-94e5-4288-a0cf-573663610ed9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:senderemail LIKE '&quot;&amp;Replace([Sender Email], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="a72f4464-acf3-4e70-825d-a0ae628fb772" name="Sender Name" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="-45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="da4b8732-2d70-4ad2-8757-603e1aa7d769" name="Sender Email" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2bc9f050-ac4b-4e53-833b-77f8fd75e0ab" name="Filter Expression?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="375" /><decision expression="[Filter Expression]&lt;&gt;&quot;&quot;" /><ontrue>cf067e4c-9a82-41b9-acb9-9643cb195100</ontrue><onfalse>32bea08c-862f-440c-bc83-c05ca252286c</onfalse></stage><stage stageid="cf067e4c-9a82-41b9-acb9-9643cb195100" name="Prepend" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="375" /><onsuccess>32bea08c-862f-440c-bc83-c05ca252286c</onsuccess><calculation expression="&quot;@SQL=&quot;&amp;[Filter Expression]" stage="Filter Expression" /></stage><stage stageid="b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=0&quot;" stage="Filter Expression" /></stage><stage stageid="e3df62cc-bf1a-4ea1-8c56-de279ca09c6b" name="Sent To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Sent To]&lt;&gt;&quot;&quot;" /><ontrue>efe53d68-d29a-4388-afbd-b2866cb03c87</ontrue><onfalse>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onfalse></stage><stage stageid="efe53d68-d29a-4388-afbd-b2866cb03c87" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="45" /><onsuccess>4cc56a65-c57b-4daa-86ed-8033d486e7b9</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displayto LIKE '&quot;&amp;Replace([Sent To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="3ac23120-2c22-4fc7-b0ef-bbbc45a030b1" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:subject LIKE '&quot;&amp;Replace([Subject], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="4df1ab8f-9b5e-4224-976f-67c1073cabfb" name="Subject?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="[Subject]&lt;&gt;&quot;&quot;" /><ontrue>3ac23120-2c22-4fc7-b0ef-bbbc45a030b1</ontrue><onfalse>ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b</onfalse></stage><stage stageid="4cc56a65-c57b-4daa-86ed-8033d486e7b9" name="Copied To?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Copied To]&lt;&gt;&quot;&quot;" /><ontrue>9533d2e4-6aa7-4fd8-84aa-328875bd17d3</ontrue><onfalse>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onfalse></stage><stage stageid="9533d2e4-6aa7-4fd8-84aa-328875bd17d3" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>4df1ab8f-9b5e-4224-976f-67c1073cabfb</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:displaycc LIKE '&quot;&amp;Replace([Copied To], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="-45" /><onsuccess>e42900f2-2408-444c-b8c0-7077cfc7ab63</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Sent Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="69a5f33d-acd2-4bb9-9d2b-069cfc7fc32c" name="Earliest?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="-45" /><decision expression="IsDate([Sent Earliest])" /><ontrue>c0a30ff4-3c4e-4a4b-81bc-22fad4bfb5e4</ontrue><onfalse>e42900f2-2408-444c-b8c0-7077cfc7ab63</onfalse></stage><stage stageid="e42900f2-2408-444c-b8c0-7077cfc7ab63" name="Latest" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="0" /><decision expression="IsDate([Sent Latest])" /><ontrue>bbfb0329-e644-42ca-8e5b-91a771933be0</ontrue><onfalse>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onfalse></stage><stage stageid="bbfb0329-e644-42ca-8e5b-91a771933be0" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>e3df62cc-bf1a-4ea1-8c56-de279ca09c6b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Sent Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f47c58b8-fa7d-43e4-9879-9489b3c45b64" name="Get Sent Items (Advanced)" type="SubSheetInfo"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Lists Sent Items matching the filter provided.

Eg1 [Subject]='Exception Report'

Eg2 [To]='Mike Colleague' OR [To]='Mike Coworker'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="120" /></stage><stage stageid="8eb9cd1f-4784-4a10-b9f5-9257375fa249" name="Start" type="Start"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [To]='Mike Colleague' AND [SentOn]&gt;='15 January 2018 09:00' AND [SentOn]&lt;='19 January 2018 17:00'" stage="Filter Expression" /></inputs><onsuccess>86fdf439-537b-402e-bf87-83a0aa0186aa</onsuccess></stage><stage stageid="0db44ad5-c704-4846-be43-d47afae7ddff" name="Item Count" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7038439e-d7a5-4958-a2a6-b7076ad6e877" name="Filter Expression" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8b0ade5-d70a-469c-b475-5e38be742df6" name="Outlook Folder ID" type="Data"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="0" w="150" h="30" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="86fdf439-537b-402e-bf87-83a0aa0186aa" name="Internal_Get Items" type="SubSheet"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" narrative="Mandatory. Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" narrative="Mandatory. A MAPI filter, eg [From]='Mike Colleague' AND [unread] = True" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional, default blank. The inbox sub folder to look in." expr="&quot;&quot;" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>9be25db3-9033-4941-81dc-97124e0e4917</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="9be25db3-9033-4941-81dc-97124e0e4917" name="End" type="End"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="f223606b-95bb-4058-9217-4ed244648a97" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="135" /><onsuccess>b846e5cd-ed99-489e-9671-08f3d63a07ff</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&gt;='&quot; &amp; FormatDateTime([Received Earliest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="020266f4-5352-4942-9ca5-2b5b2c28ba9e" name="Earliest?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="135" /><decision expression="IsDate([Received Earliest])" /><ontrue>f223606b-95bb-4058-9217-4ed244648a97</ontrue><onfalse>b846e5cd-ed99-489e-9671-08f3d63a07ff</onfalse></stage><stage stageid="b846e5cd-ed99-489e-9671-08f3d63a07ff" name="Latest" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="IsDate([Received Latest])" /><ontrue>46ee2d04-b46b-4315-bd1a-abadb043b648</ontrue><onfalse>4d51e55a-9744-4090-b1d2-83bc995adeb5</onfalse></stage><stage stageid="46ee2d04-b46b-4315-bd1a-abadb043b648" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>4d51e55a-9744-4090-b1d2-83bc995adeb5</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:datereceived&lt;='&quot; &amp; FormatDateTime([Received Latest], &quot;dd MMMM yyyy HH:mm&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="dd6e1514-fd6a-4d97-905d-55b4c8076300" name="Include Unread" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4931c0a2-5942-4727-aa8e-c354a58dc3d9" name="Include Read" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="4d51e55a-9744-4090-b1d2-83bc995adeb5" name="Unread Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="225" /><decision expression="[Include Unread]=True AND [Include Read]=False" /><ontrue>b7a34496-b13f-4bf8-a6ed-b14f0dbbfdb9</ontrue><onfalse>1d38891a-a1cf-47ac-952b-2e4f9879a947</onfalse></stage><stage stageid="1d38891a-a1cf-47ac-952b-2e4f9879a947" name="Read Only?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="225" /><decision expression="[Include Read]=True AND [Include Unread]=False" /><ontrue>9ec12e81-08b4-4b01-a8ea-02ed52fafbf6</ontrue><onfalse>b8b8afa2-e3b6-490d-b4d1-b636fc831a96</onfalse></stage><stage stageid="9ec12e81-08b4-4b01-a8ea-02ed52fafbf6" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="270" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:read=1&quot;" stage="Filter Expression" /></stage><stage stageid="b8b8afa2-e3b6-490d-b4d1-b636fc831a96" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="225" w="10" h="10" /><onsuccess>faa2ec03-a715-4589-a137-e014002ddca2</onsuccess></stage><stage stageid="faa2ec03-a715-4589-a137-e014002ddca2" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="150" y="330" w="10" h="10" /><onsuccess>59dcb54a-0ca1-49a8-9543-3581d721886e</onsuccess></stage><stage stageid="59dcb54a-0ca1-49a8-9543-3581d721886e" name="Anchor1" type="Anchor"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="330" w="10" h="10" /><onsuccess>cf1214bb-b7fd-4fec-ab0b-dde176bcca9a</onsuccess></stage><stage stageid="fd8830ea-eced-4fa2-8bbb-3537fca5a68b" name="Get Received Items (Expert)" type="SubSheetInfo"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Lists Inbox Items matching the filters provided.

Eg1 @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND urn:schemas:httpmail:read=0

Eg2 @SQL=urn:schemas:httpmail:fromname='The Boss' AND urn:schemas:httpmail:subject LIKE '%Urgent%'

See https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fcb20265-28c5-415d-a083-d217916df151" name="Start" type="Start"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="DASL Query" narrative="Mandatory. A filter using a DASL query, eg @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')" stage="Filter Expression" /><input type="text" name="Sub Folder" narrative="Optional. Any alphanumeric value valid. The Subfolder in the Inbox, eg. Subfolder A needs to be declared as &quot;Subfolder A&quot;. A Nested Subfolder eg. Subfolder B in Subfolder A, needs to be declared as &quot;Subfolder A\Subfolder B&quot;." stage="Sub Folder" /></inputs><onsuccess>4828b977-8cfe-494b-9d2a-5ac65c8b6834</onsuccess></stage><stage stageid="b0aadff2-6a6a-4209-aea3-5c4ad4d2161d" name="Item Count" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="180" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea0ad1b6-12ef-43fb-b290-11b329c2ca27" name="Filter Expression" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef288d41-1da1-46bc-ad92-e063e9e51137" name="Outlook Folder ID" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><narrative>Google OlDefaultFolders Enumeration, 6 = Inbox, 5 = Sent</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="4828b977-8cfe-494b-9d2a-5ac65c8b6834" name="Internal_Get Items" type="SubSheet"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="Outlook Folder ID" expr="[Outlook Folder ID]" /><input type="text" name="Filter Expression" expr="[Filter Expression]" /><input type="text" name="Sub Folder" narrative="Optional" expr="[Sub Folder]" /></inputs><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs><onsuccess>829daa3f-c9ac-41b0-b6c9-39caf538c87e</onsuccess><processid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</processid></stage><stage stageid="829daa3f-c9ac-41b0-b6c9-39caf538c87e" name="End" type="End"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Items" narrative="Details of items matching the filter" stage="Items" /><output type="number" name="Item Count" narrative="Number of items matching the filter" stage="Item Count" /></outputs></stage><stage stageid="d2fdf5b2-86dd-4f37-86cb-4bc8cc7b80b9" name="Sub Folder" type="Data"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c56f0cd2-e7f6-4a5d-a859-901d8bd2b9a1" name="Mark Email As Read" type="SubSheetInfo"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>Marks a specific email as read.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="649120fc-a08c-44c6-949e-01c69a4c4d56" name="Start" type="Start"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>55267a5b-cc4a-4cc5-b141-a7c9a032924a</onsuccess></stage><stage stageid="af27f0d8-4b35-4ebb-a259-04758f73dcc3" name="End" type="End"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="55267a5b-cc4a-4cc5-b141-a7c9a032924a" name="Mark Read" type="Code"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>af27f0d8-4b35-4ebb-a259-04758f73dcc3</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = False]]></code></stage><stage stageid="84646f19-6d1f-4d92-a977-3058f4c582ff" name="Entry ID" type="Data"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b9646e7-1b30-4f67-833a-3121344437ab" name="Mark Email As Unread" type="SubSheetInfo"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>Marks a specific email as unread.

The Entry ID is the unique idenfier used to determine which email is to be marked.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4868521a-c295-4724-960a-b8a60dceae6c" name="Start" type="Start"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Entry ID" narrative="Mandatory. An ID obtained from one of the Get Item actions in this object. NB not the same as a Mapiex ID." stage="Entry ID" /></inputs><onsuccess>cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa</onsuccess></stage><stage stageid="2b8b0ae1-c806-485b-9b87-0875c17ba062" name="End" type="End"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="cdd6c065-c7eb-4ee3-b50c-48dddee9a3aa" name="Mark Unread" type="Code"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Entry ID" expr="[Entry ID]" /></inputs><onsuccess>2b8b0ae1-c806-485b-9b87-0875c17ba062</onsuccess><code><![CDATA[Dim app = CreateObject("Outlook.Application")
Dim _nameSpace = app.GetNameSpace("MAPI")

Dim item = _nameSpace.GetItemFromID(Entry_ID)
item.Unread = True]]></code></stage><stage stageid="9e08a8d3-4d6c-49e8-856f-664eb6e5e175" name="Entry ID" type="Data"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><narrative>An ID obtained from one of the Get Item actions in this object.</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7643fd53-5368-45a9-8412-89b5d574c204" name="Items" type="Collection"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="4c60b4ac-e0f8-4ef7-870d-f88f5a6edade" name="Items" type="Collection"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><display x="-195" y="105" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="4ee04419-4388-4a3a-87f2-06fbe4585fdf" name="Items" type="Collection"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><display x="-195" y="120" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="c7be666f-19fe-421d-bb4d-95085817f37e" name="Items" type="Collection"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="-195" y="195" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="ecaed312-c8a9-4755-b673-bdf8ce1ba59d" name="Items" type="Collection"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><display x="-195" y="135" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="2d58da80-f8b4-414e-80bb-2d87d9ce0cc4" name="Items" type="Collection"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><display x="-195" y="135" w="150" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="EntryID" type="text" description="The mail ID. NB this is different from the Mapiex ID." /><field name="To" type="text" description="The display name of the recipient(s)" /><field name="CC" type="text" description="The display name of the copied recipient(s)" /><field name="Subject" type="text" description="The mail subject line" /><field name="Body" type="text" description="The mail message" /><field name="Attachments" type="text" description="The names of the attachements as a CSV string" /><field name="ReceivedOn" type="datetime" description="The date an incoming mail was received" /><field name="SentOn" type="datetime" description="The date an outgoing mail was sent" /><field name="SenderName" type="text" description="The display name of the sender" /><field name="SenderEmailAddress" type="text" description="The email of the sender" /><field name="Unread" type="flag" description="True if an incoming mail has not been read, otherwise False" /></collectioninfo></stage><stage stageid="dc080a71-625d-45b0-bf8d-1cf2a77b3b48" name="Note2" type="Note"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><narrative>NOT FOR PUBLICATION</narrative><display x="15" y="-135" w="150" h="30" /><font family="Segoe UI" size="20" style="Regular" color="FF0000" /></stage><stage stageid="0b72d21e-2753-42b8-846a-bae349f2c179" name="Message" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c46c352-79de-438b-9ce3-422dcc0fb10b" name="Filter Expression" type="Calculation"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="90" y="180" /><onsuccess>a3d2888f-df21-47e3-8405-7f6f4564a71b</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="ba79bc8b-8091-4327-b1b2-3c6ccfb3f51b" name="Message?" type="Decision"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="15" y="180" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>0c46c352-79de-438b-9ce3-422dcc0fb10b</ontrue><onfalse>a3d2888f-df21-47e3-8405-7f6f4564a71b</onfalse></stage><stage stageid="9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a" name="Filter Expression" type="Calculation"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onsuccess><calculation expression="[Filter Expression]&amp;&quot; AND urn:schemas:httpmail:textdescription LIKE '&quot;&amp;Replace([Message], &quot;*&quot;, &quot;%&quot;)&amp;&quot;'&quot;" stage="Filter Expression" /></stage><stage stageid="f24225cb-32e2-4f31-b9f8-f75390a670a9" name="Message?" type="Decision"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="15" y="90" /><decision expression="[Message]&lt;&gt;&quot;&quot;" /><ontrue>9eb8fa0d-8fa1-4fec-9689-c30cc9649f0a</ontrue><onfalse>020266f4-5352-4942-9ca5-2b5b2c28ba9e</onfalse></stage><stage stageid="b4632ee7-bf2b-4b55-9dca-e9a7fafca663" name="Message" type="Data"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><display x="240" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a24cb43c-102d-4964-a916-09e44168a4c1" name="Input" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1fdeae66-adae-4ae5-bf8d-61ddb71fc904" name="Output" type="Block"><subsheetid>fb0dd28d-2875-4ec6-b6d5-475120ac222c</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="48aa1db4-2765-4c9e-a7b6-fb0989ed93f3" name="Subject" type="Data"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><display x="225" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8eb18cc7-2d34-4dba-bcd7-32cd82d688c9" name="Input" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e48a94c8-7d5d-40ad-89d8-4d953b6791c3" name="Output" type="Block"><subsheetid>7aafcecd-5e8f-49d4-9987-73958f3cedc3</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="94557554-0d80-4cc4-ae14-8806264969e5" name="Input" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="416d4ee0-5f16-4282-bec4-42328e03acb4" name="Output" type="Block"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><display x="-270" y="75" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="42b922f9-dd32-475f-a8ec-67ad770ce8ad" name="Input" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e6d1a1b7-3b51-4ee1-8756-585e34aa936d" name="Output" type="Block"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><display x="-270" y="60" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="71f3829b-c755-4e45-a175-c3b7075af273" name="Input" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e7e22486-0749-492f-8e67-586aa2c271ab" name="Output" type="Block"><subsheetid>a2bc0172-492f-4781-b7ed-1f1d550da3ba</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="1846bfcf-e7b1-48ca-83fe-bd2b5a1bcbeb" name="Input" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5cd2cea7-99cf-42af-b4eb-7cf6b2d62958" name="Output" type="Block"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="e33d69e8-faec-46fc-a225-2ac747bddd65" name="Input" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49f3281d-7765-48aa-8547-fc87ba0bd110" name="Output" type="Block"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="5cfc97b8-86c5-4a5b-ae62-71e55abd988d" name="Input" type="Block"><subsheetid>e0b58522-643b-42ad-8fdd-4cb5246c5558</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="73da0a90-8718-4f31-a8dd-2a56a45265ed" name="Input" type="Block"><subsheetid>78125029-0b28-4ee1-a064-c3a9e70ad7ca</subsheetid><loginhibit /><display x="-270" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ec957629-3e89-4cd3-963b-fb0ab19dc116" name="Input" type="Block"><subsheetid>f6f16944-bdad-4ff4-a5df-b687b904183c</subsheetid><loginhibit /><display x="-240" y="30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="bbd7d428-080a-47f0-8431-837da5d25290" name="Input" type="Block"><subsheetid>9bf4e24d-5759-4357-97f1-adc1c08c843a</subsheetid><loginhibit /><display x="-270" y="45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e15d0e55-ef6a-4836-bdb5-3ccf92b362fa" name="Input" type="Block"><subsheetid>2e6fb66c-9607-4731-829c-e3dfd4510a95</subsheetid><loginhibit /><display x="-270" y="0" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e470b377-ed2e-449e-b7b1-5954285a57c1" name="Input" type="Block"><subsheetid>5734e4af-7917-40d8-b0b6-83d8e1872074</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d24d2f3f-a3dd-4e54-8c2e-dd886cb74e42" name="Input" type="Block"><subsheetid>204201c2-30d3-467a-b6fb-4e0010b046af</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="07fac98a-a954-4be7-9aff-79b761ec658d" name="Input" type="Block"><subsheetid>2d1820f0-98e4-4a10-8361-8f5322babcee</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="023dcb4e-5dbd-4015-a4a4-d9825ca509b2" name="Input" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="15" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="45c2b8cf-a653-4a26-bc25-a2009c8d3501" name="Input" type="Block"><subsheetid>758f4938-75a1-4157-b0f7-2d9b99144d61</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ad7ba6e4-ef09-4fac-9dea-f535bb81aac2" name="Input" type="Block"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="dd8c58ce-3a4e-44a6-b4d8-248309fac791" name="Default" type="Block"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><loginhibit /><display x="-255" y="120" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC99" /></stage><stage stageid="63823440-c2ee-48b1-a2db-527efc5b94f7" name="Note3" type="Note"><subsheetid>f28aad59-a89a-4a9c-98ab-d31d6b69d9a5</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-45" w="480" h="210" /></stage><stage stageid="528d4d34-61bc-4a7b-b329-4bda0e6309fa" name="Note4" type="Note"><subsheetid>ea004198-e1fb-44bc-b549-bf8f7fa06631</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="702f380f-35f2-4112-95d8-cdc6a3521101" name="Note3" type="Note"><subsheetid>d9c8a6c7-f973-45af-b333-8166a34297c7</subsheetid><loginhibit /><narrative>API functions provided for the advanced filter expressions:

BCC = Returns a String representing the display list of blind carbon copy (BCC) names for a MailItem. Read/write.
Body = Returns or sets a String representing the clear-text body of the Outlook item. Read/write.
CC = Returns a String representing the display list of carbon copy (CC) names for a MailItem . Read/write.
CreationTime = Returns a Date indicating the creation time for the Outlook item. Read-only.
EntryID = Returns a String representing the unique Entry ID of the object. Read-only.
HTMLBody = Returns or sets a String representing the HTML body of the specified item. Read/write.
ReceivedTime = Returns a Date indicating the date and time at which the item was received. Read-only.
SenderEmailAddress = Returns a String that represents the e-mail address of the sender of the Outlook item. Read-only.
SenderName = Returns a String indicating the display name of the sender for the Outlook item. Read-only.
SentOn = Returns a Date indicating the date and time on which the Outlook item was sent. Read-only.
Subject = Returns or sets a String indicating the subject for the Outlook item. Read/write.
To = Returns or sets a semicolon-delimited String list of display names for the To recipients for the Outlook item. Read/write.
UnRead = Returns or sets a Boolean value that is True if the Outlook item has not been opened (read). Read/write.
</narrative><display x="-525" y="-60" w="480" h="210" /></stage><stage stageid="13bf2bea-2785-44ac-bda2-1e04f3c2a1e1" name="Note4" type="Note"><subsheetid>43fde12c-9d96-4cdd-a342-88204c037438</subsheetid><loginhibit /><narrative>Supported API DASL filters expressions:

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</narrative><display x="-360" y="-45" w="150" h="210" /></stage><stage stageid="b1663b58-d99f-4f8e-9641-4b3db50ca615" name="Clean Up" type="Calculation"><subsheetid>41e124bf-bc71-4b3c-9b3b-9f5d8b8fd79f</subsheetid><loginhibit /><display x="15" y="-75" /><onsuccess>d9a607b6-73e8-49ec-b2bc-a8032c0ab747</onsuccess><calculation expression="Replace([File Name],&quot;&quot;&quot;&quot;,&quot;&quot;)" stage="File Name" /></stage><stage stageid="80208144-c05c-4b32-bd6a-de8320da32e5" name="New Entry ID" type="Data"><subsheetid>61b6fc18-b98a-4456-9381-8c8cfe9f6f60</subsheetid><display x="-180" y="180" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="d42219b1-32a4-40e2-8b2e-5515c882d922" name="PDF Management" xmlns="http://www.blueprism.co.uk/product/process"><process name="PDF Management" version="1.0" bpversion="7.0.1.49890" narrative="PDF Management" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>fef98019-d1f0-40c1-8b2f-1d87321341e8</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-334</camerax><cameray>-29</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="1476a469-e7f6-4081-9786-765a45fc6d68" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a43f23c0-0749-4bd7-8856-de351fd9e372" type="Normal" published="True"><name>Split File</name><view><camerax>-89</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bf3ae7c4-adfb-4296-814b-94630c57fc3a" type="Normal" published="True"><name>Split File - Get First Page</name><view><camerax>-30</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="978b2f84-9f96-4022-87c8-44f7b64da24a" type="Normal" published="True"><name>Merge Files</name><view><camerax>36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ba262657-82cb-4eac-9b9a-c94dd2c11d30" type="Normal" published="True"><name>Extract All Text</name><view><camerax>36</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="099d4435-7882-4621-87c1-b39ed3558419" type="Normal" published="True"><name>Extract All Text For Page</name><view><camerax>-4</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="588af7a3-3b22-45f5-bea3-b2afde332b0d" type="Normal" published="True"><name>Extract All Text For Page To File</name><view><camerax>-4</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aa030e1e-7e69-48ed-bde7-519351515a76" type="Normal" published="True"><name>Password Protect - Owner</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cbd34979-b269-4360-bff1-8315252f3e1e" type="Normal" published="True"><name>Password Protect - User</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="63201763-9267-4d8f-9088-8f75ba4aa7f2" type="Normal" published="True"><name>Remove Password</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="aa7993ef-584b-42c8-80ad-49bb58cadced" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>03b95f46-4410-4cee-b226-4411ddceea43</onsuccess></stage><stage stageid="03b95f46-4410-4cee-b226-4411ddceea43" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="1a47a2bb-0b87-4072-9b4f-99101effc6cf" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>PDFSharp.dll</reference><reference>System.Data.DataSetExtensions.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.Data</import><import>System.Xml</import><import>PdfSharp</import><import>PdfSharp.Pdf</import><import>PdfSharp.Pdf.IO</import><import>PdfSharp.Pdf.Content</import><import>PdfSharp.Pdf.Content.Objects</import><import>System.Collections.Generic</import><import>System.Text</import><import>PdfSharp.Pdf.Security</import><import>System.Linq</import><import>System.IO</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[public class PdfSharpHelper
{
    public IEnumerable<string> ExtractText(PdfPage page)
    {
        var content = ContentReader.ReadContent(page);
        var text = ExtractText(content);
        return text;
    }

    public IEnumerable<string> ExtractText(CObject cObject)
    {
        if (cObject is COperator)
        {
            var cOperator = cObject as COperator;
            if (cOperator.OpCode.Name == OpCodeName.Tj.ToString() ||
                cOperator.OpCode.Name == OpCodeName.TJ.ToString())
            {
                foreach (var cOperand in cOperator.Operands)
                foreach (var txt in ExtractText(cOperand))
                    yield return txt;
            }
        }
        else if (cObject is CSequence)
        {
            var cSequence = cObject as CSequence;
            foreach (var element in cSequence)
            foreach (var txt in ExtractText(element))
                yield return txt;
        }
        else if (cObject is CString)
        {
            var cString = cObject as CString;
            yield return cString.Value;
        }
    }
	
		public void SetDocumentUserPassword(string pdffilepath, string outputpdfpath, string password, Dictionary<string,object> permitSettings)
	{
		PdfDocument doc = PdfReader.Open(pdffilepath, PdfDocumentOpenMode.Modify);

		PdfSecuritySettings securitySettings = doc.SecuritySettings;
		securitySettings.UserPassword = password;
        doc.SecuritySettings.DocumentSecurityLevel = PdfDocumentSecurityLevel.Encrypted128Bit;

		securitySettings.PermitAccessibilityExtractContent = (bool)permitSettings["PermitAccessibilityExtractContent"];
		securitySettings.PermitAnnotations = (bool)permitSettings["PermitAnnotations"];
		securitySettings.PermitAssembleDocument = (bool)permitSettings["PermitAssembleDocument"];
		securitySettings.PermitExtractContent = (bool)permitSettings["PermitExtractContent"];
		securitySettings.PermitFormsFill = (bool)permitSettings["PermitFormsFill"];
		securitySettings.PermitFullQualityPrint = (bool)permitSettings["PermitFullQualityPrint"];
		securitySettings.PermitModifyDocument = (bool)permitSettings["PermitModifyDocument"];
		securitySettings.PermitPrint = (bool)permitSettings["PermitPrint"];

		doc.Save(outputpdfpath);
	}

	public void SetDocumentOwnerPassword(string pdffilepath, string outputpdfpath, string password, Dictionary<string, object> permitSettings)
	{
		PdfDocument doc = PdfReader.Open(pdffilepath, PdfDocumentOpenMode.Modify);
        doc.SecuritySettings.DocumentSecurityLevel = PdfDocumentSecurityLevel.Encrypted128Bit;

		PdfSecuritySettings securitySettings = doc.SecuritySettings;
		securitySettings.OwnerPassword = password;

		securitySettings.PermitAccessibilityExtractContent = (bool)permitSettings["PermitAccessibilityExtractContent"];
		securitySettings.PermitAnnotations = (bool)permitSettings["PermitAnnotations"];
		securitySettings.PermitAssembleDocument = (bool)permitSettings["PermitAssembleDocument"];
		securitySettings.PermitExtractContent = (bool)permitSettings["PermitExtractContent"];
		securitySettings.PermitFormsFill = (bool)permitSettings["PermitFormsFill"];
		securitySettings.PermitFullQualityPrint = (bool)permitSettings["PermitFullQualityPrint"];
		securitySettings.PermitModifyDocument = (bool)permitSettings["PermitModifyDocument"];
		securitySettings.PermitPrint = (bool)permitSettings["PermitPrint"];

		doc.Save(outputpdfpath);
	}

	public void RemoveDocumentPassword(string pdffilepath, string pdfPassword)
	{
		PdfDocument doc = PdfReader.Open(pdffilepath,pdfPassword, PdfDocumentOpenMode.Modify);
		doc.SecuritySettings.UserPassword = null;
		doc.SecuritySettings.OwnerPassword = null;
		doc.SecuritySettings.DocumentSecurityLevel = PdfDocumentSecurityLevel.None;
		doc.Save(pdffilepath);

	}
	
}

public class Extract_Text
{
    private PdfSharpHelper helper;
    public Extract_Text()
    {
        helper = new PdfSharpHelper();
    }
    public string Extract_All_Text(string pdffilepath)
    {
        StringBuilder sb = new StringBuilder();

        PdfDocument pdfDoc = PdfReader.Open(pdffilepath, PdfDocumentOpenMode.ReadOnly);
        
        foreach (var page in pdfDoc.Pages)
        {
            foreach (var textitem in helper.ExtractText(page))
            {
                sb.Append(textitem);
            }
        }
        return sb.ToString();
    }

    public string Extract_Text_From_Page(string pdffilepath, int pagenumber)
    {
        StringBuilder sb = new StringBuilder();

        PdfDocument pdfDoc = PdfReader.Open(pdffilepath, PdfDocumentOpenMode.ReadOnly);
        var pages = pdfDoc.Pages.PagesArray;
		var text = helper.ExtractText(pdfDoc.Pages[pagenumber-1]);
		foreach (var textitem in text)
		{
			sb.Append(textitem);
		}
        return sb.ToString();
    }
}

internal Dictionary<string,object> DataTableToDict(DataTable dt)
{
	return dt.AsEnumerable()
	.ToDictionary<DataRow,string,object>(row => row.Field<string>(0),
	row => row.Field<object>(1));
}


]]></code></stage><stage stageid="da1d5ac7-56ae-4203-bbd1-e1a59aaa16df" name="Clean Up" type="SubSheetInfo"><subsheetid>1476a469-e7f6-4081-9786-765a45fc6d68</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d982b28b-bde6-4c69-9956-4bd72c6ce3de" name="Start" type="Start"><subsheetid>1476a469-e7f6-4081-9786-765a45fc6d68</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>54709c55-537d-44fa-bb02-4ea78b55a9b7</onsuccess></stage><stage stageid="54709c55-537d-44fa-bb02-4ea78b55a9b7" name="End" type="End"><subsheetid>1476a469-e7f6-4081-9786-765a45fc6d68</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1989ff10-20ae-4cfe-882d-fd4c76ae1420" name="Split File" type="SubSheetInfo"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><narrative>Used to split a single input PDF into two seaparate PDF's.</narrative><display x="-180" y="-105" w="150" h="90" /></stage><stage stageid="d64e1626-c971-44ce-9953-34879a698117" name="Start" type="Start"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><loginhibit /><display x="-15" y="-105" /><inputs><input type="text" name="PDFFilePath" stage="PDFFilePath" /><input type="number" name="SplitIndex" stage="SplitIndex" /><input type="text" name="OutputFolder" stage="OutputFolder" /></inputs><onsuccess>6a672ffb-f38f-4a8b-b8cb-2b13b8b1be94</onsuccess></stage><stage stageid="4208cbf0-4153-4a56-a07f-011ac451d313" name="End" type="End"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><loginhibit /><display x="-15" y="90" /><outputs><output type="text" name="OutputFilePath1" stage="OutputFilePath1" /><output type="text" name="OutputFilePath2" stage="OutputFilePath2" /><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="06a06637-6b56-4ebf-8c49-da7ed49a7c92" name="Note1" type="Note"><subsheetid>1476a469-e7f6-4081-9786-765a45fc6d68</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="28282a26-9a7f-4875-a8c1-c82b97ab8fab" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="6a672ffb-f38f-4a8b-b8cb-2b13b8b1be94" name="Code1" type="Code"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><loginhibit /><narrative>+</narrative><display x="-15" y="-15" /><inputs><input type="text" name="PDFFilePath" expr="[PDFFilePath]" /><input type="number" name="SplitIndex" expr="[SplitIndex]" /><input type="text" name="OutputFolder" expr="[OutputFolder]" /></inputs><outputs><output type="text" name="OutputFilePath1" stage="OutputFilePath1" /><output type="text" name="OutputFilePath2" stage="OutputFilePath2" /><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>4208cbf0-4153-4a56-a07f-011ac451d313</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
OutputFilePath1 = string.Empty;
OutputFilePath2 = string.Empty;

try
{
	PdfDocument inputPDFFile = PdfReader.Open(PDFFilePath, PdfDocumentOpenMode.Import);
	var totalPagesInInputPDFFile = inputPDFFile.PageCount;

	PdfDocument outputPDFDocument1 = new PdfDocument();
	PdfDocument outputPDFDocument2 = new PdfDocument();
	int x = 0;
	while (x < SplitIndex)
	{
		outputPDFDocument1.AddPage(inputPDFFile.Pages[x]);
		x += 1;	
	}

	OutputFilePath1=OutputFolder+"\\1_"+PDFFilePath.Substring(PDFFilePath.LastIndexOf("\\")+1);
	outputPDFDocument1.Save(OutputFilePath1);
	x = Decimal.ToInt32(SplitIndex);
	while (x < totalPagesInInputPDFFile)
	{
		outputPDFDocument2.AddPage(inputPDFFile.Pages[x]);
		x += 1;	
	}
	OutputFilePath2="";
	OutputFilePath2=OutputFolder+"\\2_"+PDFFilePath.Substring(PDFFilePath.LastIndexOf("\\")+1);
	outputPDFDocument2.Save(OutputFilePath2);
}
catch (Exception ex)
{
	Success = false;
	ErrorMessage = ex.Message;
}]]></code></stage><stage stageid="53042e9b-9f2d-4ba1-bca7-24e48216c96e" name="OutputFolder" type="Data"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><loginhibit /><display x="-180" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="457a1586-c47b-4311-99a7-1f053e80bbf1" name="PDFFilePath" type="Data"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><loginhibit /><display x="-255" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1d65311-0024-407b-9f53-6b12ef159f92" name="SplitIndex" type="Data"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><loginhibit /><display x="-120" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="adab0b41-7524-4b36-a110-c0415c8aca43" name="OutputFilePath1" type="Data"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><display x="-240" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fbf5bf5f-0586-4f02-9678-6bd0886d67ed" name="OutputFilePath2" type="Data"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><display x="-135" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56a4d44f-1c5f-4442-a7a0-0c51d5e4ee21" name="Merge Files" type="SubSheetInfo"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><narrative>Used to merge the PDFs in the input Collection into a single PDF file.</narrative><display x="-330" y="-120" w="150" h="90" /></stage><stage stageid="240bdc35-96dd-44ee-b1f6-957eb2c615a6" name="Start" type="Start"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="InputFiles" stage="InputFiles" /><input type="text" name="MergedFilePath" stage="MergedFilePath" /></inputs><onsuccess>aa7edabb-0d0f-468c-9b06-635070e3bed4</onsuccess></stage><stage stageid="10a63ab7-a5fe-4ac9-9a10-7fc8aab4ad87" name="End" type="End"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="aa7edabb-0d0f-468c-9b06-635070e3bed4" name="Code2" type="Code"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="InputFiles" expr="[InputFiles]" /><input type="text" name="MergedFilePath" expr="[MergedFilePath]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>10a63ab7-a5fe-4ac9-9a10-7fc8aab4ad87</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
try
{
	PdfDocument mergedPDFDocument = new PdfDocument();
	int x = 0;
	foreach (DataRow row in InputFiles.Rows)
	{
		PdfDocument inputPDFFile = PdfReader.Open(row["FilePath"].ToString(), PdfDocumentOpenMode.Import);
		var totalPagesInInputPDFFile = inputPDFFile.PageCount;
		x = 0;
		while (x < totalPagesInInputPDFFile)
		{
			mergedPDFDocument.AddPage(inputPDFFile.Pages[x]);
			x += 1;	
		}
	}
	mergedPDFDocument.Save(MergedFilePath);
}
catch (Exception ex)
{
	Success = false;
	ErrorMessage = ex.Message;
}]]></code></stage><stage stageid="b0b7d2e6-49e0-4f45-8b72-7c41cf4ab8cc" name="InputFiles" type="Collection"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><loginhibit /><display x="-90" y="-15" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="FilePath" type="text" /></collectioninfo></stage><stage stageid="37744593-6320-45ef-8e98-07ba203ac176" name="MergedFilePath" type="Data"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><display x="-165" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cebd32c7-0fe8-42b0-b34c-7e2febaa917d" name="Extract All Text" type="SubSheetInfo"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><narrative>Extracts the text contained in the provided PDF filepath. </narrative><display x="-165" y="-105" w="150" h="90" /></stage><stage stageid="6ab7c597-ddd0-4954-b027-d6a5743ea30f" name="Start" type="Start"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="PDFFilePath" stage="PDFFilepath" /></inputs><onsuccess>dfe42534-f067-446e-b0e2-a08cba7625ac</onsuccess></stage><stage stageid="a62a9db4-eca1-4b95-b456-218893c4674b" name="End" type="End"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="OutputText" stage="OutputText" /><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="dfe42534-f067-446e-b0e2-a08cba7625ac" name="Extract Text from PDF Code" type="Code"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="text" name="PDFFilePath" expr="[PDFFilepath]" /></inputs><outputs><output type="text" name="OutputText" stage="OutputText" /><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>a62a9db4-eca1-4b95-b456-218893c4674b</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
OutputText = string.Empty;
try
{
	Extract_Text et = new Extract_Text();
	OutputText = et.Extract_All_Text(PDFFilePath);
}
catch (Exception ex)
{
	Success = false;
	ErrorMessage = ex.Message;
}]]></code></stage><stage stageid="67e44183-f72d-4bc2-a571-f1ca01559003" name="PDFFilepath" type="Data"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7beae5d7-813e-4219-9692-1dcd722492e2" name="OutputText" type="Data"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><loginhibit /><display x="-165" y="60" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6ba5f6cf-2884-45f8-a6ee-321f0aacdb76" name="Extract All Text For Page" type="SubSheetInfo"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><narrative>Extracts the text contained in the provided PDF filepath and page number. The page must exist. </narrative><display x="-165" y="-105" w="150" h="90" /></stage><stage stageid="beb2ddfa-487e-403e-83be-14857c468c1c" name="Start" type="Start"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="PDFFilePath" stage="PDFFilepath" /><input type="number" name="Page Number" stage="Page Number" /></inputs><onsuccess>64b61637-5a91-49ed-80dd-99dd178d1590</onsuccess></stage><stage stageid="75b04785-0e61-4bf1-9c54-e6b8da5bc9c9" name="End" type="End"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="OutputText" stage="OutputText" /><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="64b61637-5a91-49ed-80dd-99dd178d1590" name="Extract Text from PDF" type="Code"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="PDFFilePath" expr="[PDFFilepath]" /><input type="number" name="PageNumber" expr="[Page Number]" /></inputs><outputs><output type="text" name="OutputText" stage="OutputText" /><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>75b04785-0e61-4bf1-9c54-e6b8da5bc9c9</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
OutputText = string.Empty;
try
{
	Extract_Text et = new Extract_Text();
	OutputText = et.Extract_Text_From_Page(PDFFilePath, (int)PageNumber);
}
catch (Exception ex)
{
	OutputText = "Exception Occurred - See Error Message";
	Success = false;
	ErrorMessage = ex.Message;
}]]></code></stage><stage stageid="afdfbb81-6ff3-4aff-94fb-290e4e1e041b" name="PDFFilepath" type="Data"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d24d85b0-264d-4f5f-91d2-2294b2d1fd13" name="OutputText" type="Data"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><loginhibit /><display x="-165" y="120" w="150" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc0fee27-2673-4c5a-81ca-f6c4536e5cf2" name="Page Number" type="Data"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><loginhibit /><display x="-165" y="45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5a7f11cd-129c-4eb4-bd8d-c016be7a36b6" name="Password Protect - Owner" type="SubSheetInfo"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4b651f46-3f36-4120-ac50-cfcc47ef10cc" name="Start" type="Start"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="SecuritySettings" stage="PDFSecuritySettings" /><input type="text" name="PDFFilePath" stage="PDFFilePath" /><input type="password" name="PDFPassword" stage="PDFPassword" /><input type="text" name="PDFOutputFilePath" stage="PDFOutputFilePath" /></inputs><onsuccess>5c09b67d-186c-4090-a19a-78f044cdb5a4</onsuccess></stage><stage stageid="1da25408-3f45-47fb-b048-667b394e379d" name="End" type="End"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="5c09b67d-186c-4090-a19a-78f044cdb5a4" name="Password Protect Code" type="Code"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="collection" name="SecuritySettings" expr="[PDFSecuritySettings]" /><input type="text" name="PDFFilePath" expr="[PDFFilePath]" /><input type="password" name="PDFPassword" expr="[PDFPassword]" /><input type="text" name="PDFOutputFilePath" expr="[PDFOutputFilePath]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>1da25408-3f45-47fb-b048-667b394e379d</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
try
{
	PdfSharpHelper helper = new PdfSharpHelper();
	Dictionary<string, object> pdfSecuritySettings = DataTableToDict(SecuritySettings);
	helper.SetDocumentOwnerPassword(PDFFilePath, PDFOutputFilePath, PDFPassword, pdfSecuritySettings);
	helper = null;
}
catch (Exception ex)
{
	ErrorMessage = ex.Message;
	Success = false;
}]]></code></stage><stage stageid="e6da9e29-ed23-4a49-8211-2a035e8c8dc4" name="Remove Password" type="SubSheetInfo"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fcb817d5-ba1d-4b12-bacb-9ab3e018af0d" name="Start" type="Start"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="PDFFilePath" stage="PDFFilePath" /><input type="password" name="PDFPassword" stage="PDFPassword" /></inputs><onsuccess>f5454f6f-dffd-40cd-92e9-4d17f0d73767</onsuccess></stage><stage stageid="c4f17e92-be37-4fcb-9fce-3e4923b0e56d" name="End" type="End"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="f5454f6f-dffd-40cd-92e9-4d17f0d73767" name="Remove Password" type="Code"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="text" name="PDFFilePath" expr="[PDFFilePath]" /><input type="password" name="PDFPassword" expr="[PDFPassword]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>c4f17e92-be37-4fcb-9fce-3e4923b0e56d</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
try
{
	PdfSharpHelper helper = new PdfSharpHelper();

	helper.RemoveDocumentPassword(PDFFilePath, PDFPassword);
}
catch (Exception ex)
{
	ErrorMessage = ex.Message;
	Success = false;
}
	]]></code></stage><stage stageid="eb8fb6e4-e08d-4aea-be85-73e5c0a24e83" name="PDFSecuritySettings" type="Collection"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Setting" type="text" /><field name="Value" type="flag" /></collectioninfo></stage><stage stageid="58aef02c-28b9-4c79-824a-837e2bc4b5db" name="PDFFilePath" type="Data"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><loginhibit /><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="179d8519-1926-4d7f-b8f8-b53410dd5d5b" name="PDFPassword" type="Data"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><loginhibit /><display x="-195" y="105" w="120" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="8b4271c8-a55b-457f-8bda-821a7e27b07b" name="PDFOutputFilePath" type="Data"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d25c69f-5d17-4177-a9db-53e6840bff5f" name="Password Protect - User" type="SubSheetInfo"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2b236a28-a4c8-4a3d-abd3-bc587c9a5362" name="Start" type="Start"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="SecuritySettings" stage="PDFSecuritySettings" /><input type="text" name="PDFFilePath" stage="PDFFilePath" /><input type="password" name="PDFPassword" stage="PDFPassword" /><input type="text" name="PDFOutputPath" stage="PDFOutputFilePath" /></inputs><onsuccess>f51ae877-8f39-47fe-b076-0ca1d95911de</onsuccess></stage><stage stageid="011e7f64-d98a-484d-81e2-9b32259a45a7" name="End" type="End"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="f51ae877-8f39-47fe-b076-0ca1d95911de" name="User Password Protect Code" type="Code"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><inputs><input type="collection" name="SecuritySettings" expr="[PDFSecuritySettings]" /><input type="text" name="PDFFilePath" expr="[PDFFilePath]" /><input type="password" name="PDFPassword" expr="[PDFPassword]" /><input type="text" name="PDFOutputFilePath" expr="[PDFOutputFilePath]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>011e7f64-d98a-484d-81e2-9b32259a45a7</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
try
{
	PdfSharpHelper helper = new PdfSharpHelper();
	Dictionary<string, object> pdfSecuritySettings = DataTableToDict(SecuritySettings);
	helper.SetDocumentUserPassword(PDFFilePath, PDFOutputFilePath, PDFPassword, pdfSecuritySettings);
	helper = null;
}
catch (Exception ex)
{
	ErrorMessage = ex.Message;
	Success = false;
}]]></code></stage><stage stageid="83c5fc6a-29dc-409a-b59d-63a5b90a9926" name="PDFSecuritySettings" type="Collection"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><loginhibit /><display x="-195" y="-15" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Setting" type="text" /><field name="Value" type="flag" /></collectioninfo><initialvalue><row><field name="Setting" type="text" value="PermitAccessibilityExtractContent" /><field name="Value" type="flag" value="True" /></row><row><field name="Setting" type="text" value="PermitAnnotations" /><field name="Value" type="flag" value="True" /></row><row><field name="Setting" type="text" value="PermitAssembleDocument" /><field name="Value" type="flag" value="True" /></row><row><field name="Setting" type="text" value="PermitExtractContent" /><field name="Value" type="flag" value="True" /></row><row><field name="Setting" type="text" value="PermitFormsFill" /><field name="Value" type="flag" value="True" /></row><row><field name="Setting" type="text" value="PermitFullQualityPrint" /><field name="Value" type="flag" value="True" /></row><row><field name="Setting" type="text" value="PermitModifyDocument" /><field name="Value" type="flag" value="True" /></row><row><field name="Setting" type="text" value="PermitPrint" /><field name="Value" type="flag" value="True" /></row></initialvalue></stage><stage stageid="4ff26399-631c-4858-bc37-6a19db3de11f" name="PDFFilePath" type="Data"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><loginhibit /><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f1dba31-ea82-4bac-b5b5-547a2114dd1e" name="PDFPassword" type="Data"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><loginhibit /><display x="-195" y="105" w="120" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="e0381940-60d7-4d4c-81fc-69fe81203d9c" name="PDFOutputFilePath" type="Data"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><display x="-195" y="165" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6cb2b33-b737-4f8b-89bd-789ca6b33096" name="PDFFilePath" type="Data"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b667de6-de4d-4d86-aa59-32616435ae6c" name="PDFPassword" type="Data"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><loginhibit /><display x="-195" y="45" w="120" h="30" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="b877cc5b-18d8-47ba-b005-032598f18d16" name="Success" type="Data"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><display x="-165" y="105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb7e8475-d1d5-4078-989b-e42644f566cb" name="ErrorMessage" type="Data"><subsheetid>63201763-9267-4d8f-9088-8f75ba4aa7f2</subsheetid><display x="-225" y="105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87738e41-9b85-45bf-aea2-03bc9c31a954" name="Success" type="Data"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><display x="-165" y="225" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7344cef2-270b-47d3-9b54-f4e386c8eada" name="ErrorMessage" type="Data"><subsheetid>cbd34979-b269-4360-bff1-8315252f3e1e</subsheetid><display x="-225" y="225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d768442-9a7c-4f43-a486-ab7efaf71764" name="ErrorMessage" type="Data"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><display x="-225" y="225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47c96d67-ed1f-4c0a-a0a6-672556ceef6e" name="Success" type="Data"><subsheetid>aa030e1e-7e69-48ed-bde7-519351515a76</subsheetid><display x="-165" y="225" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4dcc3cd-7633-4b2e-bef9-3c4ed2c39650" name="Success" type="Data"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><display x="-120" y="195" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c761d4dd-6880-4f18-800f-48c9267f65f9" name="ErrorMessage" type="Data"><subsheetid>099d4435-7882-4621-87c1-b39ed3558419</subsheetid><display x="-210" y="195" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e4b5bfe4-3233-4b86-8a59-11b78da837dc" name="Success" type="Data"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><display x="-135" y="135" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68b52bc4-1fc9-4f03-bf19-2fc3896215cb" name="ErrorMessage" type="Data"><subsheetid>ba262657-82cb-4eac-9b9a-c94dd2c11d30</subsheetid><display x="-210" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3168f5de-6d81-46b0-8141-02179f61f8b6" name="Success" type="Data"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><display x="-165" y="45" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a0596ac6-7372-478f-a380-09657a875ac4" name="ErrorMessage" type="Data"><subsheetid>978b2f84-9f96-4022-87c8-44f7b64da24a</subsheetid><display x="-90" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d59fcace-29bd-4319-81ea-d43124450698" name="Success" type="Data"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><display x="-240" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="15e907ff-08a3-4411-945f-f0bafa66c1a8" name="ErrorMessage" type="Data"><subsheetid>a43f23c0-0749-4bd7-8856-de351fd9e372</subsheetid><display x="-165" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b09d3c4-f730-4aff-86e6-5e83b2990356" name="Extract All Text For Page To File" type="SubSheetInfo"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><narrative>Extracts the text contained in the provided PDF filepath and page number. The page must exist. </narrative><display x="-165" y="-105" w="150" h="90" /></stage><stage stageid="0a79adc4-426a-4948-a5d7-e0767a1aaa72" name="Start" type="Start"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="PDFFilePath" stage="PDFFilepath" /><input type="number" name="Page Number" stage="Page Number" /><input type="text" name="OutputTextFilePath" stage="OutputTextFilePath" /></inputs><onsuccess>65bdcd00-43e4-4061-b3c8-3a1c729088de</onsuccess></stage><stage stageid="368f6c46-57a5-4ba9-9cb5-7ae36d6b3f17" name="End" type="End"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs></stage><stage stageid="65bdcd00-43e4-4061-b3c8-3a1c729088de" name="Extract Text from PDF To File" type="Code"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><inputs><input type="text" name="PDFFilePath" expr="[PDFFilepath]" /><input type="number" name="PageNumber" expr="[Page Number]" /><input type="text" name="OutputTextFilePath" expr="[OutputTextFilePath]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="ErrorMessage" stage="ErrorMessage" /></outputs><onsuccess>368f6c46-57a5-4ba9-9cb5-7ae36d6b3f17</onsuccess><code><![CDATA[Success = true;
ErrorMessage = "No Error";
var OutputText = string.Empty;
try
{
	Extract_Text et = new Extract_Text();
	OutputText = et.Extract_Text_From_Page(PDFFilePath, (int)PageNumber);
	File.AppendAllText(OutputTextFilePath, OutputText);
}
catch (Exception ex)
{
	OutputText = "Exception Occurred - See Error Message";
	Success = false;
	ErrorMessage = ex.Message;
}]]></code></stage><stage stageid="2de43c94-9515-4e45-b279-e5b099ddda14" name="PDFFilepath" type="Data"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><loginhibit /><display x="-165" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="845ac4cc-0a11-48e1-9d12-4f2f8ddc65ed" name="OutputTextFilePath" type="Data"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><loginhibit /><display x="-165" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d400151-cf3a-4233-a81a-730a73fbbcf0" name="Page Number" type="Data"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><loginhibit /><display x="-165" y="45" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c3feeea-7c18-4036-b7ec-057e38cbe7e2" name="Success" type="Data"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><display x="-120" y="225" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3042ab78-dabe-4977-9eb4-9f6123f4bdb5" name="ErrorMessage" type="Data"><subsheetid>588af7a3-3b22-45f5-bea3-b2afde332b0d</subsheetid><display x="-210" y="225" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="929ee73d-ed49-40f4-8897-80607f3a26e8" name="Blue Prism Limited Copyright Note" type="Note"><loginhibit /><narrative>© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="-510" y="-45" w="450" h="210" /><font family="Segoe UI" size="10" style="Bold" color="000000" /></stage><stage stageid="fda75ccf-1133-4f33-a9cd-b7d6bc03a6db" name="Split File - Get First Page" type="SubSheetInfo"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><narrative>Used to split a single input PDF into two seaparate PDF's.</narrative><display x="-315" y="-105" w="150" h="90" /></stage><stage stageid="df38f0d6-b6bb-4bcd-8b69-a16f1a8e8fbc" name="Start" type="Start"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><loginhibit /><display x="-15" y="-105" /><inputs><input type="text" name="PDFFilePath" stage="PDFFilePath" /><input type="number" name="SplitIndex" stage="SplitIndex" /><input type="text" name="OutputFolder" stage="OutputFolder" /></inputs><onsuccess>e7298269-846e-48ab-b9a3-130b0e82bb9a</onsuccess></stage><stage stageid="60ebd721-473f-48ad-ae29-bff9c462d545" name="End" type="End"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><loginhibit /><display x="-15" y="90" /><outputs><output type="text" name="OutputFilePath1" stage="OutputFilePath1" /><output type="text" name="OutputFilePath2" stage="OutputFilePath2" /></outputs></stage><stage stageid="e7298269-846e-48ab-b9a3-130b0e82bb9a" name="Code_Get First Page" type="Code"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><loginhibit /><narrative>+</narrative><display x="-15" y="-15" /><inputs><input type="text" name="PDFFilePath" expr="[PDFFilePath]" /><input type="number" name="SplitIndex" expr="[SplitIndex]" /><input type="text" name="OutputFolder" expr="[OutputFolder]" /></inputs><outputs><output type="text" name="OutputFilePath1" stage="OutputFilePath1" /></outputs><onsuccess>60ebd721-473f-48ad-ae29-bff9c462d545</onsuccess><code><![CDATA[PdfDocument inputPDFFile = PdfReader.Open(PDFFilePath, PdfDocumentOpenMode.Import);
var totalPagesInInputPDFFile = inputPDFFile.PageCount;

PdfDocument outputPDFDocument1 = new PdfDocument();
int x = 0;
while (x < SplitIndex)
{
	outputPDFDocument1.AddPage(inputPDFFile.Pages[x]);
    x += 1;	
}

OutputFilePath1=OutputFolder+"\\1_"+PDFFilePath.Substring(PDFFilePath.LastIndexOf("\\")+1);
outputPDFDocument1.Save(OutputFilePath1);

	]]></code></stage><stage stageid="c64bf461-5990-4137-a89d-1a61b0773fbe" name="OutputFolder" type="Data"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><loginhibit /><display x="-195" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="827e469d-4849-4b75-9097-0f6f6ee71880" name="PDFFilePath" type="Data"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><loginhibit /><display x="-255" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="838807e2-06f2-489d-8065-e8c4fea4a98b" name="SplitIndex" type="Data"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><loginhibit /><display x="-135" y="-15" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0634dc5d-d8d8-4ea9-a48f-2ea0ddaa4936" name="OutputFilePath1" type="Data"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="949d3f9e-fd02-4961-9b9e-7da81c164030" name="OutputFilePath2" type="Data"><subsheetid>bf3ae7c4-adfb-4296-814b-94630c57fc3a</subsheetid><display x="180" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="f27078a2-b13e-4604-b7f7-a8b51581bf93" name="PDF Management VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="PDF Management VBO" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>c7de5cff-353e-4b0a-85dd-a140a11397fa</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-255</camerax><cameray>-165</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2cc26b6-dc77-4d39-9321-bcaf37cd118f" type="Normal" published="True"><name>Create PDF Document</name><view><camerax>0</camerax><cameray>-29</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f70387a3-ced8-4535-9673-518e838ce82f" type="Normal" published="True"><name>Extract Text</name><view><camerax>9</camerax><cameray>53</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ac013b15-ecfe-429c-90e8-f26418c6e78c" type="Normal" published="True"><name>Split PDF To Multiple Pages</name><view><camerax>-101</camerax><cameray>-16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f4ffb5ef-7168-439c-a498-f9559a7a1860" type="Normal" published="True"><name>Combine PDF Files To One</name><view><camerax>-83</camerax><cameray>18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c97cb172-fcb9-465e-a8c2-e6541a44db0c" type="Normal" published="True"><name>Encrypt PDF</name><view><camerax>-266</camerax><cameray>36</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430" type="Normal" published="True"><name>Decrypt PDF</name><view><camerax>-666</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2066e6fa-ef8d-4e4a-af33-80050b6108d6" type="Normal" published="True"><name>Add Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="747f3fe0-ff45-4083-ae7e-eb3694669445" type="Normal" published="True"><name>Get Specific Pages</name><view><camerax>19</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7abb6d1d-9453-4cc2-8acb-75212c0de65a" type="Normal" published="True"><name>Extract Image</name><view><camerax>-261</camerax><cameray>-15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e4c4a5-a858-458b-be93-d663701b3f1d" type="Normal" published="True"><name>Collection To PDF</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8fe775f6-a379-4dde-971f-186bf63be3b3" type="Normal" published="True"><name>Get PDF Field Names</name><view><camerax>79</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5c1b4ddf-015c-474a-bd07-7f1909a4350c" type="Normal" published="True"><name>Enter Values to PDF Fields</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="215ce4e6-e837-462f-9ba2-f10200765f7b" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>801822d1-3eaf-46a5-83e5-c5e93dec1350</onsuccess></stage><stage stageid="801822d1-3eaf-46a5-83e5-c5e93dec1350" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="b8f14db3-7e8f-430f-b353-34d524f48a50" name="Stage1" type="ProcessInfo"><display x="-255" y="-165" w="180" h="150" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>C:\Program Files\Blue Prism Limited\Blue Prism Automate\itextsharp.dll</reference><reference>System.dll</reference><reference>System.Core.dll</reference><reference>System.Xml.Linq.dll</reference><reference>System.Data.Linq.dll</reference><reference>System.Runtime.dll</reference><reference>System.Text.RegularExpressions.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>iTextSharp.text</import><import>iTextSharp.text.pdf</import><import>System.IO</import><import>System.Diagnostics</import><import>iTextSharp.text.pdf.parser</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.Drawing.Imaging</import><import>System.Drawing.Drawing2D</import><import>System.Linq</import><import>System.Data.Linq.Mapping</import><import>System.Data</import><import>System.Text.RegularExpressions</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="597e8122-d1cd-432f-a69c-267ff1152a72" name="Clean Up" type="SubSheetInfo"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4f62a7fb-b60e-4aeb-9b30-60236a4c2056" name="Start" type="Start"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>324a1104-9e21-4d49-b0f6-49b0e63592cb</onsuccess></stage><stage stageid="324a1104-9e21-4d49-b0f6-49b0e63592cb" name="End" type="End"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="6a3c9052-8b7c-49a0-a06d-1b1b9ce0111d" name="Create PDF Document" type="SubSheetInfo"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><narrative>The String is converted to a pdf document. </narrative><display x="-360" y="-180" w="150" h="90" /></stage><stage stageid="bc56c40b-7466-4833-8f8c-811eda6b3adc" name="Start" type="Start"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="page data" stage="input data" /><input type="text" name="output file name (add extension .pdf)" stage="output file name" /></inputs><onsuccess>634687e8-33d8-4207-8868-0b231b273fcc</onsuccess></stage><stage stageid="be42f263-1f6b-4775-ab67-a6793e960fe8" name="End" type="End"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="1dab5820-5645-45fc-9b9c-d00fb6b478c8" name="Note1" type="Note"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="81cf7db7-2cca-41da-b886-71acb8057a00" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-255" y="45" w="180" h="230" /></stage><stage stageid="b77f08e2-6271-4249-9a01-f609a9bd60d3" name="create doc" type="Code"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="input data" expr="[input data]" /><input type="text" name="output file name" expr="[output file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>be42f263-1f6b-4775-ab67-a6793e960fe8</onsuccess><code><![CDATA[try{
		//create a document object
		var doc = new Document();
		//get the current directory
		//String path = destination_file_path;
		//get PdfWriter object
		PdfWriter.GetInstance(doc, new FileStream(output_file_name, FileMode.Create));
		//open the document for writing
		doc.Open();
		//write a paragraph to the document
		doc.Add(new Paragraph(input_data));
		//close the document
		doc.Close();
		//view the result pdf file

		//System.Diagnostics.Process.Start(path + "/"+ output_file_name+".pdf");
		Message = "No Message";
		Success = true;
	}
catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="dd162b2f-b07a-415c-bd42-9bca222267fe" name="input data" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="-345" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">test</initialvalue><private /><alwaysinit /></stage><stage stageid="a1a63edf-9a29-429a-87f9-2ef91378effb" name="Extract Text" type="SubSheetInfo"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><narrative>extract text in .txt format and data item. </narrative><display x="-465" y="-105" w="150" h="90" /></stage><stage stageid="46567e55-360b-45cd-93f8-d71eaa7db84f" name="Start" type="Start"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="File name" stage="pdf file name including the path" /><input type="text" name="Output file name (add extension .txt)" stage="destination file name" /></inputs><onsuccess>a7a05710-1abe-498b-ab7f-9602e02fc99e</onsuccess></stage><stage stageid="f9a1ee43-9e67-4649-8d8d-b0c93f659f50" name="End" type="End"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="225" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Contents" stage="Contents" /></outputs></stage><stage stageid="26b78461-4ef2-4447-879e-006f14399f2f" name="extract text" type="Code"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="120" /><inputs><input type="text" name="source file" expr="[final file name]" /><input type="text" name="destination file name" expr="[destination file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Contents" stage="Contents" /></outputs><onsuccess>f9a1ee43-9e67-4649-8d8d-b0c93f659f50</onsuccess><code><![CDATA[	
try {	
		PdfReader reader = new PdfReader(source_file);
		PdfReaderContentParser parser = new PdfReaderContentParser(reader);			
		FileStream fs = new FileStream(destination_file_name,FileMode.Create);
		StreamWriter sw=new StreamWriter(fs);
		SimpleTextExtractionStrategy strategy; 
		for (int i = 1; i <= reader.NumberOfPages; i++) {
		strategy = parser.ProcessContent(i, new SimpleTextExtractionStrategy());
		sw.WriteLine(strategy.GetResultantText()); 
			} 

		sw.Flush(); 
		sw.Close();
		Contents = File.ReadAllText(destination_file_name);
		Success = true;
		Message ="No Error";
	}
catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
   Contents = "";
   Success = false;
					
}]]></code></stage><stage stageid="56a65681-7f3f-43d7-930d-33cf831731eb" name="Split PDF To Multiple Pages" type="SubSheetInfo"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><narrative>Split a pdf with multiple pages to each page as each individual document</narrative><display x="-330" y="-165" w="150" h="90" /></stage><stage stageid="886bd3e3-b30d-42ca-8f48-db3bf5130db9" name="Start" type="Start"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="-60" /><inputs><input type="text" name="Source file" stage="Source file including path" /><input type="text" name="destination folder" stage="destination folder" /><input type="text" name="output file name only (without extension)" stage="output file name" /></inputs><onsuccess>1bb7aa1c-0d7f-4e4b-8174-b16d223875f9</onsuccess></stage><stage stageid="2681aaed-7ed4-40f4-9cce-99422ceaf37b" name="End" type="End"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="120" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="d5d553b4-5903-488d-8003-4dd25aec57db" name="split pdf to multiple pages" type="Code"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="75" /><inputs><input type="text" name="Source file" expr="[Source file including path]" /><input type="text" name="destination path" expr="[destination folder]" /><input type="text" name="output file name" expr="[output file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2681aaed-7ed4-40f4-9cce-99422ceaf37b</onsuccess><code><![CDATA[	
try{		
		//variables
		String source_file=Source_file;
		String result = destination_path+ "/" +output_file_name;
		PdfCopy copy;
		//create PdfReader object
		PdfReader reader = new PdfReader(source_file); 

		for (int i = 1; i <=reader.NumberOfPages ; i++)
		{
		//create Document object
			Document document = new Document(); 
			copy = new PdfCopy(document, new FileStream(result+i+".pdf", FileMode.Create));
			//open the document 
			document.Open();
			//add page to PdfCopy 
			copy.AddPage(copy.GetImportedPage(reader,i));
			//close the document object
			document.Close();
		}
		Message="No Error";
		Success = true;
}

catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="634687e8-33d8-4207-8868-0b231b273fcc" name="calculate path" type="Calculation"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>b77f08e2-6271-4249-9a01-f609a9bd60d3</onsuccess><calculation expression="Replace([output file name], &quot;\&quot;, &quot;\\&quot;)" stage="output file name" /></stage><stage stageid="54ad8725-ddd1-4d5e-8b40-66dc9de16467" name="output file name" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="-225" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\test.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="67264439-c83d-4531-b06a-7d098e0164ac" name="Stage2" type="Block"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="-435" y="-120" w="270" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f7d57173-4262-4ac4-844c-281ec10ed49f" name="pdf file name including the path" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-435" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\pranav.nair\Desktop\CN pdf test\CN Partial.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="abfaed96-bac8-4910-8545-9b66afa8f594" name="destination file name" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-285" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\CN pdf test\CN Partial.txt</initialvalue><private /><alwaysinit /></stage><stage stageid="a7a05710-1abe-498b-ab7f-9602e02fc99e" name="calculate path" type="Calculation"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="0" /><onsuccess>695a86af-738a-45da-848a-6f6fb6f91669</onsuccess><calculation expression="Replace([pdf file name including the path], &quot;\&quot;, &quot;\\&quot;)" stage="final file name" /></stage><stage stageid="b61d10e1-353d-40b2-a19e-63e6022f573b" name="final file name" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-435" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="695a86af-738a-45da-848a-6f6fb6f91669" name="calculate path" type="Calculation"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>26b78461-4ef2-4447-879e-006f14399f2f</onsuccess><calculation expression="Replace([destination file name], &quot;\&quot;, &quot;\\&quot;)" stage="destination file name" /></stage><stage stageid="94a4a675-0f79-4389-a25c-b969d0aa73f3" name="Source file including path" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-330" y="-75" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\01 AOF PAF CHECKLIST.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="3e57d27b-9c4d-46cd-a5d5-dcf47c7cf702" name="destination folder" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-225" y="-75" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\New folder</initialvalue><private /><alwaysinit /></stage><stage stageid="04576225-0b20-4fdf-82c5-ac97740d48d2" name="output file name" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-330" y="-45" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">1</initialvalue><private /><alwaysinit /></stage><stage stageid="5300f1e6-a33f-4bea-b546-4caa0aeed21a" name="Stage3" type="Block"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-540" y="-45" w="360" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3cba6c8d-98a7-429a-902c-7cb3e1eb7c5a" name="Stage4" type="Block"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-405" y="-105" w="240" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1bb7aa1c-0d7f-4e4b-8174-b16d223875f9" name="calculate source path" type="Calculation"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="-15" /><onsuccess>6374de68-8f81-459f-9d40-b19aa939489b</onsuccess><calculation expression="Replace([Source file including path], &quot;\&quot;, &quot;\\&quot;)" stage="Source file including path" /></stage><stage stageid="6374de68-8f81-459f-9d40-b19aa939489b" name="calculate destination path" type="Calculation"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="30" /><onsuccess>d5d553b4-5903-488d-8003-4dd25aec57db</onsuccess><calculation expression="Replace([destination folder], &quot;\&quot;, &quot;\\&quot;)" stage="destination folder" /></stage><stage stageid="85829a3f-0fe7-4a07-837b-66e329598e97" name="Combine PDF Files To One" type="SubSheetInfo"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><narrative>combine multiple pdf files as one. Make sure you get the nameing and path right. </narrative><display x="-420" y="-165" w="150" h="90" /></stage><stage stageid="4bc3a10e-7fa0-40a6-a5d9-254f64c97efd" name="Start" type="Start"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="-180" /><inputs><input type="text" name="file names separated by comma" stage="file names with path separated by comma" /><input type="text" name="destination folder" stage="destination folder" /><input type="text" name="output file name only(without extension)" stage="output file name" /></inputs><onsuccess>c5216e70-fc03-4a66-8099-1491797404bd</onsuccess></stage><stage stageid="1ce24ba6-2af7-4fc2-90b3-243c78021f63" name="End" type="End"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="60" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="0709c511-4dd9-4131-ab15-3d58482b3de3" name="combine pdf code stage" type="Code"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="0" /><inputs><input type="text" name="file names" expr="[file names with path separated by comma]" /><input type="text" name="destination folder" expr="[destination folder]" /><input type="text" name="output file name" expr="[output file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>1ce24ba6-2af7-4fc2-90b3-243c78021f63</onsuccess><code><![CDATA[		
try{		
		String[] source_files= file_names.Split(',');
		String result = destination_folder + "\\" + output_file_name+".pdf";

		//create Document object
		Document document = new Document();
		//create PdfCopy object
		PdfCopy copy = new PdfCopy(document, new FileStream(result, FileMode.Create));
		//open the document
		document.Open();
		//PdfReader variable
		PdfReader reader;
		for (int i = 0; i < source_files.Length; i++)
		{
		//create PdfReader object
		reader = new PdfReader(source_files[i]);
		//merge combine pages
		for(int page=1;page<=reader.NumberOfPages;page++)
		  copy.AddPage(copy.GetImportedPage(reader,page));

		}
		//close the document object
		document.Close();
		Message = "No error";
		Success = true;
}

catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="8d75bac0-ddf2-4463-94bc-5c025f2fad87" name="file names with path separated by comma" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-390" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d20e015-0fe2-4c29-a656-e55ca6a1cd2f" name="destination folder" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-270" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4a00c38-8c6b-42c2-a1e1-f6c5fce77823" name="output file name" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-300" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">result</initialvalue><private /><alwaysinit /></stage><stage stageid="c5216e70-fc03-4a66-8099-1491797404bd" name="calculate source" type="Calculation"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="-120" /><onsuccess>1d0b0802-5373-442f-9d80-b41258a27394</onsuccess><calculation expression="Replace([file names with path separated by comma], &quot;\&quot;, &quot;/&quot;)" stage="file names with path separated by comma" /></stage><stage stageid="1d0b0802-5373-442f-9d80-b41258a27394" name="calculate source" type="Calculation"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="-60" /><onsuccess>0709c511-4dd9-4131-ab15-3d58482b3de3</onsuccess><calculation expression="Replace([destination folder], &quot;\&quot;, &quot;\\&quot;)" stage="destination folder" /></stage><stage stageid="d0494b26-94f2-4804-a4ea-a36fb527237f" name="Stage5" type="Block"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-495" y="-105" w="285" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8859c63e-dd4f-4893-acf1-40db74ece1b2" name="Encrypt PDF" type="SubSheetInfo"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><narrative>Encrypt pdf is used to encrypt a pdf with user password and </narrative><display x="-465" y="-120" w="150" h="90" /></stage><stage stageid="791896e8-f078-46e7-89f9-86392afd6ced" name="Start" type="Start"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="-165" /><inputs><input type="text" name="File name " stage="file name" /><input type="text" name="Output file name (add extension .pdf)" stage="output file name" /><input type="text" name="Password" stage="password" /><input type="flag" name="Delete input file" stage="Delete input file" /></inputs><onsuccess>d906c206-84b3-42dc-b369-6cb7f74e013a</onsuccess></stage><stage stageid="429af356-f54c-497e-bfc0-2a2118cf9b02" name="End" type="End"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="225" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="99885528-ec40-42f1-b207-d33ab822603e" name="file name" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-450" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Sales Audit\Output\11_Apr_2018\Sales_Audit_SR-214849.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="f1b81553-4c97-4dd1-81ed-6db0be8397e5" name="output file name" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-375" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Sales Audit\Output\11_Apr_2018\Sales_Audit_SR-214849_Protected.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="cb9a5048-042c-4df6-94a9-6c752cafda9e" name="password" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-300" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">1234</initialvalue><private /><alwaysinit /></stage><stage stageid="d906c206-84b3-42dc-b369-6cb7f74e013a" name="calculate path" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>01f57647-644a-4447-b4ce-2586fa0dafca</onsuccess><calculation expression="Replace([file name], &quot;\&quot;, &quot;\\&quot;)" stage="file name" /></stage><stage stageid="01f57647-644a-4447-b4ce-2586fa0dafca" name="calculate path" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>23a4e3c6-faf4-4dc1-b333-fa27b6f4bf6a</onsuccess><calculation expression="Replace([output file name], &quot;\&quot;, &quot;\\&quot;)" stage="output file name" /></stage><stage stageid="2707d787-f71d-4dbf-8e27-1f4d77f99d3d" name="Decrypt PDF" type="SubSheetInfo"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><narrative>Decrypt a pdf file ans save it as decryprted pdf file</narrative><display x="-405" y="-120" w="150" h="90" /></stage><stage stageid="ff8e1877-8a6f-467c-a351-dffb6db82f91" name="End" type="End"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="210" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="6a57b76b-ebf8-474f-b252-32fa615beb7e" name="Decrypt code" type="Code"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="135" /><inputs><input type="text" name="Source File" expr="[file name]" /><input type="text" name="Destination file" expr="[output file name]" /><input type="text" name="Password" expr="[password]" /><input type="text" name="Delete_input_file" expr="[Delete input file]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>ff8e1877-8a6f-467c-a351-dffb6db82f91</onsuccess><code><![CDATA[try{	
		byte[] OWNER = Encoding.ASCII.GetBytes(Password);
		PdfReader reader = new PdfReader(Source_File,OWNER);
		PdfStamper stamper = new PdfStamper(reader, new FileStream(Destination_file, FileMode.Create));
		stamper.Close();
		reader.Close();
			
		if(Delete_input_file=="True")
		{
			System.IO.File.Delete(Source_File);
		}
		Message = "No Error";
		Success = true;
	}

catch ( Exception caughtEx )
{ 
    Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="55e0f55f-bdab-47e4-8b45-f78fb7c8b9ec" name="file name" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-390" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1be3c90-892a-40cc-a4c3-6132a7509735" name="output file name" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-315" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32253199-9a3a-4909-828a-ac4357c72581" name="password" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-240" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e7f7d8f-2fde-423e-a356-8cea7611b40a" name="Start" type="Start"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File name " stage="file name" /><input type="text" name="Output file name (add extension .pdf)" stage="output file name" /><input type="text" name="Password" stage="password" /><input type="flag" name="Delete input file " stage="Delete souce file" /></inputs><onsuccess>fd1c9c5e-066b-4bc7-b40c-a42edc866569</onsuccess></stage><stage stageid="fd1c9c5e-066b-4bc7-b40c-a42edc866569" name="calculate path" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>b7fcbd04-1f1e-4455-8a19-ce8cfdf8e0c1</onsuccess><calculation expression="Replace([file name], &quot;\&quot;, &quot;\\&quot;)" stage="file name" /></stage><stage stageid="b7fcbd04-1f1e-4455-8a19-ce8cfdf8e0c1" name="calculate path" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>1f57caf6-2c43-4507-9e04-bba6d5715298</onsuccess><calculation expression="Replace([output file name], &quot;\&quot;, &quot;\\&quot;)" stage="output file name" /></stage><stage stageid="c170e621-777e-4ab0-87e7-2eac61e5903b" name="Add Text" type="SubSheetInfo"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><narrative>Append text to an existing pdf. You can choose on how many pages does the text needs to appended. Also open the code to change the coordinte on where the text shall be placed. </narrative><display x="-390" y="-150" w="150" h="90" /></stage><stage stageid="97b50272-f5f4-4e90-bb54-900b91618de2" name="Start" type="Start"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File name" stage="File name" /><input type="text" name="output file name (add extension .pdf)" stage="output file" /><input type="text" name="Text to append" stage="Text to append" /><input type="text" name="Pages (eg 1,2-5..)" stage="Pages" /><input type="number" name="X coordinate" stage="X coordinate" /><input type="number" name="Y coordinate" stage="Y coordinate" /></inputs><onsuccess>c67fa434-8b2a-4331-bf92-cca5900e520a</onsuccess></stage><stage stageid="e345cdbd-ecad-4bd0-aaaf-278efbf910f1" name="End" type="End"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="2fe85e22-765b-442b-9368-876a48b8c006" name="append text code" type="Code"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="60" /><inputs><input type="text" name="Source File" expr="[File name]" /><input type="text" name="Output File" expr="[output file]" /><input type="text" name="Text Data" expr="[Text to append]" /><input type="text" name="Pages" expr="[Pages]" /><input type="number" name="x" expr="[X coordinate]" /><input type="number" name="y" expr="[Y coordinate]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>e345cdbd-ecad-4bd0-aaaf-278efbf910f1</onsuccess><code><![CDATA[try{
		//variables
		String pathin = Source_File;
		String pathout = Output_File;
		//create a document object
		//var doc = new Document(PageSize.A4);
		//create PdfReader object to read from the existing document
		PdfReader reader = new PdfReader(pathin);
		//select two pages from the original document
		reader.SelectPages(Pages);
		//create PdfStamper object to write to get the pages from reader 
		PdfStamper stamper=new PdfStamper(reader, new FileStream(pathout, FileMode.Create));
		// PdfContentByte from stamper to add content to the pages over the original content
		PdfContentByte pbover = stamper.GetOverContent(1);
		//add content to the page using ColumnText
		float xx = (float)x;
		float yy = (float)y;
		ColumnText.ShowTextAligned(pbover, Element.ALIGN_LEFT, new Phrase(Text_Data), xx, yy, 0);
		// PdfContentByte from stamper to add content to the pages under the original content
		PdfContentByte pbunder = stamper.GetUnderContent(1);
		stamper.Close();
		Message = "No Error";
		Success = true;
	}
	
	
catch ( Exception caughtEx )
{ 
	Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="4ab714ab-85a3-492b-a989-36a08f050578" name="File name" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-390" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f6340398-4f99-4838-ae33-54c59821c448" name="output file" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-315" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9baa1d5-d69b-4f05-a138-e82038a529ab" name="Text to append" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-240" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ed68c95-bdb1-4228-b39e-eb2afdbae00c" name="Pages" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-255" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c67fa434-8b2a-4331-bf92-cca5900e520a" name="calculate path" type="Calculation"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>61fff50c-31ac-4b31-a816-9b0e6a919ac7</onsuccess><calculation expression="Replace([File name], &quot;\&quot;, &quot;\\&quot;)" stage="File name" /></stage><stage stageid="61fff50c-31ac-4b31-a816-9b0e6a919ac7" name="calculate path" type="Calculation"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="0" /><onsuccess>2fe85e22-765b-442b-9368-876a48b8c006</onsuccess><calculation expression="Replace([output file], &quot;\&quot;, &quot;\\&quot;)" stage="output file" /></stage><stage stageid="acf8823a-ea86-4855-a504-edca49259b75" name="Stage6" type="Block"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-465" y="-90" w="285" h="135" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="edd5fa53-8ff8-4d99-9473-bb4555ace340" name="Message" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><display x="-255" y="-60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f1e093d-ae69-4aa6-9b93-29d318051265" name="Success" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><display x="-375" y="-60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2218b91b-b699-4910-9ba4-e7fd85b9d019" name="Message" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><display x="-285" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d1aa764-2d7d-40d7-aa4e-84a8561ee6c8" name="Success" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><display x="-435" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9f0a19f-d8fd-42c5-ba23-7f0f0349005d" name="Message" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><display x="-330" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9745f411-1f03-49b8-ac3d-1053f9b5bf0e" name="Success" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><display x="-225" y="-45" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b90ca8b6-d260-4be6-9213-fe24309e4c70" name="Message" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><display x="-375" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20389808-e748-4ed6-8b9b-2f713b65ecc3" name="Success" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><display x="-420" y="-45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56b953a5-b363-4786-9f8c-9f56f78dce9f" name="Message" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><display x="-315" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7696dc7f-2076-4f06-b1cb-28d7f0e38ea5" name="Success" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><display x="-390" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67054b7f-703a-4255-adc4-cc429580a353" name="Stage7" type="Block"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-540" y="-60" w="330" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="08293b6b-3d1a-4c21-8db3-ce67925d6889" name="Message" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><display x="-255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec7f6256-b4f4-4790-8b19-1310bc9bbb69" name="Stage8" type="Block"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-480" y="-60" w="285" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f9dbf3be-f299-4466-9d44-f22a076e347d" name="Success" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><display x="-405" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca9df196-fefa-4bae-8bfb-8585c2d91558" name="Message" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-330" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27dcaedc-efd4-4127-b853-ef845df8c615" name="Success" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-405" y="-30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9e2199c-60e0-471a-98dc-2553131e3ab2" name="Contents" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><display x="-285" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2542b63-353b-4683-a4d1-eec072919017" name="encrypt pdf2" type="Code"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="165" /><inputs><input type="text" name="Source File" expr="[file name]" /><input type="text" name="Output File" expr="[output file name]" /><input type="text" name="Password" expr="[password]" /><input type="text" name="Delete input file" expr="True" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>429af356-f54c-497e-bfc0-2a2118cf9b02</onsuccess><code><![CDATA[try{	
		byte[] USER = Encoding.ASCII.GetBytes(Password); 
		byte[] OWNER = Encoding.ASCII.GetBytes(Password);
		PdfReader reader = new PdfReader(Source_File);
		PdfStamper stamper = new PdfStamper(reader, new FileStream(Output_File,FileMode.Create));
		stamper.SetEncryption( USER,OWNER, PdfWriter.AllowPrinting, PdfWriter.ENCRYPTION_AES_128);
		stamper.Close();
		reader.Close();
		Message = "NO Error";
		Success = true;
		
		if(Delete_input_file=="True")
		{
			System.IO.File.Delete(Source_File);
		}
		
		
	}


catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="a46771e6-2e82-4d0e-82ca-a0c977c5fdd3" name="Delete input file" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><display x="-465" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="25c833a2-2efe-4ea7-b511-a29c08d19b93" name="Get Specific Pages" type="SubSheetInfo"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><narrative>Extract specific pages of a pdf document. Send the required pages as a comma separated code to the string,</narrative><display x="-345" y="-105" w="150" h="90" /></stage><stage stageid="781ce301-e215-40b1-849d-083bffdc01dd" name="Start" type="Start"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File name" stage="Source file including path" /><input type="text" name="Destination folder" stage="destination folder" /><input type="text" name="Output file name" stage="output file name" /><input type="text" name="Required pages (1,2,3...)" stage="required pages" /></inputs><onsuccess>e4545093-c299-4ac3-b3be-b9197c6b5b60</onsuccess></stage><stage stageid="e4408cc2-d531-49f4-8794-5161eb21c65d" name="End" type="End"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="message" stage="Message" /><output type="flag" name="success" stage="Success" /></outputs></stage><stage stageid="e4545093-c299-4ac3-b3be-b9197c6b5b60" name="get perticular page" type="Code"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Source file" expr="[Source file including path]" /><input type="text" name="destination path" expr="[destination folder]" /><input type="text" name="output file name" expr="[output file name]" /><input type="text" name="required pages" expr="[required pages]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>e4408cc2-d531-49f4-8794-5161eb21c65d</onsuccess><code><![CDATA[List<int> pagenums = required_pages.Split(',').Select(int.Parse).ToList();

//List<int> pagenums = new List<int>();
//pagenums.Add(1);
//test=pagenums[1];
pagenums.Sort();
int reqpagecount = pagenums.Count();
//test = reqpagecount;
try{		
		//variables
		String source_file=Source_file;
		String result = destination_path+ "/" +output_file_name;
		PdfCopy copy;
		//create PdfReader object
		PdfReader reader = new PdfReader(source_file); 
		int pagecount;
		pagecount=0;

		for (int i = 1; i <=reader.NumberOfPages ; i++)
		{
			if(i == pagenums[pagecount])
			
			{	
				
				//test2="here";
				//create Document object
				Document document = new Document(); 
				copy = new PdfCopy(document, new FileStream(result+i+".pdf", FileMode.Create));
				//open the document 
				document.Open();
				//add page to PdfCopy 
				copy.AddPage(copy.GetImportedPage(reader,i));
				//close the document object
				document.Close();
				pagecount++;
				
			}
			if(reqpagecount==pagecount)
				{
					break;
				}
			
		}
		Message="No Error";
		Success = true;
		//test2="";
}

catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
	//test2="not here";
					
}]]></code></stage><stage stageid="a8ebdc80-0228-4758-b803-78e8d3a4ba2c" name="Source file including path" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-330" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41853ffe-c554-4c98-a626-724d2eabd1e3" name="destination folder" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-255" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6204cd52-7050-4197-979f-a00b541efdb8" name="output file name" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-180" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3449db4-bdef-4f6e-8a14-9530dec699d0" name="Message" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><display x="-270" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28b6f4e4-d1ff-49cd-8477-203e2c4d5c5e" name="Success" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><display x="-345" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f5651e6-5c8b-468c-ae9a-83aa74008125" name="Stage9" type="Block"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-420" y="-45" w="330" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b29e7cbb-f62b-494b-8e2a-292dbc0fc95f" name="Extract Image" type="SubSheetInfo"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><narrative>extract all the images in pdf file to specific folder. </narrative><display x="-480" y="-165" w="150" h="90" /></stage><stage stageid="5a1ddb12-bb35-48e2-862e-e83ab942e4f9" name="Start" type="Start"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="-135" /><inputs><input type="text" name="File name" stage="File name" /><input type="text" name="Destination Folder" stage="Destination Folder" /><input type="text" name="image name" stage="image name" /></inputs><onsuccess>9d539c6e-ea01-45c4-a61e-ae273b216639</onsuccess></stage><stage stageid="eb4cd16c-a790-486d-941e-276557402f1d" name="End" type="End"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="120" /></stage><stage stageid="2d0ab34d-f1e6-45e2-8520-de9865bdab00" name="extract image" type="Code"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="45" /><inputs><input type="text" name="Source" expr="[File name]" /><input type="text" name="Out" expr="[Destination Folder]" /><input type="text" name="imagename" expr="[image name]" /></inputs><onsuccess>eb4cd16c-a790-486d-941e-276557402f1d</onsuccess><code><![CDATA[PdfReader reader = new PdfReader(Source);
PRStream pst;
PdfImageObject pio;
PdfObject po;
int n = reader.XrefSize; //number of objects in pdf document
FileStream fs=null;
String path=Out;
try
{
		for (int i = 0; i < n; i++)
		{
				po = reader.GetPdfObject(i); //get the object at the index i in the objects collection
				if (po == null || !po.IsStream()) //object not found so continue
					continue;
				pst = (PRStream)po; //cast object to stream
				PdfObject type = pst.Get(PdfName.SUBTYPE); //get the object type
				//check if the object is the image type object
				if (type != null && type.ToString().Equals(PdfName.IMAGE.ToString()))
				{
						pio = new PdfImageObject(pst); //get the image
						fs = new FileStream(path + imagename + i + ".jpg", FileMode.Create);
						//read bytes of image in to an array
						byte[] imgdata=pio.GetImageAsBytes();
						//write the bytes array to file
						fs.Write(imgdata, 0, imgdata.Length);
						fs.Flush();
						fs.Close();
				}
		  }


}
catch (Exception e) { Console.WriteLine(e.Message); }]]></code></stage><stage stageid="4f35919f-9002-40de-bcbb-e4137ee80ccf" name="required pages" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5a5059a-bab3-4c48-9196-336dba351d38" name="Delete input file" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-330" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="338b8b23-383e-4a5d-af4e-ddd2e896c7e0" name="flag to code" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-405" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">False</initialvalue><private /><alwaysinit /></stage><stage stageid="23a4e3c6-faf4-4dc1-b333-fa27b6f4bf6a" name="flag decider" type="Decision"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Delete input file] = True" /><ontrue>9376b3d5-232a-46fd-b6b2-59f1b4afa522</ontrue><onfalse>d5e8a822-3f80-472a-a558-711d0cadc9ce</onfalse></stage><stage stageid="9376b3d5-232a-46fd-b6b2-59f1b4afa522" name="flag is true" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-135" y="45" /><onsuccess>6f6bc665-1186-4b9e-b20c-a4c78f0a38c8</onsuccess><calculation expression="&quot;True&quot;" stage="flag to code" /></stage><stage stageid="d5e8a822-3f80-472a-a558-711d0cadc9ce" name="flag is false" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="180" y="45" /><onsuccess>97ed0080-4140-4c99-ae2a-ee94aeb7d132</onsuccess><calculation expression="&quot;False&quot;" stage="flag to code" /></stage><stage stageid="0e067b00-3b6d-410a-b05c-5ae540fdc158" name="Delete souce file" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><display x="-345" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f57caf6-2c43-4507-9e04-bba6d5715298" name="Flag deicision" type="Decision"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Delete souce file] = True" /><ontrue>ba4d2f75-7b3c-445f-881c-28bb86740a70</ontrue><onfalse>c6e77ae5-9abf-475e-b585-0863205b37c5</onfalse></stage><stage stageid="ba4d2f75-7b3c-445f-881c-28bb86740a70" name="set flag true" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-90" y="30" /><onsuccess>2721a568-fe4f-406a-8e12-d927a9d711e9</onsuccess><calculation expression="&quot;True&quot;" stage="Delete input file" /></stage><stage stageid="c6e77ae5-9abf-475e-b585-0863205b37c5" name="set flag false" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="120" y="30" /><onsuccess>0899a876-880b-4319-9e8a-f0969bb0478e</onsuccess><calculation expression="&quot;False&quot;" stage="Delete input file" /></stage><stage stageid="2721a568-fe4f-406a-8e12-d927a9d711e9" name="Anchor1" type="Anchor"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-90" y="135" w="10" h="10" /><onsuccess>6a57b76b-ebf8-474f-b252-32fa615beb7e</onsuccess></stage><stage stageid="0899a876-880b-4319-9e8a-f0969bb0478e" name="Anchor2" type="Anchor"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="120" y="135" w="10" h="10" /><onsuccess>6a57b76b-ebf8-474f-b252-32fa615beb7e</onsuccess></stage><stage stageid="6f6bc665-1186-4b9e-b20c-a4c78f0a38c8" name="Anchor3" type="Anchor"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-135" y="165" w="10" h="10" /><onsuccess>f2542b63-353b-4683-a4d1-eec072919017</onsuccess></stage><stage stageid="97ed0080-4140-4c99-ae2a-ee94aeb7d132" name="Anchor4" type="Anchor"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="180" y="165" w="10" h="10" /><onsuccess>f2542b63-353b-4683-a4d1-eec072919017</onsuccess></stage><stage stageid="4f836d51-351b-42f3-aee1-26c6efae1e39" name="File name" type="Data"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><display x="-495" y="-90" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\RPA\AML Check\Output\SR-228721\B-143122_11-01-2018.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="6fbe5ca4-a340-4402-a93d-3881d05a74f7" name="Destination Folder" type="Data"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><display x="-555" y="-90" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\RPA\AML Check\Output\SR-228721\</initialvalue><private /><alwaysinit /></stage><stage stageid="9d539c6e-ea01-45c4-a61e-ae273b216639" name="calculate path" type="Calculation"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="-75" /><onsuccess>3735befd-30fa-4134-84fe-86672c67098a</onsuccess><calculation expression="Replace([File name], &quot;\&quot;, &quot;\\&quot;)" stage="File name" /></stage><stage stageid="3735befd-30fa-4134-84fe-86672c67098a" name="calculate path" type="Calculation"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="-30" /><onsuccess>2d0ab34d-f1e6-45e2-8520-de9865bdab00</onsuccess><calculation expression="Replace([Destination Folder], &quot;\&quot;, &quot;\\&quot;)" stage="Destination Folder" /></stage><stage stageid="86f32472-c00b-413e-b4ee-a66c0fc36a59" name="Stage11" type="Block"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-600" y="-120" w="210" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1e522424-76b7-47f5-84ab-1310b41cfb01" name="X coordinate" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-270" y="0" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c98c1af9-3bfa-4416-8ad1-9ab86823506c" name="Y coordinate" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-420" y="0" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5b4ac95-5703-44c1-a01a-da619634ff1f" name="image name" type="Data"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><display x="-435" y="-90" /><datatype>text</datatype><initialvalue xml:space="preserve">test</initialvalue><private /><alwaysinit /></stage><stage stageid="cda53ae7-481d-4ff6-a06e-759690a5efeb" name="Collection To PDF" type="SubSheetInfo"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><narrative>convert a collection to pdf. </narrative><display x="-225" y="-135" w="150" h="90" /></stage><stage stageid="f2e89a0d-30bf-4173-8f6f-83a4de7bd7ab" name="Start" type="Start"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Collection data" stage="dt" /><input type="text" name="Output file name" stage="Output file name" /></inputs><onsuccess>1bf793db-eb37-4db6-bf1b-e8bee3b60e0f</onsuccess></stage><stage stageid="08259771-6e76-427a-a6ac-177f98b03758" name="End" type="End"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1bf793db-eb37-4db6-bf1b-e8bee3b60e0f" name="collection to pdf" type="Code"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="dt" expr="[dt]" /><input type="text" name="output" expr="[Output file name]" /></inputs><outputs><output type="number" name="test" stage="test" /></outputs><onsuccess>08259771-6e76-427a-a6ac-177f98b03758</onsuccess><code><![CDATA[Document document = new Document();
    PdfWriter writer = PdfWriter.GetInstance(document, new FileStream("C:\\Users\\pranav.nair\\Desktop\\sample.pdf", FileMode.Create));
    document.Open();
            iTextSharp.text.Font font5 = iTextSharp.text.FontFactory.GetFont(FontFactory.HELVETICA, 5);
	test = dt.Columns.Count;
	
	PdfPTable table = new PdfPTable(dt.Columns.Count);
    PdfPRow row = null;
	
   // float[] widths = new float[] { 4f, 4f, 4f};
   
	int test2  = (int) test;
	float[] widths = new float[test2];
	
	for(int j=0; j<=test2-1;j++)
		{
			widths[j]=4f;
		}

    table.SetWidths(widths);

    table.WidthPercentage = 100;
    int iCol = 0;
    string colname = "";
    PdfPCell cell = new PdfPCell(new Phrase("Products"));

    cell.Colspan = dt.Columns.Count;

    foreach (DataColumn c in dt.Columns)
    {

        table.AddCell(new Phrase(c.ColumnName, font5));
    }

    foreach (DataRow r in dt.Rows)
    {
        if (dt.Rows.Count > 0)
        {
            table.AddCell(new Phrase(r[0].ToString(), font5));
            table.AddCell(new Phrase(r[1].ToString(), font5));
            table.AddCell(new Phrase(r[2].ToString(), font5));
        }          
    }  document.Add(table);
        document.Close();
    ]]></code></stage><stage stageid="6f0351cc-83d7-4f70-bf87-1f05ddd3c4d5" name="dt" type="Collection"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="-270" y="-45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="87b18f40-162b-4036-a843-4b1858802832" name="Output file name" type="Data"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><display x="-210" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="077b4e1a-a946-4c16-9347-2016d8aa2de7" name="test" type="Data"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><display x="-150" y="-45" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18021903-54b4-41e6-91d1-9e7cd6f67a42" name="Stage10" type="Block"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="-300" y="-75" w="195" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a59e3e55-d85c-4a5a-b6aa-81569651b990" name="Get PDF Field Names" type="SubSheetInfo"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="724b477c-5199-4864-ad07-310d1be2d256" name="Start" type="Start"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" stage="Filename" /><input type="text" name="Temporary File Path" stage="Temporary Filename" /></inputs><onsuccess>d8221384-db0b-4b27-9c0d-8a3ded2d0573</onsuccess></stage><stage stageid="d37e26b9-5c6f-4ece-a734-492384414269" name="End" type="End"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="165" /><outputs><output type="collection" name="Field Names" stage="Split Values" /><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="092c29d6-bdfe-481e-a806-f60b71ba275e" name="get field name" type="Code"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="60" w="120" h="30" /><inputs><input type="text" name="TempFile" expr="[Temporary Filename]" /><input type="text" name="Filename" expr="[Filename]" /></inputs><outputs><output type="text" name="output" stage="outtt" /><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>25441e4b-00f1-4335-abe7-5f8313437cf4</onsuccess><code><![CDATA[try{   //path to source file
		System.Text.StringBuilder sb = new System.Text.StringBuilder();
		String source = Filename;
		//create PdfReader object to read the source file
		PdfReader reader = new PdfReader(source);
		//PdfStamper object to modify the content of the PDF
		PdfStamper stamp = new PdfStamper(reader, new 
		FileStream(TempFile+"//"+"test.pdf", FileMode.Create));
		AcroFields form = stamp.AcroFields;
		IDictionary<string, AcroFields.Item> fs = form.Fields;
		
		DataRow dr;
		string line;
		
		foreach (var f in fs)
		{
		sb.Append(f.Key);
		sb.Append(Environment.NewLine);
		
		}
		output = sb.ToString();
		Message = "No Error";
		Success = true;
}


catch ( Exception caughtEx )
{ 
	Message = caughtEx.Message;
    Success = false;
	output = "Error";	
}]]></code></stage><stage stageid="f67a2d7a-769e-44ec-9b22-b9b4a3aa99d7" name="outtt" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="210" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efd70168-4546-432d-8d30-fb9c7418e1ae" name="Message" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="150" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b48b6863-1b27-4f6d-8010-7fa759da7ed2" name="Success" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="285" y="-75" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8221384-db0b-4b27-9c0d-8a3ded2d0573" name="calculate path" type="Calculation"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="-30" /><onsuccess>d88a7022-4447-4ef3-ba92-525ff3e0d0a1</onsuccess><calculation expression="Replace([Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Filename" /></stage><stage stageid="d88a7022-4447-4ef3-ba92-525ff3e0d0a1" name="calculate path" type="Calculation"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>092c29d6-bdfe-481e-a806-f60b71ba275e</onsuccess><calculation expression="Replace([Temporary Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Temporary Filename" /></stage><stage stageid="51f80a23-e858-4edd-a2f5-7858ae901834" name="Filename" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\Form_v8.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="79b0f00c-5547-4cee-b624-c5f68310ecdf" name="Temporary Filename" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="285" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop</initialvalue><private /><alwaysinit /></stage><stage stageid="25441e4b-00f1-4335-abe7-5f8313437cf4" name="split to collection" type="Action"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="105" /><inputs><input type="text" name="Text to Split" narrative="The text to split" expr="[outtt]" /><input type="text" name="Split Char" narrative="The split delimiter" expr="NewLine()" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" expr="&quot;Fields&quot;" /></inputs><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs><onsuccess>d37e26b9-5c6f-4ece-a734-492384414269</onsuccess><resource object="Utility - Strings" action="Split Text" /></stage><stage stageid="2684d2ac-a125-4d76-bd56-c11647068185" name="Split Values" type="Collection"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="345" y="-75" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Fields" type="text" /></collectioninfo></stage><stage stageid="c70e24d6-fa03-4511-813a-04ded799a8c3" name="Enter Values to PDF Fields" type="SubSheetInfo"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b51a3650-b63a-4dfe-97d2-fdeb849ba0ca" name="Start" type="Start"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" stage="Filename" /><input type="text" name="Temporary File path" stage="Temporary Filename" /><input type="flag" name="Text Field Present?" stage="Text Field Present" /><input type="flag" name="ComboBox Present?" stage="Combo Box Present" /><input type="text" name="TextField Name" stage="Text Field Name" /><input type="text" name="ComboBox Name" stage="Combo Box Namee" /><input type="text" name="TextField Value" stage="Text Field value" /><input type="text" name="ComboBox Value" stage="ComboBox value" /></inputs><onsuccess>817019dc-2489-4924-bb29-c05a0f2c9419</onsuccess></stage><stage stageid="58e70617-5c34-434b-8564-63ffcbe0709e" name="End" type="End"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="5ce53002-2b1e-44b4-b66f-f64bdd911c3e" name="Code1" type="Code"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="45" w="120" h="30" /><inputs><input type="text" name="Filename" expr="[Filename]" /><input type="text" name="TempFile name" expr="[Temporary Filename]" /><input type="flag" name="TextFields Present" expr="[Text Field Present]" /><input type="flag" name="ComboBox Present" expr="[Combo Box Present]" /><input type="text" name="TextField Name" expr="[Text Field Name]" /><input type="text" name="ComboBox Name" expr="[Combo Box Namee]" /><input type="text" name="Text Field Value" expr="[Text Field value]" /><input type="text" name="Combo Box value" expr="[ComboBox value]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>58e70617-5c34-434b-8564-63ffcbe0709e</onsuccess><code><![CDATA[			
try{			
			//path to source file
			String source = Filename;
			//create PdfReader object to read the source file
			PdfReader reader = new PdfReader(source);
			//PdfStamper object to modify the content of the PDF
			PdfStamper stamp = new PdfStamper(reader, new FileStream(TempFile_name+"//"+"test.pdf", FileMode.Create));
			//get form fields
			AcroFields form = stamp.AcroFields;

			if(TextFields_Present = true)
			{
				//fill in text fiels
				form.SetField(TextField_Name, Text_Field_Value);
				//select combo box
			}

			if(ComboBox_Present = true)
			{
				form.SetListSelection(ComboBox_Name, new string[]{Combo_Box_value});
			}

			stamp.Close();
			
			Message = "No Error";
			Success = true;
}


catch ( Exception caughtEx )
{ 
	Message = caughtEx.Message;
    Success = false;	
}]]></code></stage><stage stageid="817019dc-2489-4924-bb29-c05a0f2c9419" name="calculate path" type="Calculation"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>64283017-bdc9-4721-a089-08c3662da271</onsuccess><calculation expression="Replace([Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Filename" /></stage><stage stageid="64283017-bdc9-4721-a089-08c3662da271" name="calculate path" type="Calculation"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>5ce53002-2b1e-44b4-b66f-f64bdd911c3e</onsuccess><calculation expression="Replace([Temporary Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Temporary Filename" /></stage><stage stageid="afaee708-2165-4027-bb45-885f20da0cb5" name="Filename" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="180" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\Form_v8.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="76cd2e8f-c757-4c69-b071-4f53f2d461bf" name="Temporary Filename" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="285" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop</initialvalue><private /><alwaysinit /></stage><stage stageid="aabaedcf-f00e-49c5-afe2-9d3475ab40de" name="Text Field Present" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="-195" y="0" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1402de14-8f92-4dcb-8847-4beb739dae3e" name="Combo Box Present" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="-75" y="0" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc31cf53-7bae-4ade-8168-420b4cba6281" name="Text Field Name" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="150" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c41311c-10d2-4d22-9327-dd0def8dce13" name="Combo Box Namee" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="210" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a70a8044-1883-4e27-a36d-1f238c200b5e" name="Text Field value" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="330" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0415aee4-f2f2-4be2-9aca-3c8994814d46" name="ComboBox value" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="270" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c30e9838-c093-4698-b3ca-8e60f79b5032" name="Message" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="390" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cab86600-b3a9-43c5-80b4-32d6c5071c0c" name="Success" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="-135" y="0" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="47d64af5-9d53-4b29-acd7-934570122309" name="PDF To Text Converter" xmlns="http://www.blueprism.co.uk/product/process"><process name="PDF To Text Converter" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="PDF_ConvertpdftoText"><id>f193a959-463a-4f44-b09d-200a8e52e605</id><element name="window_AdobeWindow"><id>86816dde-342d-445e-9da7-e4d2179acca6</id><type>Window</type><basetype>Window</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText" comparisontype="dynamic" inuse="True"><ProcessValue datatype="text" value="*Adobe Reader" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="AcrobatSDIWindow" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="1084711440" /></attribute><attribute name="X"><ProcessValue datatype="number" value="30" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="30" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="1022" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="981" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="6" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="8" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="&lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="1" /></attribute><attribute name="TypeName" inuse="True"><ProcessValue datatype="text" value="AcrobatSDIWindow" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:38,81,1002,1043" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="382664704" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>Win32Launch</id><parameters><parameter><name>Path</name><value>C:\Program Files (x86)\Adobe\Reader 11.0\Reader\AcroRd32.exe</value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>WorkingDirectory</name><value></value></parameter><parameter><name>NonInvasive</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter><parameter><name>Options</name><value></value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="8b56b908-d72c-414e-8e0e-9b41cfabbcbe" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="195fb680-9a39-4fc4-9261-8c785e10b9b5" type="Normal" published="True"><name>Pdf to Txt</name><view><camerax>167</camerax><cameray>15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f07d9481-ef5a-46ee-8da4-01dd28e0ed35" type="Normal" published="True"><name>Pdf - Txt</name><view><camerax>450</camerax><cameray>-85</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="c65d6270-48a5-4f8e-b5f5-8231b28f5084" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>5b34f3b6-df78-46a7-adda-fa08923ec1df</onsuccess></stage><stage stageid="5b34f3b6-df78-46a7-adda-fa08923ec1df" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="7fea6e4a-3d24-4e90-8263-dd16f9a2347f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="5f21b018-28ce-4cd7-92e6-d40662f059f2" name="Clean Up" type="SubSheetInfo"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2459ba60-9bca-46b6-b812-23f71e3193a8" name="Start" type="Start"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>6447a040-42ba-4852-8e35-e1d4fc0f5513</onsuccess></stage><stage stageid="6447a040-42ba-4852-8e35-e1d4fc0f5513" name="End" type="End"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b1daae46-e08f-49fd-8cca-147443783b9a" name="Pdf to Txt" type="SubSheetInfo"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4dfabece-94df-486f-8120-f594211c31d3" name="Start" type="Start"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-195" /><inputs><input type="text" name="File Path" stage="FilePath" /><input type="number" name="TimeOut" stage="TimeOut" /></inputs><onsuccess>c0f13973-d7e0-4be3-90b8-c201c3b9097b</onsuccess></stage><stage stageid="ce31bf94-8155-4061-b70f-7a302f73bf3f" name="End" type="End"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="315" /><outputs><output type="text" name="Output Text" stage="Clipboard" /></outputs></stage><stage stageid="d1c7f793-7e4d-4ad5-8d1f-42f9a38a414b" name="Note1" type="Note"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c7627b98-7082-4eb1-8452-fb5c1f92c663" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="bd84f180-3e3c-474f-8b83-1fcce4219c25" name="Kiil Adobe Reader" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-75" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" expr="&quot;AcroRd32&quot;" /></inputs><onsuccess>3f124d90-5f75-48a2-8e86-6daa29e6bfa8</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="3f124d90-5f75-48a2-8e86-6daa29e6bfa8" name="Launch" type="Navigate"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-15" /><onsuccess>adb58d7c-4361-41c5-899a-0a848bb23fea</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value>[FilePath]</value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="44b0c9dc-32ad-40b4-9bf4-d6ecd2b5bf8c" name="FilePath" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-165" y="15" /><datatype>text</datatype><initialvalue xml:space="preserve">\\nrrisiprdsmb02\Artificial_Intelligence\PWC\POS\Statements\ALINMADIG1\1.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d54118-13be-432f-a56e-b13fc6a5ec94" name="Activate and Click Centre" type="Navigate" interval="0.5"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="60" /><onsuccess>59fed3cc-3319-41e2-bd55-fa2d8d1a9350</onsuccess><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>[Title]</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>ActivateApp</id></action></step><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>[Title]</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>MouseClickCentre</id><arguments><argument><id>newtext</id><value></value></argument></arguments></action></step></stage><stage stageid="b703c482-5d9c-4df8-b279-2af8a9585888" name="Get Clipboard" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="180" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs><onsuccess>a3cec926-990d-4446-9563-9f1f504c2c11</onsuccess><resource object="Utility - Environment" action="Get Clipboard" /></stage><stage stageid="3ad7508f-d56d-4a85-a1e3-74f2ec53a447" name="Clipboard" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-165" y="75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9860219-6f5c-4fa2-bba3-09e325de03a2" name="Title" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-165" y="45" /><datatype>text</datatype><initialvalue xml:space="preserve">*Adobe Reader*</initialvalue><private /><alwaysinit /></stage><stage stageid="c0f13973-d7e0-4be3-90b8-c201c3b9097b" name="Clear Clipboard" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-135" /><onsuccess>bd84f180-3e3c-474f-8b83-1fcce4219c25</onsuccess><resource object="Utility - Environment" action="Clear Clipboard" /></stage><stage stageid="59fed3cc-3319-41e2-bd55-fa2d8d1a9350" name="Select All and Copy" type="Navigate" interval="5"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="120" /><onsuccess>d6dd94e7-43ee-4d6f-bc7d-745f32f5c02a</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeys</id><arguments><argument><id>newtext</id><value>"^a"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeys</id><arguments><argument><id>newtext</id><value>"^c"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="29b21fff-b330-4deb-8501-e5c1b96a9a44" name="Time Out - Wait for 2 sec" type="WaitEnd"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="60" w="30" h="30" /><onsuccess>e5d54118-13be-432f-a56e-b13fc6a5ec94</onsuccess><groupid>1a920236-8cab-48a5-a63b-5ffcc8085554</groupid></stage><stage stageid="adb58d7c-4361-41c5-899a-0a848bb23fea" name="Wait for 2 sec" type="WaitStart"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="-15" w="30" h="30" /><groupid>1a920236-8cab-48a5-a63b-5ffcc8085554</groupid><choices /><timeout>2</timeout></stage><stage stageid="0e060241-6d8e-45c0-a751-605e248e5a89" name="Time Out - Wait for 5 sec" type="WaitEnd"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="180" w="30" h="30" /><onsuccess>b703c482-5d9c-4df8-b279-2af8a9585888</onsuccess><groupid>d308c83d-1626-42d3-8a49-681e4529c252</groupid></stage><stage stageid="d6dd94e7-43ee-4d6f-bc7d-745f32f5c02a" name="Wait for 5 sec" type="WaitStart"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="120" w="30" h="30" /><groupid>d308c83d-1626-42d3-8a49-681e4529c252</groupid><choices /><timeout>[TimeOut]</timeout></stage><stage stageid="a977e5de-9866-4256-85b5-1b9defce3e97" name="Unable to kill Adobe." type="Block"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="30" y="-45" w="255" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="96e2a900-9b13-44ba-bf73-782a6c9022cd" name="Recover" type="Recover"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="240" y="-15" /><onsuccess>fcb9a509-7946-4a2d-b138-d0400c047ff9</onsuccess></stage><stage stageid="03a68075-409d-4a4a-868c-59aeb215900a" name="Resume" type="Resume"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="510" y="-15" /><onsuccess>4237c045-d164-4b06-a7d2-e0086ac7dff2</onsuccess></stage><stage stageid="18599178-e8f7-46fd-9fc7-d014a669fe79" name="Count" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-165" y="105" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fcb9a509-7946-4a2d-b138-d0400c047ff9" name="Increment Count" type="Calculation"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="330" y="-15" /><onsuccess>c4707758-425d-42d7-b28d-ab233bb2266e</onsuccess><calculation expression="[Count]+1" stage="Count" /></stage><stage stageid="c4707758-425d-42d7-b28d-ab233bb2266e" name="Count Extended?" type="Decision"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="420" y="-15" /><decision expression="[Count]&gt;3" /><ontrue>e8d3c178-4974-4561-8fc6-d53fab8ac221</ontrue><onfalse>03a68075-409d-4a4a-868c-59aeb215900a</onfalse></stage><stage stageid="e8d3c178-4974-4561-8fc6-d53fab8ac221" name="System Exception" type="Exception"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="420" y="60" /><exception type="System Exception" detail="&quot;Unable to close Adobe Reader.&quot;" /></stage><stage stageid="838a892d-7190-4f5a-ae3e-57b8a9648608" name="Time Out - Wait for 2 sec" type="WaitEnd"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="420" y="-75" w="30" h="30" /><onsuccess>bd84f180-3e3c-474f-8b83-1fcce4219c25</onsuccess><groupid>b63fbb06-30f7-4381-9283-a12b0d2f0d22</groupid></stage><stage stageid="4237c045-d164-4b06-a7d2-e0086ac7dff2" name="Wait for 2 sec" type="WaitStart"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="510" y="-75" w="30" h="30" /><groupid>b63fbb06-30f7-4381-9283-a12b0d2f0d22</groupid><choices /><timeout>2</timeout></stage><stage stageid="3def2003-95dc-40b9-be5e-4fdb5a4e23c5" name="Text" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-165" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="774a2079-fda0-4871-b408-a27d6b1f9ed9" name="TimeOut" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-165" y="165" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3cec926-990d-4446-9563-9f1f504c2c11" name="Kiil Adobe Reader" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="240" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" expr="&quot;AcroRd32&quot;" /></inputs><onsuccess>ce31bf94-8155-4061-b70f-7a302f73bf3f</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="02565b55-f483-403b-8331-d82f840ec058" name="Block1" type="Block"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-60" y="30" w="285" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f4ca2dd8-e0d4-465a-9aea-569f56e7b0d7" name="Recover1" type="Recover"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="180" y="225" /><onsuccess>baf6949c-85e4-4c7d-99a5-c35e934c03b2</onsuccess></stage><stage stageid="baf6949c-85e4-4c7d-99a5-c35e934c03b2" name="Exception1" type="Exception"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="360" y="225" /><exception type="System Exceptiom" detail="Trim(&quot;Not able to work on the file. Unable to open file&quot;)" /></stage><stage stageid="48a6878f-b45d-4ac2-b6d3-99caa210e9d0" name="Pdf - Txt" type="SubSheetInfo"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="-390" y="-165" w="150" h="90" /></stage><stage stageid="1889a2a9-7db4-460a-8929-5dcea26e5ee0" name="Start" type="Start"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-300" y="15" /><inputs><input type="text" name="File Path" stage="File Path" /><input type="text" name="Application No" stage="txt_Application No" /></inputs><onsuccess>549f3bbf-e66d-4ec5-b621-eaeb5207c34c</onsuccess></stage><stage stageid="5deee92a-e01c-4c9d-bdee-1827e3c8c1b8" name="End" type="End"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="705" y="15" /><outputs><output type="text" name="Clipboard" stage="Clipboard" /></outputs></stage><stage stageid="0e970ad5-e37f-4603-8b46-8d2471b998c2" name="Launch Pdf File" type="Navigate"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="15" /><onsuccess>f5fc8742-e2e0-411c-b171-a40d4caf8230</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>Launch</id><arguments><argument><id>Path</id><value>"C:\Program Files (x86)\Adobe\Reader 11.0\Reader\AcroRd32.exe"</value></argument><argument><id>CommandLineParams</id><value>[File Path]</value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="bb4fc526-f7ee-4bb0-b992-51e66cf3353e" name="File Path" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="15" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba248f4b-3c45-4c01-86c8-ff843f0a6d91" name="Inputs" type="Block"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-15" y="-300" w="195" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="7546bf10-6674-45c5-a2ed-68b0be769a76" name="Kill Adobe" type="Action"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-210" y="15" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" expr="&quot;AcroRd32&quot;" /></inputs><onsuccess>32650fd3-c465-4214-bc0e-43a21596dfb4</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="f5fc8742-e2e0-411c-b171-a40d4caf8230" name="PDF Opened?" type="Action"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="60" y="15" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" expr="&quot;*Adobe Reader&quot;" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" expr="True" /></inputs><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="PDF Window Exists?" /></outputs><onsuccess>2a725662-4b4d-45dd-bd9f-df4775860257</onsuccess><resource object="Utility - General" action="Window Exists" /></stage><stage stageid="168f22c5-c664-445c-b1b9-d1dcd096c684" name="PDF Window Exists?" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="-435" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a168fef7-7212-4dd1-aed4-c05e6e10bb3d" name="Outputs" type="Block"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-465" y="-45" w="75" h="195" /><font family="Segoe UI" size="10" style="Regular" color="CC99FF" /></stage><stage stageid="549f3bbf-e66d-4ec5-b621-eaeb5207c34c" name="Anchor1" type="Anchor"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-255" y="15" w="10" h="10" /><onsuccess>7546bf10-6674-45c5-a2ed-68b0be769a76</onsuccess></stage><stage stageid="84ad81b1-070e-4a3f-9752-9fe158288961" name="Retry" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="90" y="-270" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="f2baa5cf-f92b-4cec-8339-a3c2f916fab3" name="Detach" type="Navigate"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="300" y="15" /><onsuccess>50f3fca5-3b78-41e3-9e8a-43e18c1d5067</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>DetachApplication</id></action></step></stage><stage stageid="acecaad4-7511-48d0-b033-1242005affbd" name="Attach File" type="Navigate"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><narrative>AcroRd32
AcroRd32</narrative><display x="450" y="15" /><onsuccess>1f31747b-9f00-4586-baaf-1dbdec56732d</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>AttachApplication</id><arguments><argument><id>WindowTitlesCollection</id><value></value></argument><argument><id>WindowTitle</id><value>"*"&amp;[txt_Application No]&amp;"*"</value></argument><argument><id>ProcessName</id><value>"AcroRd32"</value></argument><argument><id>ProcessID</id><value></value></argument><argument><id>Username</id><value></value></argument><argument><id>ChildIndex</id><value>1</value></argument></arguments><outputs><output><id>trackingid</id><value></value></output></outputs></action></step></stage><stage stageid="2af6edd9-0175-43ed-a6ab-68bda4e4ed8b" name="Time Out - Wait for detach" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="450" y="-45" w="30" h="30" /><onsuccess>acecaad4-7511-48d0-b033-1242005affbd</onsuccess><groupid>8da6046a-e3d6-4614-b658-8ba9cfd60917</groupid></stage><stage stageid="50f3fca5-3b78-41e3-9e8a-43e18c1d5067" name="Wait for detach" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="300" y="-45" w="30" h="30" /><groupid>8da6046a-e3d6-4614-b658-8ba9cfd60917</groupid><choices /><timeout>3</timeout></stage><stage stageid="93375a51-8b33-4755-9869-914bfaaebc29" name="Attach Note" type="Note"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><narrative>Detach and Attach will make the Pdf Automation more certain</narrative><display x="375" y="15" w="60" h="60" /></stage><stage stageid="c11552df-eef4-429a-93c9-ffa7b3208d88" name="Recover" type="Recover"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="-30" /><onsuccess>121038b7-b83d-4fd4-89ad-4e04cc4b1bad</onsuccess></stage><stage stageid="2e44ac8e-1da5-4dc3-8413-d3f1750aefa4" name="Resume" type="Resume"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-255" y="-30" /><onsuccess>549f3bbf-e66d-4ec5-b621-eaeb5207c34c</onsuccess></stage><stage stageid="c16a55f1-321d-4aac-ba9e-e10ba7de2130" name="Block2" type="Block"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-75" y="-60" w="90" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f31747b-9f00-4586-baaf-1dbdec56732d" name="Select and Copy data" type="Navigate" interval="3"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="540" y="15" /><onsuccess>51cccb0a-9856-4004-8776-59d3f39394ea</onsuccess><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>"*"&amp;[txt_Application No]&amp;"*"</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>ActivateApp</id></action></step><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>"*"&amp;[txt_Application No]&amp;"*"</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>MouseClickCentre</id><arguments><argument><id>newtext</id><value></value></argument></arguments></action></step><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeyEvents</id><arguments><argument><id>newtext</id><value>"&lt;{CTRL}A&gt;{CTRL}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeyEvents</id><arguments><argument><id>newtext</id><value>"&lt;{CTRL}C&gt;{CTRL}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="233171ed-fb12-47f9-afb7-28631e95a035" name="Get Clipboard " type="Action"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="615" y="15" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs><onsuccess>5deee92a-e01c-4c9d-bdee-1827e3c8c1b8</onsuccess><resource object="Utility - Environment" action="Get Clipboard" /></stage><stage stageid="61c64aac-a388-4469-9f1c-a5790e90d0d5" name="Clipboard" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="-435" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="841193cc-26d4-4a3c-9002-25c93e0bdab5" name="Increment Retry Count" type="Calculation"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-255" y="-210" /><onsuccess>2e44ac8e-1da5-4dc3-8413-d3f1750aefa4</onsuccess><calculation expression="[Retry]+1" stage="Retry" /></stage><stage stageid="bb962c76-e6a7-48e4-ad08-9239dcf7f66f" name="Retry Count=3 ?" type="Decision"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="-210" /><decision expression="[Retry]=3" /><ontrue>096ef0e1-d715-4e20-bbf3-6bec7e230951</ontrue><onfalse>841193cc-26d4-4a3c-9002-25c93e0bdab5</onfalse></stage><stage stageid="096ef0e1-d715-4e20-bbf3-6bec7e230951" name="Adobe Launch Error" type="Exception"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="75" y="-210" /><exception type="System Exception" detail="&quot;Unable to Launch file in Adobe Reader&quot;" /></stage><stage stageid="b6676700-5aa6-413b-8d91-aaaac07c699b" name="Time Out1" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="615" y="-45" w="30" h="30" /><onsuccess>233171ed-fb12-47f9-afb7-28631e95a035</onsuccess><groupid>e511545a-8057-402e-9655-f11578d6e720</groupid></stage><stage stageid="51cccb0a-9856-4004-8776-59d3f39394ea" name="Wait1" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="540" y="-45" w="30" h="30" /><groupid>e511545a-8057-402e-9655-f11578d6e720</groupid><choices /><timeout>5</timeout></stage><stage stageid="84aabb51-eac7-4b30-befe-db77cff92325" name="Time Out2" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-90" y="15" w="30" h="30" /><onsuccess>0e970ad5-e37f-4603-8b46-8d2471b998c2</onsuccess><groupid>5e5f2e69-14cb-4043-ab78-314043a15a6a</groupid></stage><stage stageid="32650fd3-c465-4214-bc0e-43a21596dfb4" name="Wait2" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-150" y="15" w="30" h="30" /><groupid>5e5f2e69-14cb-4043-ab78-314043a15a6a</groupid><choices /><timeout>8</timeout></stage><stage stageid="46d2c508-4666-483c-9173-730f5820b41e" name="Time Out2" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="180" y="15" w="30" h="30" /><onsuccess>f2baa5cf-f92b-4cec-8339-a3c2f916fab3</onsuccess><groupid>9ee63cb3-c57b-4321-b577-53b49978f92b</groupid></stage><stage stageid="2a725662-4b4d-45dd-bd9f-df4775860257" name="Wait2" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="120" y="15" w="30" h="30" /><groupid>9ee63cb3-c57b-4321-b577-53b49978f92b</groupid><choices /><timeout>8</timeout></stage><stage stageid="613c930f-81d5-43d1-8b27-110889c1dc7a" name="txt_Application No" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="150" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="121038b7-b83d-4fd4-89ad-4e04cc4b1bad" name="Resume1" type="Resume"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-120" y="-30" /><onsuccess>c0aac93a-0fe6-4695-a8d7-68b586688758</onsuccess></stage><stage stageid="02bdbd02-4d34-4df9-bd6f-b17cbb7abf34" name="Launch Pdf File" type="Navigate"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="-105" /><onsuccess>11d11b5a-dbf2-4e65-be3d-672a9c205ef1</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>Launch</id><arguments><argument><id>Path</id><value>"C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\AcroRd32.exe"</value></argument><argument><id>CommandLineParams</id><value>[File Path]</value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="32bb805e-703c-474d-b364-fedcd9f9906a" name="Recover2" type="Recover"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="-150" /><onsuccess>bb962c76-e6a7-48e4-ad08-9239dcf7f66f</onsuccess></stage><stage stageid="f58eb116-370e-4cb2-99dd-44c7183e1145" name="Block3" type="Block"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-75" y="-165" w="90" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c0aac93a-0fe6-4695-a8d7-68b586688758" name="Anchor2" type="Anchor"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-120" y="-105" w="10" h="10" /><onsuccess>02bdbd02-4d34-4df9-bd6f-b17cbb7abf34</onsuccess></stage><stage stageid="11d11b5a-dbf2-4e65-be3d-672a9c205ef1" name="Anchor3" type="Anchor"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="60" y="-105" w="10" h="10" /><onsuccess>f5fc8742-e2e0-411c-b171-a40d4caf8230</onsuccess></stage></process></object>
        <object id="e943a4a3-50f0-4b52-a1ae-9225084edaba" name="PDF VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="PDF VBO" version="1.0" bpversion="7.0.1.49890" narrative="The PDF-VBO enables smooth handling of pdf files with exclusive functionalities. &#xD;&#xA;&#xD;&#xA;Make sure you place itextsharp.dll file in the location &#xD;&#xA;&quot;C:\Program Files\Blue Prism Limited\Blue Prism Automate&quot; before using this VBO. " byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>c7de5cff-353e-4b0a-85dd-a140a11397fa</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-255</camerax><cameray>-165</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2cc26b6-dc77-4d39-9321-bcaf37cd118f" type="Normal" published="True"><name>Create PDF Document</name><view><camerax>0</camerax><cameray>-29</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f70387a3-ced8-4535-9673-518e838ce82f" type="Normal" published="True"><name>Extract Text</name><view><camerax>9</camerax><cameray>53</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ac013b15-ecfe-429c-90e8-f26418c6e78c" type="Normal" published="True"><name>Split PDF To Multiple Pages</name><view><camerax>-101</camerax><cameray>-16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f4ffb5ef-7168-439c-a498-f9559a7a1860" type="Normal" published="True"><name>Combine PDF Files To One</name><view><camerax>-83</camerax><cameray>18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c97cb172-fcb9-465e-a8c2-e6541a44db0c" type="Normal" published="True"><name>Encrypt PDF</name><view><camerax>-266</camerax><cameray>36</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430" type="Normal" published="True"><name>Decrypt PDF</name><view><camerax>-666</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2066e6fa-ef8d-4e4a-af33-80050b6108d6" type="Normal" published="True"><name>Add Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="747f3fe0-ff45-4083-ae7e-eb3694669445" type="Normal" published="True"><name>Get Specific Pages</name><view><camerax>19</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7abb6d1d-9453-4cc2-8acb-75212c0de65a" type="Normal" published="True"><name>Extract Image</name><view><camerax>-261</camerax><cameray>-15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e4c4a5-a858-458b-be93-d663701b3f1d" type="Normal" published="True"><name>Collection To PDF</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8fe775f6-a379-4dde-971f-186bf63be3b3" type="Normal" published="True"><name>Get PDF Field Names</name><view><camerax>79</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5c1b4ddf-015c-474a-bd07-7f1909a4350c" type="Normal" published="True"><name>Enter Values to PDF Fields</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="215ce4e6-e837-462f-9ba2-f10200765f7b" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>801822d1-3eaf-46a5-83e5-c5e93dec1350</onsuccess></stage><stage stageid="801822d1-3eaf-46a5-83e5-c5e93dec1350" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="b8f14db3-7e8f-430f-b353-34d524f48a50" name="Stage1" type="ProcessInfo"><display x="-255" y="-165" w="180" h="150" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>C:\Program Files\Blue Prism Limited\Blue Prism Automate\itextsharp.dll</reference><reference>System.dll</reference><reference>System.Core.dll</reference><reference>System.Xml.Linq.dll</reference><reference>System.Data.Linq.dll</reference><reference>C:\Program Files\Blue Prism Limited\Blue Prism Automate\Microsoft.Office.Interop.Excel.dll</reference><reference>System.Runtime.dll</reference><reference>System.Text.RegularExpressions.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>iTextSharp.text</import><import>iTextSharp.text.pdf</import><import>System.IO</import><import>System.Diagnostics</import><import>iTextSharp.text.pdf.parser</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.Drawing.Imaging</import><import>System.Drawing.Drawing2D</import><import>System.Linq</import><import>System.Data.Linq.Mapping</import><import>System.Data</import><import>Microsoft.Office.Interop.Excel</import><import>System.Text.RegularExpressions</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="597e8122-d1cd-432f-a69c-267ff1152a72" name="Clean Up" type="SubSheetInfo"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4f62a7fb-b60e-4aeb-9b30-60236a4c2056" name="Start" type="Start"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>324a1104-9e21-4d49-b0f6-49b0e63592cb</onsuccess></stage><stage stageid="324a1104-9e21-4d49-b0f6-49b0e63592cb" name="End" type="End"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="6a3c9052-8b7c-49a0-a06d-1b1b9ce0111d" name="Create PDF Document" type="SubSheetInfo"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><narrative>The String is converted to a pdf document. </narrative><display x="-360" y="-180" w="150" h="90" /></stage><stage stageid="bc56c40b-7466-4833-8f8c-811eda6b3adc" name="Start" type="Start"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="page data" stage="input data" /><input type="text" name="output file name (add extension .pdf)" stage="output file name" /></inputs><onsuccess>634687e8-33d8-4207-8868-0b231b273fcc</onsuccess></stage><stage stageid="be42f263-1f6b-4775-ab67-a6793e960fe8" name="End" type="End"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="1dab5820-5645-45fc-9b9c-d00fb6b478c8" name="Note1" type="Note"><subsheetid>0ddd7e04-bf5d-4cd8-91e9-e4c93745a62a</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="81cf7db7-2cca-41da-b886-71acb8057a00" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-255" y="45" w="180" h="230" /></stage><stage stageid="b77f08e2-6271-4249-9a01-f609a9bd60d3" name="create doc" type="Code"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="input data" expr="[input data]" /><input type="text" name="output file name" expr="[output file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>be42f263-1f6b-4775-ab67-a6793e960fe8</onsuccess><code><![CDATA[try{
		//create a document object
		var doc = new Document();
		//get the current directory
		//String path = destination_file_path;
		//get PdfWriter object
		PdfWriter.GetInstance(doc, new FileStream(output_file_name, FileMode.Create));
		//open the document for writing
		doc.Open();
		//write a paragraph to the document
		doc.Add(new Paragraph(input_data));
		//close the document
		doc.Close();
		//view the result pdf file

		//System.Diagnostics.Process.Start(path + "/"+ output_file_name+".pdf");
		Message = "No Message";
		Success = true;
	}
catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="dd162b2f-b07a-415c-bd42-9bca222267fe" name="input data" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="-345" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">test</initialvalue><private /><alwaysinit /></stage><stage stageid="a1a63edf-9a29-429a-87f9-2ef91378effb" name="Extract Text" type="SubSheetInfo"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><narrative>extract text in .txt format and data item. </narrative><display x="-465" y="-105" w="150" h="90" /></stage><stage stageid="46567e55-360b-45cd-93f8-d71eaa7db84f" name="Start" type="Start"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="File name" stage="pdf file name including the path" /><input type="text" name="Output file name (add extension .txt)" stage="destination file name" /></inputs><onsuccess>a7a05710-1abe-498b-ab7f-9602e02fc99e</onsuccess></stage><stage stageid="f9a1ee43-9e67-4649-8d8d-b0c93f659f50" name="End" type="End"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="225" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Contents" stage="Contents" /></outputs></stage><stage stageid="26b78461-4ef2-4447-879e-006f14399f2f" name="extract text" type="Code"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="120" /><inputs><input type="text" name="source file" expr="[final file name]" /><input type="text" name="destination file name" expr="[destination file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Contents" stage="Contents" /></outputs><onsuccess>f9a1ee43-9e67-4649-8d8d-b0c93f659f50</onsuccess><code><![CDATA[	
try {	
		PdfReader reader = new PdfReader(source_file);
		PdfReaderContentParser parser = new PdfReaderContentParser(reader);			
		FileStream fs = new FileStream(destination_file_name,FileMode.Create);
		StreamWriter sw=new StreamWriter(fs);
		SimpleTextExtractionStrategy strategy; 
		for (int i = 1; i <= reader.NumberOfPages; i++) {
		strategy = parser.ProcessContent(i, new SimpleTextExtractionStrategy());
		sw.WriteLine(strategy.GetResultantText()); 
			} 

		sw.Flush(); 
		sw.Close();
		Contents = File.ReadAllText(destination_file_name);
		Success = true;
		Message ="No Error";
	}
catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
   Contents = "";
   Success = false;
					
}]]></code></stage><stage stageid="56a65681-7f3f-43d7-930d-33cf831731eb" name="Split PDF To Multiple Pages" type="SubSheetInfo"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><narrative>Split a pdf with multiple pages to each page as each individual document</narrative><display x="-330" y="-165" w="150" h="90" /></stage><stage stageid="886bd3e3-b30d-42ca-8f48-db3bf5130db9" name="Start" type="Start"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="-60" /><inputs><input type="text" name="Source file" stage="Source file including path" /><input type="text" name="destination folder" stage="destination folder" /><input type="text" name="output file name only (without extension)" stage="output file name" /></inputs><onsuccess>1bb7aa1c-0d7f-4e4b-8174-b16d223875f9</onsuccess></stage><stage stageid="2681aaed-7ed4-40f4-9cce-99422ceaf37b" name="End" type="End"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="120" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="d5d553b4-5903-488d-8003-4dd25aec57db" name="split pdf to multiple pages" type="Code"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="75" /><inputs><input type="text" name="Source file" expr="[Source file including path]" /><input type="text" name="destination path" expr="[destination folder]" /><input type="text" name="output file name" expr="[output file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2681aaed-7ed4-40f4-9cce-99422ceaf37b</onsuccess><code><![CDATA[	
try{		
		//variables
		String source_file=Source_file;
		String result = destination_path+ "/" +output_file_name;
		PdfCopy copy;
		//create PdfReader object
		PdfReader reader = new PdfReader(source_file); 

		for (int i = 1; i <=reader.NumberOfPages ; i++)
		{
		//create Document object
			Document document = new Document(); 
			copy = new PdfCopy(document, new FileStream(result+i+".pdf", FileMode.Create));
			//open the document 
			document.Open();
			//add page to PdfCopy 
			copy.AddPage(copy.GetImportedPage(reader,i));
			//close the document object
			document.Close();
		}
		Message="No Error";
		Success = true;
}

catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="634687e8-33d8-4207-8868-0b231b273fcc" name="calculate path" type="Calculation"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>b77f08e2-6271-4249-9a01-f609a9bd60d3</onsuccess><calculation expression="Replace([output file name], &quot;\&quot;, &quot;\\&quot;)" stage="output file name" /></stage><stage stageid="54ad8725-ddd1-4d5e-8b40-66dc9de16467" name="output file name" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="-225" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\test.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="67264439-c83d-4531-b06a-7d098e0164ac" name="Stage2" type="Block"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><loginhibit /><display x="-435" y="-120" w="270" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f7d57173-4262-4ac4-844c-281ec10ed49f" name="pdf file name including the path" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-435" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\pranav.nair\Desktop\CN pdf test\CN Partial.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="abfaed96-bac8-4910-8545-9b66afa8f594" name="destination file name" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-285" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\CN pdf test\CN Partial.txt</initialvalue><private /><alwaysinit /></stage><stage stageid="a7a05710-1abe-498b-ab7f-9602e02fc99e" name="calculate path" type="Calculation"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="0" /><onsuccess>695a86af-738a-45da-848a-6f6fb6f91669</onsuccess><calculation expression="Replace([pdf file name including the path], &quot;\&quot;, &quot;\\&quot;)" stage="final file name" /></stage><stage stageid="b61d10e1-353d-40b2-a19e-63e6022f573b" name="final file name" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-435" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="695a86af-738a-45da-848a-6f6fb6f91669" name="calculate path" type="Calculation"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>26b78461-4ef2-4447-879e-006f14399f2f</onsuccess><calculation expression="Replace([destination file name], &quot;\&quot;, &quot;\\&quot;)" stage="destination file name" /></stage><stage stageid="94a4a675-0f79-4389-a25c-b969d0aa73f3" name="Source file including path" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-330" y="-75" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\01 AOF PAF CHECKLIST.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="3e57d27b-9c4d-46cd-a5d5-dcf47c7cf702" name="destination folder" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-225" y="-75" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\New folder</initialvalue><private /><alwaysinit /></stage><stage stageid="04576225-0b20-4fdf-82c5-ac97740d48d2" name="output file name" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-330" y="-45" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">1</initialvalue><private /><alwaysinit /></stage><stage stageid="5300f1e6-a33f-4bea-b546-4caa0aeed21a" name="Stage3" type="Block"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><loginhibit /><display x="-540" y="-45" w="360" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="3cba6c8d-98a7-429a-902c-7cb3e1eb7c5a" name="Stage4" type="Block"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-405" y="-105" w="240" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1bb7aa1c-0d7f-4e4b-8174-b16d223875f9" name="calculate source path" type="Calculation"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="-15" /><onsuccess>6374de68-8f81-459f-9d40-b19aa939489b</onsuccess><calculation expression="Replace([Source file including path], &quot;\&quot;, &quot;\\&quot;)" stage="Source file including path" /></stage><stage stageid="6374de68-8f81-459f-9d40-b19aa939489b" name="calculate destination path" type="Calculation"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><loginhibit /><display x="-15" y="30" /><onsuccess>d5d553b4-5903-488d-8003-4dd25aec57db</onsuccess><calculation expression="Replace([destination folder], &quot;\&quot;, &quot;\\&quot;)" stage="destination folder" /></stage><stage stageid="85829a3f-0fe7-4a07-837b-66e329598e97" name="Combine PDF Files To One" type="SubSheetInfo"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><narrative>combine multiple pdf files as one. Make sure you get the nameing and path right. </narrative><display x="-420" y="-165" w="150" h="90" /></stage><stage stageid="4bc3a10e-7fa0-40a6-a5d9-254f64c97efd" name="Start" type="Start"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="-180" /><inputs><input type="text" name="file names separated by comma" stage="file names with path separated by comma" /><input type="text" name="destination folder" stage="destination folder" /><input type="text" name="output file name only(without extension)" stage="output file name" /></inputs><onsuccess>c5216e70-fc03-4a66-8099-1491797404bd</onsuccess></stage><stage stageid="1ce24ba6-2af7-4fc2-90b3-243c78021f63" name="End" type="End"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="60" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="0709c511-4dd9-4131-ab15-3d58482b3de3" name="combine pdf code stage" type="Code"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="0" /><inputs><input type="text" name="file names" expr="[file names with path separated by comma]" /><input type="text" name="destination folder" expr="[destination folder]" /><input type="text" name="output file name" expr="[output file name]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>1ce24ba6-2af7-4fc2-90b3-243c78021f63</onsuccess><code><![CDATA[		
try{		
		String[] source_files= file_names.Split(',');
		String result = destination_folder + "\\" + output_file_name+".pdf";

		//create Document object
		Document document = new Document();
		//create PdfCopy object
		PdfCopy copy = new PdfCopy(document, new FileStream(result, FileMode.Create));
		//open the document
		document.Open();
		//PdfReader variable
		PdfReader reader;
		for (int i = 0; i < source_files.Length; i++)
		{
		//create PdfReader object
		reader = new PdfReader(source_files[i]);
		//merge combine pages
		for(int page=1;page<=reader.NumberOfPages;page++)
		  copy.AddPage(copy.GetImportedPage(reader,page));

		}
		//close the document object
		document.Close();
		Message = "No error";
		Success = true;
}

catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="8d75bac0-ddf2-4463-94bc-5c025f2fad87" name="file names with path separated by comma" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-390" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d20e015-0fe2-4c29-a656-e55ca6a1cd2f" name="destination folder" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-270" y="-75" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4a00c38-8c6b-42c2-a1e1-f6c5fce77823" name="output file name" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-300" y="-45" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">result</initialvalue><private /><alwaysinit /></stage><stage stageid="c5216e70-fc03-4a66-8099-1491797404bd" name="calculate source" type="Calculation"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="-120" /><onsuccess>1d0b0802-5373-442f-9d80-b41258a27394</onsuccess><calculation expression="Replace([file names with path separated by comma], &quot;\&quot;, &quot;/&quot;)" stage="file names with path separated by comma" /></stage><stage stageid="1d0b0802-5373-442f-9d80-b41258a27394" name="calculate source" type="Calculation"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="0" y="-60" /><onsuccess>0709c511-4dd9-4131-ab15-3d58482b3de3</onsuccess><calculation expression="Replace([destination folder], &quot;\&quot;, &quot;\\&quot;)" stage="destination folder" /></stage><stage stageid="d0494b26-94f2-4804-a4ea-a36fb527237f" name="Stage5" type="Block"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><loginhibit /><display x="-495" y="-105" w="285" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8859c63e-dd4f-4893-acf1-40db74ece1b2" name="Encrypt PDF" type="SubSheetInfo"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><narrative>Encrypt pdf is used to encrypt a pdf with user password and </narrative><display x="-465" y="-120" w="150" h="90" /></stage><stage stageid="791896e8-f078-46e7-89f9-86392afd6ced" name="Start" type="Start"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="-165" /><inputs><input type="text" name="File name " stage="file name" /><input type="text" name="Output file name (add extension .pdf)" stage="output file name" /><input type="text" name="Password" stage="password" /><input type="flag" name="Delete input file" stage="Delete input file" /></inputs><onsuccess>d906c206-84b3-42dc-b369-6cb7f74e013a</onsuccess></stage><stage stageid="429af356-f54c-497e-bfc0-2a2118cf9b02" name="End" type="End"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="225" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="99885528-ec40-42f1-b207-d33ab822603e" name="file name" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-450" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Sales Audit\Output\11_Apr_2018\Sales_Audit_SR-214849.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="f1b81553-4c97-4dd1-81ed-6db0be8397e5" name="output file name" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-375" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Sales Audit\Output\11_Apr_2018\Sales_Audit_SR-214849_Protected.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="cb9a5048-042c-4df6-94a9-6c752cafda9e" name="password" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-300" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">1234</initialvalue><private /><alwaysinit /></stage><stage stageid="d906c206-84b3-42dc-b369-6cb7f74e013a" name="calculate path" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>01f57647-644a-4447-b4ce-2586fa0dafca</onsuccess><calculation expression="Replace([file name], &quot;\&quot;, &quot;\\&quot;)" stage="file name" /></stage><stage stageid="01f57647-644a-4447-b4ce-2586fa0dafca" name="calculate path" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>23a4e3c6-faf4-4dc1-b333-fa27b6f4bf6a</onsuccess><calculation expression="Replace([output file name], &quot;\&quot;, &quot;\\&quot;)" stage="output file name" /></stage><stage stageid="2707d787-f71d-4dbf-8e27-1f4d77f99d3d" name="Decrypt PDF" type="SubSheetInfo"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><narrative>Decrypt a pdf file ans save it as decryprted pdf file</narrative><display x="-405" y="-120" w="150" h="90" /></stage><stage stageid="ff8e1877-8a6f-467c-a351-dffb6db82f91" name="End" type="End"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="210" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="6a57b76b-ebf8-474f-b252-32fa615beb7e" name="Decrypt code" type="Code"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="135" /><inputs><input type="text" name="Source File" expr="[file name]" /><input type="text" name="Destination file" expr="[output file name]" /><input type="text" name="Password" expr="[password]" /><input type="text" name="Delete_input_file" expr="[Delete input file]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>ff8e1877-8a6f-467c-a351-dffb6db82f91</onsuccess><code><![CDATA[try{	
		byte[] OWNER = Encoding.ASCII.GetBytes(Password);
		PdfReader reader = new PdfReader(Source_File,OWNER);
		PdfStamper stamper = new PdfStamper(reader, new FileStream(Destination_file, FileMode.Create));
		stamper.Close();
		reader.Close();
			
		if(Delete_input_file=="True")
		{
			System.IO.File.Delete(Source_File);
		}
		Message = "No Error";
		Success = true;
	}

catch ( Exception caughtEx )
{ 
    Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="55e0f55f-bdab-47e4-8b45-f78fb7c8b9ec" name="file name" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-390" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c1be3c90-892a-40cc-a4c3-6132a7509735" name="output file name" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-315" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32253199-9a3a-4909-828a-ac4357c72581" name="password" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-240" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2e7f7d8f-2fde-423e-a356-8cea7611b40a" name="Start" type="Start"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File name " stage="file name" /><input type="text" name="Output file name (add extension .pdf)" stage="output file name" /><input type="text" name="Password" stage="password" /><input type="flag" name="Delete input file " stage="Delete souce file" /></inputs><onsuccess>fd1c9c5e-066b-4bc7-b40c-a42edc866569</onsuccess></stage><stage stageid="fd1c9c5e-066b-4bc7-b40c-a42edc866569" name="calculate path" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>b7fcbd04-1f1e-4455-8a19-ce8cfdf8e0c1</onsuccess><calculation expression="Replace([file name], &quot;\&quot;, &quot;\\&quot;)" stage="file name" /></stage><stage stageid="b7fcbd04-1f1e-4455-8a19-ce8cfdf8e0c1" name="calculate path" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>1f57caf6-2c43-4507-9e04-bba6d5715298</onsuccess><calculation expression="Replace([output file name], &quot;\&quot;, &quot;\\&quot;)" stage="output file name" /></stage><stage stageid="c170e621-777e-4ab0-87e7-2eac61e5903b" name="Add Text" type="SubSheetInfo"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><narrative>Append text to an existing pdf. You can choose on how many pages does the text needs to appended. Also open the code to change the coordinte on where the text shall be placed. </narrative><display x="-390" y="-150" w="150" h="90" /></stage><stage stageid="97b50272-f5f4-4e90-bb54-900b91618de2" name="Start" type="Start"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File name" stage="File name" /><input type="text" name="output file name (add extension .pdf)" stage="output file" /><input type="text" name="Text to append" stage="Text to append" /><input type="text" name="Pages (eg 1,2-5..)" stage="Pages" /><input type="number" name="X coordinate" stage="X coordinate" /><input type="number" name="Y coordinate" stage="Y coordinate" /></inputs><onsuccess>c67fa434-8b2a-4331-bf92-cca5900e520a</onsuccess></stage><stage stageid="e345cdbd-ecad-4bd0-aaaf-278efbf910f1" name="End" type="End"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="2fe85e22-765b-442b-9368-876a48b8c006" name="append text code" type="Code"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="60" /><inputs><input type="text" name="Source File" expr="[File name]" /><input type="text" name="Output File" expr="[output file]" /><input type="text" name="Text Data" expr="[Text to append]" /><input type="text" name="Pages" expr="[Pages]" /><input type="number" name="x" expr="[X coordinate]" /><input type="number" name="y" expr="[Y coordinate]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>e345cdbd-ecad-4bd0-aaaf-278efbf910f1</onsuccess><code><![CDATA[try{
		//variables
		String pathin = Source_File;
		String pathout = Output_File;
		//create a document object
		//var doc = new Document(PageSize.A4);
		//create PdfReader object to read from the existing document
		PdfReader reader = new PdfReader(pathin);
		//select two pages from the original document
		reader.SelectPages(Pages);
		//create PdfStamper object to write to get the pages from reader 
		PdfStamper stamper=new PdfStamper(reader, new FileStream(pathout, FileMode.Create));
		// PdfContentByte from stamper to add content to the pages over the original content
		PdfContentByte pbover = stamper.GetOverContent(1);
		//add content to the page using ColumnText
		float xx = (float)x;
		float yy = (float)y;
		ColumnText.ShowTextAligned(pbover, Element.ALIGN_LEFT, new Phrase(Text_Data), xx, yy, 0);
		// PdfContentByte from stamper to add content to the pages under the original content
		PdfContentByte pbunder = stamper.GetUnderContent(1);
		stamper.Close();
		Message = "No Error";
		Success = true;
	}
	
	
catch ( Exception caughtEx )
{ 
	Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="4ab714ab-85a3-492b-a989-36a08f050578" name="File name" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-390" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f6340398-4f99-4838-ae33-54c59821c448" name="output file" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-315" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9baa1d5-d69b-4f05-a138-e82038a529ab" name="Text to append" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-240" y="-60" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ed68c95-bdb1-4228-b39e-eb2afdbae00c" name="Pages" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-255" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c67fa434-8b2a-4331-bf92-cca5900e520a" name="calculate path" type="Calculation"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>61fff50c-31ac-4b31-a816-9b0e6a919ac7</onsuccess><calculation expression="Replace([File name], &quot;\&quot;, &quot;\\&quot;)" stage="File name" /></stage><stage stageid="61fff50c-31ac-4b31-a816-9b0e6a919ac7" name="calculate path" type="Calculation"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="15" y="0" /><onsuccess>2fe85e22-765b-442b-9368-876a48b8c006</onsuccess><calculation expression="Replace([output file], &quot;\&quot;, &quot;\\&quot;)" stage="output file" /></stage><stage stageid="acf8823a-ea86-4855-a504-edca49259b75" name="Stage6" type="Block"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><loginhibit /><display x="-465" y="-90" w="285" h="135" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="edd5fa53-8ff8-4d99-9473-bb4555ace340" name="Message" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><display x="-255" y="-60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f1e093d-ae69-4aa6-9b93-29d318051265" name="Success" type="Data"><subsheetid>a2cc26b6-dc77-4d39-9321-bcaf37cd118f</subsheetid><display x="-375" y="-60" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2218b91b-b699-4910-9ba4-e7fd85b9d019" name="Message" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><display x="-285" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d1aa764-2d7d-40d7-aa4e-84a8561ee6c8" name="Success" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><display x="-435" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9f0a19f-d8fd-42c5-ba23-7f0f0349005d" name="Message" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><display x="-330" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9745f411-1f03-49b8-ac3d-1053f9b5bf0e" name="Success" type="Data"><subsheetid>ac013b15-ecfe-429c-90e8-f26418c6e78c</subsheetid><display x="-225" y="-45" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b90ca8b6-d260-4be6-9213-fe24309e4c70" name="Message" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><display x="-375" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20389808-e748-4ed6-8b9b-2f713b65ecc3" name="Success" type="Data"><subsheetid>f4ffb5ef-7168-439c-a498-f9559a7a1860</subsheetid><display x="-420" y="-45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56b953a5-b363-4786-9f8c-9f56f78dce9f" name="Message" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><display x="-315" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7696dc7f-2076-4f06-b1cb-28d7f0e38ea5" name="Success" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><display x="-390" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="67054b7f-703a-4255-adc4-cc429580a353" name="Stage7" type="Block"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-540" y="-60" w="330" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="08293b6b-3d1a-4c21-8db3-ce67925d6889" name="Message" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><display x="-255" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ec7f6256-b4f4-4790-8b19-1310bc9bbb69" name="Stage8" type="Block"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-480" y="-60" w="285" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f9dbf3be-f299-4466-9d44-f22a076e347d" name="Success" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><display x="-405" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ca9df196-fefa-4bae-8bfb-8585c2d91558" name="Message" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-330" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="27dcaedc-efd4-4127-b853-ef845df8c615" name="Success" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-405" y="-30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9e2199c-60e0-471a-98dc-2553131e3ab2" name="Contents" type="Data"><subsheetid>f70387a3-ced8-4535-9673-518e838ce82f</subsheetid><display x="-285" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2542b63-353b-4683-a4d1-eec072919017" name="encrypt pdf2" type="Code"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="165" /><inputs><input type="text" name="Source File" expr="[file name]" /><input type="text" name="Output File" expr="[output file name]" /><input type="text" name="Password" expr="[password]" /><input type="text" name="Delete input file" expr="True" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>429af356-f54c-497e-bfc0-2a2118cf9b02</onsuccess><code><![CDATA[try{	
		byte[] USER = Encoding.ASCII.GetBytes(Password); 
		byte[] OWNER = Encoding.ASCII.GetBytes(Password);
		PdfReader reader = new PdfReader(Source_File);
		PdfStamper stamper = new PdfStamper(reader, new FileStream(Output_File,FileMode.Create));
		stamper.SetEncryption( USER,OWNER, PdfWriter.AllowPrinting, PdfWriter.ENCRYPTION_AES_128);
		stamper.Close();
		reader.Close();
		Message = "NO Error";
		Success = true;
		
		if(Delete_input_file=="True")
		{
			System.IO.File.Delete(Source_File);
		}
		
		
	}


catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
					
}]]></code></stage><stage stageid="a46771e6-2e82-4d0e-82ca-a0c977c5fdd3" name="Delete input file" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><display x="-465" y="0" w="90" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="25c833a2-2efe-4ea7-b511-a29c08d19b93" name="Get Specific Pages" type="SubSheetInfo"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><narrative>Extract specific pages of a pdf document. Send the required pages as a comma separated code to the string,</narrative><display x="-345" y="-105" w="150" h="90" /></stage><stage stageid="781ce301-e215-40b1-849d-083bffdc01dd" name="Start" type="Start"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="File name" stage="Source file including path" /><input type="text" name="Destination folder" stage="destination folder" /><input type="text" name="Output file name" stage="output file name" /><input type="text" name="Required pages (1,2,3...)" stage="required pages" /></inputs><onsuccess>e4545093-c299-4ac3-b3be-b9197c6b5b60</onsuccess></stage><stage stageid="e4408cc2-d531-49f4-8794-5161eb21c65d" name="End" type="End"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="message" stage="Message" /><output type="flag" name="success" stage="Success" /></outputs></stage><stage stageid="e4545093-c299-4ac3-b3be-b9197c6b5b60" name="get perticular page" type="Code"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Source file" expr="[Source file including path]" /><input type="text" name="destination path" expr="[destination folder]" /><input type="text" name="output file name" expr="[output file name]" /><input type="text" name="required pages" expr="[required pages]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>e4408cc2-d531-49f4-8794-5161eb21c65d</onsuccess><code><![CDATA[List<int> pagenums = required_pages.Split(',').Select(int.Parse).ToList();

//List<int> pagenums = new List<int>();
//pagenums.Add(1);
//test=pagenums[1];
pagenums.Sort();
int reqpagecount = pagenums.Count();
//test = reqpagecount;
try{		
		//variables
		String source_file=Source_file;
		String result = destination_path+ "/" +output_file_name;
		PdfCopy copy;
		//create PdfReader object
		PdfReader reader = new PdfReader(source_file); 
		int pagecount;
		pagecount=0;

		for (int i = 1; i <=reader.NumberOfPages ; i++)
		{
			if(i == pagenums[pagecount])
			
			{	
				
				//test2="here";
				//create Document object
				Document document = new Document(); 
				copy = new PdfCopy(document, new FileStream(result+i+".pdf", FileMode.Create));
				//open the document 
				document.Open();
				//add page to PdfCopy 
				copy.AddPage(copy.GetImportedPage(reader,i));
				//close the document object
				document.Close();
				pagecount++;
				
			}
			if(reqpagecount==pagecount)
				{
					break;
				}
			
		}
		Message="No Error";
		Success = true;
		//test2="";
}

catch ( Exception caughtEx )
{ 
   Message = caughtEx.Message;
    Success = false;
	//test2="not here";
					
}]]></code></stage><stage stageid="a8ebdc80-0228-4758-b803-78e8d3a4ba2c" name="Source file including path" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-330" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41853ffe-c554-4c98-a626-724d2eabd1e3" name="destination folder" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-255" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6204cd52-7050-4197-979f-a00b541efdb8" name="output file name" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-180" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3449db4-bdef-4f6e-8a14-9530dec699d0" name="Message" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><display x="-270" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28b6f4e4-d1ff-49cd-8477-203e2c4d5c5e" name="Success" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><display x="-345" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f5651e6-5c8b-468c-ae9a-83aa74008125" name="Stage9" type="Block"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-420" y="-45" w="330" h="120" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b29e7cbb-f62b-494b-8e2a-292dbc0fc95f" name="Extract Image" type="SubSheetInfo"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><narrative>extract all the images in pdf file to specific folder. </narrative><display x="-480" y="-165" w="150" h="90" /></stage><stage stageid="5a1ddb12-bb35-48e2-862e-e83ab942e4f9" name="Start" type="Start"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="-135" /><inputs><input type="text" name="File name" stage="File name" /><input type="text" name="Destination Folder" stage="Destination Folder" /><input type="text" name="image name" stage="image name" /></inputs><onsuccess>9d539c6e-ea01-45c4-a61e-ae273b216639</onsuccess></stage><stage stageid="eb4cd16c-a790-486d-941e-276557402f1d" name="End" type="End"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="120" /></stage><stage stageid="2d0ab34d-f1e6-45e2-8520-de9865bdab00" name="extract image" type="Code"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="45" /><inputs><input type="text" name="Source" expr="[File name]" /><input type="text" name="Out" expr="[Destination Folder]" /><input type="text" name="imagename" expr="[image name]" /></inputs><onsuccess>eb4cd16c-a790-486d-941e-276557402f1d</onsuccess><code><![CDATA[PdfReader reader = new PdfReader(Source);
PRStream pst;
PdfImageObject pio;
PdfObject po;
int n = reader.XrefSize; //number of objects in pdf document
FileStream fs=null;
String path=Out;
try
{
		for (int i = 0; i < n; i++)
		{
				po = reader.GetPdfObject(i); //get the object at the index i in the objects collection
				if (po == null || !po.IsStream()) //object not found so continue
					continue;
				pst = (PRStream)po; //cast object to stream
				PdfObject type = pst.Get(PdfName.SUBTYPE); //get the object type
				//check if the object is the image type object
				if (type != null && type.ToString().Equals(PdfName.IMAGE.ToString()))
				{
						pio = new PdfImageObject(pst); //get the image
						fs = new FileStream(path + imagename + i + ".jpg", FileMode.Create);
						//read bytes of image in to an array
						byte[] imgdata=pio.GetImageAsBytes();
						//write the bytes array to file
						fs.Write(imgdata, 0, imgdata.Length);
						fs.Flush();
						fs.Close();
				}
		  }


}
catch (Exception e) { Console.WriteLine(e.Message); }]]></code></stage><stage stageid="4f35919f-9002-40de-bcbb-e4137ee80ccf" name="required pages" type="Data"><subsheetid>747f3fe0-ff45-4083-ae7e-eb3694669445</subsheetid><loginhibit /><display x="-195" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f5a5059a-bab3-4c48-9196-336dba351d38" name="Delete input file" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-330" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="338b8b23-383e-4a5d-af4e-ddd2e896c7e0" name="flag to code" type="Data"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-405" y="30" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">False</initialvalue><private /><alwaysinit /></stage><stage stageid="23a4e3c6-faf4-4dc1-b333-fa27b6f4bf6a" name="flag decider" type="Decision"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="15" y="45" /><decision expression="[Delete input file] = True" /><ontrue>9376b3d5-232a-46fd-b6b2-59f1b4afa522</ontrue><onfalse>d5e8a822-3f80-472a-a558-711d0cadc9ce</onfalse></stage><stage stageid="9376b3d5-232a-46fd-b6b2-59f1b4afa522" name="flag is true" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-135" y="45" /><onsuccess>6f6bc665-1186-4b9e-b20c-a4c78f0a38c8</onsuccess><calculation expression="&quot;True&quot;" stage="flag to code" /></stage><stage stageid="d5e8a822-3f80-472a-a558-711d0cadc9ce" name="flag is false" type="Calculation"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="180" y="45" /><onsuccess>97ed0080-4140-4c99-ae2a-ee94aeb7d132</onsuccess><calculation expression="&quot;False&quot;" stage="flag to code" /></stage><stage stageid="0e067b00-3b6d-410a-b05c-5ae540fdc158" name="Delete souce file" type="Data"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><display x="-345" y="30" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1f57caf6-2c43-4507-9e04-bba6d5715298" name="Flag deicision" type="Decision"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[Delete souce file] = True" /><ontrue>ba4d2f75-7b3c-445f-881c-28bb86740a70</ontrue><onfalse>c6e77ae5-9abf-475e-b585-0863205b37c5</onfalse></stage><stage stageid="ba4d2f75-7b3c-445f-881c-28bb86740a70" name="set flag true" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-90" y="30" /><onsuccess>2721a568-fe4f-406a-8e12-d927a9d711e9</onsuccess><calculation expression="&quot;True&quot;" stage="Delete input file" /></stage><stage stageid="c6e77ae5-9abf-475e-b585-0863205b37c5" name="set flag false" type="Calculation"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="120" y="30" /><onsuccess>0899a876-880b-4319-9e8a-f0969bb0478e</onsuccess><calculation expression="&quot;False&quot;" stage="Delete input file" /></stage><stage stageid="2721a568-fe4f-406a-8e12-d927a9d711e9" name="Anchor1" type="Anchor"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="-90" y="135" w="10" h="10" /><onsuccess>6a57b76b-ebf8-474f-b252-32fa615beb7e</onsuccess></stage><stage stageid="0899a876-880b-4319-9e8a-f0969bb0478e" name="Anchor2" type="Anchor"><subsheetid>140f9a5a-31e8-4da2-8bd6-2b6e0c4ae430</subsheetid><loginhibit /><display x="120" y="135" w="10" h="10" /><onsuccess>6a57b76b-ebf8-474f-b252-32fa615beb7e</onsuccess></stage><stage stageid="6f6bc665-1186-4b9e-b20c-a4c78f0a38c8" name="Anchor3" type="Anchor"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="-135" y="165" w="10" h="10" /><onsuccess>f2542b63-353b-4683-a4d1-eec072919017</onsuccess></stage><stage stageid="97ed0080-4140-4c99-ae2a-ee94aeb7d132" name="Anchor4" type="Anchor"><subsheetid>c97cb172-fcb9-465e-a8c2-e6541a44db0c</subsheetid><loginhibit /><display x="180" y="165" w="10" h="10" /><onsuccess>f2542b63-353b-4683-a4d1-eec072919017</onsuccess></stage><stage stageid="4f836d51-351b-42f3-aee1-26c6efae1e39" name="File name" type="Data"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><display x="-495" y="-90" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\RPA\AML Check\Output\SR-228721\B-143122_11-01-2018.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="6fbe5ca4-a340-4402-a93d-3881d05a74f7" name="Destination Folder" type="Data"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><display x="-555" y="-90" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\RPA\AML Check\Output\SR-228721\</initialvalue><private /><alwaysinit /></stage><stage stageid="9d539c6e-ea01-45c4-a61e-ae273b216639" name="calculate path" type="Calculation"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="-75" /><onsuccess>3735befd-30fa-4134-84fe-86672c67098a</onsuccess><calculation expression="Replace([File name], &quot;\&quot;, &quot;\\&quot;)" stage="File name" /></stage><stage stageid="3735befd-30fa-4134-84fe-86672c67098a" name="calculate path" type="Calculation"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-270" y="-30" /><onsuccess>2d0ab34d-f1e6-45e2-8520-de9865bdab00</onsuccess><calculation expression="Replace([Destination Folder], &quot;\&quot;, &quot;\\&quot;)" stage="Destination Folder" /></stage><stage stageid="86f32472-c00b-413e-b4ee-a66c0fc36a59" name="Stage11" type="Block"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><loginhibit /><display x="-600" y="-120" w="210" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1e522424-76b7-47f5-84ab-1310b41cfb01" name="X coordinate" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-270" y="0" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c98c1af9-3bfa-4416-8ad1-9ab86823506c" name="Y coordinate" type="Data"><subsheetid>2066e6fa-ef8d-4e4a-af33-80050b6108d6</subsheetid><display x="-420" y="0" w="90" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e5b4ac95-5703-44c1-a01a-da619634ff1f" name="image name" type="Data"><subsheetid>7abb6d1d-9453-4cc2-8acb-75212c0de65a</subsheetid><display x="-435" y="-90" /><datatype>text</datatype><initialvalue xml:space="preserve">test</initialvalue><private /><alwaysinit /></stage><stage stageid="cda53ae7-481d-4ff6-a06e-759690a5efeb" name="Collection To PDF" type="SubSheetInfo"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><narrative>convert a collection to pdf. </narrative><display x="-225" y="-135" w="150" h="90" /></stage><stage stageid="f2e89a0d-30bf-4173-8f6f-83a4de7bd7ab" name="Start" type="Start"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="Collection data" stage="dt" /><input type="text" name="Output file name" stage="Output file name" /></inputs><onsuccess>1bf793db-eb37-4db6-bf1b-e8bee3b60e0f</onsuccess></stage><stage stageid="08259771-6e76-427a-a6ac-177f98b03758" name="End" type="End"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="1bf793db-eb37-4db6-bf1b-e8bee3b60e0f" name="collection to pdf" type="Code"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="dt" expr="[dt]" /><input type="text" name="output" expr="[Output file name]" /></inputs><outputs><output type="number" name="test" stage="test" /></outputs><onsuccess>08259771-6e76-427a-a6ac-177f98b03758</onsuccess><code><![CDATA[Document document = new Document();
    PdfWriter writer = PdfWriter.GetInstance(document, new FileStream("C:\\Users\\pranav.nair\\Desktop\\sample.pdf", FileMode.Create));
    document.Open();
            iTextSharp.text.Font font5 = iTextSharp.text.FontFactory.GetFont(FontFactory.HELVETICA, 5);
	test = dt.Columns.Count;
	
	PdfPTable table = new PdfPTable(dt.Columns.Count);
    PdfPRow row = null;
	
   // float[] widths = new float[] { 4f, 4f, 4f};
   
	int test2  = (int) test;
	float[] widths = new float[test2];
	
	for(int j=0; j<=test2-1;j++)
		{
			widths[j]=4f;
		}

    table.SetWidths(widths);

    table.WidthPercentage = 100;
    int iCol = 0;
    string colname = "";
    PdfPCell cell = new PdfPCell(new Phrase("Products"));

    cell.Colspan = dt.Columns.Count;

    foreach (DataColumn c in dt.Columns)
    {

        table.AddCell(new Phrase(c.ColumnName, font5));
    }

    foreach (DataRow r in dt.Rows)
    {
        if (dt.Rows.Count > 0)
        {
            table.AddCell(new Phrase(r[0].ToString(), font5));
            table.AddCell(new Phrase(r[1].ToString(), font5));
            table.AddCell(new Phrase(r[2].ToString(), font5));
        }          
    }  document.Add(table);
        document.Close();
    ]]></code></stage><stage stageid="6f0351cc-83d7-4f70-bf87-1f05ddd3c4d5" name="dt" type="Collection"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="-270" y="-45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="87b18f40-162b-4036-a843-4b1858802832" name="Output file name" type="Data"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><display x="-210" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="077b4e1a-a946-4c16-9347-2016d8aa2de7" name="test" type="Data"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><display x="-150" y="-45" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="18021903-54b4-41e6-91d1-9e7cd6f67a42" name="Stage10" type="Block"><subsheetid>b8e4c4a5-a858-458b-be93-d663701b3f1d</subsheetid><loginhibit /><display x="-300" y="-75" w="195" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a59e3e55-d85c-4a5a-b6aa-81569651b990" name="Get PDF Field Names" type="SubSheetInfo"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="724b477c-5199-4864-ad07-310d1be2d256" name="Start" type="Start"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" stage="Filename" /><input type="text" name="Temporary File Path" stage="Temporary Filename" /></inputs><onsuccess>d8221384-db0b-4b27-9c0d-8a3ded2d0573</onsuccess></stage><stage stageid="d37e26b9-5c6f-4ece-a734-492384414269" name="End" type="End"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="165" /><outputs><output type="collection" name="Field Names" stage="Split Values" /><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs></stage><stage stageid="092c29d6-bdfe-481e-a806-f60b71ba275e" name="get field name" type="Code"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="60" w="120" h="30" /><inputs><input type="text" name="TempFile" expr="[Temporary Filename]" /><input type="text" name="Filename" expr="[Filename]" /></inputs><outputs><output type="text" name="output" stage="outtt" /><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>25441e4b-00f1-4335-abe7-5f8313437cf4</onsuccess><code><![CDATA[try{   //path to source file
		System.Text.StringBuilder sb = new System.Text.StringBuilder();
		String source = Filename;
		//create PdfReader object to read the source file
		PdfReader reader = new PdfReader(source);
		//PdfStamper object to modify the content of the PDF
		PdfStamper stamp = new PdfStamper(reader, new 
		FileStream(TempFile+"//"+"test.pdf", FileMode.Create));
		AcroFields form = stamp.AcroFields;
		IDictionary<string, AcroFields.Item> fs = form.Fields;
		
		DataRow dr;
		string line;
		
		foreach (var f in fs)
		{
		sb.Append(f.Key);
		sb.Append(Environment.NewLine);
		
		}
		output = sb.ToString();
		Message = "No Error";
		Success = true;
}


catch ( Exception caughtEx )
{ 
	Message = caughtEx.Message;
    Success = false;
	output = "Error";	
}]]></code></stage><stage stageid="f67a2d7a-769e-44ec-9b22-b9b4a3aa99d7" name="outtt" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="210" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="efd70168-4546-432d-8d30-fb9c7418e1ae" name="Message" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="150" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b48b6863-1b27-4f6d-8010-7fa759da7ed2" name="Success" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="285" y="-75" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8221384-db0b-4b27-9c0d-8a3ded2d0573" name="calculate path" type="Calculation"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="-30" /><onsuccess>d88a7022-4447-4ef3-ba92-525ff3e0d0a1</onsuccess><calculation expression="Replace([Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Filename" /></stage><stage stageid="d88a7022-4447-4ef3-ba92-525ff3e0d0a1" name="calculate path" type="Calculation"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="15" /><onsuccess>092c29d6-bdfe-481e-a806-f60b71ba275e</onsuccess><calculation expression="Replace([Temporary Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Temporary Filename" /></stage><stage stageid="51f80a23-e858-4edd-a2f5-7858ae901834" name="Filename" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="180" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\Form_v8.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="79b0f00c-5547-4cee-b624-c5f68310ecdf" name="Temporary Filename" type="Data"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="285" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop</initialvalue><private /><alwaysinit /></stage><stage stageid="25441e4b-00f1-4335-abe7-5f8313437cf4" name="split to collection" type="Action"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><loginhibit /><display x="15" y="105" /><inputs><input type="text" name="Text to Split" narrative="The text to split" expr="[outtt]" /><input type="text" name="Split Char" narrative="The split delimiter" expr="NewLine()" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" expr="&quot;Fields&quot;" /></inputs><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs><onsuccess>d37e26b9-5c6f-4ece-a734-492384414269</onsuccess><resource object="Utility - Strings" action="Split Text" /></stage><stage stageid="2684d2ac-a125-4d76-bd56-c11647068185" name="Split Values" type="Collection"><subsheetid>8fe775f6-a379-4dde-971f-186bf63be3b3</subsheetid><display x="345" y="-75" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Fields" type="text" /></collectioninfo></stage><stage stageid="c70e24d6-fa03-4511-813a-04ded799a8c3" name="Enter Values to PDF Fields" type="SubSheetInfo"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b51a3650-b63a-4dfe-97d2-fdeb849ba0ca" name="Start" type="Start"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" stage="Filename" /><input type="text" name="Temporary File path" stage="Temporary Filename" /><input type="flag" name="Text Field Present?" stage="Text Field Present" /><input type="flag" name="ComboBox Present?" stage="Combo Box Present" /><input type="text" name="TextField Name" stage="Text Field Name" /><input type="text" name="ComboBox Name" stage="Combo Box Namee" /><input type="text" name="TextField Value" stage="Text Field value" /><input type="text" name="ComboBox Value" stage="ComboBox value" /></inputs><onsuccess>817019dc-2489-4924-bb29-c05a0f2c9419</onsuccess></stage><stage stageid="58e70617-5c34-434b-8564-63ffcbe0709e" name="End" type="End"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="5ce53002-2b1e-44b4-b66f-f64bdd911c3e" name="Code1" type="Code"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="45" w="120" h="30" /><inputs><input type="text" name="Filename" expr="[Filename]" /><input type="text" name="TempFile name" expr="[Temporary Filename]" /><input type="flag" name="TextFields Present" expr="[Text Field Present]" /><input type="flag" name="ComboBox Present" expr="[Combo Box Present]" /><input type="text" name="TextField Name" expr="[Text Field Name]" /><input type="text" name="ComboBox Name" expr="[Combo Box Namee]" /><input type="text" name="Text Field Value" expr="[Text Field value]" /><input type="text" name="Combo Box value" expr="[ComboBox value]" /></inputs><outputs><output type="text" name="Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>58e70617-5c34-434b-8564-63ffcbe0709e</onsuccess><code><![CDATA[			
try{			
			//path to source file
			String source = Filename;
			//create PdfReader object to read the source file
			PdfReader reader = new PdfReader(source);
			//PdfStamper object to modify the content of the PDF
			PdfStamper stamp = new PdfStamper(reader, new FileStream(TempFile_name+"//"+"test.pdf", FileMode.Create));
			//get form fields
			AcroFields form = stamp.AcroFields;

			if(TextFields_Present = true)
			{
				//fill in text fiels
				form.SetField(TextField_Name, Text_Field_Value);
				//select combo box
			}

			if(ComboBox_Present = true)
			{
				form.SetListSelection(ComboBox_Name, new string[]{Combo_Box_value});
			}

			stamp.Close();
			
			Message = "No Error";
			Success = true;
}


catch ( Exception caughtEx )
{ 
	Message = caughtEx.Message;
    Success = false;	
}]]></code></stage><stage stageid="817019dc-2489-4924-bb29-c05a0f2c9419" name="calculate path" type="Calculation"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>64283017-bdc9-4721-a089-08c3662da271</onsuccess><calculation expression="Replace([Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Filename" /></stage><stage stageid="64283017-bdc9-4721-a089-08c3662da271" name="calculate path" type="Calculation"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>5ce53002-2b1e-44b4-b66f-f64bdd911c3e</onsuccess><calculation expression="Replace([Temporary Filename], &quot;\&quot;, &quot;\\&quot;)" stage="Temporary Filename" /></stage><stage stageid="afaee708-2165-4027-bb45-885f20da0cb5" name="Filename" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="180" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop\Form_v8.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="76cd2e8f-c757-4c69-b071-4f53f2d461bf" name="Temporary Filename" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="285" y="-105" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\thesni.nazeer\Desktop</initialvalue><private /><alwaysinit /></stage><stage stageid="aabaedcf-f00e-49c5-afe2-9d3475ab40de" name="Text Field Present" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="-195" y="0" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1402de14-8f92-4dcb-8847-4beb739dae3e" name="Combo Box Present" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="-75" y="0" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc31cf53-7bae-4ade-8168-420b4cba6281" name="Text Field Name" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="150" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c41311c-10d2-4d22-9327-dd0def8dce13" name="Combo Box Namee" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="210" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a70a8044-1883-4e27-a36d-1f238c200b5e" name="Text Field value" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="330" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0415aee4-f2f2-4be2-9aca-3c8994814d46" name="ComboBox value" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><loginhibit /><display x="270" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c30e9838-c093-4698-b3ca-8e60f79b5032" name="Message" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="390" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cab86600-b3a9-43c5-80b4-32d6c5071c0c" name="Success" type="Data"><subsheetid>5c1b4ddf-015c-474a-bd07-7f1909a4350c</subsheetid><display x="-135" y="0" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="271d1ae1-f49d-447a-bb0a-40e7950010df" name="Pos Finance_Mail EWS" xmlns="http://www.blueprism.co.uk/product/process"><process name="Pos Finance_Mail EWS" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>66dafbc2-d0e4-4bf5-8117-af849d923122</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>27</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="f841c047-7ebe-47c0-9c04-dd5bf856e840" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="959486b7-5a0c-409a-9326-9b63d25d0389" type="Normal" published="True"><name>unread mails</name><view><camerax>234</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ce9e28e-3623-4c0a-93d5-b59bb4d62d38" type="Normal" published="True"><name>Read and mark read</name><view><camerax>0</camerax><cameray>-18</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dfca2984-d08a-4e01-999b-d1c065f54791" type="Normal" published="True"><name>download Attachment</name><view><camerax>145</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="400abdb4-9180-4c8a-a8d6-f0a824e3016e" type="Normal" published="True"><name>move mail</name><view><camerax>0</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39d2d9b3-acbf-4ab2-a151-ea453e397ca8" type="Normal" published="True"><name>Read message from specific mail ID</name><view><camerax>283</camerax><cameray>-25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c8dcee8-d212-436c-95eb-9e998f0ce29d" type="Normal" published="True"><name>Read msg using domain</name><view><camerax>255</camerax><cameray>-76</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="086ce0cc-9275-46d8-98bc-3d81f747c86b" type="Normal" published="True"><name>master</name><view><camerax>74</camerax><cameray>264</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8c532263-e1ee-4ae5-a82f-2623eacbaaa2" type="Normal" published="False"><name>Check</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8" type="Normal" published="True"><name>forward mail</name><view><camerax>129</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35" type="Normal" published="True"><name>date and time of mail</name><view><camerax>173</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60424c58-dfd0-4881-b552-c1468d6c7360" type="Normal" published="True"><name>Connect Different User</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6b6c017a-419f-4bde-8d34-338a87bd4ff2" type="Normal" published="True"><name>Connect Default User</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a3ce040d-d6d9-4816-9dfa-6066364f5284" type="Normal" published="True"><name>Send mail</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="15346e33-5748-4bb8-94df-17ffca2f9281" type="Normal" published="True"><name>Send to Many</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="25c6e5dd-9276-449b-aadd-a44514084cd3" type="Normal" published="True"><name>Get Folder Names</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40125ab5-fb73-4e75-afe1-21922c7279ad" type="Normal" published="True"><name>Create Folder</name><view><camerax>0</camerax><cameray>-1</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7a509b8-d7a4-4cb3-b354-30db15008c71" type="Normal" published="True"><name>reply</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="7fa6f74d-bd7c-498f-94a2-ccbd7ae6056d" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>c2d3878c-532b-40d0-8c38-5a9b82b0a2a7</onsuccess></stage><stage stageid="c2d3878c-532b-40d0-8c38-5a9b82b0a2a7" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="ea2edc7c-d9ac-4293-8a61-8409845ad815" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.Auth.dll</reference><reference>C:\Program Files\Microsoft\Exchange\Web Services\2.2\Microsoft.Exchange.WebServices.dll</reference><reference>System.Net.dll</reference><reference>System.dll</reference><reference>System.Web.Services.dll</reference><reference>mscorlib.dll</reference><reference>system.core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>Microsoft.Exchange.WebServices.Data</import><import>System.Net</import><import>System.Web.Services</import><import>System.Data</import><import>System.Text.RegularExpressions</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[private void AddRow(DataTable table)
{
    DataRowCollection rowCollection = table.Rows;
    // Instantiate a new row using the NewRow method.

    DataRow newRow = table.NewRow();
    // Insert code to fill the row with values.
	//newRow = "Arjun";
    // Add the row to the DataRowCollection.
    table.Rows.Add(newRow);
}

private void MakeDataTableAndDisplay()
{
	 DataTable table = new DataTable();
	 DataColumn column;
    DataRow row; 
    DataView view;
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "item";
    table.Columns.Add(column);
	
	//row["item"] = "item ";
	
	
	row = table.NewRow();
	row["item"] = "item ";
	table.Rows.Add(row);
	
	//Return table;

}


private static bool RedirectionUrlValidationCallback(string redirectionUrl)
    {
      // The default for the validation callback is to reject the URL.
      bool result = false;

      Uri redirectionUri = new Uri(redirectionUrl);

      // Validate the contents of the redirection URL. In this simple validation
      // callback, the redirection URL is considered valid if it is using HTTPS
      // to encrypt the authentication credentials. 
      if (redirectionUri.Scheme == "https://")
      {
        result = true;
      }
      return result;
    }
]]></code></stage><stage stageid="d92773aa-aea5-4b84-97b9-e157fe22ef74" name="Clean Up" type="SubSheetInfo"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4a9c692e-5cba-4621-8901-bcddea180cf5" name="Start" type="Start"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa</onsuccess></stage><stage stageid="9cf49e4c-baa1-4c2c-a670-e41fcddd2ffa" name="End" type="End"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="82de04cf-1042-4b70-9ce0-f37346694643" name="Note1" type="Note"><subsheetid>f841c047-7ebe-47c0-9c04-dd5bf856e840</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="20e1b213-4555-4211-8eab-9f336621a991" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="949e8652-f281-4ac6-b738-d3212262a45c" name="unread mails" type="SubSheetInfo"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3c2d5a4d-d17a-4fef-b2b5-1981afcb3d89" name="Start" type="Start"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>0efed21b-db8c-4821-886b-87dab85ba221</onsuccess></stage><stage stageid="a362798e-e7ef-4d27-a2de-9afd7dab4ada" name="End" type="End"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="unread messages" stage="Call3" /></outputs></stage><stage stageid="0efed21b-db8c-4821-886b-87dab85ba221" name="Code4" type="Code"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Coll" expr="[Coll]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="text" name="asub" stage="asub" /><output type="text" name="aTo" stage="aTo" /><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>a362798e-e7ef-4d27-a2de-9afd7dab4ada</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
 asub="";
 aTo="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
	//row["item"] = "item ";
	/*	
	row = table.NewRow();
	row["item"] = "item ";
	table.Rows.Add(row);
 */
 Call3=table;
 //ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2007_SP1);
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


//service.Credentials = new WebCredentials("tp.devtest14@xe04.ey.com", "", "xdtd01.ey.net");

//service.Credentials = new WebCredentials("", "", "xdtd01.ey.net");
//service.Credentials = new NetworkCredential(userEmailAddress, userPassword);





////////////service.Credentials = new WebCredentials("arjun.lal@xe04.ey.com", "*********", "outlook-xi.ey.net");

//service.Credentials = new WebCredentials("arjun.lal@xe04.ey.com", "*********", "outlook-xi.ey.net");


 //service.AutodiscoverUrl( "tp.devtest14@xe04.ey.com" );
 
 // service.Credentials = new NetworkCredential("Arjun.Lal@xe04.ey.com", "");

//service.Credentials = new NetworkCredential("Arjun.Lal@xe04.ey.com", "History_05");

//service.Credentials = new NetworkCredential("tp.devtest14@xe04.ey.com", "");
 
 //************************************
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 
 //service.AutodiscoverUrl("tp.devtest14@xe04.ey.com" );
 
 //service.AutodiscoverUrl("https://xdtd01.ey.net/EWS/Exchange.asmx");
 
 //service.AutodiscoverUrl("Balasubramanian.C@xe04.ey.com" );
 
 //service.Url = new Uri("https://xdtd01.ey.net/EWS/Exchange.asmx");
 
 
// service.Url = new Uri("https://outlook-xi.ey.net/EWS/Exchange.asmx");
 
 
 
//service.AutodiscoverUrl(userEmailAddress, RedirectionCallback);
//service.AutodiscoverUrl("Arjun.Lal@xe04.ey.com", RedirectionCallback);

   // Console.WriteLine("EWS Endpoint: {0}", service.Url);

//service.Url = new Uri("https://outlook-xi.ey.net/ews/Services.wsdl");


//************************************


/*

PropertySet itemProperty = new PropertySet();
 itemProperty.RequestedBodyType = BodyType.Text;
 itemProperty.Add(ItemSchema.Body);
 
 SearchFilter searchFilter = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

        PropertySet FindItemPropertySet = new PropertySet(BasePropertySet.IdOnly);

        ItemView view = new ItemView(999);
       // view.PropertySet = FindItemPropertySet;
        PropertySet GetItemsPropertySet = new PropertySet(BasePropertySet.FirstClassProperties);
        GetItemsPropertySet.RequestedBodyType = BodyType.Text;


        FindItemsResults<Item> emailMessages = null;
        do
        {
            emailMessages = service.FindItems(WellKnownFolderName.Inbox, searchFilter, view);
            if (emailMessages.Items.Count > 0)
            {
                service.LoadPropertiesForItems(emailMessages.Items, GetItemsPropertySet);
                foreach (Item Item in emailMessages.Items)
                {
                    Console.WriteLine(Item.Body.Text);
                }
            }
        } while (emailMessages.MoreAvailable);
 
 
*/




/*
IsEqualTo restriction = new IsEqualTo(MessagePropertyPath.IsRead, false);

                FindItemResponse response = service.FindItem(StandardFolder.Inbox, MessagePropertyPath.AllPropertyPaths, restriction);

*/


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, "subject:TODO", itemview);


//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, "Subject:Fwd: THESIS PRESENTATION", new ItemView( 1000 ));

/**/ //
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


/*
FindItemsResults<Item> findResults = service.FindItems(
   WellKnownFolderName.Inbox,
   new ItemView( 10 ));

 */
   
   FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
   
//Item item = findResults.FirstOrDefault();
//Item item = findResults.Item;

//_________________________________









//___________________________________


foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);

body_h=item.Body;

sub=item.Subject;
asub=sub;

	//if( sub=="Fwd: THESIS PRESENTATION")
{
	body_h=item.Body;
row = table.NewRow();

	//row["Subject"] = body_h;
	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;

]]></code></stage><stage stageid="399f4cd9-df44-4f53-be8f-c8f0f30f47ec" name="asub" type="Data"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="210" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b9a7dab8-8e6f-4754-a8a5-48b8856d9b15" name="aTo" type="Data"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="150" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43b83227-db94-4ba9-b6aa-41fe65fa52de" name="Coll" type="Collection"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><loginhibit /><display x="270" y="-75" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject123" type="text" /></collectioninfo><initialvalue><row><field name="Subject123" type="text" value="" /></row></initialvalue></stage><stage stageid="3537e082-8e13-484a-9370-1f9fde83eae1" name="Call3" type="Collection"><subsheetid>959486b7-5a0c-409a-9326-9b63d25d0389</subsheetid><display x="195" y="0" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="d6542589-db62-461d-a468-a5c6974e9211" name="Read and mark read" type="SubSheetInfo"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="28439a79-26f9-42d2-9a0f-c5023fe3aaf1" name="Start" type="Start"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>4fafb0ad-cc45-4edc-bdf7-cbb54e162594</onsuccess></stage><stage stageid="23f13cec-c0e6-4af4-b45b-6aff4fa0ab23" name="End" type="End"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="4fafb0ad-cc45-4edc-bdf7-cbb54e162594" name="Code5" type="Code"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="collection" name="Coll" expr="[Coll]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="text" name="asub" stage="asub" /><output type="text" name="aTo" stage="aTo" /><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>23f13cec-c0e6-4af4-b45b-6aff4fa0ab23</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
 asub="";
 aTo="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 
 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
body_h=item.Body;

sub=item.Subject;
asub=sub;
mes.IsRead = true;
mes.Update(ConflictResolutionMode.AlwaysOverwrite);

{
	body_h=item.Body;
	row = table.NewRow();
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="b8a3a05b-a249-41e2-96d1-e5f68f7de9d9" name="asub" type="Data"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="270" y="-45" w="150" h="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11402f0a-076c-476a-848e-4f072230c0af" name="aTo" type="Data"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="255" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aaa55966-669e-46a9-b67a-09494c26362c" name="Coll" type="Collection"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><loginhibit /><display x="225" y="45" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Subject123" type="text" /></collectioninfo><initialvalue><row><field name="Subject123" type="text" value="" /></row></initialvalue></stage><stage stageid="cebf8656-2c1c-4267-8e0c-454565c23d19" name="Call3" type="Collection"><subsheetid>7ce9e28e-3623-4c0a-93d5-b59bb4d62d38</subsheetid><display x="180" y="-60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="bc4e5bb8-41eb-4f30-bc1a-707006561c46" name="download Attachment" type="SubSheetInfo"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8d8a01d6-cfb6-4ad6-ae0e-6d7730863bdf" name="Start" type="Start"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>c79c44bc-11e2-411b-8ee4-cd9116e93d44</onsuccess></stage><stage stageid="0b3cd6f8-fdb8-4d12-854f-148ec0f0e669" name="End" type="End"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="b1c0565f-2613-46cc-b49a-c2daef43d2c0" name="asub" type="Data"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="315" y="-90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b792028b-b699-45ea-b147-4a559c6d1ac1" name="Call3" type="Collection"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><display x="165" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c79c44bc-11e2-411b-8ee4-cd9116e93d44" name="Code8" type="Code"><subsheetid>dfca2984-d08a-4e01-999b-d1c065f54791</subsheetid><loginhibit /><narrative>ghgfCBTS1184288kuoiuoui </narrative><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>0b3cd6f8-fdb8-4d12-854f-148ec0f0e669</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
 
//asub="";
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	from_m=mes.Sender.Name;
	
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);

body_h=item.Body;

sub=item.Subject;
//asub=sub;
var m=Regex.Match(sub.ToUpper(), ".*(CBTS[0-9]{7}).*");
if (m.Success)

{
	body_h=item.Body;
row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                        foreach (Attachment attachment in message.Attachments)
                        {	
							int b=attachment.Name.IndexOf(".");	
                            if (attachment is FileAttachment)
                            if (attachment.Name.Contains(".xlsx"))
                            {	
								count=count+1;
                                FileAttachment fileAttachment = attachment as FileAttachment;
                                //fileAttachment.Load("c:\\folder\\" + fileAttachment.Name);
								fileAttachment.Load("c:\\folder\\" + m.Groups[1].Value+"_"+count+".xlsx");
                                Console.WriteLine("Attachment name: " + fileAttachment.Name);
                            }
                        }
						mes.IsRead = true;
						mes.Update(ConflictResolutionMode.AlwaysOverwrite);

	
	table.Rows.Add(row);
}

}
Call3=table;



]]></code></stage><stage stageid="8e081871-eade-4a43-995b-262dea3db839" name="move mail" type="SubSheetInfo"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><narrative>new
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a2133868-b7b0-4444-a368-0806103b4bc7" name="Start" type="Start"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Move To" stage="MoveToFolder" /></inputs><onsuccess>53ea2a68-7b0f-4d7d-94c1-0912ca0e0d44</onsuccess></stage><stage stageid="02083c3c-b31c-4a84-961b-74cbf89bf152" name="End" type="End"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="53ea2a68-7b0f-4d7d-94c1-0912ca0e0d44" name="Code7" type="Code"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>02083c3c-b31c-4a84-961b-74cbf89bf152</onsuccess><code><![CDATA[string fid;
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}  
 if(fid!="NA")
{
	foreach ( Item item in findResults.Items )
	{
		EmailMessage mes = (EmailMessage)item;
		item.Load(itempropertyset);
		item.Move(fid);
	 }
}
]]></code></stage><stage stageid="4350e711-e6eb-4b4a-af47-19c74f2f4d0a" name="MoveToFolder" type="Data"><subsheetid>400abdb4-9180-4c8a-a8d6-f0a824e3016e</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4de96794-0749-4723-a307-76fca2b09a65" name="Read message from specific mail ID" type="SubSheetInfo"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ab63ff26-6487-45de-ad2f-c442cebde6fe" name="Start" type="Start"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From address" stage="From" /></inputs><onsuccess>e7f18c7d-1465-4363-8284-45f80903d3e4</onsuccess></stage><stage stageid="3edbe809-6240-4776-b4d8-4ba41def1798" name="End" type="End"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="e7f18c7d-1465-4363-8284-45f80903d3e4" name="Code9" type="Code"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>3edbe809-6240-4776-b4d8-4ba41def1798</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}






PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
if(from_m.ToLower()==From.ToLower())
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="68102a29-1d10-405f-8670-877e8df03d66" name="Call3" type="Collection"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><display x="165" y="-60" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0c4231c1-2da5-4afb-89a3-114f095e398c" name="From" type="Data"><subsheetid>39d2d9b3-acbf-4ab2-a151-ea453e397ca8</subsheetid><loginhibit /><display x="165" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c58bc5c9-f6e8-404c-b519-c8932f0a6f7b" name="Read msg using domain" type="SubSheetInfo"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b0d18479-f11f-4d2b-a23d-af85d86f8295" name="Start" type="Start"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Domain name" narrative="@&quot;Domain name&quot;" stage="Domain" /></inputs><onsuccess>0a595572-0b8d-4acc-b0e6-4dca9156dc38</onsuccess></stage><stage stageid="190f4407-aeb3-4e3b-b044-a15770dba485" name="End" type="End"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="0a595572-0b8d-4acc-b0e6-4dca9156dc38" name="Code10" type="Code"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Domain" expr="[Domain]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>190f4407-aeb3-4e3b-b044-a15770dba485</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 
// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 




PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
var m=Regex.Match(from_m, ".*@"+Domain+"$");
if (m.Success)

{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	
	table.Rows.Add(row);
}

}
Call3=table;
]]></code></stage><stage stageid="4d03f08b-e766-42f1-9e5b-46d9f46f4033" name="Call3" type="Collection"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="85e410bb-e1ca-4f65-93fc-6e950f7776fd" name="Domain" type="Data"><subsheetid>2c8dcee8-d212-436c-95eb-9e998f0ce29d</subsheetid><loginhibit /><display x="165" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cb769a21-cd46-4bf8-b102-f2a388778b10" name="master" type="SubSheetInfo"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7d26c61a-0cb2-4cd6-8b07-fe1953fc9e58" name="Start" type="Start"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-180" /><inputs><input type="text" name="Subject" narrative="filter with subject string" stage="sub" /><input type="text" name="Filter Mail" narrative="Filter email" stage="mailid" /><input type="text" name="Filter Domain" narrative="Filter Domain" stage="domain" /><input type="date" name="Filter From Date" narrative="dd/mm/yyyy" stage="Date" /><input type="time" name="Filter Time" narrative="hh:mm:ss" stage="time" /><input type="text" name="Save Attachment Path*" narrative="Path" stage="save attachment path" /><input type="text" name="Attachment Type" narrative="Download the specific tipe of attachment only" stage="AttachmentType" /><input type="text" name="Move to Folder" narrative="Move selected mails to the folder" stage="MoveToFolder" /><input type="flag" name="Mark as Read" stage="Mark as Read" /><input type="flag" name="Forward Mail" stage="Forward" /><input type="text" name="Forward To" stage="SendTo" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /><input type="text" name="Forward Note" stage="ForwardNote" /></inputs><onsuccess>5cb41b5c-41d4-4143-8c7e-c375fb4c9898</onsuccess></stage><stage stageid="2a819f53-9a67-42bd-bb27-06bf6ab685d6" name="End" type="End"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="450" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="4ea39d57-dfd0-438e-a860-4d3c3c8e663d" name="Call3" type="Collection"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="450" y="-60" w="180" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="973a7fb2-1761-4d22-a7ff-4b0d2a99ff1a" name="no filter" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master</narrative><display x="15" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}        
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                        foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
Call3=table;



]]></code></stage><stage stageid="cea3f098-9c47-47c4-9637-afd6b55ac187" name="sub" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="345" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43974740-0272-4949-9895-072c6977da83" name="Mark as Read" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-255" y="-15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ec8b659a-fd69-4072-8459-efc4f0eeb53a" name="MoveToFolder" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="585" y="-105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e562cda9-7416-4960-9650-2b33fced21d3" name="Check" type="SubSheetInfo"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="04be6661-595f-4178-b954-3651d6b176da" name="Start" type="Start"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MoveTo" stage="MoveTo" /></inputs><onsuccess>23730f66-9da9-40b7-bfe9-61d14e7caff8</onsuccess></stage><stage stageid="f55f859d-95e2-40fd-96b0-10d31cb3ca92" name="End" type="End"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="23730f66-9da9-40b7-bfe9-61d14e7caff8" name="Move mail Flag" type="Decision"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[MoveTo]=&quot;&quot;" /><ontrue>9a184c17-58ff-45bb-9d82-19b820ba52fd</ontrue><onfalse>24429790-93d2-4de4-84eb-b76e6087badb</onfalse></stage><stage stageid="b3d4ad3b-0596-4e3b-9a76-369897dcea79" name="To Folder Flag" type="Decision"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="30" /><decision expression="[ToFolderFlag]=True" /><ontrue>f55f859d-95e2-40fd-96b0-10d31cb3ca92</ontrue><onfalse>e223973c-c529-4f81-ae45-23d9437d2caf</onfalse></stage><stage stageid="e223973c-c529-4f81-ae45-23d9437d2caf" name="Exception1" type="Exception"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="150" y="30" /><exception type="MoveToFolder" detail="&quot;Folder not found&quot;" /></stage><stage stageid="5cb41b5c-41d4-4143-8c7e-c375fb4c9898" name="Check" type="SubSheet"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="text" name="MoveTo" expr="[MoveToFolder]" /></inputs><onsuccess>56fbab6e-834b-4ce6-9dd8-67013eed48f6</onsuccess><processid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</processid></stage><stage stageid="88cad3c8-a6bb-4a90-a6df-fc955f9111e2" name="MoveTo" type="Data"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">"cvc"</initialvalue><private /><alwaysinit /></stage><stage stageid="24429790-93d2-4de4-84eb-b76e6087badb" name="Code2" type="Code"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MoveToFolder" expr="[MoveTo]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="flag" name="ToFolderFlag" stage="ToFolderFlag" /></outputs><onsuccess>b3d4ad3b-0596-4e3b-9a76-369897dcea79</onsuccess><code><![CDATA[string fid;
ToFolderFlag=Convert.ToBoolean(0);
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}  
 if(fid!="NA")
{
	ToFolderFlag=Convert.ToBoolean(1);
}
]]></code></stage><stage stageid="01be89c6-87f2-4a5b-bc30-9392866254df" name="ToFolderFlag" type="Data"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><display x="210" y="-105" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9a184c17-58ff-45bb-9d82-19b820ba52fd" name="Anchor1" type="Anchor"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="-60" y="-60" w="10" h="10" /><onsuccess>4080317f-bce9-44d9-8c52-10db6f65d190</onsuccess></stage><stage stageid="4080317f-bce9-44d9-8c52-10db6f65d190" name="Anchor2" type="Anchor"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="-60" y="90" w="10" h="10" /><onsuccess>f55f859d-95e2-40fd-96b0-10d31cb3ca92</onsuccess></stage><stage stageid="e369f710-e2d8-4808-a2eb-01d029891b49" name="save attachment path" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="615" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56fbab6e-834b-4ce6-9dd8-67013eed48f6" name="path" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-75" /><onsuccess>98bd3593-bdd8-4e07-88c9-77785ee839ee</onsuccess><calculation expression="Replace([save attachment path], &quot;\&quot;, &quot;\\&quot;)" stage="save attachment path" /></stage><stage stageid="e9184a69-537e-4f27-8088-7b4752f134c3" name="Recover1" type="Recover"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="240" y="30" /><onsuccess>4aba0743-4c45-46cd-9138-8da5f45bfde2</onsuccess></stage><stage stageid="4aba0743-4c45-46cd-9138-8da5f45bfde2" name="Resume1" type="Resume"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="240" y="90" /><onsuccess>f55f859d-95e2-40fd-96b0-10d31cb3ca92</onsuccess></stage><stage stageid="d2cdff91-91da-4f9b-b406-cb69a3762dc7" name="Stage2" type="Block"><subsheetid>8c532263-e1ee-4ae5-a82f-2623eacbaaa2</subsheetid><loginhibit /><display x="90" y="-15" w="225" h="75" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="64acbfba-b46c-4843-b35f-5df334e24794" name="mailid" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="555" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="723c16e1-5944-4d74-a938-252b38492443" name="domain" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="420" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2437ad06-6ad4-4715-adc9-c37a101b7313" name="domain and mail" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain and mail</narrative><display x="-135" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="domain" expr="[domain]" /><input type="text" name="from" expr="[mailid]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
from_m="";

DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}    
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{

if(from_m.ToLower()==from.ToLower())
{
	var x=Regex.Match(from_m, ".*@"+domain+"$");
	if (x.Success & from_m==from)
	{
	//	var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
	//	if (m.Success)
		if(sub.ToUpper().Contains(Sub.ToUpper()))
		{	
			body_h=item.Body;
			row = table.NewRow();	
			row["Subject"] =sub;
			row["Sender"] =from_m;
			row["Body"] =body_h;
			EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
			foreach (Attachment attachment in message.Attachments)
            {
				if (attachment is FileAttachment)
					if(AttachmentType=="")
					{
						FileAttachment fileAttachment = attachment as FileAttachment;
						fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
					}
					else
					{
						if (attachment.Name.Contains(AttachmentType))
						{	
							count=count+1;
							FileAttachment fileAttachment = attachment as FileAttachment;
							if(Sub=="")
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
							else
								fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
						}
					}
            }
			if(MarkAsRead)
			{
				mes.IsRead = true;
				mes.Update(ConflictResolutionMode.AlwaysOverwrite);
			}
			if(fid!="NA")
			{
				item.Load(itempropertyset);
				item.Move(fid);
			}
			if(Forward)
			{
				message = item as EmailMessage;
				ResponseMessage responseMessage = message.CreateForward();
				responseMessage.BodyPrefix = messageBodyPrefix;
				// Add the recipients who are to receive the forwarded email message.
				responseMessage.ToRecipients.Add(SendTo);
				if(Cc!="")
					responseMessage.CcRecipients.Add(Cc);
				if(Bcc!="")
					responseMessage.BccRecipients.Add(Bcc);

				// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
				responseMessage.SendAndSaveCopy();
			}

			table.Rows.Add(row);
		}

	}
}
}
}
Call3=table;
]]></code></stage><stage stageid="db9a59d0-de56-42af-9111-f6ed2a8945a2" name="domain filtering" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain </narrative><display x="105" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="domain" expr="[domain]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote;
 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}        
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
var x=Regex.Match(from_m, ".*@"+domain+"$");
if (x.Success)
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
 foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									//if(m.Groups[1].Value=="")
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
}
Call3=table;



]]></code></stage><stage stageid="d563612c-94e2-49d2-a881-1f39c813325c" name="mail filtering" type="Code"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><narrative>master domain and mail</narrative><display x="-60" y="330" /><inputs><input type="text" name="Sub" expr="[sub]" /><input type="flag" name="MarkAsRead" expr="[Mark as Read]" /><input type="text" name="SaveAttachmentPath" expr="[save attachment path]" /><input type="text" name="from" expr="[mailid]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="AttachmentType" expr="[AttachmentType]" /><input type="text" name="MoveToFolder" expr="[MoveToFolder]" /><input type="flag" name="Forward" expr="[Forward]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="ForwardNote" expr="[ForwardNote]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>2a819f53-9a67-42bd-bb27-06bf6ab685d6</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 

int count=0;
string sub;
string body_h;
string from_m;
from_m="";
string fid="NA";
string messageBodyPrefix="";
messageBodyPrefix=ForwardNote; 
DataTable table = new DataTable();
DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);

 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
 
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
	 
 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
	if(folder.DisplayName==MoveToFolder)
	{
		fid=folder.Id.ToString();
	}
}       
   

foreach ( Item item in findResults.Items )
{
	
	
	
	
	EmailMessage mes = (EmailMessage)item;
	
	//from_m=mes.Sender.Name;
	
 
	
	
	
	
	item.Load(itempropertyset);
//Console.WriteLine(item.Body);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
if(from_m.ToLower()==from.ToLower())
{
//var m=Regex.Match(sub.ToUpper(), ".*("+Sub.ToUpper()+").*");
//if (m.Success)
if(sub.ToUpper().Contains(Sub.ToUpper()))
{
	body_h=item.Body;
	row = table.NewRow();

	
	row["Subject"] =sub;
	row["Sender"] =from_m;
	row["Body"] =body_h;
	 EmailMessage message = EmailMessage.Bind(service, item.Id, new PropertySet(BasePropertySet.IdOnly, ItemSchema.Attachments, ItemSchema.HasAttachments));
                       foreach (Attachment attachment in message.Attachments)
                        {
							if (attachment is FileAttachment)
                            if(AttachmentType=="")
							{   FileAttachment fileAttachment = attachment as FileAttachment;
								fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);	
							}
							else
							{
								if (attachment.Name.Contains(AttachmentType))
								{	
									count=count+1;
									FileAttachment fileAttachment = attachment as FileAttachment;
									if(Sub=="")
										fileAttachment.Load(SaveAttachmentPath + fileAttachment.Name);
									else
										fileAttachment.Load(SaveAttachmentPath+Sub+"_"+count+AttachmentType);
								}
							}
                        }
						if(MarkAsRead)
						{
							mes.IsRead = true;
							mes.Update(ConflictResolutionMode.AlwaysOverwrite);
						}
						if(fid!="NA")
						{
							
								item.Load(itempropertyset);
								item.Move(fid);
							
						}
						if(Forward)
						{
							message = item as EmailMessage;
							ResponseMessage responseMessage = message.CreateForward();
							responseMessage.BodyPrefix = messageBodyPrefix;
							// Add the recipients who are to receive the forwarded email message.
							responseMessage.ToRecipients.Add(SendTo);
							if(Cc!="")
								responseMessage.CcRecipients.Add(Cc);
							if(Bcc!="")
								responseMessage.BccRecipients.Add(Bcc);

							// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
							responseMessage.SendAndSaveCopy();
						}

	
	table.Rows.Add(row);
}
}
}
}
Call3=table;



]]></code></stage><stage stageid="98bd3593-bdd8-4e07-88c9-77785ee839ee" name="Decision1" type="Decision"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="-30" /><decision expression="[mailid]=&quot;&quot;" /><ontrue>322f508b-a81c-4aaa-b06f-0e8a9ad743fd</ontrue><onfalse>9c3bb8da-7079-4819-87a1-a2b7766a4318</onfalse></stage><stage stageid="9c3bb8da-7079-4819-87a1-a2b7766a4318" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="90" y="15" /><onsuccess>ea719a3f-b455-4caa-a965-4ce4afa4033d</onsuccess><calculation expression="True" stage="frommail" /></stage><stage stageid="1c3b51a2-3126-41e6-b09b-d5efd5215861" name="frommail" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="300" y="-30" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="322f508b-a81c-4aaa-b06f-0e8a9ad743fd" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-60" y="15" /><onsuccess>ea719a3f-b455-4caa-a965-4ce4afa4033d</onsuccess><calculation expression="False" stage="frommail" /></stage><stage stageid="ea719a3f-b455-4caa-a965-4ce4afa4033d" name="Decision1" type="Decision"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="60" /><decision expression="[domain]=&quot;&quot;" /><ontrue>a1273316-a69e-4f85-9adb-152598a4de9d</ontrue><onfalse>7451a1ce-f9c5-4b58-a8f9-19bc84d88ab4</onfalse></stage><stage stageid="7451a1ce-f9c5-4b58-a8f9-19bc84d88ab4" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="90" y="105" /><onsuccess>1471313f-7b62-4c39-bb8b-70197ef4118f</onsuccess><calculation expression="True" stage="domainflag" /></stage><stage stageid="a1273316-a69e-4f85-9adb-152598a4de9d" name="Calc1" type="Calculation"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-60" y="105" /><onsuccess>1471313f-7b62-4c39-bb8b-70197ef4118f</onsuccess><calculation expression="False" stage="domainflag" /></stage><stage stageid="540c0a57-32f5-4cab-b365-4ce239b2e0cb" name="domainflag" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="285" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1471313f-7b62-4c39-bb8b-70197ef4118f" name="Choice1" type="ChoiceStart"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="150" /><groupid>37c6ac08-b89a-4472-81f4-e3ba4d21e178</groupid><choices><choice expression="([domainflag] AND [frommail])=True"><name>domain and mail</name><distance>30</distance><ontrue>2437ad06-6ad4-4715-adc9-c37a101b7313</ontrue></choice><choice expression="[domainflag]=True"><name>domain</name><distance>60</distance><ontrue>db9a59d0-de56-42af-9111-f6ed2a8945a2</ontrue></choice><choice expression="[frommail]=True"><name>mail</name><distance>90</distance><ontrue>d563612c-94e2-49d2-a881-1f39c813325c</ontrue></choice></choices></stage><stage stageid="24c39994-0c79-4abb-add9-21720e141c7e" name="Otherwise1" type="ChoiceEnd"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="15" y="270" /><onsuccess>973a7fb2-1761-4d22-a7ff-4b0d2a99ff1a</onsuccess><groupid>37c6ac08-b89a-4472-81f4-e3ba4d21e178</groupid></stage><stage stageid="1cdd0482-9060-431e-8ce0-26ea95b4930b" name="forward mail" type="SubSheetInfo"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8f5773a5-4797-4107-a6fd-a040ef1776e2" name="Start" type="Start"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From" narrative="mail from" stage="From" /><input type="text" name="Subject" narrative="Filter with subject" stage="Sub" /><input type="text" name="To" stage="SendTo" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>62f8c97f-aa32-4a33-a634-c76ad59face4</onsuccess></stage><stage stageid="0ffb6a8a-3c63-4bfa-a162-03e0a12b839d" name="End" type="End"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="62f8c97f-aa32-4a33-a634-c76ad59face4" name="Code1" type="Code"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Sub" expr="[Sub]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>0ffb6a8a-3c63-4bfa-a162-03e0a12b839d</onsuccess><code><![CDATA[string sub;
 string body_h;
 string from_m;
 //string messageBodyPrefix = "This is a message that was forwarded by using the EWS Managed API";
string messageBodyPrefix = "";

// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
EmailMessage message = new EmailMessage(service); 
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;

if(from_m.ToLower()==From.ToLower())
{
	if(sub.ToUpper().Contains(Sub.ToUpper()))
	{
		message = item as EmailMessage;
		ResponseMessage responseMessage = message.CreateForward();
		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		
		responseMessage.BodyPrefix = messageBodyPrefix;

	// Add the recipients who are to receive the forwarded email message.
	responseMessage.ToRecipients.Add(SendTo);
	if(Cc!="")
		responseMessage.CcRecipients.Add(Cc);
	if(Bcc!="")
		responseMessage.BccRecipients.Add(Bcc);

	// Send the forwarded email message and save a copy of the message in the default Sent Items folder.
	responseMessage.SendAndSaveCopy();


		
		table.Rows.Add(row);
	}
}
}
Call3=table;
]]></code></stage><stage stageid="022d833b-1422-47cb-b20b-c3cd2fb6e3e0" name="Call3" type="Collection"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e9b46b30-4d2c-48a8-9f62-35bc299f59b7" name="SendTo" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="255" y="-75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e2b9de2f-0239-4e52-b4f6-da67ce01c280" name="Cc" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="165" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3757c201-e218-4994-9aff-e0485686e852" name="Bcc" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="255" y="-150" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="764e2eca-6f76-4fdb-b421-aadebbd9dbe1" name="date and time of mail" type="SubSheetInfo"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1aabe3e8-aaa7-4046-bd6b-9a9d9ebc48fd" name="Start" type="Start"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="date" name="Date" stage="Date" /><input type="time" name="Time" stage="time" /></inputs><onsuccess>e493e0ac-ce7f-4041-94ab-d7ab11b21e55</onsuccess></stage><stage stageid="c082afa0-143a-4a17-9901-f512eab0928f" name="End" type="End"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="b1979ee9-017f-43b2-8b2c-9223403b5c57" name="Call3" type="Collection"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><display x="225" y="15" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="00f55e8c-0318-4961-b1e4-f1097cb0ce54" name="Date" type="Data"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="315" y="-75" /><datatype>date</datatype><initialvalue>2000/01/01</initialvalue><private /><alwaysinit /></stage><stage stageid="f4c87a20-0af5-4513-89c7-da405f99c3c4" name="time" type="Data"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="360" y="-75" /><datatype>time</datatype><initialvalue>00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="f5dc8135-b7e4-4fd7-bf2b-add9b365c186" name="Connect Different User" type="SubSheetInfo"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4cf6fd6a-88b7-4410-94e4-80d06b5c7085" name="Start" type="Start"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="User Name" stage="UserName" /><input type="password" name="Password" stage="Password" /><input type="text" name="Mail ID" stage="mailID" /><input type="text" name="ServiceUrl" stage="ServerUrl" /></inputs><onsuccess>2b62fd9d-e510-4c18-8f77-bcf7d994bb96</onsuccess></stage><stage stageid="f7ba08ff-992b-455e-8a7f-fd3ffb1061c1" name="End" type="End"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="d2d5f11a-0c6e-496b-a5b9-72a047bba8f4" name="UserName" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><narrative>Domain\username</narrative><display x="105" y="-75" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="2210b089-5042-486b-9e2a-d2473239dcf1" name="Password" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="165" y="-75" /><datatype>password</datatype><initialvalueenc></initialvalueenc><alwaysinit /></stage><stage stageid="2b62fd9d-e510-4c18-8f77-bcf7d994bb96" name="Code6" type="Code"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>f7ba08ff-992b-455e-8a7f-fd3ffb1061c1</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	service.Credentials = new WebCredentials(UserName, Password );
	service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );	 
}
catch
{
	service.Url = new Uri(SUrl);
}
//service.Url = new Uri("https://mail-xi.ey.net/ews/exchange.asmx");


PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;
/*
SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox,sf, new ItemView(1000));
*/]]></code></stage><stage stageid="0433cef4-1c76-43ee-8c26-1cc42330e5f8" name="mailID" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="225" y="-75" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="ccb69b6f-c88a-4c71-bb66-b4792be0e2fc" name="Connect Default User" type="SubSheetInfo"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="79ecfa5f-af40-43ac-8f43-4b233062e272" name="Start" type="Start"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="MailID" stage="mailID" /><input type="text" name="ServiceUrl" stage="ServerUrl" /></inputs><onsuccess>09d03470-9fee-4a3e-870c-824ffca00840</onsuccess></stage><stage stageid="5866ed9f-8c89-4956-b1e4-170ed2f549a7" name="End" type="End"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="22375ac0-789c-4d27-9941-0f16ef91c98d" name="Code11" type="Code"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="ServerUrl" expr="[ServerUrl]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>5866ed9f-8c89-4956-b1e4-170ed2f549a7</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

 
//service.AutodiscoverUrl( MailID );
//service.Url = new Uri("https://mail-xi.ey.net/ews/exchange.asmx"); 
try
{
	service.AutodiscoverUrl( MailID );
}
catch
{
	service.Url = new Uri(ServerUrl);
}
try
{
PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

/*SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   */
Success= true;
	Message = "Success";
}

	
catch (Exception e)
	{
	Message = e.ToString();
	Success= false;
	}   ]]></code></stage><stage stageid="09d03470-9fee-4a3e-870c-824ffca00840" name="Multi1" type="MultipleCalculation"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>22375ac0-789c-4d27-9941-0f16ef91c98d</onsuccess><steps><calculation expression="&quot;&quot;" stage="UserName" /><calculation expression="&quot;&quot;" stage="Password" /></steps></stage><stage stageid="b6ded37c-7705-41ce-b932-fa12741a7ec8" name="Send mail" type="SubSheetInfo"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="78f95592-30d8-4c25-a37a-e8f4364892a7" name="Start" type="Start"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" stage="SendTo" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="text" name="Attachment" stage="Attachment" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>01d385d4-de51-460c-b827-0b04ee0fe500</onsuccess></stage><stage stageid="f7a4c604-d945-456f-a21b-99312bad8e5a" name="End" type="End"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="e014c20c-ffec-40ee-8a77-2fca52ac2f0c" name="SendTo" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="135" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="01d385d4-de51-460c-b827-0b04ee0fe500" name="Code12" type="Code"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Attachment" expr="[Attachment]" /><input type="text" name="Cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /></inputs><onsuccess>f7a4c604-d945-456f-a21b-99312bad8e5a</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}


EmailMessage message = new EmailMessage(service);

message.Subject = Subject;
message.Body = Body;
message.ToRecipients.Add(SendTo);
if(Cc!="")
	message.CcRecipients.Add(Cc);
if(Bcc!="")
	message.BccRecipients.Add(Bcc);
if(Attachment!="")
	message.Attachments.AddFileAttachment(Attachment);
message.SendAndSaveCopy();
]]></code></stage><stage stageid="aca97485-cadb-4b93-b9fa-a100f3ffff61" name="Get Folder Names" type="SubSheetInfo"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4202cf9-ed59-4f6f-a264-6598d982f070" name="End" type="End"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="File name" stage="Call3" /></outputs></stage><stage stageid="2022634f-97a9-497b-882d-283dc3188d2b" name="Start" type="Start"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>597ace65-31f3-4ff7-a621-8ee0611947df</onsuccess></stage><stage stageid="ac542ce9-534d-4b3f-acc2-d6684d8fd87b" name="End" type="End"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="File name" stage="Call3" /></outputs></stage><stage stageid="597ace65-31f3-4ff7-a621-8ee0611947df" name="Code13" type="Code"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>ac542ce9-534d-4b3f-acc2-d6684d8fd87b</onsuccess><code><![CDATA[ DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Folder";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "ID";
    table.Columns.Add(column);
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);
try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}
PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

// Get all the folders in the message's root folder.
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);

Console.WriteLine("The " + rootfolder.DisplayName + " has " + rootfolder.ChildFolderCount + " child folders.");
// A GetFolder operation has been performed.
// Now do something with the folder, such as display each child folder's name and ID.
rootfolder.Load();
foreach (Folder folder in rootfolder.FindFolders(new FolderView(100)))
{
    
	row = table.NewRow();

	
	row["Folder"] =folder.DisplayName;
	row["ID"] =folder.Id;
	
	
	table.Rows.Add(row);
}

Call3=table;
]]></code></stage><stage stageid="f862a67e-dabe-4c15-af62-baac3684f56e" name="Call3" type="Collection"><subsheetid>25c6e5dd-9276-449b-aadd-a44514084cd3</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e6c1af67-ea92-4eec-82f0-2095c6ea75bb" name="AttachmentType" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="645" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b10f5cd9-d0e5-4fb8-9c80-4e360cc3760e" name="SendTo" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="405" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd2ad58d-9a71-401f-bdaf-a55cc8abb4c4" name="Cc" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="255" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10c0699e-1e79-43db-b809-1d81dc76cac0" name="Bcc" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="330" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a77d5878-da24-4c45-a6c8-296c03bebe4e" name="Forward" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="-360" y="-15" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="72caebfe-0a08-43d8-aa1b-07eb6f395333" name="ForwardNote" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><display x="495" y="-270" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e493e0ac-ce7f-4041-94ab-d7ab11b21e55" name="Code14" type="Code"><subsheetid>58f6d9b6-06bb-4f5c-94ef-a55e1edf3b35</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="datetime" name="DateTime" expr="ToDateTime([Date]&amp;&quot; &quot;&amp;[time])" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>c082afa0-143a-4a17-9901-f512eab0928f</onsuccess><code><![CDATA[// http://stackoverflow.com/questions/36069801/ews-read-mail-plain-text-body-getting-serviceobjectpropertyexception 



string sub;
 string body_h;
 string from_m;
 // asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Date&Time";
    table.Columns.Add(column);
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);


try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}




PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;
if(DateTime<item.DateTimeCreated)
{
		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		row["Date&Time"]=item.DateTimeCreated.ToString();
		table.Rows.Add(row);
}
}

Call3=table;
]]></code></stage><stage stageid="3b6aa8b0-c326-4477-a6fe-364a733538ca" name="Date" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-345" y="75" /><datatype>date</datatype><initialvalue>2000/01/01</initialvalue><private /><alwaysinit /></stage><stage stageid="6f3b2eb2-1938-444e-bec0-5946c815446c" name="time" type="Data"><subsheetid>086ce0cc-9275-46d8-98bc-3d81f747c86b</subsheetid><loginhibit /><display x="-300" y="75" /><datatype>time</datatype><initialvalue>00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="bca38678-d108-44f1-827f-1402f3f76dd1" name="From" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><loginhibit /><display x="120" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7460e82-a9d6-49ba-8742-e02ca11b395a" name="Subject" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c2b2cb2-5538-4b6a-9864-491a2c1afff3" name="Body" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-135" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3f26e43a-5272-4c89-96d7-2df75d624d34" name="Attachment" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d099d0a9-5310-428a-98db-92fcb0ead86f" name="Sub" type="Data"><subsheetid>13d8fbaf-d51e-470c-8ae8-d0386ccfe9d8</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a6b2169f-f332-4483-9f86-3007fd15f672" name="Create Folder" type="SubSheetInfo"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><narrative>new
</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="19be3c25-40ec-4ae9-bbac-2b5a13df11f7" name="Start" type="Start"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Folder Name" narrative="Folder is created inside Inbox" stage="FolderName" /></inputs><onsuccess>72023ccb-0958-4d30-b20f-4b690f903dfc</onsuccess></stage><stage stageid="d2b32e65-5ee9-4caa-a67a-8365bb2e07ed" name="End" type="End"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="72023ccb-0958-4d30-b20f-4b690f903dfc" name="Code16" type="Code"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="FolderName" expr="[FolderName]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="SUrl" expr="[ServerUrl]" /></inputs><onsuccess>d2b32e65-5ee9-4caa-a67a-8365bb2e07ed</onsuccess><code><![CDATA[string fid;
fid="NA";
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

 

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

//SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));

   
//FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
   
Folder rootfolder = Folder.Bind(service, WellKnownFolderName.MsgFolderRoot);
rootfolder.Load();
Folder folder = new Folder(service);
folder.DisplayName = FolderName;
//folder.FolderClass = "IPF.MyCustomFolderClass"; 
folder.Save(WellKnownFolderName.Inbox); ]]></code></stage><stage stageid="d4630024-b84a-4ca5-80a0-25d56bf3a23f" name="FolderName" type="Data"><subsheetid>40125ab5-fb73-4e75-afe1-21922c7279ad</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3ec1a7f1-092c-4331-8fba-d0c7564f0aee" name="reply" type="SubSheetInfo"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5e200078-e9bb-460a-8ffc-bee70d34128e" name="Start" type="Start"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="From" narrative="mail from" stage="From" /><input type="text" name="Subject" narrative="Filter with subject" stage="Sub" /><input type="text" name="Reply" narrative="Reply Body" stage="Body" /></inputs><onsuccess>a0e21dbc-a62f-427f-a66d-e0b07aada017</onsuccess></stage><stage stageid="5c8eec16-83ec-4457-8c33-6d8d0b5ec416" name="End" type="End"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Messages" stage="Call3" /></outputs></stage><stage stageid="a0e21dbc-a62f-427f-a66d-e0b07aada017" name="Code30" type="Code"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="From" expr="[From]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="text" name="Sub" expr="[Sub]" /><input type="text" name="Body" expr="[Body]" /></inputs><outputs><output type="collection" name="Call3" stage="Call3" /></outputs><onsuccess>5c8eec16-83ec-4457-8c33-6d8d0b5ec416</onsuccess><code><![CDATA[bool replyToAll = true;
string sub;
 string body_h;
 string from_m;
 //string messageBodyPrefix = "This is a message that was forwarded by using the EWS Managed API";
string messageBodyPrefix = "";

// asub="";
// aTo="";
 from_m="";
 DataTable table = new DataTable();
  DataColumn column;
    DataRow row; 
    DataView view;
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Subject";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Sender";
    table.Columns.Add(column);
	
	
	column = new DataColumn();
    column.DataType = Type.GetType("System.String");
    column.ColumnName = "Body";
    table.Columns.Add(column);
	
	
	
	
	
	
 Call3=table;
ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

PropertySet itempropertyset = new PropertySet(BasePropertySet.FirstClassProperties);
itempropertyset.RequestedBodyType = BodyType.Text;
ItemView itemview = new ItemView(1000);
itemview.PropertySet = itempropertyset;

SearchFilter sf = new SearchFilter.SearchFilterCollection(LogicalOperator.And, new SearchFilter.IsEqualTo(EmailMessageSchema.IsRead, false));


FindItemsResults<Item> findResults = service.FindItems(WellKnownFolderName.Inbox, sf, new ItemView(1000));
   
EmailMessage message = new EmailMessage(service); 
   
   
foreach ( Item item in findResults.Items )
{
	
item.Load(itempropertyset);
from_m = ((Microsoft.Exchange.WebServices.Data.EmailAddress)item[EmailMessageSchema.From]).Address;
            
body_h=item.Body;

sub=item.Subject;

if(from_m.ToLower()==From.ToLower())
{
	if(sub.ToUpper().Contains(Sub.ToUpper()))
	{
		message = item as EmailMessage;

		ResponseMessage responseMessage = message.CreateReply(replyToAll);

		body_h=item.Body;
		row = table.NewRow();

		
		row["Subject"] =sub;
		row["Sender"] =from_m;
		row["Body"] =body_h;
		
		responseMessage.BodyPrefix=Body ;
		

		responseMessage.SendAndSaveCopy();


		
		table.Rows.Add(row);
	}
}
}
Call3=table;
]]></code></stage><stage stageid="0405bad6-d015-4f09-97e9-46f764a5eded" name="Call3" type="Collection"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="180" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2cc622d0-d892-4fe9-9b4a-f5ae934db1e2" name="From" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><loginhibit /><display x="120" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed91b332-1cff-4142-94c7-059e4e26b1c5" name="Sub" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="180" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d2fa7b54-9673-47b4-a14d-3f2de9a9cba8" name="Body" type="Data"><subsheetid>f7a509b8-d7a4-4cb3-b354-30db15008c71</subsheetid><display x="-60" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="359ec8ef-c711-47cb-ba03-67a68118e174" name="Cc" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-150" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1554bf4-d8f9-427b-9fb0-57e98368479d" name="Bcc" type="Data"><subsheetid>a3ce040d-d6d9-4816-9dfa-6066364f5284</subsheetid><display x="-75" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="19bfb23b-664c-4bec-adb2-a6a1c8affdbd" name="Send to Many" type="SubSheetInfo"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-210" y="-135" w="150" h="90" /></stage><stage stageid="6742889c-e2f6-4c3d-856f-bfc9dcf523dd" name="Start" type="Start"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="To" stage="SendTo" /><input type="text" name="Subject" stage="Subject" /><input type="text" name="Body" stage="Body" /><input type="collection" name="Attachment" stage="Attachments" /><input type="text" name="Cc" stage="Cc" /><input type="text" name="Bcc" stage="Bcc" /></inputs><onsuccess>a82c3c23-acee-4c91-979c-4b01487a6db7</onsuccess></stage><stage stageid="ba75195c-a471-4311-b3b2-d1874562e084" name="End" type="End"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="e28c8c79-f516-490a-9e56-19dc913df361" name="SendTo" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="-240" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a82c3c23-acee-4c91-979c-4b01487a6db7" name="Send Mail with Multiple " type="Code"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="SendTo" expr="[SendTo]" /><input type="text" name="MailID" expr="[mailID]" /><input type="text" name="UserName" expr="[UserName]" /><input type="password" name="Password" expr="[Password]" /><input type="text" name="Subject" expr="[Subject]" /><input type="text" name="Body" expr="[Body]" /><input type="text" name="SUrl" expr="[ServerUrl]" /><input type="collection" name="Attachments" expr="[Attachments]" /><input type="text" name="cc" expr="[Cc]" /><input type="text" name="Bcc" expr="[Bcc]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>ba75195c-a471-4311-b3b2-d1874562e084</onsuccess><code><![CDATA[ExchangeService service = new ExchangeService(ExchangeVersion.Exchange2010_SP1);

try
{
	if(UserName=="")
		service.AutodiscoverUrl( MailID );
	else
	{
		service.Credentials = new WebCredentials(UserName, Password );
		service.AutodiscoverUrl( MailID,RedirectionUrlValidationCallback );
	}	 
}
catch
{
	service.Url = new Uri(SUrl);
}

try
{
EmailMessage message = new EmailMessage(service);

message.Subject = Subject;
message.Body = Body;
if ( SendTo!= "")
		 {
		
			 foreach (var address1 in SendTo.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.ToRecipients.Add(address1);    
			 }
		 } 
if ( cc!= "")
		 {
		
			 foreach (var address2 in cc.Split(new [] {";"}, StringSplitOptions.RemoveEmptyEntries))
			 {
				message.CcRecipients.Add(address2);    
			 }
		 } 
if(Bcc!="")
	message.BccRecipients.Add(Bcc);
if ( Attachments != null )
	{	
	 message.Body = Body ; 
	 
	 foreach (DataRow row in Attachments.Rows)
     {
          message.Attachments.AddFileAttachment(row["Path"].ToString());  
     }
	}
	//message.Attachments.AddFileAttachment(Attachment);
message.SendAndSaveCopy();
Success= true;
	Message = "Success";
}

	
catch (Exception e)
	{
	Message = e.ToString();
	Success= false;
	}]]></code></stage><stage stageid="bc287de9-d2a6-4a3a-b1f4-5c6e4e7b51ec" name="Subject" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd529f69-4a6b-415c-af8b-04d716c11dc4" name="Body" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="14d5fbf9-8cfb-4b01-9cb6-d5d8b803481f" name="Cc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc373ca1-02e6-4517-b78b-2470d2456609" name="Bcc" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-240" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="41bd8bcf-1fe8-4e7b-9120-f9f8250e6ab3" name="Attachments" type="Collection"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="-180" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f65cdaf6-ec68-4506-8928-8745e89716d9" name="Message" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="180" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="670c8141-5d02-4c24-bd65-970fdf0a84f7" name="Success" type="Data"><subsheetid>15346e33-5748-4bb8-94df-17ffca2f9281</subsheetid><display x="120" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7e613418-945b-47d3-8893-875ae5d94c3c" name="Success" type="Data"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-105" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6eb3601-c1e0-4be4-b6b5-41a451a9a793" name="Message" type="Data"><subsheetid>6b6c017a-419f-4bde-8d34-338a87bd4ff2</subsheetid><display x="-105" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87a70972-feeb-46e5-b996-efc51c9468d2" name="ServerUrl" type="Data"><subsheetid>60424c58-dfd0-4881-b552-c1468d6c7360</subsheetid><loginhibit /><display x="285" y="-75" /><datatype>text</datatype><initialvalue xml:space="preserve">https://webmail.alrajhibank.com.sa/ews/exchange.asmx</initialvalue><alwaysinit /></stage></process></object>
        <object id="0104a691-0740-4f3f-bfe6-96045186bb1d" name="Price_Adjustment_Excel_Operations_OBJ_V1.0" xmlns="http://www.blueprism.co.uk/product/process"><process name="Price_Adjustment_Excel_Operations_OBJ_V1.0" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Mortgage_Evaluation_Result_SelfConstruction_Excel Operations"><id>379ff7ce-5bed-4f40-8230-3aa746016903</id><element name="Activate Excel window"><id>9c61dfdc-5a61-45ef-a580-3a0e986c6694</id><type>Window</type><basetype>Window</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText" comparisontype="Wildcard" inuse="True"><ProcessValue datatype="text" value="SCMCalculation*" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="XLMAIN" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="111" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="60" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="1379" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="901" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="2" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="13" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="&lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="1" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:112,60,959,1488" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="382664704" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="CTF Amount"><id>3adfe631-7c64-4e0f-99b9-f819568a3e58</id><type>UIAElement</type><basetype>UIAElement</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="634" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="528" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="124" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="40" /></attribute><attribute name="uClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="DataItem" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName" inuse="True"><ProcessValue datatype="text" value="K6" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="Has a data validation drop-down menu." /></attribute><attribute name="uItemType" inuse="True"><ProcessValue datatype="text" value="Cell" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="False" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="1572" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="DataGrid" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="Grid" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="REDF Amount"><id>d851f89d-17fb-4d44-9fd4-4e3c4e1ef848</id><type>UIAElement</type><basetype>UIAElement</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="863" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="568" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="120" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="30" /></attribute><attribute name="uClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="DataItem" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName" inuse="True"><ProcessValue datatype="text" value="G7" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="Has a data validation drop-down menu." /></attribute><attribute name="uItemType" inuse="True"><ProcessValue datatype="text" value="Cell" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="1572" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="DataGrid" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="Grid" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><element name="Read Popup Msg"><id>9de17a2b-4d89-4675-93f3-30598bdeb335</id><element name="Read Text"><id>7c2db9d9-c580-4e96-bc9c-e3221b92c40e</id><type>AAElement</type><basetype>AAElement</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText"><ProcessValue datatype="text" value="يجب ان لاتقل قيمة الارض عن 33,333 ريال حيث ان الحد الادنى لمبلغ التمويل هو 300,000 ريال بناء على الاحتساب على قيمة الارض LTV" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="Static" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="65" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="23" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="616" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="16" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="5" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="0" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="Microsoft Excel &lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="2" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:657,563,578,1272" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="1342308480" /></attribute><attribute name="pWindowText"><ProcessValue datatype="text" value="Microsoft Excel" /></attribute><attribute name="pClassName"><ProcessValue datatype="text" value="#32770" /></attribute><attribute name="pCtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="pX"><ProcessValue datatype="number" value="584" /></attribute><attribute name="pY"><ProcessValue datatype="number" value="509" /></attribute><attribute name="pWidth"><ProcessValue datatype="number" value="709" /></attribute><attribute name="pHeight"><ProcessValue datatype="number" value="123" /></attribute><attribute name="pVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pScreenVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pEnabled"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pActive"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pOrdinal"><ProcessValue datatype="number" value="2" /></attribute><attribute name="pChildCount"><ProcessValue datatype="number" value="6" /></attribute><attribute name="pStyle"><ProcessValue datatype="number" value="1342308480" /></attribute><attribute name="aX"><ProcessValue datatype="number" value="0" /></attribute><attribute name="aY"><ProcessValue datatype="number" value="0" /></attribute><attribute name="aWidth"><ProcessValue datatype="number" value="615" /></attribute><attribute name="aHeight"><ProcessValue datatype="number" value="15" /></attribute><attribute name="Name"><ProcessValue datatype="text" value="يجب ان لاتقل قيمة الارض عن 33,333 ريال حيث ان الحد الادنى لمبلغ التمويل هو 300,000 ريال بناء على الاحتساب على قيمة الارض LTV" /></attribute><attribute name="Description"><ProcessValue datatype="text" value="" /></attribute><attribute name="Role" inuse="True"><ProcessValue datatype="text" value="StaticText" /></attribute><attribute name="ID" inuse="True"><ProcessValue datatype="text" value="Self" /></attribute><attribute name="State"><ProcessValue datatype="text" value="read only" /></attribute><attribute name="Value2"><ProcessValue datatype="text" value="" /></attribute><attribute name="KeyboardShortcut"><ProcessValue datatype="text" value="" /></attribute><attribute name="DefaultAction"><ProcessValue datatype="text" value="" /></attribute><attribute name="ElementCount" inuse="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="aAncestorCount"><ProcessValue datatype="number" value="5" /></attribute><attribute name="Unavailable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Selected"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Focused"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Pressed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="aChecked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Mixed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="ReadOnly"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Hottracked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Default"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Expanded"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Collapsed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Busy"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Floating"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Marqueed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Animated"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Invisible"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Offscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Sizeable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Moveable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="SelfVoicing"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Focusable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Selectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Linked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Traversed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Multiselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Extselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_low"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_medium"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_high"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="paX"><ProcessValue datatype="number" value="65" /></attribute><attribute name="paY"><ProcessValue datatype="number" value="23" /></attribute><attribute name="paWidth"><ProcessValue datatype="number" value="615" /></attribute><attribute name="paHeight"><ProcessValue datatype="number" value="15" /></attribute><attribute name="pName"><ProcessValue datatype="text" value="يجب ان لاتقل قيمة الارض عن 33,333 ريال حيث ان الحد الادنى لمبلغ التمويل هو 300,000 ريال بناء على الاحتساب على قيمة الارض LTV" /></attribute><attribute name="pDescription"><ProcessValue datatype="text" value="" /></attribute><attribute name="pRole"><ProcessValue datatype="text" value="Window" /></attribute><attribute name="pID"><ProcessValue datatype="text" value="Self" /></attribute><attribute name="pState"><ProcessValue datatype="text" value="focusable" /></attribute><attribute name="pValue2"><ProcessValue datatype="text" value="" /></attribute><attribute name="pKeyboardShortcut"><ProcessValue datatype="text" value="" /></attribute><attribute name="pDefaultAction"><ProcessValue datatype="text" value="" /></attribute><attribute name="pElementCount"><ProcessValue datatype="number" value="7" /></attribute><attribute name="pUnavailable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSelected"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFocused"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pPressed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="paChecked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMixed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pReadOnly"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pHottracked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pDefault"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pExpanded"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pCollapsed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pBusy"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFloating"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMarqueed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAnimated"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pInvisible"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSizeable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMoveable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSelfVoicing"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFocusable"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pSelectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pLinked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pTraversed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMultiselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pExtselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_low"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_medium"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_high"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><type>Window</type><basetype>Window</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText" inuse="True"><ProcessValue datatype="text" value="Microsoft Excel" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="#32770" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="584" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="509" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="709" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="123" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="2" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="6" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="&lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="1" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:592,540,623,1284" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="-1798831675" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><element name="Cancel Button"><id>63247381-d16c-4b4c-b06d-a8aed34ab36e</id><type>AAButton</type><basetype>AAButton</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText" inuse="True"><ProcessValue datatype="text" value="Cancel" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="Button" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="312" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="54" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="69" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="24" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="2" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="0" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="Microsoft Excel &lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="2" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:904,594,617,972" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="1342242816" /></attribute><attribute name="pWindowText"><ProcessValue datatype="text" value="Microsoft Excel" /></attribute><attribute name="pClassName"><ProcessValue datatype="text" value="#32770" /></attribute><attribute name="pCtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="pX"><ProcessValue datatype="number" value="584" /></attribute><attribute name="pY"><ProcessValue datatype="number" value="509" /></attribute><attribute name="pWidth"><ProcessValue datatype="number" value="709" /></attribute><attribute name="pHeight"><ProcessValue datatype="number" value="123" /></attribute><attribute name="pVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pScreenVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pEnabled"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pActive"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pOrdinal"><ProcessValue datatype="number" value="2" /></attribute><attribute name="pChildCount"><ProcessValue datatype="number" value="6" /></attribute><attribute name="pStyle"><ProcessValue datatype="number" value="1342242816" /></attribute><attribute name="aX"><ProcessValue datatype="number" value="0" /></attribute><attribute name="aY"><ProcessValue datatype="number" value="0" /></attribute><attribute name="aWidth"><ProcessValue datatype="number" value="68" /></attribute><attribute name="aHeight"><ProcessValue datatype="number" value="23" /></attribute><attribute name="Name" inuse="True"><ProcessValue datatype="text" value="Cancel" /></attribute><attribute name="Description"><ProcessValue datatype="text" value="" /></attribute><attribute name="Role" inuse="True"><ProcessValue datatype="text" value="PushButton" /></attribute><attribute name="ID" inuse="True"><ProcessValue datatype="text" value="Self" /></attribute><attribute name="State"><ProcessValue datatype="text" value="focusable" /></attribute><attribute name="Value2"><ProcessValue datatype="text" value="" /></attribute><attribute name="KeyboardShortcut"><ProcessValue datatype="text" value="" /></attribute><attribute name="DefaultAction" inuse="True"><ProcessValue datatype="text" value="Press" /></attribute><attribute name="ElementCount" inuse="True"><ProcessValue datatype="number" value="0" /></attribute><attribute name="aAncestorCount"><ProcessValue datatype="number" value="5" /></attribute><attribute name="Unavailable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Selected"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Focused"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Pressed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="aChecked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Mixed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="ReadOnly"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Hottracked"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Default"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Expanded"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Collapsed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Busy"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Floating"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Marqueed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Animated"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Invisible"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Offscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Sizeable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Moveable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="SelfVoicing"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Focusable"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Selectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Linked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Traversed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Multiselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Extselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_low"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_medium"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Alert_high"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="paX"><ProcessValue datatype="number" value="312" /></attribute><attribute name="paY"><ProcessValue datatype="number" value="54" /></attribute><attribute name="paWidth"><ProcessValue datatype="number" value="68" /></attribute><attribute name="paHeight"><ProcessValue datatype="number" value="23" /></attribute><attribute name="pName"><ProcessValue datatype="text" value="Cancel" /></attribute><attribute name="pDescription"><ProcessValue datatype="text" value="" /></attribute><attribute name="pRole"><ProcessValue datatype="text" value="Window" /></attribute><attribute name="pID"><ProcessValue datatype="text" value="Self" /></attribute><attribute name="pState"><ProcessValue datatype="text" value="focusable" /></attribute><attribute name="pValue2"><ProcessValue datatype="text" value="" /></attribute><attribute name="pKeyboardShortcut"><ProcessValue datatype="text" value="" /></attribute><attribute name="pDefaultAction"><ProcessValue datatype="text" value="" /></attribute><attribute name="pElementCount"><ProcessValue datatype="number" value="7" /></attribute><attribute name="pUnavailable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSelected"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFocused"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pPressed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="paChecked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMixed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pReadOnly"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pHottracked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pDefault"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pExpanded"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pCollapsed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pBusy"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFloating"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMarqueed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAnimated"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pInvisible"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSizeable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMoveable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pSelfVoicing"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pFocusable"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pSelectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pLinked"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pTraversed"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pMultiselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pExtselectable"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_low"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_medium"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="pAlert_high"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><group name="Element1"><id>3c2790a8-96a0-4dae-a0b8-8ad40de9bb1d</id></group><element name="Construction License Expense"><id>4a052b14-a47c-4a69-a500-d4b03624793f</id><type>UIAElement</type><basetype>UIAElement</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="uX"><ProcessValue datatype="number" value="1037" /></attribute><attribute name="uY"><ProcessValue datatype="number" value="209" /></attribute><attribute name="uWidth"><ProcessValue datatype="number" value="102" /></attribute><attribute name="uHeight"><ProcessValue datatype="number" value="25" /></attribute><attribute name="uClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uControlType" inuse="True"><ProcessValue datatype="text" value="DataItem" /></attribute><attribute name="uLocalizedControlType"><ProcessValue datatype="text" value="" /></attribute><attribute name="uIsPassword"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uIsRequiredForForm"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uName" inuse="True"><ProcessValue datatype="text" value="K7" /></attribute><attribute name="uOrientation"><ProcessValue datatype="text" value="None" /></attribute><attribute name="uItemStatus"><ProcessValue datatype="text" value="Has a data validation drop-down menu. Has conditional formatting applied." /></attribute><attribute name="uItemType" inuse="True"><ProcessValue datatype="text" value="Cell" /></attribute><attribute name="uOffscreen"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="uTopLevelWindowId"><ProcessValue datatype="text" value="" /></attribute><attribute name="uLabeledBy"><ProcessValue datatype="text" value="" /></attribute><attribute name="uEnabled"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uAcceleratorKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uAccessKey"><ProcessValue datatype="text" value="" /></attribute><attribute name="uHasKeyboardFocus"><ProcessValue datatype="text" value="True" /></attribute><attribute name="uHelpText"><ProcessValue datatype="text" value="" /></attribute><attribute name="uProcessId"><ProcessValue datatype="text" value="2016" /></attribute><attribute name="puControlType"><ProcessValue datatype="text" value="DataGrid" /></attribute><attribute name="puLocalizedControlType"><ProcessValue datatype="text" value="" /></attribute><attribute name="puClassName"><ProcessValue datatype="text" value="" /></attribute><attribute name="puName"><ProcessValue datatype="text" value="Grid" /></attribute><attribute name="puAutomationId"><ProcessValue datatype="text" value="" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>Win32Launch</id><parameters><parameter><name>Path</name><value>C:\Program Files\Microsoft Office\Office16\EXCEL.EXE</value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>WorkingDirectory</name><value></value></parameter><parameter><name>NonInvasive</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter><parameter><name>Options</name><value></value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a3f4372-4455-426a-9991-65605cd153f9" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e1da669d-1382-40a5-82fc-1606c99aadc8" type="Normal" published="True"><name>Excel Operations</name><view><camerax>-75</camerax><cameray>141</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="30220942-8deb-4c1d-b9c6-2efb69e6671b" type="Normal" published="True"><name>Launch Excel</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0d67286b-6b59-4a7c-9098-486947679a7a" type="Normal" published="True"><name>Read Popup Msg</name><view><camerax>15</camerax><cameray>-81</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2da30bf0-f597-4f7e-98a5-6f238360869b" type="Normal" published="True"><name>Close Popup</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="a98742a3-290d-46b0-8608-6ad3a38bb5a6" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>ae3b3d08-2446-4135-a33d-caa0e0874a11</onsuccess></stage><stage stageid="ae3b3d08-2446-4135-a33d-caa0e0874a11" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="eef6e7a3-b013-467d-8293-529dd6be84cb" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="119a6c74-a7dd-4e08-af3a-181e2a9b3485" name="Clean Up" type="SubSheetInfo"><subsheetid>9a3f4372-4455-426a-9991-65605cd153f9</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b1b5f973-26e7-4959-876d-d24caf28570b" name="Start" type="Start"><subsheetid>9a3f4372-4455-426a-9991-65605cd153f9</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>0fb35d99-9902-41e9-a037-a41bfc268250</onsuccess></stage><stage stageid="0fb35d99-9902-41e9-a037-a41bfc268250" name="End" type="End"><subsheetid>9a3f4372-4455-426a-9991-65605cd153f9</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="c7d948fc-cfc3-4ef4-878e-ab5f141cccdf" name="Excel Operations" type="SubSheetInfo"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="-315" y="-150" w="150" h="90" /></stage><stage stageid="aeadd2da-c68b-493e-be3c-1dffa434f6f4" name="Start" type="Start"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-75" y="-240" /><inputs><input type="text" name="Cell Name" stage="Cell Name" /><input type="text" name="Amount Value" stage="Amount Value" /></inputs><onsuccess>77276bd6-7cc4-4f8d-bfdd-cffb5fcf92d4</onsuccess></stage><stage stageid="6c4f8c57-6cbc-4aaa-aab1-c1f8a7bfeefe" name="" type="Note"><subsheetid>9a3f4372-4455-426a-9991-65605cd153f9</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="94574346-535e-473f-b852-c1906805c89d" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="11f967eb-10e1-436b-86e9-e7acc9aae5a2" name="Activate Excel Window" type="Navigate" interval="1"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-75" y="-15" /><onsuccess>f4812efe-f158-4e9a-b242-eaae1a9b838c</onsuccess><step><element id="9c61dfdc-5a61-45ef-a580-3a0e986c6694" /><action><id>ActivateApp</id></action></step><step><element id="9c61dfdc-5a61-45ef-a580-3a0e986c6694" /><action><id>MaximiseWindow</id></action></step></stage><stage stageid="6eade7e5-a93a-4db2-b331-0cf1e2af1fc1" name="Enter CTF Amount" type="Navigate" interval="0.5"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="15" y="105" /><onsuccess>9879367b-3f48-4566-a518-8110ecf72050</onsuccess><step><element id="3adfe631-7c64-4e0f-99b9-f819568a3e58" /><action><id>UIAFocus</id></action></step><step><element id="3adfe631-7c64-4e0f-99b9-f819568a3e58" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>[Amount Value]</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="3adfe631-7c64-4e0f-99b9-f819568a3e58" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"{ENTER}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="90264c21-df8d-43a4-8e31-393529883fc7" name="Enter REDF Amount" type="Navigate" interval="0.5"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="15" y="165" /><onsuccess>b473a963-ce8e-4508-af9e-4a113d692e2d</onsuccess><step><element id="d851f89d-17fb-4d44-9fd4-4e3c4e1ef848" /><action><id>UIAFocus</id></action></step><step><element id="d851f89d-17fb-4d44-9fd4-4e3c4e1ef848" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>[Amount Value]</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="d851f89d-17fb-4d44-9fd4-4e3c4e1ef848" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"{ENTER}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="f4812efe-f158-4e9a-b242-eaae1a9b838c" name="Cell Name?" type="ChoiceStart"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-75" y="45" /><groupid>163fd69d-e271-4748-a9dd-7daba14be45f</groupid><choices><choice expression="[Cell Name]=&quot;CTF Amount&quot;"><name>CTF Amount</name><distance>60</distance><ontrue>6eade7e5-a93a-4db2-b331-0cf1e2af1fc1</ontrue></choice><choice expression="[Cell Name]=&quot;REDF Amount&quot;"><name>REDF Amount</name><distance>120</distance><ontrue>90264c21-df8d-43a4-8e31-393529883fc7</ontrue></choice><choice expression="[Cell Name]=&quot;Construction License Expense&quot;"><name>Construction License Expense</name><distance>180</distance><ontrue>fcf69b28-16e8-4890-8314-a36a04f9706d</ontrue></choice></choices></stage><stage stageid="0274b4fc-6f09-4449-a20f-4e198fdfbdb8" name="Otherwise1" type="ChoiceEnd"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-75" y="270" /><onsuccess>64b71928-d2f0-4cb4-9f6d-d5703ac2d37e</onsuccess><groupid>163fd69d-e271-4748-a9dd-7daba14be45f</groupid></stage><stage stageid="98d18b64-26d6-4de9-bbf2-392a1317c00f" name="Cell Name" type="Data"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="-255" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9879367b-3f48-4566-a518-8110ecf72050" name="Anchor2" type="Anchor"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="120" y="105" w="10" h="10" /><onsuccess>b473a963-ce8e-4508-af9e-4a113d692e2d</onsuccess></stage><stage stageid="b473a963-ce8e-4508-af9e-4a113d692e2d" name="Anchor3" type="Anchor"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="120" y="165" w="10" h="10" /><onsuccess>53f87f19-ac57-473d-a339-b9d4fd199284</onsuccess></stage><stage stageid="e5233f7d-9ae6-424b-8395-0a8e4d2c2b05" name="Amount Value" type="Data"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="-315" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc9b7e9d-8207-4374-8e48-2b09c550c85e" name="Block2" type="Block"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-105" y="-45" w="165" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0bc3f0f7-9be2-4412-86b6-fb5e0e5a3ae7" name="Recover2" type="Recover"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="0" y="-15" /><onsuccess>0ef4386a-bfd8-4731-be74-9dfc1f7c973c</onsuccess></stage><stage stageid="cc4fa3f9-fd43-4640-a49e-3b6e25d75dff" name="Resume1" type="Resume"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="210" y="-15" /><onsuccess>9aa0203d-15b6-48b2-b54c-8f84690b2568</onsuccess></stage><stage stageid="77276bd6-7cc4-4f8d-bfdd-cffb5fcf92d4" name="Attach" type="Navigate"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-75" y="-135" /><onsuccess>45a8d14c-c68a-4f9e-ab25-a25251f50a2d</onsuccess><step><element id="379ff7ce-5bed-4f40-8230-3aa746016903" /><action><id>AttachApplication</id><arguments><argument><id>WindowTitlesCollection</id><value></value></argument><argument><id>WindowTitle</id><value>"SCMCalculation*"</value></argument><argument><id>ProcessName</id><value></value></argument><argument><id>ProcessID</id><value></value></argument><argument><id>Username</id><value></value></argument><argument><id>ChildIndex</id><value></value></argument></arguments></action></step></stage><stage stageid="45947a87-7ee3-47ec-a622-cf1282bb2d3a" name="Dettach" type="Navigate"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="195" y="-210" /><onsuccess>a0e5ccc5-7eaa-4406-9958-616eebcb249a</onsuccess><step><element id="379ff7ce-5bed-4f40-8230-3aa746016903" /><action><id>DetachApplication</id></action></step></stage><stage stageid="617a7359-5b28-4c9c-a3f6-7ca6eb1480f9" name="Block1" type="Block"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-120" y="-165" w="165" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ca7455ef-8ee9-4659-b0bd-c65adea52ebb" name="Recover1" type="Recover"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="0" y="-135" /><onsuccess>8fae78fc-355d-4dbd-a71e-bc67112c0c60</onsuccess></stage><stage stageid="6478d42a-99fd-4242-8c8c-8c130de2d822" name="Resume2" type="Resume"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="195" y="-135" /><onsuccess>95991fe0-1e5f-4ba2-93d0-3fca13048603</onsuccess></stage><stage stageid="f00730b1-24c4-420e-af0d-504f727eaf6a" name="Block3" type="Block"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="75" y="-240" w="165" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7494b3a8-0003-4322-bc58-2d90fedd22c0" name="Recover3" type="Recover"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="120" y="-210" /><onsuccess>f7e1d2a7-19d6-408a-8cd2-174036774caf</onsuccess></stage><stage stageid="cb9efcbe-f80b-4a35-b867-af74dcb22740" name="Resume3" type="Resume"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-150" y="-210" /><onsuccess>30d66c9e-0eb7-4557-9537-2b4bda317abf</onsuccess></stage><stage stageid="30d66c9e-0eb7-4557-9537-2b4bda317abf" name="Anchor4" type="Anchor"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-150" y="-135" w="10" h="10" /><onsuccess>77276bd6-7cc4-4f8d-bfdd-cffb5fcf92d4</onsuccess></stage><stage stageid="a0e5ccc5-7eaa-4406-9958-616eebcb249a" name="Anchor6" type="Anchor"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-75" y="-210" w="10" h="10" /><onsuccess>77276bd6-7cc4-4f8d-bfdd-cffb5fcf92d4</onsuccess></stage><stage stageid="8fae78fc-355d-4dbd-a71e-bc67112c0c60" name="Exception Detail" type="Calculation"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="105" y="-135" /><onsuccess>6478d42a-99fd-4242-8c8c-8c130de2d822</onsuccess><calculation expression="ExceptionDetail()" stage="Exception Detail" /></stage><stage stageid="fe0a0482-cdfb-4047-b97c-d13be5cc051f" name="Exception Detail" type="Data"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="105" y="-90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f7e1d2a7-19d6-408a-8cd2-174036774caf" name="Exception Detail" type="Calculation"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="15" y="-210" /><onsuccess>cb9efcbe-f80b-4a35-b867-af74dcb22740</onsuccess><calculation expression="ExceptionDetail()" stage="Exception Detail" /></stage><stage stageid="0ef4386a-bfd8-4731-be74-9dfc1f7c973c" name="Exception Detail" type="Calculation"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="105" y="-15" /><onsuccess>cc4fa3f9-fd43-4640-a49e-3b6e25d75dff</onsuccess><calculation expression="ExceptionDetail()" stage="Exception Detail" /></stage><stage stageid="ef0bdb77-8da5-4c5a-8082-c3245eb3f750" name="Time Out2" type="WaitEnd"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-60" y="-75" w="30" h="30" /><onsuccess>11f967eb-10e1-436b-86e9-e7acc9aae5a2</onsuccess><groupid>20d8622f-e248-49f7-baf7-2bd02f326342</groupid></stage><stage stageid="45a8d14c-c68a-4f9e-ab25-a25251f50a2d" name="Wait2" type="WaitStart"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-90" y="-75" w="30" h="30" /><groupid>20d8622f-e248-49f7-baf7-2bd02f326342</groupid><choices /><timeout>5</timeout></stage><stage stageid="b0c41b00-ddd7-4b1a-ac47-e89242d9d4c7" name="Read Popup Msg" type="SubSheetInfo"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="-300" y="-195" w="150" h="90" /></stage><stage stageid="e425f61a-7914-4d60-81e5-37bce2b580fe" name="End" type="End"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="60" y="120" /><outputs><output type="text" name="Popup Msg" stage="Popup Msg" /></outputs></stage><stage stageid="527b3ebf-9071-480f-970e-eebd5318e4f5" name="Time Out1" type="WaitEnd"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="120" y="-60" w="30" h="30" /><onsuccess>61b9cafc-af76-4895-a202-a7fac9610c7c</onsuccess><groupid>a18b2c99-1cdc-46cb-b6ea-2d078889785f</groupid></stage><stage stageid="06965105-7def-43a9-81c5-68ea6c2e5e3d" name="Wait1" type="WaitStart"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="15" y="-60" w="30" h="30" /><groupid>a18b2c99-1cdc-46cb-b6ea-2d078889785f</groupid><choices><choice reply="True"><name>Read Popup Msg Check Exists</name><distance>45</distance><ontrue>e30dfe1e-a0e7-4e49-91b9-293058268d4b</ontrue><element id="9de17a2b-4d89-4675-93f3-30598bdeb335" /><condition><id>CheckExists</id></condition><comparetype>Equal</comparetype></choice></choices><timeout>5</timeout></stage><stage stageid="e30dfe1e-a0e7-4e49-91b9-293058268d4b" name="Activate Popup" type="Navigate" interval="1"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="60" y="-15" /><onsuccess>93073f6e-17f4-41c2-9287-a1c901370cde</onsuccess><step><element id="9de17a2b-4d89-4675-93f3-30598bdeb335" /><action><id>ActivateApp</id></action></step></stage><stage stageid="93073f6e-17f4-41c2-9287-a1c901370cde" name="Read Popup Msg" type="Read"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="60" y="30" /><onsuccess>0e36f6b7-5926-46e0-9f08-629a430b728c</onsuccess><step stage="Popup Msg"><element id="7c2db9d9-c580-4e96-bc9c-e3221b92c40e" /><action><id>AAGetName</id></action></step></stage><stage stageid="0e36f6b7-5926-46e0-9f08-629a430b728c" name="Click Cancel" type="Navigate" interval="1"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="60" y="75" /><onsuccess>e425f61a-7914-4d60-81e5-37bce2b580fe</onsuccess><step><element id="63247381-d16c-4b4c-b06d-a8aed34ab36e" /><action><id>AAFocus</id></action></step><step><element id="63247381-d16c-4b4c-b06d-a8aed34ab36e" /><action><id>AAClickCentre</id><arguments><argument><id>newtext</id><value></value></argument></arguments></action></step></stage><stage stageid="61b9cafc-af76-4895-a202-a7fac9610c7c" name="Anchor1" type="Anchor"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="120" y="120" w="10" h="10" /><onsuccess>e425f61a-7914-4d60-81e5-37bce2b580fe</onsuccess></stage><stage stageid="64b71928-d2f0-4cb4-9f6d-d5703ac2d37e" name="End1" type="End"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="120" y="270" /></stage><stage stageid="eaec65e6-52e2-4361-aaa6-a33437e836bd" name="Popup Msg" type="Data"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="-270" y="-120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="95991fe0-1e5f-4ba2-93d0-3fca13048603" name="Count&gt;2" type="Decision"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="330" y="-135" /><decision expression="[Count]&gt;2" /><ontrue>8ac6206f-10f9-4553-a9c3-655a3af82895</ontrue><onfalse>53dc5912-05e3-4255-9f4d-8a50b515396a</onfalse></stage><stage stageid="021e9e84-ab0a-4d2a-81a3-80e101e78f55" name="Count" type="Data"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="-375" y="-45" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="53dc5912-05e3-4255-9f4d-8a50b515396a" name="Count++" type="Calculation"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="330" y="-210" /><onsuccess>45947a87-7ee3-47ec-a622-cf1282bb2d3a</onsuccess><calculation expression="[Count]+1" stage="Count" /></stage><stage stageid="8ac6206f-10f9-4553-a9c3-655a3af82895" name="Exception1" type="Exception"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><display x="405" y="-135" /><exception localized="yes" type="System Exception" detail="[Exception Detail]" /></stage><stage stageid="9aa0203d-15b6-48b2-b54c-8f84690b2568" name="Anchor5" type="Anchor"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="330" y="-15" w="10" h="10" /><onsuccess>95991fe0-1e5f-4ba2-93d0-3fca13048603</onsuccess></stage><stage stageid="16c58ee3-7863-4686-9223-c57497bd5a65" name="Close Popup" type="SubSheetInfo"><subsheetid>2da30bf0-f597-4f7e-98a5-6f238360869b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="97e4a811-69cb-4289-b96b-2ab4453efad0" name="Start" type="Start"><subsheetid>2da30bf0-f597-4f7e-98a5-6f238360869b</subsheetid><loginhibit /><display x="45" y="-45" /><onsuccess>52c13089-b3b8-4595-b422-49e04e9ec289</onsuccess></stage><stage stageid="8510b435-d8b3-4c64-b657-051491d5c9b5" name="End" type="End"><subsheetid>2da30bf0-f597-4f7e-98a5-6f238360869b</subsheetid><loginhibit /><display x="45" y="90" /></stage><stage stageid="52c13089-b3b8-4595-b422-49e04e9ec289" name="Close Popup" type="Navigate" interval="1"><subsheetid>2da30bf0-f597-4f7e-98a5-6f238360869b</subsheetid><loginhibit /><display x="45" y="0" /><onsuccess>8e6ac9ba-5636-4a50-a2b1-80f1a70a0551</onsuccess><step><element id="9de17a2b-4d89-4675-93f3-30598bdeb335" /><action><id>CloseWindow</id></action></step></stage><stage stageid="8e6ac9ba-5636-4a50-a2b1-80f1a70a0551" name="Terminate Excel" type="Navigate" interval="1"><subsheetid>2da30bf0-f597-4f7e-98a5-6f238360869b</subsheetid><loginhibit /><display x="45" y="45" /><onsuccess>8510b435-d8b3-4c64-b657-051491d5c9b5</onsuccess><step><element id="379ff7ce-5bed-4f40-8230-3aa746016903" /><action><id>Terminate</id></action></step></stage><stage stageid="e1e1b4e4-4f1a-40b4-8f40-7e7876d4c79f" name="Launch Excel" type="SubSheetInfo"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="88d0f17b-a912-4d1e-9262-07125f9636e4" name="Start" type="Start"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e34893c2-f6ee-4be9-a6d6-87cec3ae2285</onsuccess></stage><stage stageid="35a63a16-7a75-44a0-9d10-8e64c7a0bd5a" name="End" type="End"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><loginhibit /><display x="15" y="105" /></stage><stage stageid="e34893c2-f6ee-4be9-a6d6-87cec3ae2285" name="Launuch Excel" type="Navigate"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>124eb9cb-4865-4749-8f27-f4dde2bc3be4</onsuccess><step><element id="379ff7ce-5bed-4f40-8230-3aa746016903" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value>"C:\Users\BPOMES02\Documents\SCMCalculation.xlsb"</value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="a4b74797-7bd3-49a0-984e-1da7fae8f07b" name="Time Out - Excel Window Exists" type="WaitEnd"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><loginhibit /><display x="75" y="0" w="30" h="30" /><onsuccess>daae3bbf-8847-43d9-93e7-a8e929bca46f</onsuccess><groupid>163532c0-4dd2-4557-8f2d-f9e8e05cf4c2</groupid></stage><stage stageid="124eb9cb-4865-4749-8f27-f4dde2bc3be4" name="Excel Window Exists" type="WaitStart"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><loginhibit /><display x="-45" y="0" w="30" h="30" /><groupid>163532c0-4dd2-4557-8f2d-f9e8e05cf4c2</groupid><choices><choice reply="True"><name>Activate Excel window Check Exists</name><distance>60</distance><ontrue>a134b895-fc1b-4580-84d0-6323aecc3d95</ontrue><element id="9c61dfdc-5a61-45ef-a580-3a0e986c6694" /><condition><id>CheckExists</id></condition><comparetype>Equal</comparetype></choice></choices><timeout>60</timeout></stage><stage stageid="daae3bbf-8847-43d9-93e7-a8e929bca46f" name="Exception2" type="Exception"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><display x="135" y="0" /><exception localized="yes" type="" detail="" /></stage><stage stageid="a134b895-fc1b-4580-84d0-6323aecc3d95" name="Maximise" type="Navigate" interval="1"><subsheetid>30220942-8deb-4c1d-b9c6-2efb69e6671b</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>35a63a16-7a75-44a0-9d10-8e64c7a0bd5a</onsuccess><step><element id="9c61dfdc-5a61-45ef-a580-3a0e986c6694" /><action><id>ActivateApp</id></action></step><step><element id="9c61dfdc-5a61-45ef-a580-3a0e986c6694" /><action><id>MaximiseWindow</id></action></step></stage><stage stageid="bc3bb2b1-6aa2-4fc1-a7b9-dc258175cad9" name="Start" type="Start"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="15" y="-375" /><onsuccess>0f3c2ed6-3037-44c9-adc0-6508e9bb7f04</onsuccess></stage><stage stageid="640bc7ba-59c3-4c76-bc54-5fda556c5300" name="Activate Excel Window" type="Navigate" interval="1"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="15" y="-120" /><onsuccess>06965105-7def-43a9-81c5-68ea6c2e5e3d</onsuccess><step><element id="9c61dfdc-5a61-45ef-a580-3a0e986c6694" /><action><id>ActivateApp</id></action></step><step><element id="9c61dfdc-5a61-45ef-a580-3a0e986c6694" /><action><id>MaximiseWindow</id></action></step></stage><stage stageid="c931642c-a5d1-4bbd-9cef-4b02c16c3d25" name="Block2" type="Block"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="-15" y="-150" w="165" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="84b25cde-2e3a-4cf0-997a-cf4783b3aa29" name="Recover2" type="Recover"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="90" y="-120" /><onsuccess>e9167601-f8bf-4628-8aad-8754e6267337</onsuccess></stage><stage stageid="1b034f49-8d35-454c-b5fc-d04a33e8cf32" name="Resume1" type="Resume"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="300" y="-120" /><onsuccess>0afc315e-244f-45d6-a7fc-d49fc072c315</onsuccess></stage><stage stageid="0f3c2ed6-3037-44c9-adc0-6508e9bb7f04" name="Attach" type="Navigate"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="15" y="-240" /><onsuccess>d99c1a42-3070-4902-89a4-1e564870a8a6</onsuccess><step><element id="379ff7ce-5bed-4f40-8230-3aa746016903" /><action><id>AttachApplication</id><arguments><argument><id>WindowTitlesCollection</id><value></value></argument><argument><id>WindowTitle</id><value>"SCMCalculation*"</value></argument><argument><id>ProcessName</id><value></value></argument><argument><id>ProcessID</id><value></value></argument><argument><id>Username</id><value></value></argument><argument><id>ChildIndex</id><value></value></argument></arguments></action></step></stage><stage stageid="d548f1bc-6047-47a3-9081-6153b4ae525d" name="Dettach" type="Navigate"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="285" y="-315" /><onsuccess>9b17b05b-3c3f-470d-85a0-88c7dd67f60f</onsuccess><step><element id="379ff7ce-5bed-4f40-8230-3aa746016903" /><action><id>DetachApplication</id></action></step></stage><stage stageid="fbe08d3c-1255-44c8-a0ff-42df997516d7" name="Block1" type="Block"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="-30" y="-270" w="165" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="653ad111-f312-4ca0-af85-d34ba300da24" name="Recover1" type="Recover"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="90" y="-240" /><onsuccess>3c4357f7-4aa2-433a-9f0a-a6baaafc5446</onsuccess></stage><stage stageid="0a8fb2e3-5299-4ed3-926c-daa4ccfdf910" name="Resume2" type="Resume"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="285" y="-240" /><onsuccess>42166a34-9ceb-4de1-a684-904fec55fadd</onsuccess></stage><stage stageid="2c560d87-a19a-47e0-9254-c313810363c5" name="Block3" type="Block"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="165" y="-345" w="165" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="240aa31c-748e-4081-be9c-b9077d356691" name="Recover3" type="Recover"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="210" y="-315" /><onsuccess>a53cabd4-972c-4eba-b9df-56d07f76ac00</onsuccess></stage><stage stageid="ca068350-d8df-4524-accd-a77e95ebc8d5" name="Resume3" type="Resume"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="-60" y="-315" /><onsuccess>c88e16a3-386a-4cad-b9ec-02c7902a9bd0</onsuccess></stage><stage stageid="c88e16a3-386a-4cad-b9ec-02c7902a9bd0" name="Anchor4" type="Anchor"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="-60" y="-240" w="10" h="10" /><onsuccess>0f3c2ed6-3037-44c9-adc0-6508e9bb7f04</onsuccess></stage><stage stageid="9b17b05b-3c3f-470d-85a0-88c7dd67f60f" name="Anchor6" type="Anchor"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="15" y="-315" w="10" h="10" /><onsuccess>0f3c2ed6-3037-44c9-adc0-6508e9bb7f04</onsuccess></stage><stage stageid="3c4357f7-4aa2-433a-9f0a-a6baaafc5446" name="Exception Detail" type="Calculation"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="195" y="-240" /><onsuccess>0a8fb2e3-5299-4ed3-926c-daa4ccfdf910</onsuccess><calculation expression="ExceptionDetail()" stage="Exception Detail" /></stage><stage stageid="57033d99-1b8b-464c-9051-1aec609bf276" name="Exception Detail" type="Data"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="195" y="-195" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a53cabd4-972c-4eba-b9df-56d07f76ac00" name="Exception Detail" type="Calculation"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="105" y="-315" /><onsuccess>ca068350-d8df-4524-accd-a77e95ebc8d5</onsuccess><calculation expression="ExceptionDetail()" stage="Exception Detail" /></stage><stage stageid="e9167601-f8bf-4628-8aad-8754e6267337" name="Exception Detail" type="Calculation"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="195" y="-120" /><onsuccess>1b034f49-8d35-454c-b5fc-d04a33e8cf32</onsuccess><calculation expression="ExceptionDetail()" stage="Exception Detail" /></stage><stage stageid="950c1285-e81a-45ea-84a5-682df11349d1" name="Time Out2" type="WaitEnd"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="30" y="-180" w="30" h="30" /><onsuccess>640bc7ba-59c3-4c76-bc54-5fda556c5300</onsuccess><groupid>8f919118-1230-4510-86f6-5f16ae8042f5</groupid></stage><stage stageid="d99c1a42-3070-4902-89a4-1e564870a8a6" name="Wait2" type="WaitStart"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="0" y="-180" w="30" h="30" /><groupid>8f919118-1230-4510-86f6-5f16ae8042f5</groupid><choices /><timeout>5</timeout></stage><stage stageid="42166a34-9ceb-4de1-a684-904fec55fadd" name="Count&gt;2" type="Decision"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="420" y="-240" /><decision expression="[Count]&gt;2" /><ontrue>fa3a35e9-53af-4bfb-9a97-a755e13a8604</ontrue><onfalse>06403ad8-e6c1-4f3e-a98e-3f8e4e804395</onfalse></stage><stage stageid="06403ad8-e6c1-4f3e-a98e-3f8e4e804395" name="Count++" type="Calculation"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="420" y="-315" /><onsuccess>d548f1bc-6047-47a3-9081-6153b4ae525d</onsuccess><calculation expression="[Count]+1" stage="Count" /></stage><stage stageid="fa3a35e9-53af-4bfb-9a97-a755e13a8604" name="Exception1" type="Exception"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="495" y="-240" /><exception localized="yes" type="System Exception" detail="[Exception Detail]" /></stage><stage stageid="0afc315e-244f-45d6-a7fc-d49fc072c315" name="Anchor5" type="Anchor"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><loginhibit /><display x="420" y="-120" w="10" h="10" /><onsuccess>42166a34-9ceb-4de1-a684-904fec55fadd</onsuccess></stage><stage stageid="67f07701-c6f4-4651-b123-5bdaf49ac387" name="Count" type="Data"><subsheetid>0d67286b-6b59-4a7c-9098-486947679a7a</subsheetid><display x="-330" y="-120" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fcf69b28-16e8-4890-8314-a36a04f9706d" name="Enter Construction License" type="Navigate" interval="0.5"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="15" y="225" /><onsuccess>53f87f19-ac57-473d-a339-b9d4fd199284</onsuccess><step><element id="4a052b14-a47c-4a69-a500-d4b03624793f" /><action><id>UIAFocus</id></action></step><step><element id="4a052b14-a47c-4a69-a500-d4b03624793f" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>[Amount Value]</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="4a052b14-a47c-4a69-a500-d4b03624793f" /><action><id>UIASendKeys</id><arguments><argument><id>newtext</id><value>"{ENTER}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="53f87f19-ac57-473d-a339-b9d4fd199284" name="Anchor7" type="Anchor"><subsheetid>e1da669d-1382-40a5-82fc-1606c99aadc8</subsheetid><loginhibit /><display x="120" y="225" w="10" h="10" /><onsuccess>64b71928-d2f0-4cb4-9f6d-d5703ac2d37e</onsuccess></stage></process></object>
        <object id="20646147-4b69-4f9a-8ce3-8c757dd4dc56" name="Screen Shot" xmlns="http://www.blueprism.co.uk/product/process"><process name="Screen Shot" version="1.0" bpversion="7.0.1.49890" narrative="Functionality to capture screen shots and manage them with a work queue" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>346ba61f-2eda-4a28-954e-ab6895ab49b1</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="3738185d-4c98-49b4-bbd9-68b52b51d4eb" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd" type="Normal" published="False"><name>READ ME</name><view><camerax>142</camerax><cameray>30</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4474e640-6017-4de8-940a-6384734a3d74" type="Normal" published="True"><name>Take Screen Shot On Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="521f26f4-9597-4e62-9935-1e14a0f8bdba" type="Normal" published="True"><name>Set Work Queue Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="94502ba9-3c3d-4d5f-bc2a-1ad5c80749da" type="Normal" published="True"><name>Set Lifespan</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e96de96-7cde-4656-a1cd-12fc0b1d7074" type="Normal" published="True"><name>Set Image Format</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc3a7885-3815-4092-98ad-2b76f3348f1f" type="Normal" published="True"><name>Set Output Parent Folder</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a77b2bdc-1e57-463c-b39a-139cfbde9ed3" type="Normal" published="True"><name>Delete Old Screen Shots</name><view><camerax>0</camerax><cameray>30</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="01f8177f-c190-4cbf-bf20-e650f904d017" type="Normal" published="True"><name>Save Screen Shot</name><view><camerax>-21</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7e855e82-4db6-4389-8ea5-112dfa1527ba" type="Normal" published="True"><name>Enqueue Exception Screen Shot</name><view><camerax>5</camerax><cameray>171</cameray><zoom version="2">0.9</zoom></view></subsheet><subsheet subsheetid="816ee603-7f85-4144-b8a5-e11d6ead63ac" type="Normal" published="True"><name>Take a screen shot</name><view><camerax>173</camerax><cameray>-45</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2c549d12-0650-4e7e-b3de-a5113b75cfd1" type="Normal" published="True"><name>Search Screen Shots</name><view><camerax>3.777771</camerax><cameray>330</cameray><zoom version="2">0.9</zoom></view></subsheet><subsheet subsheetid="9d8133d2-cc99-4306-abad-35a473a6a283" type="Normal" published="True"><name>CTF Flow Screen</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="ef5ed42b-d178-4996-90a7-9607deeabfce" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>02fa8b4a-d4c6-4eb6-980a-15374f8f8a99</onsuccess></stage><stage stageid="02fa8b4a-d4c6-4eb6-980a-15374f8f8a99" name="End" type="End"><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3e3189f3-1697-488a-a723-8c35c231f631" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing.Imaging</import><import>System.Drawing</import><import>System.Windows.Forms</import><import>System.IO</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Private Function GetPixelFormat() As PixelFormat

	Select Case Screen.PrimaryScreen.BitsPerPixel
		Case 8, 16
			Return PixelFormat.Format16bppRgb565
		Case 24
			Return PixelFormat.Format24bppRgb
		Case 32
			Return PixelFormat.Format32bppArgb
		Case Else
			Return PixelFormat.Format32bppArgb
	End Select

End Function

Private Function GetScreenBitmap() As Bitmap

	Dim rScreen As Rectangle = Screen.PrimaryScreen.Bounds

	Dim bmpScreen As New Bitmap(rScreen.Width, rScreen.Height, GetPixelFormat())

	Dim g As Graphics = Graphics.FromImage(bmpScreen)

	g.CopyFromScreen(rScreen.Left, rScreen.Top, 0, 0, rScreen.Size)

	Return bmpScreen

End Function]]></code></stage><stage stageid="20a64cc7-d619-4498-8a2d-4ce71215da5c" name="Clean Up" type="SubSheetInfo"><subsheetid>3738185d-4c98-49b4-bbd9-68b52b51d4eb</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0181cfb1-1802-4d80-a3be-7311e1a305fa" name="Start" type="Start"><subsheetid>3738185d-4c98-49b4-bbd9-68b52b51d4eb</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eb5d49a3-4ef2-40d7-90ff-b4a8c0399843</onsuccess></stage><stage stageid="3b528303-8e30-4766-9296-d159763c7ba4" name="End" type="End"><subsheetid>3738185d-4c98-49b4-bbd9-68b52b51d4eb</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cee7193e-d8cb-45c7-b330-d76c6700be44" name="Save Screen Shot" type="SubSheetInfo"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="23fec872-88cf-4261-b457-0b3d1a393fdc" name="Start" type="Start"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Path" stage="Path" /></inputs><onsuccess>2871f3f8-4695-4b75-a46e-8a5c7c3d97a4</onsuccess></stage><stage stageid="886ebf6e-553a-45f7-a1ef-633efed4f483" name="End" type="End"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="189b4054-60e0-4c7e-b977-1b5e1147dafb" name="new" type="Note"><subsheetid>3738185d-4c98-49b4-bbd9-68b52b51d4eb</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically by Automate immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ac853185-a9fa-4bf9-b043-ffc1b9c7c0c2" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically by Automate immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a60efb52-18b2-4c21-9294-3cfbfb507960" name="Set Output Parent Folder" type="SubSheetInfo"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4953b82-afdd-4d86-9242-a0e7f425fb0f" name="Start" type="Start"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Output Parent Folder" stage="Output Parent Folder" /></inputs><onsuccess>6bc2a921-ca1f-4007-b342-21af14de461e</onsuccess></stage><stage stageid="179d07a4-47a3-4a51-911e-628357d1dd37" name="End" type="End"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8eb6c744-3a33-438e-bb1e-df67c051b691" name="Output Parent Folder" type="Data"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">T:\Technology Change Team\Corporate Entity\Blue Prism\Screenshots\</initialvalue><alwaysinit /></stage><stage stageid="6bc2a921-ca1f-4007-b342-21af14de461e" name="Trim" type="Calculation"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0b90f4da-4e75-49f8-b917-9609021e2c1d</onsuccess><calculation expression="Trim([Output Parent Folder])" stage="Output Parent Folder" /></stage><stage stageid="0b90f4da-4e75-49f8-b917-9609021e2c1d" name="Backslash?" type="Decision"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><loginhibit /><display x="15" y="15" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="EndsWith([Output Parent Folder], &quot;\&quot;)" /><ontrue>179d07a4-47a3-4a51-911e-628357d1dd37</ontrue><onfalse>2099ff8d-3ca4-450e-8619-c719f77fe0e0</onfalse></stage><stage stageid="2099ff8d-3ca4-450e-8619-c719f77fe0e0" name="Add" type="Calculation"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><loginhibit /><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>5d6c7327-3854-4bb7-aee8-e09671c6be95</onsuccess><calculation expression="[Output Parent Folder] &amp; &quot;\&quot;" stage="Output Parent Folder" /></stage><stage stageid="5d6c7327-3854-4bb7-aee8-e09671c6be95" name="anchor6" type="Anchor"><subsheetid>dc3a7885-3815-4092-98ad-2b76f3348f1f</subsheetid><loginhibit /><display x="120" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>179d07a4-47a3-4a51-911e-628357d1dd37</onsuccess></stage><stage stageid="5da7fc8c-0e6e-4fa6-925a-16bba1577cdc" name="Take Screen Shot On Clean Up" type="SubSheetInfo"><subsheetid>4474e640-6017-4de8-940a-6384734a3d74</subsheetid><narrative>Sets a flag to capture a screen shot when this business object cleans up.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="91b48432-bd13-472d-8dc1-03c80091e2eb" name="Start" type="Start"><subsheetid>4474e640-6017-4de8-940a-6384734a3d74</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process" stage="This Process" /><input type="text" name="Resource" stage="This Resource" /><input type="flag" name="Take Screen Shot On Clean Up" stage="Take Screen Shot On Clean Up" /></inputs><onsuccess>bca58854-27fc-4070-b0f6-c1dfe67c7103</onsuccess></stage><stage stageid="bca58854-27fc-4070-b0f6-c1dfe67c7103" name="End" type="End"><subsheetid>4474e640-6017-4de8-940a-6384734a3d74</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e1a04457-9dfb-4f52-954d-983e6fdd5e93" name="Take Screen Shot On Clean Up" type="Data"><subsheetid>4474e640-6017-4de8-940a-6384734a3d74</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="eb5d49a3-4ef2-40d7-90ff-b4a8c0399843" name="Screen Shot?" type="Decision"><subsheetid>3738185d-4c98-49b4-bbd9-68b52b51d4eb</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Take Screen Shot On Clean Up]" /><ontrue>d52ba344-8b48-44fa-90b6-a38bdeda85a7</ontrue><onfalse>3b528303-8e30-4766-9296-d159763c7ba4</onfalse></stage><stage stageid="f2d5fedb-a67b-432e-ad65-1168e1e34be5" name="anchor1" type="Anchor"><subsheetid>3738185d-4c98-49b4-bbd9-68b52b51d4eb</subsheetid><loginhibit /><display x="135" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3b528303-8e30-4766-9296-d159763c7ba4</onsuccess></stage><stage stageid="ffbc19c0-2919-4d46-83db-d01a93cfaf48" name="Set Image Format" type="SubSheetInfo"><subsheetid>2e96de96-7cde-4656-a1cd-12fc0b1d7074</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4c564505-532c-4d4f-8c99-c82f65bc8e55" name="Start" type="Start"><subsheetid>2e96de96-7cde-4656-a1cd-12fc0b1d7074</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Image Format" narrative="Options: bmp, png, jpg, jpeg, gif, tiff or wmf." stage="Image Format" /></inputs><onsuccess>fa831197-43e5-45d1-bc6b-ef1ac462ade1</onsuccess></stage><stage stageid="fa831197-43e5-45d1-bc6b-ef1ac462ade1" name="End" type="End"><subsheetid>2e96de96-7cde-4656-a1cd-12fc0b1d7074</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b70009e6-6d58-4eac-9c93-42f4dfba6112" name="Image Format" type="Data"><subsheetid>2e96de96-7cde-4656-a1cd-12fc0b1d7074</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">png</initialvalue><alwaysinit /></stage><stage stageid="17389e3c-55dd-40bb-95a9-071c58616413" name="Path" type="Data"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee36a7d9-031f-4617-9e5e-4d59458e51e8" name="Enqueue Exception Screen Shot" type="SubSheetInfo"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><narrative>Captures a screen shot and creates a work queue item.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="92e74f0d-ffa0-419c-b64b-1931c8a299e2" name="Start" type="Start"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" stage="Process Name" /><input type="text" name="Resource Name" stage="Resource Name" /><input type="text" name="Item Key" stage="Item Key" /><input type="text" name="Exception" stage="Exception" /></inputs><onsuccess>40db6bab-a963-4a53-9a94-7357046cddd9</onsuccess></stage><stage stageid="51351b7a-c82c-41a4-89e1-1f150ca66359" name="End" type="End"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="15" y="450" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e4ac67ca-4e84-423a-a94e-c4af543fd534" name="Set Work Queue Name" type="SubSheetInfo"><subsheetid>521f26f4-9597-4e62-9935-1e14a0f8bdba</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b0ccf546-ab9e-43a0-8dc6-eaaf96148f20" name="Start" type="Start"><subsheetid>521f26f4-9597-4e62-9935-1e14a0f8bdba</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Work Queue Name" stage="Work Queue Name" /></inputs><onsuccess>4dfc9270-b764-4460-a5fc-e605a161b2d5</onsuccess></stage><stage stageid="4dfc9270-b764-4460-a5fc-e605a161b2d5" name="End" type="End"><subsheetid>521f26f4-9597-4e62-9935-1e14a0f8bdba</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0e83ac65-294f-40d1-ae21-7e3dcab18470" name="Work Queue Name" type="Data"><subsheetid>521f26f4-9597-4e62-9935-1e14a0f8bdba</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Exception Screen Shots</initialvalue><alwaysinit /></stage><stage stageid="37bbdc2e-743a-4ef0-9af4-5d3fc4de9728" name="Process Name" type="Data"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc919052-13e9-4a6a-8e94-95c758b381a5" name="Item Key" type="Data"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><display x="-195" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d4bf2424-3646-470d-b59f-0a2fe0f0569b" name="Exception" type="Data"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="500d7721-08ce-4317-b88d-a2e124e427ad" name="Add to Queue" type="Action"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="15" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to add items to" expr="[Work Queue Name]" /><input type="collection" name="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Item Data]" /><input type="datetime" name="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="[Tags]" /><input type="text" name="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /></inputs><outputs><output type="collection" name="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="" /></outputs><onsuccess>56dce6cd-bcb5-43c6-8c12-9031cab10510</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="3b7016ae-e836-4454-81f2-177eba2bbb38" name="Item Data" type="Collection"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="-195" y="165" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Key" type="text" /><field name="Process" type="text" /><field name="Resource" type="text" /><field name="Time Stamp" type="datetime" /><field name="Screen Shot" type="image" /></collectioninfo></stage><stage stageid="40db6bab-a963-4a53-9a94-7357046cddd9" name="Add Row" type="Action"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Item Data&quot;" /></inputs><onsuccess>ca704b03-2e31-4f21-9d88-fc22cb18fdbc</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="76344690-4dd3-4282-a677-9ff2fee4946f" name="Item Data" type="MultipleCalculation"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f742d0cb-f2f5-4fe2-81cd-2e0c0b2de855</onsuccess><steps><calculation expression="[Item Key]" stage="Item Data.Key" /><calculation expression="[Process Name]" stage="Item Data.Process" /><calculation expression="[Resource Name]" stage="Item Data.Resource" /><calculation expression="Now()" stage="Item Data.Time Stamp" /></steps></stage><stage stageid="f294ecb5-d002-493d-ba90-b16763d84569" name="Delete Old Screen Shots" type="SubSheetInfo"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><narrative>Deletes files and work queue items that have exceeded the maximum lifespan.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="433e1ccc-d588-40b5-b75a-adac82de38e8" name="Start" type="Start"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f38089c7-d021-4f82-8d0e-9d422d1a74fe</onsuccess></stage><stage stageid="9a3c7ab9-4dba-4b87-8f32-935bf864ede3" name="End" type="End"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dfa2e0de-121c-4d26-9151-639f47bb948c" name="Set Lifespan" type="SubSheetInfo"><subsheetid>94502ba9-3c3d-4d5f-bc2a-1ad5c80749da</subsheetid><narrative>Sets the lifespan of screen shot files and work queue items.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="963de88f-86db-4525-bc27-1ab7a4c6d4b9" name="Start" type="Start"><subsheetid>94502ba9-3c3d-4d5f-bc2a-1ad5c80749da</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="timespan" name="Lifespan" stage="Lifespan" /></inputs><onsuccess>ce3aaf85-6b0f-4ac9-bd56-e5daad8b7993</onsuccess></stage><stage stageid="ce3aaf85-6b0f-4ac9-bd56-e5daad8b7993" name="End" type="End"><subsheetid>94502ba9-3c3d-4d5f-bc2a-1ad5c80749da</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f38089c7-d021-4f82-8d0e-9d422d1a74fe" name="Get Old Files" type="Code"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Path" expr="[Output Parent Folder]" /><input type="timespan" name="Lifespan" expr="[Lifespan]" /></inputs><outputs><output type="collection" name="File Paths" stage="Old File Paths" /></outputs><onsuccess>ed5db269-c511-4ebf-83b5-7311ffc8e59d</onsuccess><code><![CDATA[
Dim oDirectoryInfo As New DirectoryInfo(Path)
Dim aFileInfos As FileInfo() = oDirectoryInfo.GetFiles("*.*", SearchOption.AllDirectories)

File_Paths = New DataTable()
File_Paths.Columns.Add("Path", GetType(System.String))

Dim rFile As DataRow = Nothing

For Each oFileInfo As FileInfo In aFileInfos
	rFile = File_Paths.NewRow
	If oFileInfo.CreationTime + Lifespan < System.Date.Now() Then
		rFile("Path") = oFileInfo.FullName
		File_Paths.Rows.Add(rFile)
	End If
Next]]></code></stage><stage stageid="4b54c819-6a2d-4852-b2b9-7e2dd91f9672" name="Old File Paths" type="Collection"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><display x="-195" y="15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ed5db269-c511-4ebf-83b5-7311ffc8e59d" name="Old File Paths" type="LoopStart"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>65856426-17dc-49b1-9c3b-9b60ec69d70b</onsuccess><groupid>4f7e600a-3a29-4632-baaf-aea61944965a</groupid><looptype>ForEach</looptype><loopdata>Old File Paths</loopdata></stage><stage stageid="a4b1cb89-2bcb-4791-ad57-981a44730100" name="Old File Paths" type="LoopEnd"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>93d6f623-7545-478f-85b8-8ca55ba1fb45</onsuccess><groupid>4f7e600a-3a29-4632-baaf-aea61944965a</groupid></stage><stage stageid="65856426-17dc-49b1-9c3b-9b60ec69d70b" name="Delete File" type="Code"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Path" expr="[Old File Paths.Path]" /></inputs><onsuccess>a4b1cb89-2bcb-4791-ad57-981a44730100</onsuccess><code><![CDATA[
File.Delete(Path)]]></code></stage><stage stageid="7eb3febf-4b83-4fa9-a5c1-9dd42896cfcc" name="Lifespan" type="Data"><subsheetid>94502ba9-3c3d-4d5f-bc2a-1ad5c80749da</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>7.00:00:00</initialvalue><alwaysinit /></stage><stage stageid="8fa6fb2c-1bc1-4e45-a59e-e7f974feda12" name="Search Screen Shots" type="SubSheetInfo"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><narrative>Searches for screen shots and copies files into the Search Results Folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cfb0a900-f4af-4cea-ad23-5ca59f0a51d2" name="Get Report Data" type="Action"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><narrative>Retrieves queue data for analysis. The queue name and at least one of the date parameters must be provided when calling this action</narrative><display x="105" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue for which the details are required. This parameter is mandatory" expr="[Work Queue Name]" /><input type="datetime" name="Finished Start Date" narrative="The item finish (complete or exception) date/time to start results" expr="" /><input type="datetime" name="Finished End Date" narrative="The item finish (complete or exception) date/time to end results. If empty, this is the end of the day from the start date/time or ignored if the  'finished start date' isn't set" expr="" /><input type="datetime" name="Loaded Start Date" narrative="The item loaded (added to queue) date/time to start results. If empty, then the loaded start date is ignored" expr="[Start DateTime]" /><input type="datetime" name="Loaded End Date" narrative="The item loaded (added to queue) date/time to end results. If empty, this is the end of the day from the loaded start date/time. If that is also empty, then this parameter is ignored" expr="[End DateTime]" /><input type="text" name="Resource Names" narrative="The semi-colon-separated names of the resources which worked the item. If empty, this will retrieve for all resources" expr="" /><input type="text" name="Tags" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="[Tags]" /><input type="flag" name="Include unworked items?" narrative="Include any items which are currently pending - default is False" expr="" /><input type="flag" name="Include deferred items?" narrative="Include any items which are currently deferred - default is False" expr="" /><input type="flag" name="Include completed items?" narrative="Include any items which are currently completed - default is False" expr="" /><input type="flag" name="Include exception items?" narrative="Include any items which are currently exceptioned - default is False" expr="True" /><input type="flag" name="Treat each attempt separately?" narrative="Each time a queue item exceptions, a new linked 'retry' item is created with an incremented attempt number. By default, all attempts for an item will be treated as a single item for the purposes of the report. An argument of 'True' will indicate that each retry should be treated as a separate item." expr="" /><input type="text" name="Sort Order" narrative="...Ignored for now..." expr="" /></inputs><outputs><output type="number" name="Item Count" narrative="The total number of queue items matched with the given parameters" stage="" /><output type="timespan" name="Time Total" narrative="The total amount of time spent working with the matched queue items" stage="" /><output type="timespan" name="Least Time" narrative="The least amount of time spent working on a single matched queue item" stage="" /><output type="timespan" name="Most Time" narrative="The most amount of time spent working on a single matched queue item" stage="" /><output type="timespan" name="Median Time" narrative="The median amount of time spent by the matched queue items" stage="" /><output type="timespan" name="Mean Time" narrative="The mean amount of time spent by each matched queue item" stage="" /><output type="collection" name="Item IDs" narrative="The Item IDs of all work queue items matched by the search. Note that all attempts of the same item have the same Item ID, and each attempt's ID will appear in this collection at most once, regardless of the 'Treat each attempt separately?' parameter" stage="Item IDs" /></outputs><onsuccess>86e3ecaf-3e91-4251-ad5d-93bf16b47ce7</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Report Data" /></stage><stage stageid="6aa0952f-1fcd-4ba8-9242-dff71fc2ab88" name="Tags" type="Calculation"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="15" y="225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>500d7721-08ce-4317-b88d-a2e124e427ad</onsuccess><calculation expression="[Process Name] &amp; &quot;;&quot; &amp; [Resource Name] &amp; &quot;;&quot; &amp; [Item Key] &amp; &quot;;&quot; &amp; [Tag ID]" stage="Tags" /></stage><stage stageid="d55d6aa1-2273-4c93-8884-affc6772bd30" name="Tags" type="Data"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><display x="-195" y="360" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="431b8c1f-8db9-4667-8ea8-f2d31aed836e" name="End3" type="End"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="915" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Files Retrieved" stage="Files Retrieved" /><output type="collection" name="Files" stage="Files" /></outputs></stage><stage stageid="86e3ecaf-3e91-4251-ad5d-93bf16b47ce7" name="Item IDs" type="LoopStart"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="315" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3ea5a50a-666c-47bd-aa9b-cb42b0195a8b</onsuccess><groupid>d50166bb-9b0c-4501-bef2-93ae12eddd54</groupid><looptype>ForEach</looptype><loopdata>Item IDs</loopdata></stage><stage stageid="c1169446-5bb3-41fb-b14e-ce229bf18a08" name="Item IDs" type="LoopEnd"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="855" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>431b8c1f-8db9-4667-8ea8-f2d31aed836e</onsuccess><groupid>d50166bb-9b0c-4501-bef2-93ae12eddd54</groupid></stage><stage stageid="3ea5a50a-666c-47bd-aa9b-cb42b0195a8b" name="Get Item Data" type="Action"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><narrative>Get data relating to an item in a queue. You do not need to have a lock on the item to do this.</narrative><display x="105" y="360" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to get data from. An error will be raised if this item does not exist." expr="[Item IDs.Item ID]" /></inputs><outputs><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="Item Data" /><output type="text" name="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="" /><output type="timespan" name="Worktime" narrative="The total time spent on this item (including previous attempts)" stage="" /><output type="timespan" name="Attempt Worktime" narrative="The amount of time spent on this particular attempt of the item" stage="" /><output type="datetime" name="Loaded DateTime" narrative="The date and time at which this item was first loaded into the queue." stage="" /><output type="datetime" name="Deferred DateTime" narrative="The date and time at which this item has been deferred to. Empty if this item has not been deferred." stage="" /><output type="datetime" name="Completed DateTime" narrative="The date and time at which this item was marked as complete. Empty if this item has not been marked as complete" stage="" /><output type="datetime" name="Exception DateTime" narrative="The date and time at which this item was marked as an exception. Empty if there has never been an exception on this item." stage="" /><output type="text" name="Exception Reason" narrative="The exception reason recorded against this item." stage="" /><output type="text" name="Tags" narrative="The semi-colon separated set of tags which apply to the item. " stage="" /></outputs><onsuccess>6e240afa-3566-466c-b9cc-a2bac2fd33be</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Item Data" /></stage><stage stageid="0b95595e-6560-4aef-a4f5-91e377121b43" name="Process Name?" type="Decision"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([Process Name])&lt;&gt;&quot;&quot;" /><ontrue>613bb907-de32-485b-80cf-59ded722a542</ontrue><onfalse>08f352a9-8f33-4c38-849d-65b0f0fae25d</onfalse></stage><stage stageid="4d9f2f6e-9b6c-404d-9dc3-12920a83724c" name="Item Key?" type="Decision"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="195" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([Item Key])&lt;&gt;&quot;&quot;" /><ontrue>e3eb3815-4a01-45ef-81c9-997ea74771f4</ontrue><onfalse>cfb0a900-f4af-4cea-ad23-5ca59f0a51d2</onfalse></stage><stage stageid="540cf6fc-a1ea-4c22-b6da-812321d70a19" name="Get Tag ID" type="Code"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="ID" stage="Tag ID" /></outputs><onsuccess>6aa0952f-1fcd-4ba8-9242-dff71fc2ab88</onsuccess><code><![CDATA[
ID = Guid.NewGuid.ToString()]]></code></stage><stage stageid="f9dee38a-546d-4d46-bfb1-7142d1e3843f" name="Tag ID" type="Data"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><display x="-195" y="315" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="56dce6cd-bcb5-43c6-8c12-9031cab10510" name="Get Item" type="Action"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="15" y="315" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Work Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="[Tag ID]" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="" /><output type="text" name="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="" /></outputs><onsuccess>72362f03-85a7-443a-9e97-51fcb71531f6</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="fe71614b-44ac-4c69-80af-b716f8df03ed" name="Item ID" type="Data"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><display x="-195" y="420" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8e644d2-afd9-41b3-b1f7-bb6dd4190e01" name="Mark Exception" type="Action"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><narrative>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</narrative><display x="15" y="405" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to mark" expr="[Item ID]" /><input type="text" name="Exception Reason" narrative="A description of the reason for the exception" expr="[Exception]" /><input type="flag" name="Retry" narrative="Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried" expr="True" /><input type="flag" name="Keep Locked" narrative="Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False" expr="False" /></inputs><outputs><output type="text" name="New Item ID" narrative="The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried." stage="" /></outputs><onsuccess>51351b7a-c82c-41a4-89e1-1f150ca66359</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Mark Exception" /></stage><stage stageid="72362f03-85a7-443a-9e97-51fcb71531f6" name="Untag" type="Action"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><narrative>Removes a tag from a work queue item</narrative><display x="15" y="360" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the queue item to remove the tag from" expr="[Item ID]" /><input type="text" name="Tag" narrative="The tag to remove from the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters" expr="[Tag ID]" /></inputs><onsuccess>d8e644d2-afd9-41b3-b1f7-bb6dd4190e01</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Untag Item" /></stage><stage stageid="aafb899c-3d25-493b-b435-3eb6ad0b657f" name="Exception?" type="Decision"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([Exception])&lt;&gt;&quot;&quot;" /><ontrue>abe2b09b-5d95-42fb-a126-42f26d9cc20b</ontrue><onfalse>4d9f2f6e-9b6c-404d-9dc3-12920a83724c</onfalse></stage><stage stageid="613bb907-de32-485b-80cf-59ded722a542" name="Tags" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>92fbb408-ef49-4258-969d-82d060c9d48a</onsuccess><calculation expression="[Process Name]" stage="Tags" /></stage><stage stageid="abe2b09b-5d95-42fb-a126-42f26d9cc20b" name="Tags" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>478be0e8-483b-4a3d-a9ee-67fed0159b61</onsuccess><calculation expression="[Tags] &amp; &quot;;Exception: &quot; &amp; [Exception]" stage="Tags" /></stage><stage stageid="e3eb3815-4a01-45ef-81c9-997ea74771f4" name="Tags" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="0" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a424f980-09b5-49e6-a24b-f2d240b200b3</onsuccess><calculation expression="[Tags] &amp; &quot;;&quot; &amp; [Item Key]" stage="Tags" /></stage><stage stageid="92fbb408-ef49-4258-969d-82d060c9d48a" name="anchor2" type="Anchor"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="45" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>08f352a9-8f33-4c38-849d-65b0f0fae25d</onsuccess></stage><stage stageid="478be0e8-483b-4a3d-a9ee-67fed0159b61" name="anchor3" type="Anchor"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="195" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4d9f2f6e-9b6c-404d-9dc3-12920a83724c</onsuccess></stage><stage stageid="a424f980-09b5-49e6-a24b-f2d240b200b3" name="anchor4" type="Anchor"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="0" y="270" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cfb0a900-f4af-4cea-ad23-5ca59f0a51d2</onsuccess></stage><stage stageid="533c2bcc-e7b5-4710-b6f0-2e29e890b8d4" name="Process Name" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3dbb1585-58ae-46d0-bd68-0cbf3ac6b2be" name="Exception" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66c49395-2192-45d2-938a-8bd718944d16" name="Item ID" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="-195" y="390" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="29d41a25-ddc3-4ad0-91fb-e5343839efad" name="Item Key" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ab1f4113-35ed-43cd-a6e2-c794415582bc" name="Tags" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="240" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e2e6580-b67c-444a-912f-59f11e299e54" name="Files Retrieved" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="765" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7939af34-6fff-4c26-9737-3af010a7dcfa" name="Item IDs" type="Collection"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="315" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4fe77141-61d2-4202-97c0-5500d553ea21" name="Resource Name" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="08f352a9-8f33-4c38-849d-65b0f0fae25d" name="Resource Name?" type="Decision"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Trim([Resource Name])&lt;&gt;&quot;&quot;" /><ontrue>19dbde9f-0163-425a-998c-d1a322938ad8</ontrue><onfalse>aafb899c-3d25-493b-b435-3eb6ad0b657f</onfalse></stage><stage stageid="19dbde9f-0163-425a-998c-d1a322938ad8" name="Tags" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="0" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>462a9f58-a20f-4445-85df-1faad7030d96</onsuccess><calculation expression="[Tags] &amp; &quot;;&quot; &amp; [Resource Name]" stage="Tags" /></stage><stage stageid="462a9f58-a20f-4445-85df-1faad7030d96" name="anchor5" type="Anchor"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="0" y="120" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aafb899c-3d25-493b-b435-3eb6ad0b657f</onsuccess></stage><stage stageid="c25cf646-10ac-47ce-85e1-79e9946d8676" name="Start" type="Start"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="Optional, wildcards allowed" stage="Process Name" /><input type="text" name="Resource Name" narrative="Optional, wildcards allowed" stage="Resource Name" /><input type="text" name="Exception" narrative="Optional, wildcards allowed" stage="Exception" /><input type="text" name="Item Key" narrative="Optional, wildcards allowed" stage="Item Key" /><input type="datetime" name="Start DateTime" stage="Start DateTime" /><input type="datetime" name="End DateTime" stage="End DateTime" /><input type="flag" name="Open Results" stage="Open Results" /></inputs><onsuccess>0b95595e-6560-4aef-a4f5-91e377121b43</onsuccess></stage><stage stageid="b8cece17-64e1-4949-a2a4-789037476dfb" name="Delete Items" type="Action"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to delete items from" expr="[Work Queue Name]" /><input type="datetime" name="Date Threshold" narrative="The threshold date. Items completed or marked with an exception before this date will be deleted from the queue - if not given, all processed items in the specified queue will be deleted." expr="[Date Threshold]" /></inputs><outputs><output type="number" name="Deletion Count" narrative="Indicates the number of items which were deleted (which may legitimately be zero)." stage="" /></outputs><onsuccess>9a3c7ab9-4dba-4b87-8f32-935bf864ede3</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Delete Processed Items" /></stage><stage stageid="93d6f623-7545-478f-85b8-8ca55ba1fb45" name="Date Threshold" type="Calculation"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b8cece17-64e1-4949-a2a4-789037476dfb</onsuccess><calculation expression="Now() - [Lifespan]" stage="Date Threshold" /></stage><stage stageid="1151ca90-7f5f-4bcc-8c25-ae27e8b06335" name="Date Threshold" type="Data"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="07f61651-6319-4cc6-bb66-aee09170abe7" name="Files" type="Collection"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="-195" y="720" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Path" type="text" /></collectioninfo></stage><stage stageid="3b1080bc-6fd5-40ab-873d-77a34cac59a4" name="Add Row" type="Action"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="675" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Files&quot;" /></inputs><onsuccess>34dcd01e-e29b-4fea-9b5c-494335ce65f2</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="34dcd01e-e29b-4fea-9b5c-494335ce65f2" name="Files" type="MultipleCalculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="720" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc3f3db0-0d5c-4e25-9b49-febe92ecad96</onsuccess><steps><calculation expression="[Files Retrieved]+1" stage="Files Retrieved" /><calculation expression="[Path]" stage="Files.Path" /></steps></stage><stage stageid="0c049f79-b282-4c18-bf92-463e9f9f4e28" name="Resource Name" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="405" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>79db9585-fab8-487c-a905-188c7799b466</onsuccess><calculation expression="&quot;My*&quot;" stage="Resource Name" /></stage><stage stageid="79db9585-fab8-487c-a905-188c7799b466" name="Item Key" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="405" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3d44f1f8-9c56-479b-9a10-5733d5edd145</onsuccess><calculation expression="&quot;123456789&quot;" stage="Item Key" /></stage><stage stageid="3d44f1f8-9c56-479b-9a10-5733d5edd145" name="Start DateTime" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="405" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1c221efd-7833-4ccf-a652-7f7841b45f4c</onsuccess><calculation expression="&quot;01/09/2010 00:00:00&quot;" stage="Start DateTime" /></stage><stage stageid="804fedd1-3029-43d8-a01e-7e3a9285bbcf" name="Start DateTime" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c221efd-7833-4ccf-a652-7f7841b45f4c" name="End DateTime" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="405" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4539e282-cab6-47dc-a1bc-88941b784567</onsuccess><calculation expression="Now()" stage="End DateTime" /></stage><stage stageid="4dc3744f-d356-46f1-bb2e-0846af8b5e9b" name="End DateTime" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f44d654-283f-45ac-ad83-5fc51108fa44" name="Test Inputs" type="Block"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="330" y="-105" w="150" h="255" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b2739e50-583c-4707-89a8-b8e57d3bf28e" name="Process Name" type="Calculation"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="240" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ab1858eb-9b8c-435d-9880-2f8719c701fc</onsuccess><calculation expression="&quot;My Process&quot;" stage="Process Name" /></stage><stage stageid="ab1858eb-9b8c-435d-9880-2f8719c701fc" name="Item Key" type="Calculation"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="240" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4363695f-2cae-4a29-91a3-98468b977ea4</onsuccess><calculation expression="&quot;123456789&quot;" stage="Item Key" /></stage><stage stageid="0c53bf7e-b622-4dac-8f0b-7caaa061441f" name="Test Inputs" type="Block"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="165" y="-120" w="150" h="210" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4363695f-2cae-4a29-91a3-98468b977ea4" name="Exception" type="Calculation"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="240" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a0a56210-d942-4a9b-899b-03ac7adca59e</onsuccess><calculation expression="&quot;Arghhhhhhhhhhhhhhhh&quot;" stage="Exception" /></stage><stage stageid="a0a56210-d942-4a9b-899b-03ac7adca59e" name="Resource Name" type="Calculation"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="240" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>40db6bab-a963-4a53-9a94-7357046cddd9</onsuccess><calculation expression="&quot;My Machine&quot;" stage="Resource Name" /></stage><stage stageid="f742d0cb-f2f5-4fe2-81cd-2e0c0b2de855" name="Note1" type="Note"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><narrative>Temporarily tag the new item with a GUID so that it can be immediately locked and marked as an exception.</narrative><display x="15" y="120" w="180" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>540cf6fc-a1ea-4c22-b6da-812321d70a19</onsuccess></stage><stage stageid="2871f3f8-4695-4b75-a46e-8a5c7c3d97a4" name="Path" type="Calculation"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><loginhibit /><display x="15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>68239b43-5dd1-4f53-b623-9ef09c56a2d8</onsuccess><calculation expression="[Path]&amp;&quot;.png&quot;" stage="Path" /></stage><stage stageid="6a48632c-4329-4b30-ad25-47b962200239" name="Test Inputs" type="Block"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><loginhibit /><display x="-45" y="-30" w="165" h="75" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f72d4149-727b-41ba-9421-c5ebdc3ebc5d" name="Lifespan" type="Calculation"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="210" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f38089c7-d021-4f82-8d0e-9d422d1a74fe</onsuccess><calculation expression="MakeTimeSpan(0, 0, 1, 0, 0)" stage="Lifespan" /></stage><stage stageid="1a27a8a2-f137-47fe-99c1-c35881d6cad9" name="Test Inputs" type="Block"><subsheetid>a77b2bdc-1e57-463c-b39a-139cfbde9ed3</subsheetid><loginhibit /><display x="135" y="-120" w="150" h="210" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="553c2670-8126-443a-9836-8ba6957d9e48" name="Open Results" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4539e282-cab6-47dc-a1bc-88941b784567" name="Open Results" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="405" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0b95595e-6560-4aef-a4f5-91e377121b43</onsuccess><calculation expression="True" stage="Open Results" /></stage><stage stageid="fc3f3db0-0d5c-4e25-9b49-febe92ecad96" name="Open?" type="Decision"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="780" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Open Results]" /><ontrue>d8507f5a-9ba0-47a8-84c5-fe62b32d904c</ontrue><onfalse>c1169446-5bb3-41fb-b14e-ce229bf18a08</onfalse></stage><stage stageid="d8507f5a-9ba0-47a8-84c5-fe62b32d904c" name="MSPAINT" type="Code"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="780" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Path" expr="[Path]" /></inputs><onsuccess>f668d3a1-f9de-4887-8f58-c34ec379c28a</onsuccess><code><![CDATA[Try
	System.Diagnostics.Process.Start("mspaint.exe", """" & Path & """")
Catch e As Exception
End Try]]></code></stage><stage stageid="f668d3a1-f9de-4887-8f58-c34ec379c28a" name="anchor7" type="Anchor"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="855" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c1169446-5bb3-41fb-b14e-ce229bf18a08</onsuccess></stage><stage stageid="c4041e17-d0dc-44f6-a53e-57374ffd257a" name="READ ME" type="SubSheetInfo"><subsheetid>b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7211ad0b-9601-4045-bbdc-6ebd27c18633" name="Start" type="Start"><subsheetid>b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>23bfa059-17aa-47a4-a3f2-a6e4980fb06d</onsuccess></stage><stage stageid="23bfa059-17aa-47a4-a3f2-a6e4980fb06d" name="End" type="End"><subsheetid>b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="eeb021d6-007c-46da-a3d4-851a458de77a" name="Note2" type="Note"><subsheetid>b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd</subsheetid><loginhibit /><narrative>This business object uses a work queue called 'Exception Screen Shots' with a key field called 'Key'.

The name of the queue can be changed if necessary, either by modifying this business object or by calling the Set Work Queue Name action.</narrative><display x="225" y="-90" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="32d734e4-5ba1-4b53-a418-75cf8bd3ffc1" name="Note2" type="Note"><subsheetid>b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd</subsheetid><loginhibit /><narrative>Typically the parent process using this business object should only need the Enqueue Exception Screen Shot action.

The Take Screen Shot On Clean Up action can be used to set a flag that decides whether a screen shot is taken on clean up. The idea is that the flag is set to True at the start of the process and False at the end of the process. If the process terminates unexpectedly the flag will be True and a screenshot will be taken.</narrative><display x="225" y="45" w="270" h="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7e1e5bb9-7ab8-43e7-9022-2861ac602e2d" name="Note2" type="Note"><subsheetid>b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd</subsheetid><loginhibit /><narrative>Queue items and files older than the defined lifespan are deleted, either automatically when the Initialise page is run, or when the Delete Old Screen Shots action is called.</narrative><display x="225" y="240" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9eef4a30-f383-4b98-a3c6-574f0e3342e5" name="This Process" type="Data"><subsheetid>4474e640-6017-4de8-940a-6384734a3d74</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="d52ba344-8b48-44fa-90b6-a38bdeda85a7" name="Enqueue Exception Screen Shot" type="SubSheet"><subsheetid>3738185d-4c98-49b4-bbd9-68b52b51d4eb</subsheetid><loginhibit /><display x="135" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[This Process]" /><input type="text" name="Item Key" expr="&quot;Clean Up&quot;" /><input type="text" name="Exception" expr="&quot;Screen shot taken on Clean Up on &quot; &amp; [This Resource]" /><input type="text" name="Resource Name" expr="[This Resource]" /></inputs><onsuccess>f2d5fedb-a67b-432e-ad65-1168e1e34be5</onsuccess><processid>7e855e82-4db6-4389-8ea5-112dfa1527ba</processid></stage><stage stageid="aaae5b46-365d-4f24-8e3c-f55fa07e08ed" name="Note2" type="Note"><subsheetid>b0dd1147-e98e-48b6-90bc-2f9a2f9f6abd</subsheetid><loginhibit /><narrative>The Search Screen Shots action will look for queue items and export the related images into the Output Parent folder.</narrative><display x="225" y="165" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="16d20a11-d261-483f-b207-2c231bb8b188" name="Resource Name" type="Data"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22134885-3bcb-49c3-86bc-66ff972f5b35" name="This Resource" type="Data"><subsheetid>4474e640-6017-4de8-940a-6384734a3d74</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="68239b43-5dd1-4f53-b623-9ef09c56a2d8" name="Save" type="Code"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Image Format" expr="&quot;.png&quot;" /><input type="text" name="Path" expr="[Path]" /></inputs><onsuccess>886ebf6e-553a-45f7-a1ef-633efed4f483</onsuccess><code><![CDATA[
Dim b As Bitmap = GetScreenBitmap()

Dim f As ImageFormat

Select Case Image_Format.ToLower.Trim
	Case "bmp"
		f = ImageFormat.Bmp
	Case "jpg", "jpeg"
		f = ImageFormat.Jpeg
	Case "gif"
		f = ImageFormat.Gif
	Case "tiff"
		f = ImageFormat.Tiff
	Case "wmf"
		f = ImageFormat.Wmf
	Case Else
		f = ImageFormat.Png
End Select

b.Save(Path, f)]]></code></stage><stage stageid="ca704b03-2e31-4f21-9d88-fc22cb18fdbc" name="Get Screen Shot" type="Code"><subsheetid>7e855e82-4db6-4389-8ea5-112dfa1527ba</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="image" name="Screen Shot" stage="Item Data.Screen Shot" /></outputs><onsuccess>76344690-4dd3-4282-a677-9ff2fee4946f</onsuccess><code><![CDATA[
Screen_Shot = GetScreenBitmap()]]></code></stage><stage stageid="516606dd-3919-4fcb-bdbf-5c4f4c142c82" name="Path" type="Calculation"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="495" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4b7fb5e4-6b17-4682-9c52-e46965603b76</onsuccess><calculation expression="[Output Parent Folder] &amp; [Item Data.Process] &amp; &quot;\&quot; &amp; [Timestamp] &amp; &quot; - &quot; &amp; Replace([Item Data.Resource], &quot;:&quot;, &quot;&quot;) &amp; &quot;.&quot; &amp; [Image Format]" stage="Path" /></stage><stage stageid="a6ea411e-17ab-445a-8c1d-1f40d0d674a2" name="Path" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="555" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6e240afa-3566-466c-b9cc-a2bac2fd33be" name="Create Subfolder" type="Code"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="405" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Path" expr="[Output Parent Folder] &amp; [Item Data.Process]" /></inputs><onsuccess>45479839-ca30-4002-a703-125976a16316</onsuccess><code><![CDATA[
System.IO.Directory.CreateDirectory(Path)]]></code></stage><stage stageid="d84f881e-c78d-4216-936f-10927d265d0e" name="Format Text" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="495" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">yyyyMMdd HHmmssfff</initialvalue><private /><alwaysinit /></stage><stage stageid="6c97680f-f0d4-453f-ad14-724aba5f6ecd" name="Timestamp" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="525" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45479839-ca30-4002-a703-125976a16316" name="Get Timestamp" type="Code"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="450" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="datetime" name="Datetime Value" expr="[Item Data.Time Stamp]" /><input type="text" name="Format Text" expr="[Format Text]" /></inputs><outputs><output type="text" name="Formatted Date" stage="Timestamp" /></outputs><onsuccess>516606dd-3919-4fcb-bdbf-5c4f4c142c82</onsuccess><code><![CDATA[Try
 Formatted_Date = Datetime_Value.ToString(Format_Text)
Catch e As Exception
 Formatted_Date = ""
End Try]]></code></stage><stage stageid="ed8155a3-927e-4559-8509-ef1de7ddc000" name="Item Data" type="Collection"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="-195" y="435" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Key" type="text" /><field name="Process" type="text" /><field name="Resource" type="text" /><field name="Time Stamp" type="datetime" /><field name="Screen Shot" type="image" /></collectioninfo></stage><stage stageid="00c50ff5-287f-4a51-9460-9fb83d7d8e61" name="Save Screen Shot" type="Code"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="600" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Screen Shot" expr="[Item Data.Screen Shot]" /><input type="text" name="Image Format" expr="[Image Format]" /><input type="text" name="Path" expr="[Path]" /></inputs><onsuccess>0acf1a1b-ca9e-4e4f-b013-c157960c154d</onsuccess><code><![CDATA[
Dim f As ImageFormat

Select Case Image_Format.ToLower.Trim
	Case "bmp"
		f = ImageFormat.Bmp
	Case "jpg", "jpeg"
		f = ImageFormat.Jpeg
	Case "gif"
		f = ImageFormat.Gif
	Case "tiff"
		f = ImageFormat.Tiff
	Case "wmf"
		f = ImageFormat.Wmf
	Case Else
		f = ImageFormat.Png
End Select

Screen_Shot.Save(Path, f)]]></code></stage><stage stageid="4b7fb5e4-6b17-4682-9c52-e46965603b76" name="File Exists" type="Code"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="540" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[Path]" /></inputs><outputs><output type="flag" name="Exists" stage="File Exists" /></outputs><onsuccess>8cdcf046-48ec-45b2-9afb-6d2a490d291a</onsuccess><code><![CDATA[
Exists = File.Exists(File_Path)
]]></code></stage><stage stageid="8cdcf046-48ec-45b2-9afb-6d2a490d291a" name="File Exists?" type="Decision"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="105" y="600" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[File Exists]" /><ontrue>3b1080bc-6fd5-40ab-873d-77a34cac59a4</ontrue><onfalse>00c50ff5-287f-4a51-9460-9fb83d7d8e61</onfalse></stage><stage stageid="ccbc007c-6d9c-42f8-a126-d73e4f381777" name="File Exists" type="Data"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><display x="-195" y="585" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0acf1a1b-ca9e-4e4f-b013-c157960c154d" name="anchor9" type="Anchor"><subsheetid>2c549d12-0650-4e7e-b3de-a5113b75cfd1</subsheetid><loginhibit /><display x="210" y="675" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3b1080bc-6fd5-40ab-873d-77a34cac59a4</onsuccess></stage><stage stageid="37bb16b9-b30c-420b-b6f4-e1737ff82cb1" name="Take a screen shot" type="SubSheetInfo"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><display x="-510" y="-195" w="150" h="90" /></stage><stage stageid="212d072d-da4d-4785-9a47-88fde0138d17" name="Start" type="Start"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="15" y="-180" /><inputs><input type="text" name="Process" stage="Process" /></inputs><onsuccess>73858475-7d35-4383-90b5-9309813403c8</onsuccess></stage><stage stageid="fff1e537-49b8-4b01-8328-499574a0b49b" name="End" type="End"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="66fe854d-8cb3-44e6-aeb2-001594616305" name="Take a screen shot" type="Code"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="image" name="Screen Shot" stage="Screenshot" /></outputs><onsuccess>00ff055b-a583-4ba5-b3bf-f1cb914106cf</onsuccess><code><![CDATA[
Screen_Shot = GetScreenBitmap()]]></code></stage><stage stageid="5a6d18ce-1252-4c7e-bdfe-c1f591229073" name="Screenshot" type="Data"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><display x="300" y="45" w="210" h="60" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="326515c4-5aa2-44aa-837c-38dacdffe023" name="File Name" type="Data"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><display x="315" y="-30" w="210" h="60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73858475-7d35-4383-90b5-9309813403c8" name="Path" type="Calculation"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="15" y="-135" /><onsuccess>b86e983c-e96b-4913-b515-451fda72b29c</onsuccess><calculation expression="[Screenshot Path]&amp;&quot;_&quot;&amp;[Process]&amp;&quot;_&quot;&amp;Today()" stage="File Name" /></stage><stage stageid="fe7a0605-8163-4a33-a3e8-7b07eac539b9" name="Path1" type="Data"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="225" y="-165" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\BCCCPM08\Downloads\New folder</initialvalue><private /><alwaysinit /></stage><stage stageid="00ff055b-a583-4ba5-b3bf-f1cb914106cf" name="Save Screen Shot" type="SubSheet"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="Path" expr="[File Name]" /></inputs><onsuccess>fff1e537-49b8-4b01-8328-499574a0b49b</onsuccess><processid>01f8177f-c190-4cbf-bf20-e650f904d017</processid></stage><stage stageid="b86e983c-e96b-4913-b515-451fda72b29c" name="Multi1" type="MultipleCalculation"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="15" y="-90" /><onsuccess>66fe854d-8cb3-44e6-aeb2-001594616305</onsuccess><steps><calculation expression="Replace([File Name], &quot;/&quot;, &quot;_&quot;)" stage="File Name" /><calculation expression="Replace([File Name], &quot;*&quot;, &quot;:&quot;)" stage="File Name" /></steps></stage><stage stageid="520970d5-4a20-4e1f-bcbd-09f3700d158d" name="Note3" type="Note"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><narrative>[Path]&amp;"_____"&amp;Today()&amp;"________"&amp;LocalTime()&amp;".png"</narrative><display x="-285" y="-45" /></stage><stage stageid="29dd0fcd-19b1-4d56-ba51-c07aeb2bd1c7" name="Process" type="Data"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><display x="300" y="-210" /><datatype>text</datatype><initialvalue xml:space="preserve">No_Name</initialvalue><private /><alwaysinit /></stage><stage stageid="ff060f5d-9c45-43cc-a447-d548a6bb45a0" name="path" type="Data"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><display x="300" y="-255" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8feb901d-61d5-49ca-9833-e748f5812b93" name="Screenshot Path" type="Data"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><loginhibit /><display x="225" y="-255" /><datatype>text</datatype><initialvalue xml:space="preserve">\\hoisilon\Departments\Operations Excellence\rpa\ARB RPA-Team\CC\Screenshots\</initialvalue><exposure>Environment</exposure><private /><alwaysinit /></stage><stage stageid="c8fa9aba-3d46-40dd-81ca-63561e77bfa9" name="Recover1" type="Recover"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><loginhibit /><display x="90" y="0" /><onsuccess>3aeb0a6a-4129-45be-868f-473d45ac3b9d</onsuccess></stage><stage stageid="3aeb0a6a-4129-45be-868f-473d45ac3b9d" name="Resume1" type="Resume"><subsheetid>01f8177f-c190-4cbf-bf20-e650f904d017</subsheetid><loginhibit /><display x="90" y="90" /><onsuccess>886ebf6e-553a-45f7-a1ef-633efed4f483</onsuccess></stage><stage stageid="5bc3eeed-864e-4721-98c5-7729bc0483ec" name="CTF Flow Screen" type="SubSheetInfo"><subsheetid>9d8133d2-cc99-4306-abad-35a473a6a283</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="28b6d3af-cfac-4f50-b378-3a7ff6a39ec0" name="Start" type="Start"><subsheetid>9d8133d2-cc99-4306-abad-35a473a6a283</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>d31310c0-e4e4-44f6-ace6-0502b2df7457</onsuccess></stage><stage stageid="72af5deb-4b71-4d77-8471-0551ce9936bc" name="End" type="End"><subsheetid>9d8133d2-cc99-4306-abad-35a473a6a283</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="image" name="Screenshot" stage="Screenshot" /></outputs></stage><stage stageid="d31310c0-e4e4-44f6-ace6-0502b2df7457" name="Take a screen shot1" type="Code"><subsheetid>9d8133d2-cc99-4306-abad-35a473a6a283</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="image" name="Screen Shot" stage="Screenshot" /></outputs><onsuccess>72af5deb-4b71-4d77-8471-0551ce9936bc</onsuccess><code><![CDATA[
Screen_Shot = GetScreenBitmap()]]></code></stage><stage stageid="74b1d2c1-2b30-4109-abb1-249fca089bc9" name="Screenshot" type="Data"><subsheetid>9d8133d2-cc99-4306-abad-35a473a6a283</subsheetid><display x="225" y="-15" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="64eaa864-bc07-430c-971e-78417be92f86" name="Path" type="Data"><subsheetid>816ee603-7f85-4144-b8a5-e11d6ead63ac</subsheetid><display x="225" y="-210" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="ade8e3b4-d5bd-464e-90c6-e63097651833" name="Screenshot" xmlns="http://www.blueprism.co.uk/product/process"><process name="Screenshot" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>4b91c134-3468-41fa-b8aa-4daac4c4a9e4</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="781b77aa-e56f-4b78-a241-4c73717cba51" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c91cd9ad-67c7-4786-bc7c-4bce114b90b0" type="Normal" published="True"><name>Screenshot</name><view><camerax>0</camerax><cameray>105</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="de92e14c-1691-4a56-a5cd-8aa0a4a25b58" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>5fa112ef-9289-47d8-b89a-c73176b6f9d3</onsuccess></stage><stage stageid="5fa112ef-9289-47d8-b89a-c73176b6f9d3" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="3a0191ad-9761-4a3b-bb9b-b015341e2108" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Drawing.Imaging</import><import>System.Windows.Forms</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="372fb9b5-5ac2-4b7b-af94-d3e2b53360f9" name="Clean Up" type="SubSheetInfo"><subsheetid>781b77aa-e56f-4b78-a241-4c73717cba51</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="87e136c2-3199-480c-aebe-3c03bb6b7bc2" name="Start" type="Start"><subsheetid>781b77aa-e56f-4b78-a241-4c73717cba51</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>59889247-b7d4-4293-95ae-86f385100f2a</onsuccess></stage><stage stageid="59889247-b7d4-4293-95ae-86f385100f2a" name="End" type="End"><subsheetid>781b77aa-e56f-4b78-a241-4c73717cba51</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="762afd10-1b46-456d-91c4-6e5ec9dfcb49" name="Screenshot" type="SubSheetInfo"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3eefc49e-ce69-4698-9f67-309904322165" name="Start" type="Start"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Path" stage="Path" /></inputs><onsuccess>80b19910-b063-46eb-a0e6-a9092e5340a8</onsuccess></stage><stage stageid="6661ad5e-4cb0-4903-a61e-7859dd0c566f" name="End" type="End"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="15" y="120" /><outputs><output type="text" name="Success/Exception" stage="msg" /><output type="image" name="Screenshot" stage="Screenshot1" /></outputs></stage><stage stageid="e620a4a6-dc63-4a1c-923c-1e232c576c30" name="Note1" type="Note"><subsheetid>781b77aa-e56f-4b78-a241-4c73717cba51</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="5f177d2b-c5fa-49cf-a68a-ece5cf67d91f" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="48bb94a4-1f45-4812-becf-98cb28dfd019" name="Get Screenshot" type="Code"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="15" y="75" /><inputs><input type="text" name="Path" expr="[Path]" /></inputs><outputs><output type="image" name="Screenshot1" stage="Screenshot1" /><output type="flag" name="Flag" stage="Flag" /><output type="text" name="msg" stage="msg" /></outputs><onsuccess>6661ad5e-4cb0-4903-a61e-7859dd0c566f</onsuccess><code><![CDATA[try
{
	Bitmap printscr = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height, PixelFormat.Format32bppArgb);
	Graphics graphics = Graphics.FromImage(printscr as Image);
	graphics.CopyFromScreen(0,0,0,0,printscr.Size);
	printscr.Save(@Path,ImageFormat.Jpeg);
	Flag = true;
	Screenshot1 = printscr;
	msg = "Success";
}
catch (Exception ex)
{
	Flag = false;
	msg = ex.ToString();
	Screenshot1 = null;
}]]></code></stage><stage stageid="596a5832-0080-449a-82ea-217793210776" name="Screenshot1" type="Data"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><display x="-195" y="45" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80b19910-b063-46eb-a0e6-a9092e5340a8" name="Get Username" type="Action"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="15" y="-60" /><outputs><output type="text" name="User Name" narrative="The name of the logged in user in the current system" stage="User Name" /></outputs><onsuccess>10b1eebf-6db4-4840-9f48-7703e3c4113c</onsuccess><resource object="Utility - Environment" action="Get User Name" /></stage><stage stageid="8db0fdf9-ab9a-4e12-9953-0b00197d0dab" name="User Name" type="Data"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><display x="-255" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ba4bbbf-919e-4fe9-8293-3815cc5ca7b0" name="Path" type="Calculation"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="15" y="30" /><onsuccess>48bb94a4-1f45-4812-becf-98cb28dfd019</onsuccess><calculation expression="&quot;C:\Users\&quot; &amp; [User Name] &amp; &quot;\Pictures\screenshot.jpg&quot;" stage="Path" /></stage><stage stageid="0414234d-6928-4e25-8930-1676e2f81f52" name="Path" type="Data"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><display x="-240" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="10b1eebf-6db4-4840-9f48-7703e3c4113c" name="Decision1" type="Decision"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="15" y="-15" /><decision expression="[Path] = &quot;&quot;" /><ontrue>2ba4bbbf-919e-4fe9-8293-3815cc5ca7b0</ontrue><onfalse>afe019ba-89b7-4968-9d3f-34f8c2254edf</onfalse></stage><stage stageid="2c782bec-9496-43a0-9101-a2dae5b32a31" name="Anchor1" type="Anchor"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="75" y="75" w="10" h="10" /><onsuccess>48bb94a4-1f45-4812-becf-98cb28dfd019</onsuccess></stage><stage stageid="afe019ba-89b7-4968-9d3f-34f8c2254edf" name="Anchor2" type="Anchor"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><loginhibit /><display x="75" y="-15" w="10" h="10" /><onsuccess>2c782bec-9496-43a0-9101-a2dae5b32a31</onsuccess></stage><stage stageid="dc9e888f-328d-4c3d-b956-1a26839173db" name="msg" type="Data"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><display x="-210" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2e61734-b2f1-4a0c-ae51-25d1603ab00f" name="Flag" type="Data"><subsheetid>c91cd9ad-67c7-4786-bc7c-4bce114b90b0</subsheetid><display x="-270" y="90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="745ca56a-386d-4a9f-be65-9ba76de1f1e6" name="Script Execution VBO" xmlns="http://www.blueprism.co.uk/product/process"><process name="Script Execution VBO" version="1.0" bpversion="7.0.1.49890" narrative="A VBO asset designed to execute a script against a specified runtime engine. Examples of which could be Python or NodeJS" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>bf6562f9-a821-4c24-a57c-d7cfcd1b8f54</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="7bae6743-7125-45cc-9d90-365f5c6af653" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71" type="Normal" published="True"><name>Execute Script</name><view><camerax>-88</camerax><cameray>64</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="55f23375-2bd7-45c9-bf59-3251388f02b1" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>7f05bc1b-71d8-45f3-bc9a-b17898095979</onsuccess></stage><stage stageid="7f05bc1b-71d8-45f3-bc9a-b17898095979" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="5f937895-5a9c-4be1-88cd-ecc8354b6779" name="Stage1" type="ProcessInfo"><display x="-180" y="-135" w="210" h="120" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Diagnostics</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="d2386dd3-528c-42eb-ad1c-4f0bca9028f6" name="Clean Up" type="SubSheetInfo"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ecce1c57-bb3e-45ce-b1cb-f304cc36f7f3" name="Start" type="Start"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e1f39a45-a1bc-47f2-bd7a-3e0d476e9b2d</onsuccess></stage><stage stageid="e1f39a45-a1bc-47f2-bd7a-3e0d476e9b2d" name="End" type="End"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="47b577b0-8b0e-47ab-bcbb-1cd0679e4161" name="Execute Script" type="SubSheetInfo"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><narrative>The script executor is designed to provide an easy way to run a script against a specific runtime engine and return its value into Blue Prism. The code stage in this version is provided in C#.</narrative><display x="-195" y="-195" w="210" h="60" /></stage><stage stageid="8c1c7b6e-aed4-48a9-ab5d-fa5dc31f37b6" name="Start" type="Start"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="90" y="-105" /><inputs><input type="text" name="ScriptEngineFilePath" narrative="The location of the scripting engine executable on your computer." stage="ScriptEngineFilePath" /><input type="text" name="ScriptFilePath" narrative="The location of the script that you wish to execute. " stage="ScriptFilePath" /><input type="text" name="ScriptNameAndArguments" narrative="The script name and any arguments that your script might need." stage="ScriptNameAndArguments" /></inputs><onsuccess>c7dd3d7d-41b6-4120-b96c-ea788dafa930</onsuccess></stage><stage stageid="76a3a16a-f79b-4d02-8010-548ca935da4e" name="End" type="End"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="90" y="165" /><outputs><output type="text" name="ScriptOutput" narrative="The results of any output from your executed script." stage="ScriptOutput" /></outputs></stage><stage stageid="ebd68bfa-d0be-4b01-ba44-a3af6b6fc612" name="Note1" type="Note"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="9a586ff7-70b0-485b-bee5-1fb8ba3a0bb9" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="210" h="240" /></stage><stage stageid="c7dd3d7d-41b6-4120-b96c-ea788dafa930" name="Script Execution" type="Code"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="90" y="15" /><inputs><input type="text" name="scriptfilepath" expr="[ScriptFilePath]" /><input type="text" name="scriptenginefilepath" expr="[ScriptEngineFilePath]" /><input type="text" name="scriptnameandarguments" expr="[ScriptNameAndArguments]" /></inputs><outputs><output type="text" name="ScriptOutput" stage="ScriptOutput" /></outputs><onsuccess>76a3a16a-f79b-4d02-8010-548ca935da4e</onsuccess><code><![CDATA[string filename = scriptfilepath;
string output = string.Empty;
try 
{
	Process p = new Process
	{
		StartInfo = new ProcessStartInfo()
		{	
			FileName = scriptenginefilepath,
			WorkingDirectory = scriptfilepath,
			Arguments = scriptnameandarguments,
			RedirectStandardOutput = true,
			UseShellExecute = false,
			CreateNoWindow = true
		}
	};
	
	p.Start();

	output = p.StandardOutput.ReadToEnd();
	p.WaitForExit();
		
}
catch (Exception ex)
{
	output = ex.Message;
}

ScriptOutput = output;

]]></code></stage><stage stageid="4137632e-d7c9-472f-89d9-9ee7821fe62c" name="ScriptOutput" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><display x="-180" y="120" w="270" h="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c78b103-f493-411c-871a-625e5e5bd0b9" name="ScriptEngineFilePath" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><narrative>This is the path to your scripting engine such as Python.exe or node.exe.</narrative><display x="-180" y="-90" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8846e52c-3076-4e1c-b1f2-baca129ac6a2" name="ScriptFilePath" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><display x="-180" y="-45" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a70ec5b1-4749-40d0-addf-8d7e7af6c852" name="Inputs" type="Block"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="-300" y="-135" w="225" h="165" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="898584a4-bca0-4563-b429-f7e6b6e6dbbb" name="Output" type="Block"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="-330" y="45" w="300" h="135" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="4c579efb-d956-465a-b256-7bae0134fa85" name="ScriptNameAndArguments" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><display x="-180" y="0" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4872c5b8-87bf-4df5-9b34-9bc711c7dbf7" name="Note3" type="Note"><loginhibit /><narrative>V1.2 - May 2023

© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182

Support URL

https://community.blueprism.com/communities/community-home?CommunityKey=1e516cfe-4d1f-4de9-a9eb-58d15bf38c81</narrative><display x="180" y="0" w="180" h="390" /><font family="Segoe UI" size="16" style="Regular" color="3366FF" /></stage></process></object>
        <object id="b60ea06d-f586-422e-abfa-b861e01ac106" name="Script Execution VBO - Visual Basic" xmlns="http://www.blueprism.co.uk/product/process"><process name="Script Execution VBO - Visual Basic" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>bf6562f9-a821-4c24-a57c-d7cfcd1b8f54</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="7bae6743-7125-45cc-9d90-365f5c6af653" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71" type="Normal" published="True"><name>Execute Script</name><view><camerax>-88</camerax><cameray>-63</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="55f23375-2bd7-45c9-bf59-3251388f02b1" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>7f05bc1b-71d8-45f3-bc9a-b17898095979</onsuccess></stage><stage stageid="7f05bc1b-71d8-45f3-bc9a-b17898095979" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="5f937895-5a9c-4be1-88cd-ecc8354b6779" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Diagnostics</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="d2386dd3-528c-42eb-ad1c-4f0bca9028f6" name="Clean Up" type="SubSheetInfo"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ecce1c57-bb3e-45ce-b1cb-f304cc36f7f3" name="Start" type="Start"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e1f39a45-a1bc-47f2-bd7a-3e0d476e9b2d</onsuccess></stage><stage stageid="e1f39a45-a1bc-47f2-bd7a-3e0d476e9b2d" name="End" type="End"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="47b577b0-8b0e-47ab-bcbb-1cd0679e4161" name="Execute Script" type="SubSheetInfo"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><narrative>The script executor is designed to provide an easy way to run a script and return its value into Blue Prism.</narrative><display x="-195" y="-180" w="150" h="60" /></stage><stage stageid="8c1c7b6e-aed4-48a9-ab5d-fa5dc31f37b6" name="Start" type="Start"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="90" y="-105" /><inputs><input type="text" name="ScriptEngineFilePath" narrative="The location of the scripting engine executable on your computer." stage="ScriptEngineFilePath" /><input type="text" name="ScriptFilePath" narrative="The location of the script that you wish to execute. " stage="ScriptFilePath" /><input type="text" name="ScriptNameAndArguments" narrative="The script name and any arguments that your script might need." stage="ScriptNameAndArguments" /></inputs><onsuccess>c7dd3d7d-41b6-4120-b96c-ea788dafa930</onsuccess></stage><stage stageid="76a3a16a-f79b-4d02-8010-548ca935da4e" name="End" type="End"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="90" y="165" /><outputs><output type="text" name="ScriptOutput" narrative="The results of any output from your executed script." stage="ScriptOutput" /></outputs></stage><stage stageid="ebd68bfa-d0be-4b01-ba44-a3af6b6fc612" name="Note1" type="Note"><subsheetid>7bae6743-7125-45cc-9d90-365f5c6af653</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="9a586ff7-70b0-485b-bee5-1fb8ba3a0bb9" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c7dd3d7d-41b6-4120-b96c-ea788dafa930" name="Script Execution" type="Code"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="90" y="30" /><inputs><input type="text" name="scriptfilepath" expr="[ScriptFilePath]" /><input type="text" name="scriptenginefilepath" expr="[ScriptEngineFilePath]" /><input type="text" name="scriptnameandarguments" expr="[ScriptNameAndArguments]" /></inputs><outputs><output type="text" name="ScriptOutput" stage="ScriptOutput" /></outputs><onsuccess>76a3a16a-f79b-4d02-8010-548ca935da4e</onsuccess><code><![CDATA[
    Dim filename As String = scriptfilepath
    Dim output As String = String.Empty

    Try
        Dim p As Process = New Process With {
            .StartInfo = New ProcessStartInfo() With {
                .FileName = scriptenginefilepath,
                .WorkingDirectory = scriptfilepath,
                .Arguments = scriptnameandarguments,
                .RedirectStandardOutput = True,
                .UseShellExecute = False,
                .CreateNoWindow = True
            }
        }
        p.Start()
        output = p.StandardOutput.ReadToEnd()
        p.WaitForExit()
    Catch ex As Exception
        output = ex.Message
    End Try

    ScriptOutput = output

]]></code></stage><stage stageid="4137632e-d7c9-472f-89d9-9ee7821fe62c" name="ScriptOutput" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><display x="-180" y="135" w="270" h="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c78b103-f493-411c-871a-625e5e5bd0b9" name="ScriptEngineFilePath" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><display x="-180" y="-90" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8846e52c-3076-4e1c-b1f2-baca129ac6a2" name="ScriptFilePath" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><display x="-180" y="-45" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a70ec5b1-4749-40d0-addf-8d7e7af6c852" name="Inputs" type="Block"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="-300" y="-135" w="225" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FF9900" /></stage><stage stageid="898584a4-bca0-4563-b429-f7e6b6e6dbbb" name="Output" type="Block"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><loginhibit /><display x="-330" y="60" w="300" h="135" /><font family="Segoe UI" size="10" style="Regular" color="00FF00" /></stage><stage stageid="4c579efb-d956-465a-b256-7bae0134fa85" name="ScriptNameAndArguments" type="Data"><subsheetid>cfe8e0d0-4ac8-4a1e-9e3a-bac40c7dbe71</subsheetid><display x="-180" y="0" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f57f192-ee2c-4187-b77d-ca48d8978888" name="Note3" type="Note"><loginhibit /><narrative>V1.2 - May 2023

© 2023 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182

Support URL

https://community.blueprism.com/communities/community-home?CommunityKey=1e516cfe-4d1f-4de9-a9eb-58d15bf38c81</narrative><display x="210" y="-15" w="180" h="390" /><font family="Segoe UI" size="16" style="Regular" color="3366FF" /></stage></process></object>
        <object id="7d2e0267-34a8-4556-855a-ebd454335aa0" name="Send HTML Body as Email" xmlns="http://www.blueprism.co.uk/product/process"><process name="Send HTML Body as Email" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>05e9571f-0b41-4fd1-8ba2-4519b661071e</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="01800d0c-965d-45cc-bdc2-bd3e5a567263" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e273215-735d-41b3-9a65-49cd68f85661" type="Normal" published="True"><name>Get HTML Structure of table</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="397d2bb1-4a6e-49d9-b1ce-9f29f9f0f372" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>9a972f6f-d513-4225-98b8-a2018aa1b4c0</onsuccess></stage><stage stageid="9a972f6f-d513-4225-98b8-a2018aa1b4c0" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="fe26a6bc-d4e3-44b8-900d-77593243b22d" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Collections.Generic</import><import>System.Text</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="8d12af5a-e85a-4917-8399-0123e13e3886" name="Clean Up" type="SubSheetInfo"><subsheetid>01800d0c-965d-45cc-bdc2-bd3e5a567263</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d0f3a5a6-54a5-46bb-8b54-773f7c4f6fcd" name="Start" type="Start"><subsheetid>01800d0c-965d-45cc-bdc2-bd3e5a567263</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>2f1628c2-2151-4904-a32f-f06e2b4b7fcf</onsuccess></stage><stage stageid="2f1628c2-2151-4904-a32f-f06e2b4b7fcf" name="End" type="End"><subsheetid>01800d0c-965d-45cc-bdc2-bd3e5a567263</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="85f272a1-c527-4e89-b4f1-a7541f4b8894" name="Get HTML Structure of table" type="SubSheetInfo"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="56887430-857c-4f9c-8493-e3d147448f67" name="Start" type="Start"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="InputData" stage="InputData" /><input type="text" name="Color Code" stage="Color Code" /></inputs><onsuccess>138200df-5a3b-4162-8716-ebd777184d91</onsuccess></stage><stage stageid="5223c18c-b96a-40cf-81f3-1bebcd5fa2ec" name="End" type="End"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="HTML Structure of Collection" stage="OutEmailBody" /></outputs></stage><stage stageid="5704f447-fb63-439b-9d0e-0397723a8ba1" name="" type="Note"><subsheetid>01800d0c-965d-45cc-bdc2-bd3e5a567263</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="190b0376-92f3-439a-98ed-d713a0c66a45" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="5019b9bf-9a0c-4aea-9ed5-997988c28adc" name="Generate HTML Body(not used)" type="Code"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><loginhibit /><display x="195" y="60" w="90" h="30" /><inputs><input type="collection" name="InputData" expr="[InputData]" /></inputs><outputs><output type="text" name="OutEmailBody" stage="OutEmailBody" /></outputs><onsuccess>5223c18c-b96a-40cf-81f3-1bebcd5fa2ec</onsuccess><code><![CDATA[StringBuilder sb = new StringBuilder();
if (InputData.Rows.Count> 0)

{
sb.Append("<table style='border:1px solid black;border-collapse: collapse;'>");
sb.Append ("<tr style='border:1px solid black;border-collapse: collapse;'>");

foreach (DataColumn dc in InputData.Columns)
{
	sb.Append("<th style='border:1px solid black;border-collapse: collapse;background-color: #90EE90;'>");
	sb.Append(dc.ColumnName);
	sb.Append("</th>");
}
sb.Append("</tr>");

foreach (DataRow dr in InputData.Rows)
{
	sb.Append ("<tr>");
	foreach (DataColumn dc in InputData.Columns)
{
	sb.Append("<td style='border:1px solid black;border-collapse: collapse;text-align: center; height:50px;'>");
	sb.Append (dr[dc.ColumnName].ToString());
	sb.Append("</td>");
}
sb.Append("</tr>");
}

sb.Append("</table>");
	
}
OutEmailBody = sb.ToString();
]]></code></stage><stage stageid="ea45b6bc-30c1-4baf-99bc-e546bdb818b6" name="InputData" type="Collection"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><display x="-165" y="15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="be553e38-2c2f-47b5-96c1-0a907849b1a0" name="OutEmailBody" type="Data"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><display x="-225" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="956e5bd8-7419-4749-b910-7ae5864a4bab" name="Color Code" type="Data"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><display x="-270" y="15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57548bec-6333-4378-8c94-7f41f1d0562b" name="Input/Output parameters" type="Block"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><loginhibit /><display x="-315" y="-15" w="225" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="138200df-5a3b-4162-8716-ebd777184d91" name="Generate HTML Body" type="Code"><subsheetid>1e273215-735d-41b3-9a65-49cd68f85661</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="collection" name="InputData" expr="[InputData]" /><input type="text" name="ColorCode" expr="[Color Code]" /></inputs><outputs><output type="text" name="OutEmailBody" stage="OutEmailBody" /></outputs><onsuccess>5223c18c-b96a-40cf-81f3-1bebcd5fa2ec</onsuccess><code><![CDATA[StringBuilder sb = new StringBuilder();
if (InputData.Rows.Count> 0)

{
sb.Append("<table style='border:1px solid black;border-collapse: collapse;'>");
sb.Append ("<tr style='border:1px solid black;border-collapse: collapse;'>");

foreach (DataColumn dc in InputData.Columns)
{
	sb.Append("<th style='border:1px solid black;border-collapse: collapse;background-color: " + ColorCode);
	//sb.Append (ColorCode);
	sb.Append (";'>");
	sb.Append(dc.ColumnName);
	sb.Append("</th>");
}
sb.Append("</tr>");

foreach (DataRow dr in InputData.Rows)
{
	sb.Append ("<tr>");
	foreach (DataColumn dc in InputData.Columns)
{
	sb.Append("<td style='border:1px solid black;border-collapse: collapse;text-align: center; height:50px;'>");
	sb.Append (dr[dc.ColumnName].ToString());
	sb.Append("</td>");
}
sb.Append("</tr>");
}

sb.Append("</table>");
	
}
OutEmailBody = sb.ToString();
]]></code></stage></process></object>
        <object id="61be0a71-a56c-484c-a748-1357636d3081" name="Test MIB - Disk cleanup" xmlns="http://www.blueprism.co.uk/product/process"><process name="Test MIB - Disk cleanup" version="1.0" bpversion="7.0.1.49890" narrative="Disk cleanup practice exercise" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Test MIB - Disk cleanup"><id>415a8f9c-f7c8-4122-8e68-e38025ec73e4</id><element name="Disk clean Element1"><id>5f6edcd8-ea42-4e87-882a-ea94826596d8</id><type>Window</type><basetype>Window</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText"><ProcessValue datatype="text" value="Disk Cleanup : Drive Selection" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="#32770" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="799" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="434" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="323" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="173" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="1" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="5" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="&lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="1" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="#32770" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:807,465,598,1113" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="-1798829884" /></attribute><attribute name="MatchIndex"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>Win32Launch</id><parameters><parameter><name>Path</name><value>C:\WINDOWS\system32\cleanmgr.exe</value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>WorkingDirectory</name><value></value></parameter><parameter><name>NonInvasive</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter><parameter><name>Options</name><value></value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="cfc57286-0f0a-4137-980a-d3acf8053181" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5818f639-2a71-4e73-81c0-43db534fb596" type="Normal" published="False"><name>Launch</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0fceaf24-811a-479e-b528-48d8da91a9e8" type="Normal" published="False"><name>Terminate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="9bf7ccc5-8322-4ed3-8e79-e15492a3fa97" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>3cbdfe5b-a809-457c-9790-fc8759748ac2</onsuccess></stage><stage stageid="3cbdfe5b-a809-457c-9790-fc8759748ac2" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="92c8e494-7d91-4dc9-ac58-b434eaebb6cb" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="92ec6ba9-9bed-4da1-ba66-c32d0621173f" name="Clean Up" type="SubSheetInfo"><subsheetid>cfc57286-0f0a-4137-980a-d3acf8053181</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14d166d3-dd3c-432d-9e32-108bc0a9322a" name="Start" type="Start"><subsheetid>cfc57286-0f0a-4137-980a-d3acf8053181</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>b2bc30bd-0c97-4ffe-ba09-1f69520f6a96</onsuccess></stage><stage stageid="b2bc30bd-0c97-4ffe-ba09-1f69520f6a96" name="End" type="End"><subsheetid>cfc57286-0f0a-4137-980a-d3acf8053181</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="02d50dd1-1856-4634-96ac-bcc1ac3b7177" name="Launch" type="SubSheetInfo"><subsheetid>5818f639-2a71-4e73-81c0-43db534fb596</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2e41626f-2b5c-4d4d-91f4-25537c88587c" name="Start" type="Start"><subsheetid>5818f639-2a71-4e73-81c0-43db534fb596</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>4a10ab34-b2f2-4100-9c06-06102598088e</onsuccess></stage><stage stageid="0436fc40-cb9e-44ac-8a13-a3c09c5d1538" name="End" type="End"><subsheetid>5818f639-2a71-4e73-81c0-43db534fb596</subsheetid><loginhibit /><display x="75" y="90" /></stage><stage stageid="2d9f4b5a-8c96-4da9-b575-af0317994170" name="" type="Note"><subsheetid>cfc57286-0f0a-4137-980a-d3acf8053181</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="8f517c7f-25e3-44cf-8a48-bb1e55aae28e" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="4a10ab34-b2f2-4100-9c06-06102598088e" name="Launch" type="Navigate"><subsheetid>5818f639-2a71-4e73-81c0-43db534fb596</subsheetid><loginhibit /><display x="15" y="-60" /><onsuccess>d2542265-6a2e-4115-8436-fa81902c16ce</onsuccess><step><element id="415a8f9c-f7c8-4122-8e68-e38025ec73e4" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="621ab336-fed1-4073-a92e-378c820d773d" name="Terminate" type="SubSheetInfo"><subsheetid>0fceaf24-811a-479e-b528-48d8da91a9e8</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a6bca521-a328-48fd-8f5b-64b07347d96c" name="Start" type="Start"><subsheetid>0fceaf24-811a-479e-b528-48d8da91a9e8</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>d960d13e-3c02-4dcc-9258-5f741dc129b9</onsuccess></stage><stage stageid="8bba9970-2415-4206-814f-b22f580f022b" name="End" type="End"><subsheetid>0fceaf24-811a-479e-b528-48d8da91a9e8</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="d960d13e-3c02-4dcc-9258-5f741dc129b9" name="Terminate" type="Navigate"><subsheetid>0fceaf24-811a-479e-b528-48d8da91a9e8</subsheetid><loginhibit /><display x="15" y="-15" /><onsuccess>8bba9970-2415-4206-814f-b22f580f022b</onsuccess><step><element id="415a8f9c-f7c8-4122-8e68-e38025ec73e4" /><action><id>Terminate</id></action></step></stage><stage stageid="0b78a4f8-d9d9-43c8-a88c-60a92f386bb2" name="Time Out1" type="WaitEnd"><subsheetid>5818f639-2a71-4e73-81c0-43db534fb596</subsheetid><loginhibit /><display x="120" y="0" w="30" h="30" /><onsuccess>a01649a6-f169-42d7-8376-444314b3bd57</onsuccess><groupid>aff4f875-6032-4eca-a109-d90eb8fd640f</groupid></stage><stage stageid="d2542265-6a2e-4115-8436-fa81902c16ce" name="Wait1" type="WaitStart"><subsheetid>5818f639-2a71-4e73-81c0-43db534fb596</subsheetid><loginhibit /><display x="15" y="0" w="30" h="30" /><groupid>aff4f875-6032-4eca-a109-d90eb8fd640f</groupid><choices><choice reply="True"><name>Disk clean Element1 Check Exists</name><distance>35</distance><ontrue>0436fc40-cb9e-44ac-8a13-a3c09c5d1538</ontrue><element id="5f6edcd8-ea42-4e87-882a-ea94826596d8" /><condition><id>CheckExists</id></condition><comparetype>Equal</comparetype></choice></choices><timeout>5</timeout></stage><stage stageid="a01649a6-f169-42d7-8376-444314b3bd57" name="End1" type="End"><subsheetid>5818f639-2a71-4e73-81c0-43db534fb596</subsheetid><loginhibit /><display x="225" y="0" /></stage></process></object>
        <object id="27e791a6-6605-4cfc-84f4-5b8a7409bb49" name="Test MIB - Notepad" xmlns="http://www.blueprism.co.uk/product/process"><process name="Test MIB - Notepad" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Test MIB - Notepad"><id>e6f56c8a-f402-4885-b362-e0a0c4953f88</id><element name="Element1"><id>445bc250-3af2-40b3-ba04-cf79c4fba1d8</id><type>Edit</type><basetype>Edit</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText"><ProcessValue datatype="text" value="" /></attribute><attribute name="ClassName" inuse="True"><ProcessValue datatype="text" value="Edit" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="0" /></attribute><attribute name="X"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="0" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="642" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="540" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="1" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="0" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="Untitled - Notepad &lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="2" /></attribute><attribute name="TypeName"><ProcessValue datatype="text" value="Edit" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:798,207,729,1422" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="1345323268" /></attribute><attribute name="pWindowText"><ProcessValue datatype="text" value="Untitled - Notepad" /></attribute><attribute name="pClassName"><ProcessValue datatype="text" value="Notepad" /></attribute><attribute name="pCtrlID"><ProcessValue datatype="number" value="331200" /></attribute><attribute name="pX"><ProcessValue datatype="number" value="790" /></attribute><attribute name="pY"><ProcessValue datatype="number" value="156" /></attribute><attribute name="pWidth"><ProcessValue datatype="number" value="658" /></attribute><attribute name="pHeight"><ProcessValue datatype="number" value="622" /></attribute><attribute name="pVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pScreenVisible"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pEnabled"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pActive"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="pOrdinal"><ProcessValue datatype="number" value="1" /></attribute><attribute name="pChildCount"><ProcessValue datatype="number" value="2" /></attribute><attribute name="pStyle"><ProcessValue datatype="number" value="1345323268" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>Win32Launch</id><parameters><parameter><name>Path</name><value>C:\Windows\System32\notepad.exe</value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>WorkingDirectory</name><value></value></parameter><parameter><name>NonInvasive</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter><parameter><name>Options</name><value></value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9cfe6e79-bb9f-4222-b7ed-07e80082da1f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a47255e4-1e7b-4798-9b2b-58af2b9bb531" type="Normal" published="False"><name>Open &amp; Close</name><view><camerax>0</camerax><cameray>225</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="43655fda-10d7-442e-b89d-a3506a03de1c" type="Normal" published="True"><name>Launch</name><view><camerax>0</camerax><cameray>77</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7113dbea-15e1-4526-9bf9-5ee1ebcbb0fd" type="Normal" published="True"><name>Close</name><view><camerax>0</camerax><cameray>77</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="aa07fa03-141e-4a03-a999-ca34dd9fd1f1" type="Normal" published="True"><name>Write Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="dd63907e-67fe-4613-8769-e7d04f3ae899" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>92e6e18a-eaf1-4a82-b624-4d407aaa97e5</onsuccess></stage><stage stageid="92e6e18a-eaf1-4a82-b624-4d407aaa97e5" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="ffb86b0f-7552-4a01-a3d1-f93070ece8cf" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="ef4aea5d-fd4e-49ac-a247-428c93fc470f" name="Clean Up" type="SubSheetInfo"><subsheetid>9cfe6e79-bb9f-4222-b7ed-07e80082da1f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7a8888e6-b4d8-4e17-8768-2c21db4b68e7" name="Start" type="Start"><subsheetid>9cfe6e79-bb9f-4222-b7ed-07e80082da1f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>e80eb340-c055-4663-80de-3699be086371</onsuccess></stage><stage stageid="e80eb340-c055-4663-80de-3699be086371" name="End" type="End"><subsheetid>9cfe6e79-bb9f-4222-b7ed-07e80082da1f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="ca55406d-f41c-41df-94a6-7bbf1ee5e403" name="Open &amp; Close" type="SubSheetInfo"><subsheetid>a47255e4-1e7b-4798-9b2b-58af2b9bb531</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="3978cc54-e5d5-44ef-8bd9-56ae37704093" name="Start" type="Start"><subsheetid>a47255e4-1e7b-4798-9b2b-58af2b9bb531</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>4484d6cf-fbea-4bc0-a3e6-801c587d5a74</onsuccess></stage><stage stageid="cf8f70c5-c137-4794-b07e-db8d779b7108" name="End" type="End"><subsheetid>a47255e4-1e7b-4798-9b2b-58af2b9bb531</subsheetid><loginhibit /><display x="15" y="225" /></stage><stage stageid="6dc27891-0ac0-4f74-9b91-6a9a50308677" name="" type="Note"><subsheetid>9cfe6e79-bb9f-4222-b7ed-07e80082da1f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="66f9b23b-7048-4935-a006-48aaf1414d40" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="4484d6cf-fbea-4bc0-a3e6-801c587d5a74" name="Open" type="Navigate"><subsheetid>a47255e4-1e7b-4798-9b2b-58af2b9bb531</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>4da8159c-aa68-4fb5-aa65-f53d2a6cef89</onsuccess><step><element id="e6f56c8a-f402-4885-b362-e0a0c4953f88" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="5e130fe7-9ec4-4899-97ef-129d01416ebf" name="Time Out1" type="WaitEnd"><subsheetid>a47255e4-1e7b-4798-9b2b-58af2b9bb531</subsheetid><loginhibit /><display x="15" y="120" w="30" h="30" /><onsuccess>e57e171f-da8b-42a2-8c62-119bea6cb07f</onsuccess><groupid>2a864b1c-706e-4e3a-9b5b-4576c9663c09</groupid></stage><stage stageid="4da8159c-aa68-4fb5-aa65-f53d2a6cef89" name="Wait1" type="WaitStart"><subsheetid>a47255e4-1e7b-4798-9b2b-58af2b9bb531</subsheetid><loginhibit /><display x="15" y="0" w="30" h="30" /><groupid>2a864b1c-706e-4e3a-9b5b-4576c9663c09</groupid><choices /><timeout>5</timeout></stage><stage stageid="e57e171f-da8b-42a2-8c62-119bea6cb07f" name="Close" type="Navigate"><subsheetid>a47255e4-1e7b-4798-9b2b-58af2b9bb531</subsheetid><loginhibit /><display x="15" y="165" /><onsuccess>cf8f70c5-c137-4794-b07e-db8d779b7108</onsuccess><step><element id="e6f56c8a-f402-4885-b362-e0a0c4953f88" /><action><id>Terminate</id></action></step></stage><stage stageid="2cda8cd8-acc9-43d8-971e-be37cb22fd3b" name="Launch" type="SubSheetInfo"><subsheetid>43655fda-10d7-442e-b89d-a3506a03de1c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b4177c8f-9fe8-4efd-98fb-cb619ad0dc1b" name="Start" type="Start"><subsheetid>43655fda-10d7-442e-b89d-a3506a03de1c</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>c639fc4b-0578-4a0a-94bb-f68f17880341</onsuccess></stage><stage stageid="7bd12ae4-ebc2-42ca-a600-15cb332aa04d" name="End" type="End"><subsheetid>43655fda-10d7-442e-b89d-a3506a03de1c</subsheetid><loginhibit /><display x="15" y="225" /></stage><stage stageid="c639fc4b-0578-4a0a-94bb-f68f17880341" name="Navigate1" type="Navigate"><subsheetid>43655fda-10d7-442e-b89d-a3506a03de1c</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>7bd12ae4-ebc2-42ca-a600-15cb332aa04d</onsuccess><step><element id="e6f56c8a-f402-4885-b362-e0a0c4953f88" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value></value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="f8ae4842-df45-45ed-89ba-ac0438acd3fd" name="Close" type="SubSheetInfo"><subsheetid>7113dbea-15e1-4526-9bf9-5ee1ebcbb0fd</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="66706d4b-b92e-4790-be47-c4d232f60632" name="Start" type="Start"><subsheetid>7113dbea-15e1-4526-9bf9-5ee1ebcbb0fd</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>5de5f983-b3f4-472b-930d-faf54735b522</onsuccess></stage><stage stageid="c546b477-6e7a-4374-89b6-350d7c45846c" name="End" type="End"><subsheetid>7113dbea-15e1-4526-9bf9-5ee1ebcbb0fd</subsheetid><loginhibit /><display x="15" y="225" /></stage><stage stageid="5de5f983-b3f4-472b-930d-faf54735b522" name="Navigate1" type="Navigate"><subsheetid>7113dbea-15e1-4526-9bf9-5ee1ebcbb0fd</subsheetid><loginhibit /><display x="15" y="45" /><onsuccess>c546b477-6e7a-4374-89b6-350d7c45846c</onsuccess><step><element id="e6f56c8a-f402-4885-b362-e0a0c4953f88" /><action><id>Terminate</id></action></step></stage><stage stageid="4cdac45d-fbb5-4012-9053-e11be076bf17" name="Write Text File" type="SubSheetInfo"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="a742dbe7-19bc-4c89-b48f-97e569eaf64c" name="Start" type="Start"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>050b92b9-1583-48a2-8846-4a7a140cae00</onsuccess></stage><stage stageid="fe465706-ed7e-4002-82bb-1f3af77216d1" name="End" type="End"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="text" name="Write stage out" stage="Inputt" /></outputs></stage><stage stageid="ea3f1216-ea4a-43e9-bfd3-f7d9a78ed49f" name="Writer1" type="Write"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><loginhibit /><display x="15" y="0" /><onsuccess>fe465706-ed7e-4002-82bb-1f3af77216d1</onsuccess><step expr="[Inputt]"><element id="445bc250-3af2-40b3-ba04-cf79c4fba1d8" /></step></stage><stage stageid="114e5e7c-17da-411f-95e7-9c85999e42f8" name="Inputt" type="Data"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><loginhibit /><display x="210" y="60" w="90" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">sdfkjasdkldf</initialvalue><private /><alwaysinit /></stage><stage stageid="0839d2b4-1cb0-4f50-9a99-0b0bb485a153" name="Time Out2" type="WaitEnd"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><loginhibit /><display x="75" y="-45" w="30" h="30" /><onsuccess>69d251a4-0f55-446b-ae40-4f01ebbb1051</onsuccess><groupid>c1eaf9b5-b4de-40e0-ba9c-1dc4caef38f0</groupid></stage><stage stageid="050b92b9-1583-48a2-8846-4a7a140cae00" name="Wait2" type="WaitStart"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><loginhibit /><display x="-30" y="-45" w="30" h="30" /><groupid>c1eaf9b5-b4de-40e0-ba9c-1dc4caef38f0</groupid><choices><choice reply="True"><name>Element1 Check Exists</name><distance>45</distance><ontrue>ea3f1216-ea4a-43e9-bfd3-f7d9a78ed49f</ontrue><element id="445bc250-3af2-40b3-ba04-cf79c4fba1d8" /><condition><id>CheckExists</id></condition><comparetype>Equal</comparetype></choice></choices><timeout>10</timeout></stage><stage stageid="69d251a4-0f55-446b-ae40-4f01ebbb1051" name="Write Notepad" type="Exception"><subsheetid>aa07fa03-141e-4a03-a999-ca34dd9fd1f1</subsheetid><display x="150" y="-45" /><exception localized="yes" type="System Exception" detail="&quot;SE: Unable to identify Write section in notepad&quot;" /></stage></process></object>
        <object id="45d7738c-ae4a-4ae9-8165-d9441a63a2cd" name="Text to Voice" xmlns="http://www.blueprism.co.uk/product/process"><process name="Text to Voice" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>c3628d54-4998-4299-ae36-3a5d3882a2df</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="686a8a54-83f7-4409-bebb-81e43a43691c" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3aac9b50-c458-4d93-811f-81230b63827b" type="Normal" published="True"><name>Text to Voice</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="ea23f786-6c9c-47f9-b1de-5fae0f53813b" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>f54ee1b8-5d3b-4689-a9d0-52aca614a97d</onsuccess></stage><stage stageid="f54ee1b8-5d3b-4689-a9d0-52aca614a97d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="aa6272be-d4c9-4f14-9b31-0c381f02124b" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="62910211-3fd4-4a60-bc31-3369bff6b871" name="Clean Up" type="SubSheetInfo"><subsheetid>686a8a54-83f7-4409-bebb-81e43a43691c</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="7a9c6d41-8fbf-4866-aad6-7cb760f8ec54" name="Start" type="Start"><subsheetid>686a8a54-83f7-4409-bebb-81e43a43691c</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>39832bca-7cda-4bf9-9aa4-15f830f812c1</onsuccess></stage><stage stageid="39832bca-7cda-4bf9-9aa4-15f830f812c1" name="End" type="End"><subsheetid>686a8a54-83f7-4409-bebb-81e43a43691c</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="a63d33e0-2483-4269-aa6c-ce99f36fdb87" name="Text to Voice" type="SubSheetInfo"><subsheetid>3aac9b50-c458-4d93-811f-81230b63827b</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="351a3e77-4061-4a58-ac28-4dcd4c555027" name="Note1" type="Note"><subsheetid>686a8a54-83f7-4409-bebb-81e43a43691c</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="8e4cffc6-02e1-4e39-9672-f87f53a2b999" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="0fc417be-8554-4c92-ab24-43fd1dbdb905" name="Start" type="Start"><subsheetid>3aac9b50-c458-4d93-811f-81230b63827b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Converter Text" narrative="Text to Voice converter " stage="Converter Text" /></inputs><onsuccess>8ca4872a-b0d2-43eb-b01e-662d29dd224a</onsuccess></stage><stage stageid="29870c92-1551-476d-8876-0a759c08fd2d" name="End" type="End"><subsheetid>3aac9b50-c458-4d93-811f-81230b63827b</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="8ca4872a-b0d2-43eb-b01e-662d29dd224a" name="Text To Voice" type="Code"><subsheetid>3aac9b50-c458-4d93-811f-81230b63827b</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Text To Voice" expr="[Converter Text]" /></inputs><onsuccess>29870c92-1551-476d-8876-0a759c08fd2d</onsuccess><code><![CDATA[Dim StrText as string=(Text_To_Voice)
Dim objXLS =System.Activator.CreateInstance(System.Type.GetTypeFromProgID("SAPI.SpVoice"))
objXLS.Speak(StrText)]]></code></stage><stage stageid="6bbe5be1-16ba-4d80-bd84-35ef2227c673" name="Converter Text" type="Data"><subsheetid>3aac9b50-c458-4d93-811f-81230b63827b</subsheetid><loginhibit /><display x="135" y="-30" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="48f68549-1770-45ef-8357-46a3a53a4d1a" name="Utility - Change Screen Resolution" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Change Screen Resolution" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>66c1caf7-d917-4cc8-a6fc-a95f64719a4d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="c65729cd-30de-4077-a93d-87b689ba241e" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="01bca2c7-10ab-4fab-af3b-9a02a1ad4016" type="Normal" published="False"><name>Change Screen Resolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="58bc0941-4a8f-4018-9e8e-cbff482a60ce" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>803c5772-0b8f-4732-8c88-ade53fb02b45</onsuccess></stage><stage stageid="803c5772-0b8f-4732-8c88-ade53fb02b45" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="8e773e25-f45a-4166-acb4-4e4ecd9b068a" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Runtime.InteropServices.RuntimeInformation.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Runtime.InteropServices</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[[StructLayout(LayoutKind.Sequential)]
public struct DEVMODE1
{
[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)] public string dmDeviceName;
public short dmSpecVersion;
public short dmDriverVersion;
public short dmSize;
public short dmDriverExtra;
public int dmFields;

public short dmOrientation;
public short dmPaperSize;
public short dmPaperLength;
public short dmPaperWidth;

public short dmScale;
public short dmCopies;
public short dmDefaultSource;
public short dmPrintQuality;
public short dmColor;
public short dmDuplex;
public short dmYResolution;
public short dmTTOption;
public short dmCollate;
[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)] public string dmFormName;
public short dmLogPixels;
public short dmBitsPerPel;
public int dmPelsWidth;
public int dmPelsHeight;

public int dmDisplayFlags;
public int dmDisplayFrequency;

public int dmICMMethod;
public int dmICMIntent;
public int dmMediaType;
public int dmDitherType;
public int dmReserved1;
public int dmReserved2;

public int dmPanningWidth;
public int dmPanningHeight;
};
public class Screen
{
public static Screen PrimaryScreen { get; }
public static Screen[] AllScreens { get; }
}


class User_32
{
[DllImport("user32.dll")]
public static extern int EnumDisplaySettings(string deviceName, int modeNum, ref DEVMODE1 devMode);
[DllImport("user32.dll")]
public static extern int ChangeDisplaySettings(ref DEVMODE1 devMode, int flags);

public const int ENUM_CURRENT_SETTINGS = -1;
public const int CDS_UPDATEREGISTRY = 0x01;
public const int CDS_TEST = 0x02;
public const int DISP_CHANGE_SUCCESSFUL = 0;
public const int DISP_CHANGE_RESTART = 1;
public const int DISP_CHANGE_FAILED = -1;
}
]]></code></stage><stage stageid="ebde211c-f721-4736-bf47-dd4ab9ee9708" name="Clean Up" type="SubSheetInfo"><subsheetid>c65729cd-30de-4077-a93d-87b689ba241e</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="85aa3fe0-24bf-4bb6-8455-48d0ea65b4a0" name="Start" type="Start"><subsheetid>c65729cd-30de-4077-a93d-87b689ba241e</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>19d97b50-1e85-4fd0-98ea-c708796e0675</onsuccess></stage><stage stageid="19d97b50-1e85-4fd0-98ea-c708796e0675" name="End" type="End"><subsheetid>c65729cd-30de-4077-a93d-87b689ba241e</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="5c10aedf-02ff-4752-b56d-5f5806e5e2e4" name="Change Screen Resolution" type="SubSheetInfo"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="84314964-8d3f-4493-9850-d7c8e7bade9e" name="Start" type="Start"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>657971a6-9238-4612-9abe-0be139707710</onsuccess></stage><stage stageid="7dc63742-01fe-412d-b09b-74bd4a25886a" name="End" type="End"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="37546e05-c831-40c0-a230-e7c473e7d0a0" name="Note1" type="Note"><subsheetid>c65729cd-30de-4077-a93d-87b689ba241e</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="994ded84-2898-4e7c-80bd-5802789b89d6" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c612bfa3-8319-4466-8bb6-bc15e23cd7eb" name="In_Width" type="Data"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><loginhibit /><display x="-195" y="-15" w="90" h="30" /><datatype>number</datatype><initialvalue>1920</initialvalue><private /><alwaysinit /></stage><stage stageid="4db19d07-2945-45e1-9007-218870bfe19e" name="In_Height" type="Data"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><loginhibit /><display x="-195" y="15" w="90" h="30" /><datatype>number</datatype><initialvalue>1080</initialvalue><private /><alwaysinit /></stage><stage stageid="a11d368a-0323-4479-939f-22a5265232ba" name="Out_Message" type="Data"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8499daf3-5029-4d5b-919f-ca5b25dae0cb" name="Out_Status" type="Data"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="657971a6-9238-4612-9abe-0be139707710" name="Code1" type="Code"><subsheetid>01bca2c7-10ab-4fab-af3b-9a02a1ad4016</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="number" name="In_Width" expr="[In_Width]" /><input type="number" name="In_Height" expr="[In_Height]" /></inputs><outputs><output type="flag" name="Out_Status" stage="Out_Status" /><output type="text" name="Out_Message" stage="Out_Message" /></outputs><onsuccess>7dc63742-01fe-412d-b09b-74bd4a25886a</onsuccess><code><![CDATA[Screen screen = Screen.PrimaryScreen;

int iWidth = Decimal.ToInt32(In_Width);
int iHeight = Decimal.ToInt32(In_Height);
bool status = false;
string message = "";
DEVMODE1 dm = new DEVMODE1();
dm.dmDeviceName = new String(new char[32]);
dm.dmFormName = new String(new char[32]);
dm.dmSize = (short)Marshal.SizeOf(dm);
if (0 != User_32.EnumDisplaySettings(null, User_32.ENUM_CURRENT_SETTINGS, ref dm))
{
dm.dmPelsWidth = iWidth;
dm.dmPelsHeight = iHeight;
int iRet = User_32.ChangeDisplaySettings(ref dm, User_32.CDS_TEST);
if (iRet == User_32.DISP_CHANGE_FAILED)
{
status = false;
message = "Unable to process the request";
}
else
{
iRet = User_32.ChangeDisplaySettings(ref dm, User_32.CDS_UPDATEREGISTRY);

switch (iRet)
{
case User_32.DISP_CHANGE_SUCCESSFUL:
{
message="Resolution got changed successfully";
status=true;
break; 
}
case User_32.DISP_CHANGE_RESTART:
{
message="Resolution settings have been implemented successfully. Restart the machine to observe the changes.";
status=true;
break;
}
default:
{
message="Resolution got failed to change";
status=false;
break; 
}
}
}
}
Out_Status=status;
Out_Message = message;]]></code></stage></process></object>
        <object id="6f9680f1-616c-4884-b58c-42ed51446377" name="Utility - Collection Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Collection Manipulation" version="5.0.11" bpversion="7.0.1.49890" narrative="Utility functions for manipulating collections." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>283</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /></preconditions><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="53950e2c-2499-41fc-aed2-207a6c7431fd" type="Normal" published="False"><name>Utility Functions Test</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b896a907-62b8-4568-99f4-1e8832c39941" type="Normal" published="True"><name>Remove Duplicate</name><view><camerax>112</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8e5be7a-93aa-4322-99bf-00edea37bbc2" type="Normal" published="True"><name>Sort Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="69f8958e-ddc9-4fba-9e10-b2368166b460" type="Normal" published="True"><name>Remove duplicate with Repeated Count</name><view><camerax>112</camerax><cameray>12</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ffab882f-007c-48a5-8f84-8f5f1bfd4d6a" type="Normal" published="True"><name>Reverse Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cd8fefb9-4622-4ea7-8287-e64b86d7e513" type="Normal" published="True"><name>Merge Collection</name><view><camerax>-100</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="76943739-36b9-46bc-8f95-e1b6342bc8a6" type="Normal" published="True"><name>Split Collection</name><view><camerax>0</camerax><cameray>-3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a0cf6615-20c0-4910-9990-0f79f5f30bca" type="Normal" published="True"><name>Transpose Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a9f3108d-ca87-4551-b567-9c64ef05cf0c" type="Normal" published="True"><name>Filter Collection</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e277cc2b-72b8-47e9-8a1b-e8530eb19a09" type="Normal" published="True"><name>Get Collection Fields</name><view><camerax>42</camerax><cameray>-4</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4d41bfc8-e552-41ae-9e45-65dc3d1f7276" type="Normal" published="True"><name>Field Exists</name><view><camerax>144</camerax><cameray>-41</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="bcde64eb-f856-4440-a6c0-d83f40f0cf4b" type="Normal" published="True"><name>Rename Collection Fields</name><view><camerax>207</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="198ce3c6-ecbf-4203-a609-b15429defe0e" type="Normal" published="True"><name>Read Collection Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="05992810-1be4-4455-84e8-10579308ab87" type="Normal" published="True"><name>Set Collection Field</name><view><camerax>276</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a9aa259-fe07-4035-8411-23737559c975" type="Normal" published="True"><name>Collection Contains Field</name><view><camerax>0</camerax><cameray>168</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a" type="Normal" published="True"><name>Collection Contains Value</name><view><camerax>-93</camerax><cameray>-24</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cdf2a7f1-a351-441a-8d36-bc92af66650a" type="Normal" published="True"><name>Copy Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f694a8-5305-4a38-9b41-a98998f2f7ca" type="Normal" published="True"><name>Append Rows to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70c05455-793e-4eeb-8eca-a338232ffedf" type="Normal" published="True"><name>Remove Duplicates On Multiple Columns</name><view><camerax>0</camerax><cameray>6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a474299b-5c1c-4873-a3af-4dd0d3bd03ff" type="Normal" published="True"><name>Append Field (Text)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65451129-b7a2-4c2f-a12d-9086bd314f53" type="Normal" published="True"><name>Append Field (Number)</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9" type="Normal" published="True"><name>Rename Field</name><view><camerax>-100</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1d7b6202-d743-4485-9101-839f4651c406" type="Normal" published="True"><name>Delete Field</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df662579-558c-4cc9-88df-8c680b67b41d" type="Normal" published="True"><name>Delete Column</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a772458-463d-46cf-8451-6cf5b4aeae30" type="Normal" published="True"><name>Remove Null Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b8e3b975-d485-49a3-b962-864d13a96e05" type="Normal" published="True"><name>Set Column Names From First Row</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="87541f35-d834-4d99-8fd3-16ec994a9990" type="Normal" published="True"><name>Set Column Names From Expected Collection</name><view><camerax>0</camerax><cameray>-62</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d1eee74f-1582-4c3e-96c8-b94f1535d7e1" type="Normal" published="True"><name>Fill Blanks</name><view><camerax>-195</camerax><cameray>-105</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="eb03a051-75a8-4093-a383-6c6fecfbb736" type="Normal" published="True"><name>Remove dots from headers</name><view><camerax>0</camerax><cameray>-43</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fa6ed646-8ae1-479e-9845-b1dc9ac3b560" type="Normal" published="True"><name>Remove Empty Rows</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d77752eb-167c-4aa7-81c3-1403400e47dc" type="Normal" published="True"><name>Advanced Collection Contains value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70975c47-1bb7-447b-a644-42efc63348f9" type="Normal" published="True"><name>Add Serial Number</name><view><camerax>0</camerax><cameray>-21</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>Microsoft.VisualBasic</import><import>System.Collections</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public CommonDictionary as New System.Collections.Generic.Dictionary(Of String, String)

Private Iterator as Generic.IEnumerator(Of String)

Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function


private function GetBluePrismDAtaType(DotNetType AS Type) As String
   Select Case True
      Case DotNetType.Equals(GetType(Timespan))
         return "timespan"
      Case DotNetType Is GetType(DAteTime)
         return "datetime"
      Case DotNetType Is GetType(Decimal), _
				DotNetType Is GetType(Integer), _
					DotNetType Is GetType(Double), _
						DotNetType Is GetType(Single)
         return "number"
      Case DotNetType Is GetType(System.Drawing.Bitmap)
         return "image"
      Case DotNetType Is GetType(Byte())
         return "binary"
      Case DotNetType Is GetType(Boolean)
         return "flag"
      Case Else
         return "text"
   End Select
End Function


Private Function CloneDataRow(R As DataRow, ColumnCount As Integer) As Object()
	Dim RetVal(ColumnCount - 1) As Object
	For I As Integer = 0 to ColumnCount - 1
		RetVal(I) = R(I)
	Next

	Return RetVal
End Function]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1d87c6c0-f260-46fc-99c2-ffcbf6ee0497" name="Sort Collection" type="SubSheetInfo"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><narrative>Sorts a collection according to the specified field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="785a8eca-82a6-43fe-9f16-1803844d88ce" name="Start" type="Start"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to sort." stage="Collection In" /><input type="text" name="Sort Field" narrative="The field to sort by." stage="Sort Field" /><input type="flag" name="Ascending Order" narrative="True to sort in ascending order." stage="Ascending Order" /></inputs><onsuccess>fbac0e5c-5410-45f1-98d7-646797398b04</onsuccess></stage><stage stageid="0c95c136-f8cf-49a1-98c0-a4c1e2334eca" name="End" type="End"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Sorted Collection" narrative="The sorted collection." stage="Collection Out" /><output type="flag" name="Success" narrative="True if sorting was successful." stage="Success" /><output type="text" name="Message" narrative="An error message when sorting failed." stage="Message" /></outputs></stage><stage stageid="e8e991cc-351b-4484-9825-b5c1f0d894d1" name="Collection Out" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="-195" y="135" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="fbac0e5c-5410-45f1-98d7-646797398b04" name="Sort Collection" type="Code"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Sort Field" expr="[Sort Field]" /><input type="flag" name="Ascending" expr="[Ascending Order]" /></inputs><outputs><output type="collection" name="Sorted Collection" stage="Collection Out" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>0c95c136-f8cf-49a1-98c0-a4c1e2334eca</onsuccess><code><![CDATA[Try

 

            If Ascending Then

                        Collection.DefaultView.Sort = Sort_Field & " ASC"

            Else

                        Collection.DefaultView.Sort = Sort_Field & " DESC"

            End If

 

            Sorted_Collection = Collection.DefaultView.ToTable

 

            Success = True

            Message = ""

 

Catch e As Exception

            Success = False

            Message = e.Message

End Try]]></code></stage><stage stageid="6f6e54f2-77b8-4f24-ae2f-46a2143d9815" name="Ascending Order" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="2fb49db2-332e-4bdb-a52e-53546b2a25e8" name="Message" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8170a296-23ef-4f36-88ea-12b93bc41486" name="Success" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-195" y="180" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d46e7f41-9e7a-4a0a-b1be-d440d57e4020" name="Sort Field" type="Data"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="adfd612b-98f8-4902-8526-2bda2e03f814" name="Get Collection Fields" type="SubSheetInfo"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><narrative>Creates a collection with a Name and Datatype field which is then populated using the incoming collections field names and data types.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="73b6f098-584e-441e-8b2d-e231b971bdb2" name="Start" type="Start"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="A new collection will be created containing the collections field data." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to get the fields from." stage="Input Collection" /></inputs><onsuccess>39b91b36-f03d-4fa7-9bf2-47470e1d9703</onsuccess></stage><stage stageid="e2308e18-4f98-4f62-9ff6-a4c52222c3aa" name="End" type="End"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Fields" narrative="A collection containing the fields." stage="Fields" /></outputs></stage><stage stageid="39b91b36-f03d-4fa7-9bf2-47470e1d9703" name="Get Collection Fields" type="Code"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Fields" stage="Fields" /></outputs><onsuccess>e2308e18-4f98-4f62-9ff6-a4c52222c3aa</onsuccess><code><![CDATA[Fields = New DataTable()
Fields.Columns.Add("Field Name", GetType(String))
Fields.Columns.Add("Data Type", GetType(String))

For Each Column As DataColumn In Input_Collection.Columns
   Dim DataType As String = GetBluePrismDataType(Column.DataType)
   Fields.Rows.Add(New Object() {Column.ColumnName, DataType})
Next
]]></code></stage><stage stageid="a16b1987-a205-4bf6-8a33-ed2167c201ff" name="Fields" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="135" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="15198914-f283-4549-a823-c7b71d71d160" name="Utility Functions Test" type="SubSheetInfo"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6b30836d-2593-48c6-a021-b6b3e92ad88a" name="Start" type="Start"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f5830837-58db-473d-b7dc-4651a10f79c6</onsuccess></stage><stage stageid="5a5bf1e7-2072-4226-96ba-ab3d0a656589" name="End" type="End"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5830837-58db-473d-b7dc-4651a10f79c6" name="Get Collection Fields" type="SubSheet"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Defined Collection 1]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Collection Fields" /></outputs><onsuccess>5a5bf1e7-2072-4226-96ba-ab3d0a656589</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="d402363f-8a48-4418-b0d9-2bef5037bc67" name="Input Collection" type="Collection"><subsheetid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e8e6edcb-f2fe-4582-9037-5ddb4ca15572" name="Collection Fields" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><display x="105" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="980dd5f0-a047-4672-9a7a-18632a5826a0" name="Defined Collection 1" type="Collection"><subsheetid>53950e2c-2499-41fc-aed2-207a6c7431fd</subsheetid><loginhibit /><display x="-150" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="My Text Field" type="text" /><field name="My Number Field" type="number" /><field name="My DateTime Field" type="datetime" /><field name="My TimeSpan Field" type="timespan" /><field name="My Flag Field" type="flag" /><field name="My Image Field" type="image" /></collectioninfo><initialvalue><row><field name="My Text Field" type="text" value="Test Text" /><field name="My Number Field" type="number" value="5" /><field name="My DateTime Field" type="datetime" value="2009-07-23 01:46:26Z" /><field name="My TimeSpan Field" type="timespan" value="0.00:03:42" /><field name="My Flag Field" type="flag" value="True" /><field name="My Image Field" type="image" value="" /></row><row><field name="My Text Field" type="text" value="asdf" /><field name="My Number Field" type="number" value="10" /><field name="My DateTime Field" type="datetime" value="" /><field name="My TimeSpan Field" type="timespan" value="0.00:00:00" /><field name="My Flag Field" type="flag" value="False" /><field name="My Image Field" type="image" value="" /></row></initialvalue></stage><stage stageid="0e6f80ff-bfb9-4d47-8e5a-5299a5873467" name="Read Collection Field" type="SubSheetInfo"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><narrative>Reads a field with a given name and at the specified row from the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d660720-4bed-4ea8-8ad6-56fa0b19cfb4" name="Start" type="Start"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The row index within the collection to read from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection to read." stage="Collection" /><input type="text" name="Field Name" narrative="The field within the collection to read." stage="Field Name" /></inputs><onsuccess>c4bf6e49-1d07-4d60-8b44-fd35a2009654</onsuccess></stage><stage stageid="2a6d86a8-8937-4d4b-9da4-32813d06a0bf" name="End" type="End"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value Read" narrative="The value of the requested field as text." stage="Value Read" /></outputs></stage><stage stageid="d43ae257-4559-4fa8-9b0b-1f49bd80a301" name="Row Index" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd207bc4-8fe0-4f01-94e6-b289cdb60e38" name="Collection" type="Collection"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="745ce225-df49-4b02-b12c-e9e2068ca6aa" name="Field Name" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c4bf6e49-1d07-4d60-8b44-fd35a2009654" name="Read Field" type="Code"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /></inputs><outputs><output type="text" name="Value Read" stage="Value Read" /></outputs><onsuccess>2a6d86a8-8937-4d4b-9da4-32813d06a0bf</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Value_Read = CStr(Coll.Rows(RowIndex)(FieldName))]]></code></stage><stage stageid="43376e9f-73fa-4757-affa-330da5d1e6b1" name="Value Read" type="Data"><subsheetid>198ce3c6-ecbf-4203-a609-b15429defe0e</subsheetid><display x="105" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1c02ab-bf62-48df-b0de-79c4f254d5df" name="Set Collection Field" type="SubSheetInfo"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><narrative>Updates a single value in a collection by the given field name and row index.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4fe6d4f3-e989-4636-b373-9a32fc41d450" name="Start" type="Start"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Row Index" narrative="The index of the row in which to set the value. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Row Index" /><input type="collection" name="Collection" narrative="The collection in which to set the value." stage="Collection" /><input type="text" name="Field Name" narrative="The name of the field in which to set the value" stage="Field Name" /><input type="text" name="New Value" narrative="The value as text to set." stage="New Value" /></inputs><onsuccess>c7b9c9ed-85d9-4449-a150-5182797dc6f3</onsuccess></stage><stage stageid="2be33601-0c29-45c7-bc7e-1a5a8d1c19b2" name="End" type="End"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Updated Collection" narrative="The collection which now has the value set." stage="Updated Collection" /></outputs></stage><stage stageid="e2d67695-6463-4e93-b5cd-e3b9805bb0cf" name="Row Index" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="26046a1c-efef-4b6b-baa7-1880ae887576" name="Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="330" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9459f512-1cb5-4884-b551-4dcace90d77f" name="Field Name" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="255" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7b9c9ed-85d9-4449-a150-5182797dc6f3" name="Set Field" type="Code"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><loginhibit /><display x="120" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Coll" expr="[Collection]" /><input type="text" name="FieldName" expr="[Field Name]" /><input type="number" name="RowIndex" expr="[Row Index]" /><input type="text" name="New Value" expr="[New Value]" /></inputs><outputs><output type="collection" name="Updated Collection" stage="Updated Collection" /></outputs><onsuccess>2be33601-0c29-45c7-bc7e-1a5a8d1c19b2</onsuccess><code><![CDATA[
If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
End If

If Not Coll.Columns.Contains(FieldName) Then
   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
End If

Coll.Rows(RowIndex)(FieldName) = New_Value

Updated_Collection = Coll]]></code></stage><stage stageid="2c198fde-25d6-4009-a434-256fd08044b1" name="New Value" type="Data"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="390" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="532e300d-c8f5-4049-9b1e-490a9a85884c" name="Updated Collection" type="Collection"><subsheetid>05992810-1be4-4455-84e8-10579308ab87</subsheetid><display x="195" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6164801d-51c0-428e-976d-23828f70767d" name="Collection Contains Field" type="SubSheetInfo"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><narrative>Tests a collection to see whether it contains a specific field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1ed16edd-07a7-459b-abc4-c29fc16117eb" name="Start" type="Start"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="Whether the collection contains the field will have been determined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to see if the collection has." stage="Field" /></inputs><onsuccess>a76de6a5-ad0f-42b0-8cea-1cc827be1d45</onsuccess></stage><stage stageid="15854162-6197-477a-873b-73c9b453d0d3" name="End" type="End"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if the collection contains the field." stage="Success" /><output type="text" name="Error Message" narrative="Unused" stage="Error Message" /></outputs></stage><stage stageid="a76de6a5-ad0f-42b0-8cea-1cc827be1d45" name="Get Collection Fields" type="SubSheet"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>73ed00ea-d816-4343-8fe2-09924b85491f</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="09779833-6862-44cb-a355-04cb35350208" name="Input Collection" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1343f537-262d-4113-8953-31173a54fdf9" name="Field" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="285" y="-120" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73ed00ea-d816-4343-8fe2-09924b85491f" name="Loop Start Collection Fields" type="LoopStart"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11a28026-8164-4066-97bb-6f7cc6a3f6de</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="c2b21dab-e784-43a7-b09a-19e8bf2d5672" name="Loop End Collection Fields" type="LoopEnd"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess><groupid>53f9e518-2d0e-4a03-a2ac-5ffa45e0ab8a</groupid></stage><stage stageid="04208d31-4ee8-45a6-af69-2dd8140cc92a" name="Field Names" type="Collection"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="150" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="d010b7fb-5d33-4636-bea8-2195b0f22738" name="Success" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="135" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ac2d5cc5-ddee-4785-bf6a-410b0e478722" name="Error Message" type="Data"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><display x="240" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="11a28026-8164-4066-97bb-6f7cc6a3f6de" name="Match?" type="Decision"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="15" y="105" w="60" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>95c39a4f-2e55-45cb-a622-5cdec6b2d75b</ontrue><onfalse>c2b21dab-e784-43a7-b09a-19e8bf2d5672</onfalse></stage><stage stageid="6bd78de4-b21e-4741-af66-a88c72496d0f" name="anchor2" type="Anchor"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="240" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>15854162-6197-477a-873b-73c9b453d0d3</onsuccess></stage><stage stageid="95c39a4f-2e55-45cb-a622-5cdec6b2d75b" name="Set Success" type="Calculation"><subsheetid>7a9aa259-fe07-4035-8411-23737559c975</subsheetid><loginhibit /><display x="-120" y="105" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6bd78de4-b21e-4741-af66-a88c72496d0f</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="e6748536-1050-482b-86e6-cd57cce3bc6d" name="Copy Rows" type="SubSheetInfo"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><narrative>Copies the rows of the given collection into a new collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46e0886c-ea0a-4778-ad1e-9b7878e04a43" name="Append Rows to Collection" type="SubSheetInfo"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><narrative>Combines two collections into one, provided they share the same set of fields</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d3ec306e-f0c9-4bbc-a4da-a38b21969f5c" name="Reverse Collection" type="SubSheetInfo"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><narrative>Reverses the order of the rows in the collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="98b20289-3b73-4776-9912-d679291e392e" name="Reverse Collection" type="Code"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CollectionIn" expr="[Collection In]" /></inputs><outputs><output type="collection" name="CollectionOut" stage="Collection Out" /></outputs><onsuccess>661b2b7b-7862-4db1-b71c-747437b534da</onsuccess><code><![CDATA[If CollectionIn.Columns.Count = 0 Then Throw new ApplicationException("Zero columns in collection")

CollectionOut = new DataTable
For Each C As DataColumn In CollectionIn.Columns
	CollectionOut.Columns.Add(C.ColumnName, C.DataType)
Next

For I As integer = CollectionIn.Rows.Count - 1 To 0 Step -1
	Dim Objs(CollectionIn.Columns.Count - 1) As Object
	For J As integer = 0 to CollectionIn.Columns.Count - 1
		Objs(J) = collectionIn.Rows(I)(J)
	Next
	CollectionOut.Rows.Add(Objs)
Next]]></code></stage><stage stageid="48fd9b49-12a4-490d-8741-7cb0e6de6ac2" name="Collection In" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><display x="135" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="CIS" type="number" value="1" /><field name="Sort Code" type="text" value="123456" /><field name="Account Number" type="text" value="12345678" /><field name="Balance" type="number" value="1" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="3" /><field name="Sort Code" type="text" value="223456" /><field name="Account Number" type="text" value="22345678" /><field name="Balance" type="number" value="2" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="2" /><field name="Sort Code" type="text" value="323456" /><field name="Account Number" type="text" value="32345678" /><field name="Balance" type="number" value="3" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="5" /><field name="Sort Code" type="text" value="423456" /><field name="Account Number" type="text" value="42345678" /><field name="Balance" type="number" value="4" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="6" /><field name="Sort Code" type="text" value="523456" /><field name="Account Number" type="text" value="52345678" /><field name="Balance" type="number" value="5" /><field name="Cancelled Items" type="text" value="" /></row><row><field name="CIS" type="number" value="4" /><field name="Sort Code" type="text" value="623456" /><field name="Account Number" type="text" value="62345678" /><field name="Balance" type="number" value="6" /><field name="Cancelled Items" type="text" value="" /></row></initialvalue></stage><stage stageid="862d18c4-1bd0-4542-b3e2-8baf8a977af8" name="Start" type="Start"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have been sorted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to be reversed." stage="Collection In" /></inputs><onsuccess>98b20289-3b73-4776-9912-d679291e392e</onsuccess></stage><stage stageid="661b2b7b-7862-4db1-b71c-747437b534da" name="End" type="End"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Reversed Collection" narrative="The reversed collection." stage="Collection Out" /></outputs></stage><stage stageid="1965b145-70ec-4ee0-a936-3c32f57e587e" name="Collection Out" type="Collection"><subsheetid>ffab882f-007c-48a5-8f84-8f5f1bfd4d6a</subsheetid><loginhibit /><display x="150" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ca7dbfca-b97f-43d4-9601-6fa4d4eacc4b" name="Rename Collection Fields" type="SubSheetInfo"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><narrative>Renames the fields of a collection based on the fields of a given name mapping collection.</narrative><display x="-60" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be8b9084-5d06-424d-8086-89d565e39887" name="Start" type="Start"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The main collection, whose headers are to be modified" stage="Main Collection" /><input type="collection" name="New Headers" narrative="A collection of new headers. This must be a one-row collection matching the fields of the first. The first row will contain the new field names under the corresponding field names" stage="New Headers" /></inputs><onsuccess>2dfc16b3-737a-4ff7-9843-9e66c78b23d4</onsuccess></stage><stage stageid="7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77" name="End" type="End"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="5c64c0b3-6819-410a-be71-587501d42504" name="New Headers" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="375" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="Name" /><field name="Column 2" type="text" value="Age" /></row></initialvalue></stage><stage stageid="2dfc16b3-737a-4ff7-9843-9e66c78b23d4" name="Rename Headers" type="Code"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><loginhibit /><display x="105" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="New Headers" expr="[New Headers]" /></inputs><outputs><output type="collection" name="Amended Collection" stage="Amended Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>7eadbd5a-bba1-4128-ac2a-9bbe81d6ec77</onsuccess><code><![CDATA[If Main_Collection IsNot Nothing AndAlso New_Headers IsNot Nothing Then
	If Main_Collection.Columns.Count = New_Headers.Columns.count Then
		For Each Col1 As DataColumn In Main_Collection.Columns
			If Not New_Headers.Columns.Contains(Col1.ColumnName) Then
				Success = False
				Error_Message = "New Headers collection does not contain the field '" & Col1.ColumnName & "' found in the Main Collection"
				Exit Sub
			End If
		Next

		'We can now assume that fields match
		'and start copying rows
		For Each C As DataColumn In Main_Collection.Columns
			Dim NewName As String = Cstr(New_Headers.Rows(0)(C.ColumnName))
			If String.IsNullOrEmpty(NewName) Then
				Throw New ApplicationException("Blank field names are not acceptable")
			Else
				C.ColumnName = Trim(NewName)
			End If
		Next

		Main_Collection.AcceptChanges()
		Amended_Collection = Main_Collection
		Success = True
	Else
		Success = False
		Error_Message = "Collection field definitions do not match - the number of columns in each is different."
	End If
Else
	Success = False
	Error_Message = "Neither Collection may be null"
End If]]></code></stage><stage stageid="73981b01-1a93-4c6e-a35f-fa6c194f63ec" name="Success" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="240" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="73dcc958-035e-40f7-ab25-a8f22d06bf4f" name="Error Message" type="Data"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="180" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0af7f983-37fd-47c4-971a-5c0ca70b60c4" name="Main Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="210" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><initialvalue><row><field name="Column 1" type="text" value="asdf" /><field name="Column 2" type="text" value="34" /></row></initialvalue></stage><stage stageid="e86fffbd-3537-4ed9-9e32-20c8f55b6cb6" name="Amended Collection" type="Collection"><subsheetid>bcde64eb-f856-4440-a6c0-d83f40f0cf4b</subsheetid><display x="360" y="120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6b6aa002-ceed-4ea9-ab37-e3cc338e349c" name="Collection Contains Value" type="SubSheetInfo"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><narrative>Searches for the existence of a value or a regular expression in a specified column in a collection. This will return true and, if a regular expression was provided, the groups defined in that regex for the first matched value it finds in the collection.</narrative><display x="-255" y="-105" w="270" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="29ece439-17ef-4972-aa97-b373f2d68616" name="Start" type="Start"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><preconditions><condition narrative="A collection exists with the specified column name which may or may not contain a particular value" /><condition narrative="The collection being searched has no date or time columns (A code stage restriction)" /><condition narrative="" /><condition narrative="" /></preconditions><postconditions><condition narrative="No change" /></postconditions><narrative>Note that if neither 'Exact Value' nor 'Regex' are supplied, this will always return FALSE / ie. not found. If a match is found, groups will return all of the groups specified in the regular expression when applied to the value found.</narrative><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="Required : The collection to search" stage="Collection" /><input type="text" name="Column Name" narrative="Required : The name of the column to search" stage="Column Name" /><input type="text" name="Exact Value" narrative="Optional : The exact value to search for - this is case insensitive" stage="Exact Value" /><input type="text" name="Regex" narrative="Optional : The regular expression to search for - this is case sensitive unless specified otherwise in the regular expression using &quot;(?i)&quot;" stage="Regex" /></inputs><onsuccess>aa1a4d89-5218-4bbe-a743-0d3484968cb6</onsuccess></stage><stage stageid="ebc6a036-6449-4acd-ac3c-bf1c0cdb652a" name="End" type="End"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Contains Search Term" narrative="Flag indicating if the collection found the given search term or not" stage="Contains Search Term" /><output type="collection" name="Groups" narrative="The groups defined in the regular expression when it is applied to the found term" stage="Groups" /></outputs></stage><stage stageid="63287049-53dd-4e10-b6fa-809c255a8f63" name="Collection" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="14def48d-230f-4041-99c7-0af7c0dd5e0f" name="Column Name" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="965f0a82-f3be-4fcf-b43d-33b5a31b45d1" name="Exact Value" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f2df8ab8-a7dc-408c-962c-efe2dd44d403" name="Regex" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-330" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c87975d-a017-4b35-923d-19816f41b5b3" name="Contains Search Term" type="Data"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f7c0f14b-16b5-4e13-b3e9-71fd7bf59990" name="Groups" type="Collection"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><display x="-180" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Group" type="text" /></collectioninfo></stage><stage stageid="ca62b1b4-f73d-422a-b21a-ac4cfcc71041" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-330" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="86ee4f07-c603-44e1-b307-e53cd7d9eff4" name="Note2" type="Note"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a408f364-ecb4-4548-9556-57f4a26f3ada" name="Both Search Strings Empty?" type="Decision"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Exact Value]) = 0 AND Len ([Regex]) = 0" /><ontrue>612f50dc-0fcc-4765-800b-e65e5bf3861f</ontrue><onfalse>7cdc88ed-891c-4f88-a51d-2da37bd56d4d</onfalse></stage><stage stageid="aa1a4d89-5218-4bbe-a743-0d3484968cb6" name="Trim Search Strings" type="MultipleCalculation"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a408f364-ecb4-4548-9556-57f4a26f3ada</onsuccess><steps><calculation expression="Trim([Exact Value])" stage="Exact Value" /><calculation expression="Trim([Regex])" stage="Regex" /></steps></stage><stage stageid="612f50dc-0fcc-4765-800b-e65e5bf3861f" name="anchor3" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7e121ceb-3f72-4655-8e21-38d3e5be7cec</onsuccess></stage><stage stageid="7e121ceb-3f72-4655-8e21-38d3e5be7cec" name="anchor4" type="Anchor"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="75" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess></stage><stage stageid="7cdc88ed-891c-4f88-a51d-2da37bd56d4d" name="Search Collection" type="Code"><subsheetid>5b8e4ed2-8ba9-4b0f-966e-a0e392f44e7a</subsheetid><loginhibit /><display x="-30" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="coll" expr="[Collection]" /><input type="text" name="colname" expr="[Column Name]" /><input type="text" name="exactVal" expr="[Exact Value]" /><input type="text" name="regexVal" expr="[Regex]" /></inputs><outputs><output type="flag" name="found" stage="Contains Search Term" /><output type="collection" name="groups" stage="Groups" /></outputs><onsuccess>ebc6a036-6449-4acd-ac3c-bf1c0cdb652a</onsuccess><code><![CDATA[If Not Coll.Columns.Contains(colname) Then
  Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", colname))
End If

Dim rx as Regex
If Not String.IsNullOrEmpty(exactVal) Then
  rx = New Regex("^" & Regex.Escape(exactVal) & "$", RegexOptions.IgnoreCase)
Else
  ' If ignore case is required it can be inlined using "(?i)..rest of search"
  rx = New Regex(regexVal)
End If

' Initialise output params
found = False
groups = New DataTable()
groups.Columns.Add("Group", GetType(String))

For Each row as DataRow in coll.Rows

  Dim val as String = CStr(row(colname))
  Dim m as Match = rx.Match(val)
  If m.Success Then
    found = True
    For i as Integer = 1 to m.Groups.Count-1
      groups.Rows.Add(New Object() {m.Groups(i).Value})
    Next
    Return
  End If

Next]]></code></stage><stage stageid="365e481a-8567-48cf-babf-40039e151df7" name="Delete Column" type="SubSheetInfo"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4421e0d9-6181-4872-aa85-8ad310427d30" name="Start" type="Start"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want to delete a column from" stage="Input Collection" /><input type="text" name="Column Name" narrative="The column number to delete" stage="Column Name" /></inputs><onsuccess>000581d7-9978-4295-826f-a20472874878</onsuccess></stage><stage stageid="d0f8de6d-03ac-4a92-8658-0998d1849bdf" name="End" type="End"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="A collection with a column removed" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Message" /></outputs></stage><stage stageid="000581d7-9978-4295-826f-a20472874878" name="Remove Column" type="Code"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="BP Collection In" expr="[Input Collection]" /><input type="text" name="Column Name" expr="[Column Name]" /></inputs><outputs><output type="collection" name="BP Collection Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d0f8de6d-03ac-4a92-8658-0998d1849bdf</onsuccess><code><![CDATA[BP_Collection_Out = BP_Collection_In
BP_Collection_Out.Columns.Remove(Column_Name)
]]></code></stage><stage stageid="140b41b2-3138-4b5d-b5f3-4bddff6db48f" name="Input Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1ae60809-2da8-468d-8d88-e605b185530b" name="Output Collection" type="Collection"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="787dae64-5d33-4783-84ff-db2365c12e31" name="Message" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3216578-e35c-4bf0-84db-80b9d3fe07e3" name="Success" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="714ec185-fd95-4265-88e6-54eb452242b3" name="Column Name" type="Data"><subsheetid>df662579-558c-4cc9-88df-8c680b67b41d</subsheetid><display x="210" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="25782854-2b5d-4f7d-a1f4-671555060370" name="Remove Null Rows" type="SubSheetInfo"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><narrative>Deletes rows in which a given key field is blank.</narrative><display x="-180" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7b68a8ca-8280-464d-acac-807f219d226e" name="Set Column Names From First Row" type="SubSheetInfo"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><narrative>If you have a collection with the column names all in the first row, this will set the column names to the values in that row and then detete the first row.
Handy for collections read using Get Table</narrative><display x="-195" y="-105" w="270" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="966db302-1751-4a8a-bbbf-cbfc8ff28563" name="Start" type="Start"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>5732b352-4376-4727-b423-13df1e00f900</onsuccess></stage><stage stageid="80cc4a73-fa55-4504-bf38-941a29fd4499" name="End" type="End"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The amended collection" stage="Output Collection" /></outputs></stage><stage stageid="5732b352-4376-4727-b423-13df1e00f900" name="Set Column Name" type="Code"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>1129bf72-f0d4-4c3a-8823-68de39f5138b</onsuccess><code><![CDATA[
'Input_Collection.Columns(3).ColumnName="NewColumnName"
'Output_Collection = Input_Collection

Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   iThisColumn +=1
   Column.ColumnName=CStr(Input_Collection.Rows.Item(0).Item(iThisColumn))
Next
Output_Collection = Input_Collection

'If RowIndex < 0 OrElse Coll.Rows.Count <= RowIndex Then
'	Throw New ApplicationException("The supplied row index falls outside of the valid range.")
'End If

'If Not Coll.Columns.Contains(FieldName) Then
'   Throw New ApplicationException("The collection does not contain a field with the name '" & FieldName & "'")
'End If

'Value_Read = CStr(Coll.Rows(RowIndex)(FieldName))]]></code></stage><stage stageid="83beff52-ce08-4f4c-acdd-39a43fce3528" name="Input Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="0735b980-7ff2-49c5-a67b-41a6444db630" name="Output Collection" type="Collection"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><display x="120" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="299628df-bec6-4f77-8b4a-c6bc38824e1c" name="Remove First Row" type="Action"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><narrative>First row was actually the header row, can now be deleted</narrative><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Output Collection&quot;" /></inputs><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="1129bf72-f0d4-4c3a-8823-68de39f5138b" name="Output Collection" type="LoopStart"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>299628df-bec6-4f77-8b4a-c6bc38824e1c</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid><looptype>ForEach</looptype><loopdata>Output Collection</loopdata></stage><stage stageid="35a49bfb-e611-4681-b332-cadbcfa74fc3" name="Output Collection" type="LoopEnd"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d0febcf9-b538-4995-85c1-02dddff5fb51</onsuccess><groupid>265b5de8-c5fa-44dc-bcd0-64db001c133a</groupid></stage><stage stageid="d0febcf9-b538-4995-85c1-02dddff5fb51" name="anchor1" type="Anchor"><subsheetid>b8e3b975-d485-49a3-b962-864d13a96e05</subsheetid><loginhibit /><display x="-60" y="120" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>80cc4a73-fa55-4504-bf38-941a29fd4499</onsuccess></stage><stage stageid="7b3c5ed5-f585-4240-a2ab-8cb996684c24" name="Set Column Names From Expected Collection" type="SubSheetInfo"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><narrative>Renames the fields of a collection to those of a collection containing expected field names.</narrative><display x="-180" y="-210" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf" name="End" type="End"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="130f8b77-3ec8-46c9-8826-e401399e4c92" name="Rename Column" type="Code"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="collection" name="Expected Fields/Columns" expr="[Expected Fields/Columns]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ae4a6ef5-a22c-4292-8471-eb02cdd4b1cf</onsuccess><code><![CDATA[Dim iTotalColumns as integer = Expected_Fields_Columns.Rows.Count-1
Dim iThisColumn as integer = -1
For Each Column As DataColumn In Input_Collection.Columns
   If iThisColumn>=iTotalColumns Then Exit For
   iThisColumn +=1 
   Column.ColumnName=CStr(Expected_Fields_Columns.Rows.Item(iThisColumn).Item(0))
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="9e32e67d-d7f9-46b2-8df2-6fca9a395352" name="Input Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c66d8d30-cef9-4cab-8ee8-2acb512a3129" name="Start" type="Start"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection fields will have been renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /><input type="collection" name="Expected Fields/Columns" narrative="The expected column names" stage="Expected Fields/Columns" /></inputs><onsuccess>130f8b77-3ec8-46c9-8826-e401399e4c92</onsuccess></stage><stage stageid="c865f7af-a9f9-4fb9-88da-e04e43b0bac8" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c29dd25d-3cf7-4435-ba56-6f735329a71a" name="Output Collection" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="235be3b3-8a37-4bac-b740-50cfcd6da05f" name="Note1" type="Note"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="688d2271-65ed-4be7-84b1-cbfe018c6777" name="Expected Fields/Columns" type="Collection"><subsheetid>87541f35-d834-4d99-8fd3-16ec994a9990</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="df1f7e11-20da-4f67-a68c-bc7c03be861a" name="Fill Blanks" type="SubSheetInfo"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><narrative>Fills a collection that has empty values with empty text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7908b17c-920d-4114-9fa0-cd4f161c5185" name="Start" type="Start"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have its empty values filled with empty text." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" narrative="A collection with blank text fields" stage="Blanks" /></inputs><onsuccess>06913dc6-a17f-4d64-965d-7cb7642f486f</onsuccess></stage><stage stageid="544cc959-75ad-4b6c-a150-ce414ae50424" name="End" type="End"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="No Blanks" narrative="The collection with empty string instead of blanks" stage="No Blanks" /></outputs></stage><stage stageid="34873761-d9a4-4a71-9c63-993645ca4e22" name="Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="0" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="5cfec416-7db4-4734-9a1f-76d62db9bbd9" name="No Blanks" type="Collection"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><display x="-195" y="105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="06913dc6-a17f-4d64-965d-7cb7642f486f" name="Fill Blanks" type="Code"><subsheetid>d1eee74f-1582-4c3e-96c8-b94f1535d7e1</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Blanks" expr="[Blanks]" /></inputs><outputs><output type="collection" name="No Blanks" stage="No Blanks" /></outputs><onsuccess>544cc959-75ad-4b6c-a150-ce414ae50424</onsuccess><code><![CDATA[try
  for each dr as datarow in blanks.rows
    for each c as datacolumn in blanks.columns
      if isdbnull(dr(c.columnname)) then
        dr(c.columnname) = ""
      end if
    next
  next
  no_blanks = blanks
catch e as exception

end try]]></code></stage><stage stageid="c491f60e-4aa7-4abb-a203-5a78c0b64469" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="c8499a69-da78-40b1-9e30-3b2b66b78a63" name="Start" type="Start"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The rows with blank keys will have been deleted." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection from which you want null rows to be removed" stage="Input Collection" /><input type="text" name="Key Field" narrative="The key field to check, if blank the row will be deleted" stage="Key Field" /></inputs><onsuccess>85077240-20a2-46ad-81ba-a1eca720ae81</onsuccess></stage><stage stageid="e14452d8-589d-478a-ab1b-309897b8560b" name="End" type="End"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The given input collection with all the null rows removed" stage="Output Collection" /></outputs></stage><stage stageid="13091eb3-458e-46d2-a20e-59eb5eb5d748" name="Input Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ab2855e-0511-49ff-ac26-c731dbf8c432" name="Output Collection" type="Collection"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cab44f8f-583a-4529-911c-392030a2dee3" name="Message" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1203642-ce03-48bd-ba00-aad2a0dcde1e" name="Success" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="-165" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1478eda2-b43b-4609-aef4-ff3ad3c2a708" name="Key Field" type="Data"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="225" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85077240-20a2-46ad-81ba-a1eca720ae81" name="Remove Null rows from collection" type="Code"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><narrative>can't loop through the core customer details table collection as some of the rows are NULL.</narrative><display x="15" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="CCD Table In" expr="[Input Collection]" /><input type="text" name="Key Field" expr="[Key Field]" /></inputs><outputs><output type="collection" name="CCD Table Out" stage="Output Collection" /><output type="text" name="Error Message" stage="Message" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>2e050fc0-fed0-49b4-bafc-a33a0aee5ad9</onsuccess><code><![CDATA[Try
	For Each row As DataRow in CCD_Table_In.Select( _
	 String.Format("[{0}] is null or trim([{0}]) = ''", Key_Field))
		row.Delete()
	Next

	CCD_Table_Out = CCD_Table_In
	Success = True

Catch ex as Exception
	Error_Message = ex.ToString()
	Success = False

End Try

]]></code></stage><stage stageid="9e92c3e9-666f-47a3-b5a4-712191368127" name="Remove dots from headers" type="SubSheetInfo"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><narrative>Collections with dots in the field names cannot be properly indexed so this functinon renames the headers so that the fields contain no dots.</narrative><display x="-165" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e9143b5-5aa7-475d-a944-466bfbc2c71d" name="Rename Column1" type="Code"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /></outputs><onsuccess>ce865562-7be4-4739-95c5-3b5e05d7901f</onsuccess><code><![CDATA[For Each Column As DataColumn In Input_Collection.Columns
   Column.ColumnName=Microsoft.Visualbasic.Replace(Column.ColumnName,".","")
Next
Output_Collection = Input_Collection]]></code></stage><stage stageid="ce865562-7be4-4739-95c5-3b5e05d7901f" name="End" type="End"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><display x="0" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection with the renamed column" stage="Output Collection" /></outputs></stage><stage stageid="c2200054-2838-45a0-a8b2-c1da235391b0" name="Input Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c865c672-39f2-4b5d-b96c-f44c5f3b9a89" name="Start" type="Start"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have fields with no dots." /></postconditions><display x="0" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection with the column to rename" stage="Input Collection" /></inputs><onsuccess>9e9143b5-5aa7-475d-a944-466bfbc2c71d</onsuccess></stage><stage stageid="02864eb4-432c-4b37-9199-c28dd7fe654b" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99cb4759-fd39-4084-a262-e2ac589fdc28" name="Output Collection" type="Collection"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c1388967-ebc6-462c-bad7-66359084fab0" name="Note1" type="Note"><subsheetid>eb03a051-75a8-4093-a383-6c6fecfbb736</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4e265aee-0021-418d-8655-61d995e170a0" name="Append Field (Text)" type="SubSheetInfo"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><narrative>Appends a field to a collection and allows you to provide a default value as text fot the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c8bd0a3b-3343-43fd-bef7-1414593f62b6" name="Field Name" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ddaf3d76-462d-41ac-8cdd-92050ea01b79" name="Append Text" type="Code"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="text" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>072e40e3-3858-4528-aa1b-7b4cfb7861f9</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.String"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="7c2f4495-6f2c-4dc5-845c-58f3036c5ec9" name="Collection Out" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8493982d-24c5-4d6b-96c0-060ed614f8c3" name="Collection In" type="Collection"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6542d3cd-7831-4ebb-93dc-09b64ff85bbf" name="Value" type="Data"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6c1475ad-07b2-4993-abb1-4060046ce8eb" name="Start" type="Start"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have a new field appended to it." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>ddaf3d76-462d-41ac-8cdd-92050ea01b79</onsuccess></stage><stage stageid="072e40e3-3858-4528-aa1b-7b4cfb7861f9" name="End" type="End"><subsheetid>a474299b-5c1c-4873-a3af-4dd0d3bd03ff</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="4c0d7072-e36c-465b-89f0-fbe7e21e95fb" name="Append Field (Number)" type="SubSheetInfo"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><narrative>Appends a field to a collection and allows you to provide a default number value for the field.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="433e0a45-d9b6-48e5-b62f-67815cc1461a" name="Start" type="Start"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have the new field appended to it." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to append a field to." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the new field." stage="Field Name" /><input type="text" name="Value" narrative="The value to be put in the new field." stage="Value" /></inputs><onsuccess>560df05e-a20c-4c85-addb-accc35d19f0e</onsuccess></stage><stage stageid="5dc78a95-36a2-4324-a366-ccd5f941ea7b" name="End" type="End"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The collection with field appended." stage="Collection Out" /></outputs></stage><stage stageid="560df05e-a20c-4c85-addb-accc35d19f0e" name="Append Number" type="Code"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /><input type="text" name="Column" expr="[Field Name]" /><input type="number" name="Value" expr="[Value]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>5dc78a95-36a2-4324-a366-ccd5f941ea7b</onsuccess><code><![CDATA[
If Not Collection.Columns.Contains(Column) Then
	Collection.Columns.Add(Column, Type.GetType("System.Decimal"))
End If

For Each dr As System.Data.DataRow In Collection.Rows
	dr(Column) = Value
Next

New_Collection = Collection
]]></code></stage><stage stageid="a8f65fc6-9524-4ba5-ab7c-4bf16b825bb8" name="Collection Out" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1265e994-416c-4b2d-ab0c-c81e1288f072" name="Field Name" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ac81567-c224-4270-a0ef-e57562e06fb5" name="Collection In" type="Collection"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f9a670a2-2e34-4e79-a184-369ddc70c75e" name="Value" type="Data"><subsheetid>65451129-b7a2-4c2f-a12d-9086bd314f53</subsheetid><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5979fe4e-6f4d-4683-8d7f-bb932ec88a2e" name="Rename Field" type="SubSheetInfo"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><narrative>Renames a field within a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5030c234-e021-4ff1-b9ea-751e186a63a8" name="Start" type="Start"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will be renamed." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to rename a field in." stage="Collection In" /><input type="text" name="Field Name" narrative="The name of the existing field to rename." stage="Field Name" /><input type="text" name="New Name" narrative="The new name for the field." stage="New Name" /></inputs><onsuccess>278ed0f4-d7d0-4ca7-908e-55569a965852</onsuccess></stage><stage stageid="404be5b2-7ad7-429a-9e8b-b6a561112f47" name="End" type="End"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with field renamed." stage="Collection Out" /></outputs></stage><stage stageid="67c49160-5821-48b0-82fd-371ecbaea386" name="Collection In" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f0ef8f48-7f60-47fc-89b2-3aa04ef39792" name="Field Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c1db25c-d091-4900-8b9e-529d60df0f8f" name="Collection Out" type="Collection"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="278ed0f4-d7d0-4ca7-908e-55569a965852" name="Rename" type="Code"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /><input type="text" name="New Name" expr="[New Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>404be5b2-7ad7-429a-9e8b-b6a561112f47</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		c.ColumnName = New_Name
		Exit For
	End If
Next
]]></code></stage><stage stageid="b2e64d6d-9ac8-43b9-aeed-e58e65d8067c" name="New Name" type="Data"><subsheetid>ccc0c027-8c9f-41f6-9ba6-af44eac6a9a9</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="c935b0c8-a0cb-4251-9e63-af4ed27f9a91" name="Delete Field" type="SubSheetInfo"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><narrative>Deletes a field from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a7662efd-3d51-4d9a-adbc-1a2e626613e5" name="Start" type="Start"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections field will have been removed." /></postconditions><display x="30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to delete the field from." stage="Collection In" /><input type="text" name="Field Name" narrative="The field to delete." stage="Field Name" /></inputs><onsuccess>b52dad46-ca6d-4860-82c7-f1d9320f66bc</onsuccess></stage><stage stageid="4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b" name="End" type="End"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the field removed." stage="Collection Out" /></outputs></stage><stage stageid="4eb487df-f7e9-4146-a35f-e5e7c6461d01" name="Collection In" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="719f7d25-ec64-43bd-9466-c822213aa069" name="Field Name" type="Data"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b32e1ce-deb0-4107-ac7c-c4af81ceedaf" name="Collection Out" type="Collection"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><display x="-180" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="b52dad46-ca6d-4860-82c7-f1d9320f66bc" name="Delete Column1" type="Code"><subsheetid>1d7b6202-d743-4485-9101-839f4651c406</subsheetid><loginhibit /><display x="30" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Field_Name" expr="[Field Name]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>4e6ae3ea-d232-4ff3-b93b-ab90f6e93c1b</onsuccess><code><![CDATA[
Collection_Out = Collection_In.Copy

For Each c As DataColumn in Collection_Out.Columns
	If c.ColumnName = Field_Name Then
		Collection_Out.Columns.Remove(c)
		Exit For
	End If
Next
]]></code></stage><stage stageid="63e447be-76ae-4566-a7e9-ead3373b7fe6" name="Merge Collection" type="SubSheetInfo"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><narrative>Merges two collections with different structures (and where the field names across both collections are unique) and forms a single collection with a combination  of the two structures and associated data values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d427bb44-b573-475a-aa7d-176f2803e033" name="Start" type="Start"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><preconditions><condition narrative="The merge will fail if both collections contain any field names which are identical." /></preconditions><postconditions><condition narrative="The collections will have been merged." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" narrative="The first collection to be merged." stage="Collection 1" /><input type="collection" name="Collection 2" narrative="The second collection to be merged." stage="Collection 2" /></inputs><onsuccess>6459a0e3-6f86-4efa-8b87-a9eb0b9a8460</onsuccess></stage><stage stageid="570e4b26-4aa8-48ac-b435-1ca8fe10f2cd" name="End" type="End"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 3" narrative="The resulting merged collection." stage="Collection 3" /></outputs></stage><stage stageid="6459a0e3-6f86-4efa-8b87-a9eb0b9a8460" name="Merge" type="Code"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2" expr="[Collection 2]" /></inputs><outputs><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>570e4b26-4aa8-48ac-b435-1ca8fe10f2cd</onsuccess><code><![CDATA[
For Each c As DataColumn in c2.Columns
	c1.Columns.Add(c.ColumnName, c.DataType)
Next

For r As Integer = 0 To c1.Rows.Count - 1
	If r < c2.Rows.Count Then
		For Each c As DataColumn in c2.Columns
			c1.Rows(r)(c.ColumnName) = c2.Rows(r)(c.ColumnName)
		Next
	Else
		Exit For
	End If
Next

c3 = c1]]></code></stage><stage stageid="c325b6be-e358-4eab-8e9b-0b74a98490f3" name="Collection 1" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="61e7bd9a-18d4-475d-b131-95dc839d1518" name="Collection 2" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3ff4ed5f-abbc-4668-9ebb-816c8f0884db" name="Collection 3" type="Collection"><subsheetid>cd8fefb9-4622-4ea7-8287-e64b86d7e513</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="741d8892-31ef-497b-a1ab-dca99ebd1f06" name="Split Collection" type="SubSheetInfo"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><narrative>Splits a collection into two colllections containing the fields as defined by templates.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61860248-5b8d-41de-8e28-092ca8b989e5" name="Split" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c1" expr="[Collection 1]" /><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c2 = New DataTable()
For Each c As DataColumn in c2t.Columns
	c2.Columns.Add(c.ColumnName, c.DataType)
Next

c3 = New DataTable()
For Each c As DataColumn in c3t.Columns
	c3.Columns.Add(c.ColumnName, c.DataType)
Next

Dim r2, r3 As DataRow
Dim bAdd2, bAdd3 As Boolean

For Each r1 As DataRow In c1.Rows

	r2 = c2.NewRow()
	r3 = c3.NewRow()
	bAdd2 = False
	bAdd3 = False

	For Each c As DataColumn In c1.Columns

		If c2.Columns.Contains(c.ColumnName) Then
			r2(c.ColumnName) = r1(c.ColumnName)
			bAdd2 = True
		ElseIf c3.Columns.Contains(c.ColumnName) Then
			r3(c.ColumnName) = r1(c.ColumnName)
			bAdd3 = True
		Else
			'Ignore this column		
		End If

	Next

	If bAdd2 Then
		c2.Rows.Add(r2)
	End If
	If bAdd3 Then
		c3.Rows.Add(r3)
	End If

Next]]></code></stage><stage stageid="d00a67c4-977f-49ab-ac41-225ebdb3ad8d" name="Collection 3 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e2ce96fd-e590-46fa-a95d-effcca153782" name="Start" type="Start"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><preconditions><condition narrative="None." /><condition narrative="" /></preconditions><postconditions><condition narrative="Collections will be split." /><condition narrative="" /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection 1" stage="Collection 1" /><input type="collection" name="Collection 2 Template" stage="Collection 2 Template" /><input type="collection" name="Collection 3 Template" stage="Collection 3 Template" /></inputs><onsuccess>2c7d51f8-a340-4629-9d93-0526f6ed07cc</onsuccess></stage><stage stageid="e08e6b18-850a-427c-9eba-5065c9c619dd" name="End" type="End"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection 2" stage="Collection 2" /><output type="collection" name="Collection 3" stage="Collection 3" /></outputs></stage><stage stageid="67449419-0f6c-463b-bf1a-2d94b16c5be3" name="Collection 2" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="285" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="78bbd50d-b3cd-4066-80e3-d4cb236662b8" name="Collection 3" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="345" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2c7d51f8-a340-4629-9d93-0526f6ed07cc" name="Count Template 2 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 2 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>2dbb3bb5-1526-4f1c-818d-aa4eb0acc677</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="5a6c9426-a48f-4861-b7fe-b020ea824cc5" name="Row Count" type="Data"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="2dbb3bb5-1526-4f1c-818d-aa4eb0acc677" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>17c0ae90-3784-40c5-816f-a0dfb4c97eab</ontrue><onfalse>6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5</onfalse></stage><stage stageid="17c0ae90-3784-40c5-816f-a0dfb4c97eab" name="Count Template 3 Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 3 Template&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>525e699d-df7d-4c61-b5fd-0ae540b94a94</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="525e699d-df7d-4c61-b5fd-0ae540b94a94" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>01cbd6ed-952e-4ae8-8420-496581701364</ontrue><onfalse>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onfalse></stage><stage stageid="74cfea1c-af9f-4c0b-86aa-ac76097c3940" name="Collection 1" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2af4b9c5-d3f3-4ecc-9a3a-4b52f1cee481" name="Collection 2 Template" type="Collection"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="-195" y="45" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c7cd5499-3bd2-49c8-a5e0-2c190b350abe" name="System Exception" type="Exception"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><display x="105" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Template collection cannot be empty&quot;" /></stage><stage stageid="6a04f2d4-b2f3-4afd-b837-ddaf0d40a9d5" name="anchor1" type="Anchor"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c7cd5499-3bd2-49c8-a5e0-2c190b350abe</onsuccess></stage><stage stageid="01cbd6ed-952e-4ae8-8420-496581701364" name="Count Data Rows" type="Action"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Collection 1&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Row Count" /></outputs><onsuccess>69ae2e43-547a-4cef-abc9-a57284282b82</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="69ae2e43-547a-4cef-abc9-a57284282b82" name="Rows?" type="Decision"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="15" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Row Count]&gt;0" /><ontrue>61860248-5b8d-41de-8e28-092ca8b989e5</ontrue><onfalse>4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef</onfalse></stage><stage stageid="4cffbd60-ffb8-4da0-aa50-3639bc6ff8ef" name="Assign Outputs" type="Code"><subsheetid>76943739-36b9-46bc-8f95-e1b6342bc8a6</subsheetid><loginhibit /><display x="105" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="c2t" expr="[Collection 2 Template]" /><input type="collection" name="c3t" expr="[Collection 3 Template]" /></inputs><outputs><output type="collection" name="c2" stage="Collection 2" /><output type="collection" name="c3" stage="Collection 3" /></outputs><onsuccess>e08e6b18-850a-427c-9eba-5065c9c619dd</onsuccess><code><![CDATA[
c3 = c3t

c2 = c2t
]]></code></stage><stage stageid="8140b508-3840-4291-8122-7d9633f50e96" name="Collection In" type="Collection"><subsheetid>d8e5be7a-93aa-4322-99bf-00edea37bbc2</subsheetid><display x="-180" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="cc074354-584f-4eba-ab53-2f96462259a0" name="Filter Collection" type="SubSheetInfo"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><narrative>Filters a collection using the given query.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4ee491db-1747-4f76-a969-78ebc05942c3" name="Start" type="Start"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be filtered." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to filter." stage="Collection In" /><input type="text" name="Filter" narrative="The filter query." stage="Filter" /></inputs><onsuccess>0c063487-d7ee-42db-8059-92687b655e7d</onsuccess></stage><stage stageid="bda88544-a5a8-4bf6-9c9b-c645f76b7fed" name="End" type="End"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The filtered collection." stage="Collection Out" /></outputs></stage><stage stageid="0c063487-d7ee-42db-8059-92687b655e7d" name="Filter Collection1" type="Code"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /><input type="text" name="Select Condition" expr="[Filter]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>bda88544-a5a8-4bf6-9c9b-c645f76b7fed</onsuccess><code><![CDATA[Dim NewRow As DataRow

Collection_Out = Collection_In.Clone

For Each parentRow As DataRow In Collection_In.Select(Select_Condition)
	NewRow = Collection_Out.NewRow
	For Each c As DataColumn In NewRow.Table.Columns
		NewRow(c.ColumnName) = parentRow(c.ColumnName)
	Next
	Collection_Out.Rows.Add(NewRow)
Next

NewRow = Nothing
Collection_In = Nothing]]></code></stage><stage stageid="ab9df972-dcc0-4384-ae57-8f0207f70978" name="Collection Out" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ee8d1e79-1554-41d5-9dec-d9cb9153d483" name="Collection In" type="Collection"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7b601fa9-308d-4e40-8366-62ebe909f792" name="Filter" type="Data"><subsheetid>a9f3108d-ca87-4551-b567-9c64ef05cf0c</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6f60641e-4454-45d1-b678-62b0a6c6b784" name="Start" type="Start"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Start Row" narrative="The row index to start copying from. The index is from 0 to N-1 (where N is the total number of rows in the collection)." stage="Start Row" /><input type="number" name="Number of Rows to Copy" narrative="The number of rows to copy." stage="Number of Rows to Copy" /><input type="collection" name="Source Collection" narrative="The collection to copy." stage="Source Collection" /></inputs><onsuccess>25337bba-f357-42a8-bc61-876a9582d5d0</onsuccess></stage><stage stageid="002b5c58-ec2b-4e02-91e5-68fbeffe2b84" name="End" type="End"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The copied collection." stage="Output Collection" /></outputs></stage><stage stageid="1cd8f0a3-e382-4ad5-8948-7f0dc5cd17cd" name="Start Row" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="abc78fcd-9654-47c6-9aa9-5cd8f505bd60" name="Number of Rows to Copy" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="135" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="c3aa2821-e68a-4985-9fd7-e0330638a935" name="Source Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="255" y="-120" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="25337bba-f357-42a8-bc61-876a9582d5d0" name="Copy Rows1" type="Code"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Source Collection" expr="[Source Collection]" /><input type="number" name="Start Row" expr="[Start Row]" /><input type="number" name="Number of Rows to Copy" expr="[Number of Rows to Copy]" /></inputs><outputs><output type="collection" name="Output Collection" stage="Output Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>ff821741-f1ec-47ff-bd26-00c56a44a6c7</onsuccess><code><![CDATA[Try
	If Start_Row < 0 Then
		Throw New ApplicationException("Start Row must be at least zero.")
	End If
	Dim LastIndex As Integer = Source_Collection.Rows.Count -1
	If Start_Row > LastIndex Then
		Throw New ApplicationException("Start Row must not point beyond the end of the collection.")
	End If
	If Start_Row + Number_of_Rows_to_Copy -1 > LastIndex Then
		Throw New ApplicationException("The number of requested rows extends beyond the end of the collection (based on a start row of " & Start_Row.ToString() & ").")
	End If

	'Set up the new collection with columns
	Output_Collection = New DataTable()
	For J As Integer = 0 To Source_Collection.Columns.Count - 1
		Output_Collection.Columns.Add(Source_Collection.Columns(J).ColumnName, Source_Collection.Columns(J).DataType)
	Next

	'copy the requested rows one by one
	For I As integer = Start_Row To Start_Row + Number_of_Rows_to_Copy - 1
		Dim Values(Source_Collection.Columns.Count - 1) As Object
		For J As Integer = 0 To Source_Collection.Columns.Count - 1
			Values(J) = Source_Collection.Rows(I)(J)
		Next
		Output_collection.Rows.Add(Values)
	Next	
	
	Success = True
Catch Ex As Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="33698fa1-b8d8-467c-bb0d-b8e838d42c69" name="Output Collection" type="Collection"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="-180" y="45" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4f882206-da67-4422-ac01-a53a5d765354" name="Success" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="60" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6551589d-b7f2-48b7-a867-b398647d0180" name="Error Message" type="Data"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="120" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ff821741-f1ec-47ff-bd26-00c56a44a6c7" name="Success?" type="Decision"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><loginhibit /><display x="-15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>002b5c58-ec2b-4e02-91e5-68fbeffe2b84</ontrue><onfalse>fd5c51f5-e900-44ce-a169-84565580d402</onfalse></stage><stage stageid="fd5c51f5-e900-44ce-a169-84565580d402" name="System Exception" type="Exception"><subsheetid>cdf2a7f1-a351-441a-8d36-bc92af66650a</subsheetid><display x="90" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="c6165073-bfc9-495f-98e5-62a224f52226" name="Start" type="Start"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collections will be combined." /></postconditions><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" narrative="The collection to append to." stage="Main Collection" /><input type="collection" name="Collection to Append" narrative="The collection to append." stage="Collection to Append" /></inputs><onsuccess>77e19cde-e0fa-40aa-8bea-05c4743275c2</onsuccess></stage><stage stageid="5d1a3d8d-2e99-49b5-9863-6a866e2e03dd" name="End" type="End"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Combined Collection" narrative="The combined collection." stage="Combined Collection" /></outputs></stage><stage stageid="e3a95b76-e1ba-4bf1-92c1-653ae937120a" name="Main Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="320afdfe-675f-44a8-b563-5cf2cf3212d3" name="Collection to Append" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="77e19cde-e0fa-40aa-8bea-05c4743275c2" name="Combine Collections" type="Code"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Main Collection" expr="[Main Collection]" /><input type="collection" name="Collection to Append" expr="[Collection to Append]" /></inputs><outputs><output type="collection" name="Combined Collection" stage="Combined Collection" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>35415fae-0f6d-4f78-b7b9-b39a6e3095ff</onsuccess><code><![CDATA[Success = False

If Main_Collection.Columns.Count > 0 AndAlso Main_Collection.Columns.Count <> Collection_to_Append.Columns.Count Then
	Error_Message = "Field definitions do not match - the number of columns in each is different."
	Exit Sub
End If

For Each Col1 As DataColumn In Main_Collection.Columns

	If Not Collection_to_Append.Columns.Contains(Col1.ColumnName) Then
		Error_Message = "The Main Collection does not contain '" & Col1.ColumnName & "'"
		Exit Sub
	End If

	If Collection_to_Append.Columns(Col1.ColumnName).DataType.Name <> Col1.DataType.Name Then
		Error_Message = "The data type of '" & Col1.ColumnName & "' do not match."
		Exit Sub
	End If

Next

If Main_Collection.Columns.Count = 0 Then
	Combined_Collection = Collection_to_Append
Else
	'We can now assume that fields match and start copying rows
	For Each R As DataRow in Collection_to_Append.Rows
		Main_Collection.ImportRow(R)
	Next
	Combined_Collection = Main_Collection
End If

Success = True]]></code></stage><stage stageid="d0521477-9847-4a70-834b-9c1d315bd817" name="Combined Collection" type="Collection"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="-90" y="75" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="35415fae-0f6d-4f78-b7b9-b39a6e3095ff" name="Success?" type="Decision"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>5d1a3d8d-2e99-49b5-9863-6a866e2e03dd</ontrue><onfalse>e4269f55-7633-4d19-9ebf-299956a4a5ec</onfalse></stage><stage stageid="e4269f55-7633-4d19-9ebf-299956a4a5ec" name="System Exception" type="Exception"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="[Error Message]" /></stage><stage stageid="7923c865-f484-411d-815a-24fe9832f941" name="Success" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="90" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="710fce6c-64f2-4e2d-8c89-9c2c41b9e9cb" name="Error Message" type="Data"><subsheetid>51f694a8-5305-4a38-9b41-a98998f2f7ca</subsheetid><display x="150" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bdd84939-c1c2-4ec3-9ec2-f19a6b55f056" name="Remove Empty Rows" type="SubSheetInfo"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><narrative>Removes empty rows from a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="46ac86fc-42a2-49f4-a2be-86a452176e2b" name="Start" type="Start"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will have empty rows removed." /></postconditions><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" narrative="The collection to remove empty rows from" stage="Collection In" /></inputs><onsuccess>6c450e6a-55ae-4382-a419-e4c6d59fc580</onsuccess></stage><stage stageid="0e663c5b-fb8a-4f15-999d-feb951956864" name="End" type="End"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Collection Out" narrative="The collection with the empty rows removed" stage="Collection Out" /></outputs></stage><stage stageid="613bed47-0c41-4155-93a3-5b31823f6048" name="Collection In" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="af6c216c-aac3-4b4e-b7cb-bbf0a7863c49" name="Collection Out" type="Collection"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><display x="60" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6c450e6a-55ae-4382-a419-e4c6d59fc580" name="Remove empty rows" type="Code"><subsheetid>fa6ed646-8ae1-479e-9845-b1dc9ac3b560</subsheetid><loginhibit /><display x="-15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection In" expr="[Collection In]" /></inputs><outputs><output type="collection" name="Collection Out" stage="Collection Out" /></outputs><onsuccess>0e663c5b-fb8a-4f15-999d-feb951956864</onsuccess><code><![CDATA[
Dim bRemove as Boolean
Dim iRow as integer
' Loop through each row
For iRow = Collection_In.Rows.Count - 1 to 0 step -1
'For each Row as DataRow in Collection_In.Rows
	bRemove=True
	' Loop through every column for this row
	For each Column as DataColumn in Collection_In.Columns
		if Trim(Collection_In.Rows(iRow)(Column.ColumnName).ToString()) & "" <> "" then
			bRemove=False
			exit for
		end if
	Next

	if bRemove=True then
		Collection_In.Rows.Remove(Collection_In.Rows(iRow))
	end if
Next

Collection_Out = Collection_In.Copy]]></code></stage><stage stageid="28f98de9-8408-4312-9e37-37197c2d8822" name="Transpose Collection" type="SubSheetInfo"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><narrative>Creates a new collection with the fields Name and Value and for each row in the original collection creates an entry for each column.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="26ce26e2-1a34-4a20-97d8-34ab15954720" name="Start" type="Start"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The collection will be transposed." /></postconditions><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="The collection to transpose." stage="Collection In" /></inputs><onsuccess>c3e45cac-9a76-4b70-a119-ffed9ceeaeac</onsuccess></stage><stage stageid="c9852e45-8999-4b73-a581-4a3f66b95b3a" name="End" type="End"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Appended Collection" narrative="The transposed collection." stage="Collection Out" /></outputs></stage><stage stageid="c3e45cac-9a76-4b70-a119-ffed9ceeaeac" name="Transpose" type="Code"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><loginhibit /><display x="30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" expr="[Collection In]" /></inputs><outputs><output type="collection" name="New Collection" stage="Collection Out" /></outputs><onsuccess>c9852e45-8999-4b73-a581-4a3f66b95b3a</onsuccess><code><![CDATA[
New_Collection = GetDataTable("Name,Value", "System.String,System.String")
Dim New_Row As System.Data.DataRow

For Each r As System.Data.DataRow In Collection.Rows
	For Each c As System.Data.DataColumn In Collection.Columns
		New_Row = New_Collection.NewRow()
		New_Row("Name") = c.ColumnName
		New_Row("Value") = CStr(r(c.ColumnName))
		New_Collection.Rows.Add(New_Row)
	Next
Next
]]></code></stage><stage stageid="d2f68cb8-90cf-4414-8554-daf4fa4c9f29" name="Collection Out" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="60" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="99b09a03-6901-47ee-af4d-d43bfcf3bb42" name="Collection In" type="Collection"><subsheetid>a0cf6615-20c0-4910-9990-0f79f5f30bca</subsheetid><display x="-180" y="0" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="90d519f8-3075-478e-a49f-b681d1ddd033" name="Field Exists" type="SubSheetInfo"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><narrative>Finds out whether the collection contatins a given field.</narrative><display x="-135" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8605b0b2-ff16-473b-ba5d-1956390f48bd" name="Start" type="Start"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to check." stage="Input Collection" /><input type="text" name="Field" narrative="The field to check for." stage="Field" /></inputs><onsuccess>da5abfb8-f52a-4a03-8f9f-ec5e42dd4566</onsuccess></stage><stage stageid="26b8ca01-8895-483f-93ef-66df5bbb0a34" name="End" type="End"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the collection contains the field." stage="Exists" /></outputs></stage><stage stageid="da5abfb8-f52a-4a03-8f9f-ec5e42dd4566" name="Get Collection Fields" type="SubSheet"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="-30" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="collection" name="Collection Fields" stage="Field Names" /></outputs><onsuccess>470c6c27-3ed4-43b7-8c01-3fc7415ec55e</onsuccess><processid>e277cc2b-72b8-47e9-8a1b-e8530eb19a09</processid></stage><stage stageid="a910c0ad-5130-4073-8f3a-8cf76bc7d74e" name="Input Collection" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="66e1609e-c3e7-4e35-82df-90254a0d842f" name="Field" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470c6c27-3ed4-43b7-8c01-3fc7415ec55e" name="Field Names" type="LoopStart"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>eb7af2be-1265-40b6-8ea7-89fdda2b0ab1</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid><looptype>ForEach</looptype><loopdata>Field Names</loopdata></stage><stage stageid="54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f" name="Field Names" type="LoopEnd"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="195" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess><groupid>755a928d-1109-4393-b44a-e265a1395a22</groupid></stage><stage stageid="15f784c0-4879-4a2e-ab6f-c44f5c384d85" name="Field Names" type="Collection"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Name" type="text" /><field name="Data Type" type="text" /></collectioninfo></stage><stage stageid="905724f1-237f-4641-9511-289841ec3498" name="Exists" type="Data"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><display x="-135" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="eb7af2be-1265-40b6-8ea7-89fdda2b0ab1" name="Match?" type="Decision"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="75" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Field Names.Field Name] = Trim([Field])" /><ontrue>c4532590-c3c0-4014-98f4-bc3e1f30e5df</ontrue><onfalse>54fa6a7b-f874-43d4-ac4a-4c16f28d1a9f</onfalse></stage><stage stageid="d656772f-8ec9-4848-8f30-a4bda4f01837" name="anchor2" type="Anchor"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="255" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>26b8ca01-8895-483f-93ef-66df5bbb0a34</onsuccess></stage><stage stageid="c4532590-c3c0-4014-98f4-bc3e1f30e5df" name="Exists" type="Calculation"><subsheetid>4d41bfc8-e552-41ae-9e45-65dc3d1f7276</subsheetid><loginhibit /><display x="210" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d656772f-8ec9-4848-8f30-a4bda4f01837</onsuccess><calculation expression="True" stage="Exists" /></stage><stage stageid="2e050fc0-fed0-49b4-bafc-a33a0aee5ad9" name="Success?" type="Decision"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success]" /><ontrue>c491f60e-4aa7-4abb-a203-5a78c0b64469</ontrue><onfalse>510a1b6e-59d7-40a0-8886-483ef66093e9</onfalse></stage><stage stageid="510a1b6e-59d7-40a0-8886-483ef66093e9" name="FAIL" type="Exception"><subsheetid>3a772458-463d-46cf-8451-6cf5b4aeae30</subsheetid><display x="120" y="15" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="UtilityException" detail="&quot;Error occurred removing null rows: &quot; &amp; [Message]" /></stage><stage stageid="50bf803b-ce91-4528-b057-7ee471f1ad0a" name="Advanced Collection Contains value" type="SubSheetInfo"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-195" y="-135" w="150" h="90" /></stage><stage stageid="11ee1091-fe82-457e-95e3-d3976980f8d2" name="Start" type="Start"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><preconditions><condition narrative="A collection exists with the specified column name which may or may not contain a particular value" /><condition narrative="The collection being searched has no date or time columns (A code stage restriction)" /><condition narrative="" /><condition narrative="" /></preconditions><postconditions><condition narrative="No change" /></postconditions><narrative>Note that if neither 'Exact Value' nor 'Regex' are supplied, this will always return FALSE / ie. not found. If a match is found, groups will return all of the groups specified in the regular expression when applied to the value found.</narrative><display x="135" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Collection" narrative="Required : The collection to search" stage="Collection" /><input type="text" name="Column Name" narrative="Required : The name of the column to search" stage="Column Name" /><input type="text" name="Exact Value" narrative="Optional : The exact value to search for - this is case insensitive" stage="Exact Value" /><input type="text" name="Regex" narrative="Optional : The regular expression to search for - this is case sensitive unless specified otherwise in the regular expression using &quot;(?i)&quot;" stage="Regex" /></inputs><onsuccess>7f49bd4e-e9c2-4f7c-8725-b75298d7cfbd</onsuccess></stage><stage stageid="0859b546-39a9-44f2-a82d-3b312c6d10c5" name="End" type="End"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><display x="135" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Contains Search Term" narrative="Flag indicating if the collection found the given search term or not" stage="Contains Search Term" /><output type="collection" name="Groups" narrative="The groups defined in the regular expression when it is applied to the found term" stage="Groups" /><output type="number" name="Position" stage="position" /></outputs></stage><stage stageid="3665a501-32fe-42d5-ba67-268be83c83e6" name="Collection" type="Collection"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-165" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9852400a-88f8-4766-afaf-ab69acc42c9a" name="Column Name" type="Data"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-165" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="86945504-1877-44c7-a052-00c5460e4cd5" name="Exact Value" type="Data"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-165" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93b5f444-a5b6-4590-b045-37d1d399ffe8" name="Regex" type="Data"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-165" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="424b804f-075b-4052-a5a3-a9910d54b8c0" name="Contains Search Term" type="Data"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="537fdd25-0705-40bc-9498-b1707eba7179" name="Groups" type="Collection"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-15" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Group" type="text" /></collectioninfo></stage><stage stageid="5396c519-d8bb-4145-b238-4cc0e8571f6a" name="Note2" type="Note"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-165" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5fe4f541-0e60-4887-84eb-8c950744be32" name="Note2" type="Note"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-15" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="67064eaa-bb2c-4e62-8ba4-e0571f8f5c6c" name="Both Search Strings Empty?" type="Decision"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><display x="135" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Exact Value]) = 0 AND Len ([Regex]) = 0" /><ontrue>05e7ed33-282f-4c9c-9a06-baf8ef62b627</ontrue><onfalse>a48f875d-3b6a-4ae2-b78e-9e08e4a9c5d1</onfalse></stage><stage stageid="7f49bd4e-e9c2-4f7c-8725-b75298d7cfbd" name="Trim Search Strings" type="MultipleCalculation"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><display x="135" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>67064eaa-bb2c-4e62-8ba4-e0571f8f5c6c</onsuccess><steps><calculation expression="Trim([Exact Value])" stage="Exact Value" /><calculation expression="Trim([Regex])" stage="Regex" /></steps></stage><stage stageid="05e7ed33-282f-4c9c-9a06-baf8ef62b627" name="anchor3" type="Anchor"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><display x="240" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>54a2d44e-4334-47a5-9f5c-0cf12b547714</onsuccess></stage><stage stageid="54a2d44e-4334-47a5-9f5c-0cf12b547714" name="anchor4" type="Anchor"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><display x="240" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0859b546-39a9-44f2-a82d-3b312c6d10c5</onsuccess></stage><stage stageid="a48f875d-3b6a-4ae2-b78e-9e08e4a9c5d1" name="Search Collection1" type="Code"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><loginhibit /><display x="135" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="coll" expr="[Collection]" /><input type="text" name="colname" expr="[Column Name]" /><input type="text" name="exactVal" expr="[Exact Value]" /><input type="text" name="regexVal" expr="[Regex]" /></inputs><outputs><output type="flag" name="found" stage="Contains Search Term" /><output type="collection" name="groups" stage="Groups" /><output type="number" name="position" stage="position" /></outputs><onsuccess>0859b546-39a9-44f2-a82d-3b312c6d10c5</onsuccess><code><![CDATA[If Not Coll.Columns.Contains(colname) Then
  Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", colname))
End If

Dim counter as integer = -1
Dim rx as Regex
If Not String.IsNullOrEmpty(exactVal) Then
  rx = New Regex("^" & Regex.Escape(exactVal) & "$", RegexOptions.IgnoreCase)
Else
  ' If ignore case is required it can be inlined using "(?i)..rest of search"
  rx = New Regex(regexVal)
End If

' Initialise output params
found = False
groups = New DataTable()
groups.Columns.Add("Group", GetType(String))

For Each row as DataRow in coll.Rows
  counter += 1
  Dim val as String = CStr(row(colname))
  Dim m as Match = rx.Match(val)
  If m.Success Then
    found = True
    For i as Integer = 1 to m.Groups.Count-1
      groups.Rows.Add(New Object() {m.Groups(i).Value})
    Next
    position = counter
    Return
  End If
position = -1
Next]]></code></stage><stage stageid="5a359adc-8088-4004-84b3-b82a6542c1ea" name="position" type="Data"><subsheetid>d77752eb-167c-4aa7-81c3-1403400e47dc</subsheetid><display x="-30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9ac54946-0de7-4edc-a4e9-496795102646" name="Remove Duplicate" type="SubSheetInfo"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="97d8fdf3-7c4a-4e5f-a7b4-c7e6cf170de6" name="Start" type="Start"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="InputCollection" stage="InputCollection" /><input type="text" name="ColumnName" stage="ColumnName" /></inputs><onsuccess>651c387e-46c9-4f86-803d-ae95474de3ef</onsuccess></stage><stage stageid="ea493e7b-6475-41ac-881a-9ff4d29a26e6" name="End" type="End"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="OutputCollection" stage="OutputCollection" /></outputs></stage><stage stageid="54cb48ed-4eb3-4981-aa8c-9da2e0c5dd5f" name="Remove duplicate" type="Code"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><loginhibit /><narrative>1. pass collection
2. should pass only Column Name should not pass like [Collection.Column Name]</narrative><display x="15" y="0" /><inputs><input type="collection" name="InputCollection" expr="[InputCollection]" /><input type="text" name="ColumnName" expr="[ColumnName]" /></inputs><outputs><output type="collection" name="OutputCollection" stage="OutputCollection" /></outputs><onsuccess>ea493e7b-6475-41ac-881a-9ff4d29a26e6</onsuccess><code><![CDATA[Dim temp as DataTable=InputCollection



If Not InputCollection.Columns.Contains(ColumnName) Then
Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", ColumnName))
End If



try

	dim TempRowCount1 as Integer=temp.Rows.Count

	For i As integer = 0 To TempRowCount1-1

		if i<TempRowCount1 Then

			Dim row1 as DataRow=temp.Rows(i)

			Dim val1 as String = CStr(row1(ColumnName))

			Dim counter as Integer=0

			Dim TempRowCount2 as Integer=temp.Rows.Count



			For j As integer = 0 To TempRowCount2-1

				if j<TempRowCount2 then

				Dim row2 as DataRow=temp.Rows(j)

				Dim val2 as String = CStr(row2(ColumnName))

					If Trim(val1)=Trim(val2) Then

						counter=counter+1

						if counter>=2 then

							temp.Rows(j).Delete()

							j=-1

							counter=0

							TempRowCount2=temp.Rows.Count

						end if

					end if			

				end if		

			Next

		TempRowCount1=temp.Rows.Count

		else

		OutputCollection = temp

		end if

	Next



	OutputCollection = temp

Catch  ex as Exception

MsgBox (ex.Tostring())

end try

]]></code></stage><stage stageid="9c43221b-b574-4490-b143-283a50fde3c0" name="ColumnName" type="Data"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><display x="195" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21c56ab4-edbe-4f22-a32a-c93d44e2dfc5" name="OutputCollection" type="Collection"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><display x="120" y="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c9615fae-2c98-4ac4-bab6-a0160436e54a" name="InputCollection" type="Collection"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><display x="150" y="-135" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6ff6f071-c924-48cf-ad2b-41e1c657e238" name="Input Parameters" type="Block"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><loginhibit /><display x="120" y="-165" w="135" h="45" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="5abc8f8f-ab6e-44a1-b1a8-3af390546320" name="output parameter" type="Block"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><loginhibit /><display x="90" y="60" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="651c387e-46c9-4f86-803d-ae95474de3ef" name="Is Column Name empty" type="Decision"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Trim([ColumnName])&lt;&gt;&quot;&quot;" /><ontrue>54cb48ed-4eb3-4981-aa8c-9da2e0c5dd5f</ontrue><onfalse>d0d97992-0d87-49f2-9ca8-7a584088bbd5</onfalse></stage><stage stageid="d0d97992-0d87-49f2-9ca8-7a584088bbd5" name="Exception1" type="Exception"><subsheetid>b896a907-62b8-4568-99f4-1e8832c39941</subsheetid><display x="105" y="-60" /><exception type="Exception" detail="&quot;Column Name should not be empty&quot;" /></stage><stage stageid="2baf186d-21b0-473f-928a-cca94a7cb19e" name="Remove duplicate with Repeated Count" type="SubSheetInfo"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="70413abb-3ce6-47ac-a7b7-0050f78d72ed" name="Start" type="Start"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="collection" name="InputCollection" stage="InputCollection" /><input type="text" name="ColumnName" stage="ColumnName" /></inputs><onsuccess>1de9f65f-a8ac-42e8-856e-9731e89a11ed</onsuccess></stage><stage stageid="62b356f7-6cdd-4818-b947-62d4a58c9280" name="End" type="End"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="OutputCollection" stage="OutputCollection" /></outputs></stage><stage stageid="3956120b-b2fe-415c-9229-aeab289ac62f" name="Remove duplicate with Repeated Count" type="Code"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><loginhibit /><narrative>1. pass collection
2. should pass only Column Name should not pass like [Collection.Column Name]</narrative><display x="15" y="0" /><inputs><input type="collection" name="InputCollection" expr="[InputCollection]" /><input type="text" name="ColumnName" expr="[ColumnName]" /></inputs><outputs><output type="collection" name="OutputCollection" stage="OutputCollection" /></outputs><onsuccess>62b356f7-6cdd-4818-b947-62d4a58c9280</onsuccess><code><![CDATA[Dim temp as DataTable=InputCollection



If Not InputCollection.Columns.Contains(ColumnName) Then
Throw New ApplicationException(String.Format( _
   "The collection does not contain a field " & _
   "with the name '{0}'", ColumnName))
End If

If Not InputCollection.Columns.Contains("RepeatedCount") Then
temp.Columns.Add("RepeatedCount",Type.GetType("System.Int32"))
End If

If Not InputCollection.Columns.Contains("DebitCount") Then
temp.Columns.Add("DebitCount",Type.GetType("System.Int32"))
End If

If Not InputCollection.Columns.Contains("CreditCount") Then
temp.Columns.Add("CreditCount",Type.GetType("System.Int32"))
End If

'If Not InputCollection.Columns.Contains("Dr") Then
'temp.Columns.Add("Dr",Type.GetType("System.Int32"))
'End If
'If Not InputCollection.Columns.Contains("Cr") Then
'temp.Columns.Add("Cr",Type.GetType("System.Int32"))
'End If
try

	dim TempRowCount1 as Integer=temp.Rows.Count

	For i As integer = 0 To TempRowCount1-1

		if i<TempRowCount1 Then

			Dim row1 as DataRow=temp.Rows(i)

			Dim val1 as String = CStr(row1(ColumnName))

			Dim counter as Integer=0
			Dim Rcounter as Integer=0
			Dim Drcounter as Integer=0
			Dim Crcounter as Integer=0
			Dim d as Integer=0
			Dim c as Integer=0
			Dim TempRowCount2 as Integer=temp.Rows.Count



			For j As integer = 0 To TempRowCount2-1

				if j<TempRowCount2 then

				Dim row2 as DataRow=temp.Rows(j)

				Dim val2 as String = CStr(row2(ColumnName))

					If Trim(val1)=Trim(val2) Then

						counter=counter+1
						If counter=1 then 
						If Trim(val1)= CStr(row2("DA"))then
						d=1
						else
						c=1
						end IF
						end If
						if counter>=2 then
						If Trim(val1)= CStr(row2("DA"))then
						Drcounter=Drcounter+1
						else
						Crcounter=Crcounter+1
						end IF

							temp.Rows(j).Delete()

							j=-1

							counter=0
							Rcounter=Rcounter+1
							TempRowCount2=temp.Rows.Count

						end if

					end if			

				end if		

			Next

		TempRowCount1=temp.Rows.Count

		temp.Rows(i)("RepeatedCount")=Rcounter+1
		temp.Rows(i)("CreditCount")=Crcounter+c
		temp.Rows(i)("DebitCount")=Drcounter+d
		else

		OutputCollection = temp

		end if

	Next



	OutputCollection = temp

Catch  ex as Exception

MsgBox (ex.Tostring())

end try

]]></code></stage><stage stageid="e6615197-a46d-49c3-adcb-bb099a9f4106" name="ColumnName" type="Data"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><display x="195" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd200315-5b09-4c48-946e-5852c576b7cb" name="OutputCollection" type="Collection"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><display x="120" y="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3bb38812-6b68-4382-9293-c728c34584ff" name="InputCollection" type="Collection"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><display x="150" y="-135" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a7178e58-c95b-47bc-acee-9552fce4aa88" name="Input Parameters" type="Block"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><loginhibit /><display x="120" y="-165" w="135" h="45" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="020817f4-5bb2-4135-bda2-d14a0d3e3b85" name="output parameter" type="Block"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><loginhibit /><display x="90" y="60" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1de9f65f-a8ac-42e8-856e-9731e89a11ed" name="Is Column Name empty" type="Decision"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="Trim([ColumnName])&lt;&gt;&quot;&quot;" /><ontrue>3956120b-b2fe-415c-9229-aeab289ac62f</ontrue><onfalse>e08744b1-ea99-492f-90bd-6c25927fe6c3</onfalse></stage><stage stageid="e08744b1-ea99-492f-90bd-6c25927fe6c3" name="Exception1" type="Exception"><subsheetid>69f8958e-ddc9-4fba-9e10-b2368166b460</subsheetid><display x="105" y="-60" /><exception type="Exception" detail="&quot;Column Name should not be empty&quot;" /></stage><stage stageid="e90acc17-c142-4188-91dc-ca1c836601ed" name="Add Serial Number" type="SubSheetInfo"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1322b644-5120-426b-889b-7704847bf816" name="Start" type="Start"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="collection" name="Input Collection" stage="InputCollection" /><input type="text" name="Column Name" stage="Column" /></inputs><onsuccess>d94f6fb6-17cf-4154-abbf-f489235c73be</onsuccess></stage><stage stageid="7cb3ec46-98ba-4e19-8929-854c476c9af8" name="End" type="End"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><loginhibit /><display x="15" y="45" /><outputs><output type="collection" name="Output Collection" stage="OutCollection" /></outputs></stage><stage stageid="d94f6fb6-17cf-4154-abbf-f489235c73be" name="Add Serial Number" type="Code"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="collection" name="Collection" expr="[InputCollection]" /><input type="text" name="Column" expr="[Column]" /></inputs><outputs><output type="collection" name="New Collection" stage="OutCollection" /></outputs><onsuccess>7cb3ec46-98ba-4e19-8929-854c476c9af8</onsuccess><code><![CDATA[Dim StartRw As Integer
StartRw = 1

If Not Collection.Columns.Contains(Column) Then
	Collection.columns.Add(Column,Type.GetType("System.Decimal"))
End If

for each dr as System.Data.DataRow in Collection.Rows
	dr(Column) = StartRw
	StartRw = StartRw + 1
next

New_Collection = Collection]]></code></stage><stage stageid="1db728b6-cbe9-4da0-8904-f1f782198098" name="InputCollection" type="Collection"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><display x="-165" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="a1eb936c-86c4-4aac-bb17-8b1f44de791f" name="Column" type="Data"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><display x="-105" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a5bb10-d893-4c97-83f1-277b72fd957c" name="OutCollection" type="Collection"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><display x="-225" y="0" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="696a142f-0534-4a9b-84f3-b9d5bd33cf01" name="Block1" type="Block"><subsheetid>70975c47-1bb7-447b-a644-42efc63348f9</subsheetid><loginhibit /><display x="-270" y="-30" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="61b14a2c-69e5-43a3-9a68-5463ff4e900c" name="Remove Duplicates On Multiple Columns" type="SubSheetInfo"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5d1e6d19-34b7-41c9-8f51-2860314b32c3" name="Start" type="Start"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><loginhibit /><display x="15" y="-135" /><inputs><input type="collection" name="InputCollection" stage="InputCollection" /><input type="text" name="ColumnName" narrative="input column names with separated semicolon" stage="ColumnName" /></inputs><onsuccess>270e7118-86b7-4b0a-9595-cfc2fe235683</onsuccess></stage><stage stageid="df88d29f-6951-4237-999a-57d8c0829e52" name="End" type="End"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="collection" name="OutputCollection" stage="OutputCollection" /></outputs></stage><stage stageid="baa3123e-88f0-4ec2-825b-419c30cb0b82" name="Remove duplicate1" type="Code"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><loginhibit /><narrative>1. pass collection
2. should pass only Column Name should not pass like [Collection.Column Name]</narrative><display x="15" y="-30" /><inputs><input type="collection" name="InputCollection" expr="[InputCollection]" /><input type="text" name="ColumnName" expr="[ColumnName]" /></inputs><outputs><output type="collection" name="OutputCollection" stage="OutputCollection" /></outputs><onsuccess>df88d29f-6951-4237-999a-57d8c0829e52</onsuccess><code><![CDATA[Dim temp as DataTable=InputCollection
Dim Split_Values As Array

'Split_Values = SplitStringInto( "SplitFields", Text_to_Split, ";")

Split_Values = ColumnName.Split(";")

'Dim tempvar1 as String = ""
'Dim tempvar2 as String = ""
Dim k As Integer

'If Not InputCollection.Columns.Contains(ColumnName) Then
'Throw New ApplicationException(String.Format( _
'   "The collection does not contain a field " & _
'   "with the name '{0}'", ColumnName))
'End If

Dim val1 as String
Dim val2 as String
val1 = ""
val2 = ""
try

	dim TempRowCount1 as Integer=temp.Rows.Count

	For i As integer = 0 To TempRowCount1-1

		if i<TempRowCount1 Then

			Dim row1 as DataRow=temp.Rows(i)

			for k = 0 To Split_Values.Length()-1

			val1 = val1 + CStr(row1(Split_Values(k)))
			
			next
			Dim counter as Integer=0

			Dim TempRowCount2 as Integer=temp.Rows.Count



			For j As integer = 0 To TempRowCount2-1

				if j<TempRowCount2 then

				Dim row2 as DataRow=temp.Rows(j)
				
				for k = 0 to Split_Values.Length()-1

				val2 = val2 + CStr(row2(Split_Values(k)))

				next
					If Trim(val1)=Trim(val2) Then
						counter=counter+1

						if counter>=2 then

							temp.Rows(j).Delete()

							j=-1

							counter=0

							TempRowCount2=temp.Rows.Count

						end if

					end if			

				end if		
			val2 = ""
			Next
			
		val1 = ""
		TempRowCount1=temp.Rows.Count

		else

		OutputCollection = temp

		end if

	Next



	OutputCollection = temp

Catch  ex as Exception

MsgBox (ex.Tostring())

end try

]]></code></stage><stage stageid="77f88557-5c88-4bd4-aadb-884f7f7cb14d" name="ColumnName" type="Data"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><display x="225" y="-165" /><datatype>text</datatype><initialvalue xml:space="preserve">Field1;Field2</initialvalue><private /><alwaysinit /></stage><stage stageid="484fb0da-79fd-47c6-b3b6-dccf1399d733" name="OutputCollection" type="Collection"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><display x="120" y="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="8f656b4b-dfb2-4811-bf34-f52225cdb51b" name="InputCollection" type="Collection"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><display x="150" y="-165" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c9360216-1342-4c98-95de-22e4f68f9514" name="Input Parameters" type="Block"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><loginhibit /><display x="120" y="-180" w="135" h="45" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a15aa76e-5876-4d51-b0ee-fdef8dfe101b" name="output parameter" type="Block"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><loginhibit /><display x="90" y="30" w="90" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="270e7118-86b7-4b0a-9595-cfc2fe235683" name="Is Column Name empty" type="Decision"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><loginhibit /><display x="15" y="-90" /><decision expression="Trim([ColumnName])&lt;&gt;&quot;&quot;" /><ontrue>baa3123e-88f0-4ec2-825b-419c30cb0b82</ontrue><onfalse>0431fdf3-8b85-4506-8bd4-76410ada0e90</onfalse></stage><stage stageid="0431fdf3-8b85-4506-8bd4-76410ada0e90" name="Exception1" type="Exception"><subsheetid>70c05455-793e-4eeb-8eca-a338232ffedf</subsheetid><display x="105" y="-90" /><exception type="Exception" detail="&quot;Column Name should not be empty&quot;" /></stage></process></object>
        <object id="92564613-f444-48c5-8ff7-abb4f7ea7548" name="Utility - Date and Time Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Date and Time Manipulation" version="5.0.11" bpversion="7.0.1.49890" narrative="Utility functions for manipulating dates and times." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6516a093-7eae-4d9c-b6e4-f1cfd6ed5668" type="Normal" published="True"><name>Format Date</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3faad3c6-8a21-4d44-9df6-4c69213d552f" type="Normal" published="True"><name>DateAdd</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a15c8b3f-df2f-4461-a42c-41f5afdbf123" type="Normal" published="True"><name>Get Time of Day</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d92822f9-e820-40af-98f7-53accd5a8b1d" type="Normal" published="True"><name>Get Last Working Day</name><view><camerax>-6</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="44144695-c6e6-4781-80a7-cbda94215737" type="Normal" published="True"><name>Get Maximum TimeSpan</name><view><camerax>0</camerax><cameray>-36</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2cc85317-9c46-427c-b966-cb7abb1454c6" name="Format Date" type="SubSheetInfo"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><narrative>Formats a date according to the given format string.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4c3fe2ef-c631-4aae-bbd4-c5008db9045c" name="Start" type="Start"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The date will be formatted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="datetime" name="Date Time" narrative="The Date to format" stage="Date Time" /><input type="text" name="Format" narrative="The format template text" stage="Format" /></inputs><onsuccess>ec339a00-b716-496d-a202-d126d86d3b82</onsuccess></stage><stage stageid="77a0cce8-1a21-4165-9a0f-adf9fec90d5c" name="End" type="End"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Formatted Date" narrative="The formatted date as text." stage="Formatted Date" /></outputs></stage><stage stageid="cf5e7769-db59-4bb7-8253-e366e619c115" name="Date Time" type="Data"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue>2009-03-16 07:40:48Z</initialvalue><private /><alwaysinit /></stage><stage stageid="ec339a00-b716-496d-a202-d126d86d3b82" name="Format Date" type="Code"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="datetime" name="Date Time" expr="[Date Time]" /><input type="text" name="Formatting" expr="[Format]" /></inputs><outputs><output type="text" name="Formatted Date" stage="Formatted Date" /></outputs><onsuccess>77a0cce8-1a21-4165-9a0f-adf9fec90d5c</onsuccess><code><![CDATA[try

Formatted_Date = Format(Date_Time, Formatting)

catch e as exception
end try]]></code></stage><stage stageid="a7c1c56b-526f-42cb-8f9c-fd85e0dc4358" name="Formatted Date" type="Data"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><display x="-195" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1d34679f-edb9-47df-8413-eb6529085bea" name="Format" type="Data"><subsheetid>6516a093-7eae-4d9c-b6e4-f1cfd6ed5668</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">yyyy-MM-dd hh:mm:ss</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="55239e62-5f23-4636-b00f-3f92c2dd2b57" name="DateAdd" type="SubSheetInfo"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><narrative>Adds a specified number of hours minutes or seconds to the given date.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dbfbfb9d-819d-4766-b61d-23f72fdc3eac" name="Start" type="Start"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The date will have the specified quantity added to it." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="datetime" name="DateTime" narrative="The date to which to add Hours Minutes or Seconds" stage="DateTime" /><input type="number" name="Hours" narrative="OPTIONAL: The number of hours to add" stage="Hours" /><input type="number" name="Minutes" narrative="OPTIONAL: The number of minutes to add" stage="Minutes" /><input type="number" name="Seconds" narrative="OPTIONAL: The number of seconds to add" stage="Seconds" /></inputs><onsuccess>e9d3896b-765f-4351-99f6-d0c611db1d0f</onsuccess></stage><stage stageid="837296b5-d951-45d5-9a71-15d6adb842af" name="End" type="End"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="datetime" name="Result" narrative="The date with the number of hours minutes or seconds added to it" stage="Result DateTime" /></outputs></stage><stage stageid="e3a0af02-a848-4ea8-8995-8aa784761a7a" name="Hours" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="cb09e128-7238-4da3-9961-ae76391bf4fa" name="Minutes" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ef1f06cf-1992-4ffb-8340-f7c18a441aa9" name="Seconds" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="b61357e2-8f6e-4e65-9981-95950bb33f23" name="DateTime" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue>2009-06-11 05:50:18Z</initialvalue><private /><alwaysinit /></stage><stage stageid="e9d3896b-765f-4351-99f6-d0c611db1d0f" name="DateAdd1" type="Code"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="datetime" name="d" expr="[DateTime]" /><input type="number" name="h" expr="[Hours]" /><input type="number" name="m" expr="[Minutes]" /><input type="number" name="s" expr="[Seconds]" /></inputs><outputs><output type="datetime" name="Result" stage="Result DateTime" /></outputs><onsuccess>837296b5-d951-45d5-9a71-15d6adb842af</onsuccess><code><![CDATA[

Result = d.AddHours(h).AddMinutes(m).AddSeconds(s)]]></code></stage><stage stageid="2335b3c0-55db-4269-94ed-200e9fcc07e9" name="Result DateTime" type="Data"><subsheetid>3faad3c6-8a21-4d44-9df6-4c69213d552f</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="22cedbad-f117-4ee4-bd71-2a5f6c220cb6" name="Get Time of Day" type="SubSheetInfo"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><narrative>Gets the current time of day as a timespan, as reported by the operating system.

Use UTC - if true, the current time will be expressed in UTC. Otherwise, it is expressed in the local time, as configured in the operating system. This will include daylight saving adjustments.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="53fc2493-6fda-4782-8934-42e13b047e5c" name="End" type="End"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><loginhibit /><display x="135" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="timespan" name="Time of Day" narrative="The time of day as a timespan" stage="Time of Day" /></outputs></stage><stage stageid="19b73e7b-2913-41ec-9c1d-36c19f8de2fa" name="Get Time of Day" type="Code"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><loginhibit /><display x="135" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Use UTC" expr="[Use UTC]" /></inputs><outputs><output type="timespan" name="Time of Day" stage="Time of Day" /></outputs><onsuccess>53fc2493-6fda-4782-8934-42e13b047e5c</onsuccess><code><![CDATA[Dim RightNow as DateTime = DateTime.Now
If Use_UTC Then
   RightNow = DateTime.UTCNow
End If

Time_of_Day = RightNow.Subtract(DateTime.Today)]]></code></stage><stage stageid="a091940e-6fdc-44cf-9d55-e516d14fa0c5" name="Time of Day" type="Data"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><display x="240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b543f1fa-0821-4bbf-a15a-90deeea26246" name="Start" type="Start"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The current time of day will have been calculated." /></postconditions><display x="135" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Use UTC" narrative="Set True if the time its required as Universal Time Coordinated" stage="Use UTC" /></inputs><onsuccess>19b73e7b-2913-41ec-9c1d-36c19f8de2fa</onsuccess></stage><stage stageid="4625da5f-2d4f-49a4-b134-a51c2425c157" name="Use UTC" type="Data"><subsheetid>a15c8b3f-df2f-4461-a42c-41f5afdbf123</subsheetid><display x="210" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="63c99096-e244-4194-bce2-c13b3d3baed0" name="Get Last Working Day" type="SubSheetInfo"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><narrative>Gets the last weekday of the given month and year. If no month/year is given, the current month and year is used. If either of the parameters is given then both must be given.
The value returned is the date (ie. the day in the month) of the last weekday in the given month. A return value of -1 indicates an error - that month OR year has been given but not both.</narrative><display x="-180" y="-135" w="240" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3c50b663-acf3-4122-8e8b-ead4802ee437" name="Start" type="Start"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><narrative>Gets the last working day of the given month / year.
Currently synonymous with getting the last *week* day of the given month year, though bank holiday support might arrive one day.</narrative><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Month" narrative="The month of the year" stage="Month" /><input type="number" name="Year" narrative="The year." stage="Year" /></inputs><onsuccess>35e0a5d0-e3da-4255-a20d-6d45de202a6f</onsuccess></stage><stage stageid="b9d57b5c-797b-4592-83e4-7a24ca15c1a6" name="End" type="End"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Working Day" narrative="The last working day of the month" stage="Working Day" /></outputs></stage><stage stageid="098af183-1667-4b2f-8deb-1cc0620b95b2" name="Year" type="Data"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><display x="-315" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="f413fe16-e03f-4b67-b2bd-b49592366e3e" name="Month" type="Data"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><display x="-315" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="92fbace1-d10b-433c-8fed-fe1c26dbc518" name="Working Day" type="Data"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><display x="-240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e625be80-4bab-4171-a32d-4016e936a412" name="GetLastWorkingDay" type="Code"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Month" expr="[Month]" /><input type="number" name="Year" expr="[Year]" /></inputs><outputs><output type="number" name="Day" stage="Working Day" /></outputs><onsuccess>b9d57b5c-797b-4592-83e4-7a24ca15c1a6</onsuccess><code><![CDATA[Day = DateTime.DaysInMonth(Year, Month)
Dim dt as New DateTime(Year, Month, Day)
While True
	Select Case dt.DayOfWeek
		Case DayOfWeek.Saturday,DayOfWeek.Sunday
			Day -= 1
			dt = New DateTime(Year, Month, Day)
		Case Else
			Return
	End Select
End While]]></code></stage><stage stageid="35e0a5d0-e3da-4255-a20d-6d45de202a6f" name="Month &amp; Year Empty?" type="Decision"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Month] = 0 AND [Year] = 0" /><ontrue>b8ca2a17-7daf-4166-ba91-14ded7cce776</ontrue><onfalse>11958d80-d666-4466-a27e-977163030022</onfalse></stage><stage stageid="b8ca2a17-7daf-4166-ba91-14ded7cce776" name="Get Month of Today" type="Calculation"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>aa7dcdfd-36c3-455e-ac32-d688f1ab4db8</onsuccess><calculation expression="FormatDate(Today(), &quot;MM&quot;)" stage="Month" /></stage><stage stageid="aa7dcdfd-36c3-455e-ac32-d688f1ab4db8" name="Get Year of Today" type="Calculation"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="180" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9cc58b0b-db3f-482e-95d9-ffa1380515ec</onsuccess><calculation expression="FormatDate(Today(), &quot;yyyy&quot;)" stage="Year" /></stage><stage stageid="9cc58b0b-db3f-482e-95d9-ffa1380515ec" name="anchor1" type="Anchor"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="180" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6de1714a-92eb-4cd0-bef1-dbe4598f6b20</onsuccess></stage><stage stageid="6de1714a-92eb-4cd0-bef1-dbe4598f6b20" name="anchor2" type="Anchor"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e625be80-4bab-4171-a32d-4016e936a412</onsuccess></stage><stage stageid="11958d80-d666-4466-a27e-977163030022" name="Month OR Year Empty?" type="Decision"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Month] = 0 OR [Year] = 0" /><ontrue>61e4a055-8b98-4332-84e7-844b0b1f2b30</ontrue><onfalse>6de1714a-92eb-4cd0-bef1-dbe4598f6b20</onfalse></stage><stage stageid="61e4a055-8b98-4332-84e7-844b0b1f2b30" name="Error: Return -1" type="Calculation"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="-75" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>55503d4b-dd2f-46a4-abf7-6b68b3f11c4e</onsuccess><calculation expression="-1" stage="Working Day" /></stage><stage stageid="55503d4b-dd2f-46a4-abf7-6b68b3f11c4e" name="End" type="End"><subsheetid>d92822f9-e820-40af-98f7-53accd5a8b1d</subsheetid><loginhibit /><display x="-150" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Working Day" narrative="The last working day of the month" stage="Working Day" /></outputs></stage><stage stageid="717a0494-c064-4882-b1fe-774df9a21423" name="Get Maximum TimeSpan" type="SubSheetInfo"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><narrative>Gets the maximum timespan from a collection of timespan values</narrative><display x="-195" y="-150" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3e99ca05-4f18-45c4-98cc-91ebfc8cf4f0" name="Start" type="Start"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The maximum timespan will be found." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Timespan Values" narrative="A collection of timespan values" stage="Timespan Values" /></inputs><onsuccess>b63b3567-309e-47ca-a1da-b12798e2cde0</onsuccess></stage><stage stageid="64485ded-6777-4852-a8cc-f866a980e3c0" name="End" type="End"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="timespan" name="Maximum Timespan Value" narrative="The maximum of all of the timespan values supplied" stage="Maximum Timespan Value" /></outputs></stage><stage stageid="51491768-b683-4c5b-a150-f03943247d70" name="Timespan Values" type="Collection"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><display x="135" y="-105" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Timespan Value" type="timespan" /></collectioninfo></stage><stage stageid="1d879bc2-5cd1-4e25-8d37-c157e1133cf0" name="Minimum Timespan Value" type="Data"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="-210" y="-75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>0.00:00:00</initialvalue><private /><alwaysinit /></stage><stage stageid="b63b3567-309e-47ca-a1da-b12798e2cde0" name="Start with Minimum" type="Calculation"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>78ab136e-f028-4c03-a776-9124fda261ad</onsuccess><calculation expression="[Minimum Timespan Value]" stage="Maximum Timespan Value" /></stage><stage stageid="9c67b24d-115a-481f-9054-ca7d6fa0408a" name="Maximum Timespan Value" type="Data"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><display x="150" y="180" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="78ab136e-f028-4c03-a776-9124fda261ad" name="For Each Value" type="LoopStart"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>598192e8-9ae7-4965-bd01-e661d68c1641</onsuccess><groupid>d78a55e4-d0ac-477c-b254-c21b2197d767</groupid><looptype>ForEach</looptype><loopdata>Timespan Values</loopdata></stage><stage stageid="11f34648-502a-4ea2-899f-4425d7c62d92" name="Next" type="LoopEnd"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64485ded-6777-4852-a8cc-f866a980e3c0</onsuccess><groupid>d78a55e4-d0ac-477c-b254-c21b2197d767</groupid></stage><stage stageid="598192e8-9ae7-4965-bd01-e661d68c1641" name="Bigger?" type="Decision"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Timespan Values.Timespan Value] &gt; [Maximum Timespan Value]" /><ontrue>5f08997c-0bb6-453f-ad1a-3326ca40e854</ontrue><onfalse>11f34648-502a-4ea2-899f-4425d7c62d92</onfalse></stage><stage stageid="5f08997c-0bb6-453f-ad1a-3326ca40e854" name="Assign As Maximum" type="Calculation"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="105" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7504cba9-325e-45b9-ab65-e382e7e6806c</onsuccess><calculation expression="[Timespan Values.Timespan Value]" stage="Maximum Timespan Value" /></stage><stage stageid="7504cba9-325e-45b9-ab65-e382e7e6806c" name="anchor3" type="Anchor"><subsheetid>44144695-c6e6-4781-80a7-cbda94215737</subsheetid><loginhibit /><display x="105" y="105" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11f34648-502a-4ea2-899f-4425d7c62d92</onsuccess></stage></process></object>
        <object id="644e3c47-ed9c-4267-aed9-51e927db59d4" name="Utility - Date Converter (Hijiri &lt;-&gt; Gregorian)" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Date Converter (Hijiri &lt;-&gt; Gregorian)" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>151c6266-3066-4857-a1bd-f4b89ac33678</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="109f8906-a0e3-4e28-9346-8a77be1dde31" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5022244d-19ca-4d9a-95c1-d167c343847a" type="Normal" published="True"><name>Get Gregorian Date</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="585d8b0e-655a-42b4-8ac8-7bd24d819bbf" type="Normal" published="True"><name>get number of digits from a string</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="1dba8fb3-4eb3-4c0f-a8c6-e5cfa8545979" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>aa794d2a-3e04-46ca-a469-45c700fcae8f</onsuccess></stage><stage stageid="aa794d2a-3e04-46ca-a469-45c700fcae8f" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="9d029555-feb3-4b1c-ab23-ee759d8a6df5" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Data.dll</reference><reference>System.dll</reference><reference>Microsoft.VisualBasic.dll</reference><reference>System.IO.dll</reference><reference>\\nrrisiprdsmb02\operations_Excellence\RPA\BO_RPA_Prod_Files\Input\Firco\Input\System.Text.RegularExpressions\System.Text.RegularExpressions.dll</reference><reference>System.Windows.Forms.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Text.RegularExpressions</import><import>System.Data</import><import>Microsoft.VisualBasic</import><import>System.Globalization</import><import>System.IO</import><import>System.Windows.Forms</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="c07b3a76-f99b-42d3-9512-3168b93e3da9" name="Clean Up" type="SubSheetInfo"><subsheetid>109f8906-a0e3-4e28-9346-8a77be1dde31</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5b6fccfb-cd79-4e62-8866-73d419e52b9d" name="Start" type="Start"><subsheetid>109f8906-a0e3-4e28-9346-8a77be1dde31</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>18c5c843-610c-42a9-8887-3cb9cf5317b1</onsuccess></stage><stage stageid="18c5c843-610c-42a9-8887-3cb9cf5317b1" name="End" type="End"><subsheetid>109f8906-a0e3-4e28-9346-8a77be1dde31</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="8b95e1fc-ad69-4d7a-80e7-0f3a7927dbbe" name="get number of digits from a string" type="SubSheetInfo"><subsheetid>585d8b0e-655a-42b4-8ac8-7bd24d819bbf</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e1da4703-436e-493c-9377-d2380e00ff93" name="Note1" type="Note"><subsheetid>109f8906-a0e3-4e28-9346-8a77be1dde31</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="0f8b7f28-7b63-455d-a5eb-1b413071b9c1" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c0c3aca9-b84c-4915-87c1-69a5d16216d9" name="Start" type="Start"><subsheetid>585d8b0e-655a-42b4-8ac8-7bd24d819bbf</subsheetid><loginhibit /><display x="0" y="-75" /><inputs><input type="number" name="digits" stage="digits" /><input type="text" name="InputString" stage="InputString" /></inputs><onsuccess>61b6a4f8-1b43-4a1d-bfc7-e06df3321a43</onsuccess></stage><stage stageid="0b710162-7cba-4b93-83cb-8f6e1b7b2fb9" name="End" type="End"><subsheetid>585d8b0e-655a-42b4-8ac8-7bd24d819bbf</subsheetid><loginhibit /><display x="0" y="105" /></stage><stage stageid="61b6a4f8-1b43-4a1d-bfc7-e06df3321a43" name="Get date" type="Code"><subsheetid>585d8b0e-655a-42b4-8ac8-7bd24d819bbf</subsheetid><loginhibit /><display x="0" y="15" /><inputs><input type="text" name="InputStr" expr="[InputString]" /></inputs><outputs><output type="text" name="SubStr" stage="SubStr" /></outputs><onsuccess>0b710162-7cba-4b93-83cb-8f6e1b7b2fb9</onsuccess><code><![CDATA[int CharPosiiton;

InputStr = InputStr.ToUpper();
CharPosiiton = InputStr.IndexOf("DATE OF BIRTH:");
SubStr = InputStr.Substring(CharPosiiton+1);

Regex regex = new Regex(@"\d{4}");

SubStr = regex.Match(SubStr).ToString();]]></code></stage><stage stageid="79f4f375-de9b-4241-82a6-5e02040bd435" name="InputString" type="Data"><subsheetid>585d8b0e-655a-42b4-8ac8-7bd24d819bbf</subsheetid><display x="180" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8ea959c6-85ea-44de-82b2-b5660598447c" name="digits" type="Data"><subsheetid>585d8b0e-655a-42b4-8ac8-7bd24d819bbf</subsheetid><display x="240" y="-105" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="93a4ec08-67cd-4ccb-bcca-405d1a8913c3" name="SubStr" type="Data"><subsheetid>585d8b0e-655a-42b4-8ac8-7bd24d819bbf</subsheetid><display x="240" y="-60" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45209a14-309b-42e9-b8c6-53501e95d778" name="Get Gregorian Date" type="SubSheetInfo"><subsheetid>5022244d-19ca-4d9a-95c1-d167c343847a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="79427d71-e3d7-4b83-a978-8f9ded4d0e66" name="Start" type="Start"><subsheetid>5022244d-19ca-4d9a-95c1-d167c343847a</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Date" narrative="Format should be like &quot;MM/DD/YYYY&quot;&quot;" stage="HigiriDate" /><input type="flag" name="H2G" stage="H2G" /></inputs><onsuccess>28b8120f-2200-4abf-9763-e99203a9dfe9</onsuccess></stage><stage stageid="76122f89-391f-45d5-a26a-6731983b55e4" name="End" type="End"><subsheetid>5022244d-19ca-4d9a-95c1-d167c343847a</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="ConvertedDate" stage="dtr" /></outputs></stage><stage stageid="28b8120f-2200-4abf-9763-e99203a9dfe9" name="Code1" type="Code"><subsheetid>5022244d-19ca-4d9a-95c1-d167c343847a</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="HigiriDate" expr="[HigiriDate]" /><input type="flag" name="H2G" expr="[H2G]" /></inputs><outputs><output type="text" name="dtr" stage="dtr" /></outputs><onsuccess>76122f89-391f-45d5-a26a-6731983b55e4</onsuccess><code><![CDATA[DateTime final=DateTime.Now;
string str;
string stry2;

string[] stry21= HigiriDate.Split('/');

stry2=stry21[0]+"/"+stry21[1]+"/"+stry21[2];


string[] sty1=  stry2.Split('/');
string str2 = sty1[2];

CultureInfo Hijri1 = CultureInfo.CreateSpecificCulture("ar-SA");
CultureInfo CU = CultureInfo.CreateSpecificCulture("en-US");

if (H2G == true)
{
	if (Convert.ToInt32(str2) < 1700)
	{
		DateTime dt1 = Convert.ToDateTime(HigiriDate, Hijri1);
		str = dt1.ToString("MM/dd/yyyy", CU);
		stry2= str;
	}
	
}
else
{
	DateTime dt1 = Convert.ToDateTime(HigiriDate, CU);
	str = dt1.ToString("MM/dd/yyyy", Hijri1);
	stry2= str;	
}

dtr=stry2;]]></code></stage><stage stageid="d072ab78-33b8-4b32-a5af-23f9a81e4cfc" name="HigiriDate" type="Data"><subsheetid>5022244d-19ca-4d9a-95c1-d167c343847a</subsheetid><loginhibit /><narrative>29/02/1444</narrative><display x="240" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">19/01/1438</initialvalue><private /><alwaysinit /></stage><stage stageid="08313c2b-2668-4cf2-a53e-6b6f2819838e" name="dtr" type="Data"><subsheetid>5022244d-19ca-4d9a-95c1-d167c343847a</subsheetid><display x="180" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3245eecb-c363-4bcc-97f9-fa6b28e45363" name="H2G" type="Data"><subsheetid>5022244d-19ca-4d9a-95c1-d167c343847a</subsheetid><display x="180" y="-60" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="f32ab518-c4ab-46ad-afd3-af58dfd14a0a" name="Utility - Encryption" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Encryption" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Provides encryption and decryption facilities. Use the BPServer interface to generate a key to use with these actions." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>b9f5d39b-531b-4b98-b9da-c7ed08901407</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="e219f2ff-30c2-4789-8b2c-e5b9310d2b64" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f" type="Normal" published="True"><name>Encrypt</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20586e73-e078-43da-b00b-9d052295eecb" type="Normal" published="True"><name>Decrypt</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="f4ca84f3-e294-406e-a661-0fe4898e28b9" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>622e357d-8ac2-4e2e-b10f-e80e135fc48d</onsuccess></stage><stage stageid="622e357d-8ac2-4e2e-b10f-e80e135fc48d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="12e3aa5c-efb4-47e0-b169-4f02855564b2" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Security.Cryptography</import><import>System.IO</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="e3d4fda3-ffba-4d1e-bcc4-06aa7440c45b" name="Clean Up" type="SubSheetInfo"><subsheetid>e219f2ff-30c2-4789-8b2c-e5b9310d2b64</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f4b89015-c850-437b-bb19-3aeabe33d249" name="Start" type="Start"><subsheetid>e219f2ff-30c2-4789-8b2c-e5b9310d2b64</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a31ca706-256d-499b-87e4-39e0c09cbc69</onsuccess></stage><stage stageid="a31ca706-256d-499b-87e4-39e0c09cbc69" name="End" type="End"><subsheetid>e219f2ff-30c2-4789-8b2c-e5b9310d2b64</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4597d737-b59f-4e02-a23d-a3428cb6bba8" name="Encrypt" type="SubSheetInfo"><subsheetid>1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f</subsheetid><narrative>Encrypt some data.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="23324d6c-0286-4ba0-a037-97274c251487" name="Start" type="Start"><subsheetid>1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="None" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Key" narrative="The encryption key to use" stage="Key" /><input type="text" name="Data" narrative="The data to encrypt" stage="Data" /></inputs><onsuccess>734bd83f-457c-4347-94cb-4cece2544136</onsuccess></stage><stage stageid="e26b20a7-400d-4867-9cb8-fcdb4ce1e699" name="End" type="End"><subsheetid>1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Encrypted Data" narrative="The encrypted data" stage="Encrypted Data" /></outputs></stage><stage stageid="77aa8490-4891-49f1-987f-8c164fd47639" name="new" type="Note"><subsheetid>e219f2ff-30c2-4789-8b2c-e5b9310d2b64</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d847c244-af2d-4ebc-81aa-7f09de824436" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="092d6796-e6c9-4478-9050-1ec78ca68950" name="Data" type="Data"><subsheetid>1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dbaf96d1-8668-401c-a657-f8f5fb5b975f" name="Key" type="Data"><subsheetid>1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f</subsheetid><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="734bd83f-457c-4347-94cb-4cece2544136" name="Code1" type="Code"><subsheetid>1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Data" expr="[Data]" /><input type="text" name="Key" expr="[Key]" /></inputs><outputs><output type="text" name="Encrypted Data" stage="Encrypted Data" /></outputs><onsuccess>e26b20a7-400d-4867-9cb8-fcdb4ce1e699</onsuccess><code><![CDATA[	Dim ms As New MemoryStream
	Dim keyb() As Byte = Convert.FromBase64String(Key)
	Dim tdes As New TripleDESCryptoServiceProvider()
	Dim encStream As New CryptoStream(ms, _
	 tdes.CreateEncryptor(keyb, tdes.IV), CryptoStreamMode.Write)
	Dim sw As New StreamWriter(encStream)
	sw.Write(Data)
	sw.Flush()
	encStream.FlushFinalBlock()
	ms.Seek(0, SeekOrigin.Begin)
	Dim encText As String = Convert.ToBase64String(ms.ToArray())
	Dim ivs As String = Convert.ToBase64String(tdes.IV)
	Encrypted_Data = ivs & ":" & encText
]]></code></stage><stage stageid="cd4e7115-ffe7-4be1-a978-2161ba505eea" name="Encrypted Data" type="Data"><subsheetid>1b2e9b24-cbdb-4aa6-b9a0-d451bdfb438f</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aaa8aff2-fb2e-4f4f-a3db-71583977611c" name="Decrypt" type="SubSheetInfo"><subsheetid>20586e73-e078-43da-b00b-9d052295eecb</subsheetid><narrative>Decrypt some data.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0cd72686-0137-408d-ab7d-d2ab4f4191f6" name="Start" type="Start"><subsheetid>20586e73-e078-43da-b00b-9d052295eecb</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="None" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Key" narrative="The encryption key" stage="Key" /><input type="text" name="Encrypted Data" narrative="The encrypted data" stage="Encrypted Data" /></inputs><onsuccess>a0c0095f-59af-4312-8386-fce19b39daf4</onsuccess></stage><stage stageid="59d47d17-e5d3-4632-a10d-2aa24935bc95" name="End" type="End"><subsheetid>20586e73-e078-43da-b00b-9d052295eecb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Data" narrative="The decrypted data" stage="Data" /></outputs></stage><stage stageid="e28225a6-bd19-4762-86e1-82ea49549ed2" name="Key" type="Data"><subsheetid>20586e73-e078-43da-b00b-9d052295eecb</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32f05ef2-3528-4cec-8808-ab276a81299e" name="Encrypted Data" type="Data"><subsheetid>20586e73-e078-43da-b00b-9d052295eecb</subsheetid><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="79e34cd8-8823-4908-881c-b01d9741e8d1" name="Data" type="Data"><subsheetid>20586e73-e078-43da-b00b-9d052295eecb</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a0c0095f-59af-4312-8386-fce19b39daf4" name="Code2" type="Code"><subsheetid>20586e73-e078-43da-b00b-9d052295eecb</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="EncryptedData" expr="[Encrypted Data]" /><input type="text" name="Key" expr="[Key]" /></inputs><outputs><output type="text" name="Data" stage="Data" /></outputs><onsuccess>59d47d17-e5d3-4632-a10d-2aa24935bc95</onsuccess><code><![CDATA[
	Dim parts() As String = EncryptedData.Split(":"c)
	If parts.Length <> 2 Then Throw New ApplicationException("Invalid data")	
	Dim iv() As Byte = Convert.FromBase64String(parts(0))
	Dim datab() As Byte = Convert.FromBase64String(parts(1))
	Dim keyb() As Byte = Convert.FromBase64String(Key)
	Dim tdes As New TripleDESCryptoServiceProvider()
	Dim ms As New MemoryStream(datab)
	Dim encStream As New CryptoStream(ms, _
	tdes.CreateDecryptor(keyb, iv), CryptoStreamMode.Read)
	Using sr As New StreamReader(encStream)
		Data = sr.ReadToEnd()
	End Using
]]></code></stage></process></object>
        <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" name="Utility - Environment" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Environment" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Utilities for interacting with the environment - read screen resolution, determine OS type, etc." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>257afd68-bed2-460b-94e5-17b2b6263b15</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-67</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="72ac1b78-ac00-4ede-b5fa-13beef468814" type="Normal" published="True"><name>Font Smoothing Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf31a66d-5534-4af0-9a07-433066d1a4b9" type="Normal" published="True"><name>Get Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf9f6573-f06c-4ab6-9672-34d2e644415e" type="Normal" published="True"><name>Set Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="50ea2955-c157-4803-b16c-fea2255ce9e2" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a7ea3097-4e9b-48f3-9431-68977353a6bc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4987fdec-ac7a-4166-a60b-adef47ecdcc7" type="Normal" published="True"><name>Get Screen Resolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="80ee143b-0379-4ba5-b13f-5d42dde3160d" type="Normal" published="True"><name>Start Process Read Stderr and Stdout</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5864a25-e7a2-430a-9045-78a116e64701" type="Normal" published="True"><name>Kill Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d4412bd-579a-4d1e-937e-12fbb756630c" type="Normal" published="True"><name>Read Memory Stats</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b5cc7aa-ca53-495f-a51e-4ed559efe88b" type="Normal" published="True"><name>Read Process Working Set</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7" type="Normal" published="True"><name>Start Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="29015311-1659-438e-b7b6-b8ff65e4a840" type="Normal" published="True"><name>Run Process Until Ended</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13c8f06e-8a7c-4da8-b813-d5738ce5369a" type="Normal" published="True"><name>Wait for Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e22dc28-2f71-421b-9687-c367358919e3" type="Normal" published="True"><name>Wait for Process Window</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b6e051bf-8afe-4ea3-9ae0-52eee58eec76" type="Normal" published="True"><name>Get User Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c556a801-8bd8-4e0e-bf8e-2dd6b5642063" type="Normal" published="True"><name>Get Machine Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="5f046b4e-e1db-4786-ae90-3d5d6c6d9302" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9e4646d0-d8c7-44d6-a5d9-9509e3ba8883</onsuccess></stage><stage stageid="9e4646d0-d8c7-44d6-a5d9-9509e3ba8883" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e9a8ad-308f-49f4-9dd0-9dafbc1f625a" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>system.windows.forms.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Windows.Forms</import><import>System.Diagnostics</import><import>System.Data</import><import>Microsoft.VisualBasic</import><import>System.Threading</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="6e5c9120-5c20-4fe2-9bfd-149470c9a1ea" name="Clean Up" type="SubSheetInfo"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e36d7ef5-340c-4d1f-a670-d1f1dcd7bdc3" name="Start" type="Start"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1451859f-91ff-4e0a-b8a8-7bbd6dc50341</onsuccess></stage><stage stageid="1451859f-91ff-4e0a-b8a8-7bbd6dc50341" name="End" type="End"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f50788a0-79a5-446b-b3cc-fc8d66091330" name="Get Screen Resolution" type="SubSheetInfo"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><narrative>Gets the resolution of the screen in pixels for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e8deba-018e-4402-bb33-773a299ae864" name="Start" type="Start"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd2d0918-9c73-4138-90b8-538eaa06f135</onsuccess></stage><stage stageid="3348aa7d-5b76-4d3f-a590-e571a9a83494" name="End" type="End"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" narrative="The number of pixels in the horizontal screen axis" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" narrative="The number of pixels in the vertical screen axis" stage="Vertical Resolution" /></outputs></stage><stage stageid="c970b361-339a-4e60-a056-cf8571553cb8" name="new" type="Note"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="faf2adc8-9198-4483-b6dc-e67e978cbf7b" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bd2d0918-9c73-4138-90b8-538eaa06f135" name="GetResolution" type="Code"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" stage="Vertical Resolution" /></outputs><onsuccess>3348aa7d-5b76-4d3f-a590-e571a9a83494</onsuccess><code><![CDATA[dim S As Size = Screen.PrimaryScreen.Bounds.Size
Horizontal_Resolution = S.Width
Vertical_Resolution = S.Height]]></code></stage><stage stageid="37500b62-bdb6-42ed-91a3-02fbcffc75ee" name="Horizontal Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8edafede-371d-454f-a5ca-0b28eda542e5" name="Vertical Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="165" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8bff191-0772-44c3-bea4-1d4ff701d49f" name="Kill Process" type="SubSheetInfo"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><narrative>Force kills all processes with a given name.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e3791a92-d20e-4afe-81bf-5aab170c3aba" name="Start" type="Start"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All processes with the given name will be terminated." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" stage="Process Name" /></inputs><onsuccess>697bc06f-0d64-430d-a5ea-b3fd02b746c8</onsuccess></stage><stage stageid="e9c6833a-30a3-4233-840b-35d605e44199" name="End" type="End"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06a89dc2-9ed1-497c-b7f0-14664bdb76c5" name="Process Name" type="Data"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><display x="120" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="697bc06f-0d64-430d-a5ea-b3fd02b746c8" name="Kill Process1" type="Code"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><onsuccess>e9c6833a-30a3-4233-840b-35d605e44199</onsuccess><code><![CDATA[  Try
    for each p as System.Diagnostics.Process in System.Diagnostics.Process.GetProcessesByName(Process_Name)
      p.kill
    next
  Catch ex As Exception
  End Try]]></code></stage><stage stageid="374fc1ad-8b82-4d95-b3d4-9710692a2725" name="Read Memory Stats" type="SubSheetInfo"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><narrative>Get memory statistics for a given set of processes including the working set and the virtual memory size.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="237994c5-9c89-409f-9459-a9f1ce60d7ad" name="Start" type="Start"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Process Names" narrative="The names of the processes to get memory statistics for" stage="Processes" /></inputs><onsuccess>c64eaa40-85d5-42b9-bcfe-0e314328bccb</onsuccess></stage><stage stageid="83912618-be8e-4f5a-860a-03cc449519c4" name="End" type="End"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Process Statistics" narrative="A collection of process statistics including the working set and the virtual memory size" stage="Process Statistics" /></outputs></stage><stage stageid="c64eaa40-85d5-42b9-bcfe-0e314328bccb" name="Get Stats" type="Code"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Processes" expr="[Processes]" /></inputs><outputs><output type="collection" name="Process Statistics" stage="Process Statistics" /></outputs><onsuccess>83912618-be8e-4f5a-860a-03cc449519c4</onsuccess><code><![CDATA[GC.Collect()
Process_Statistics = New DataTable
process_statistics.Columns.Add("Process Name", GetType(String))
process_statistics.Columns.Add("PID", GetType(Decimal))
process_statistics.Columns.Add("Working Set", GetType(Decimal))
process_statistics.Columns.Add("Virtual Memory", GetType(Decimal))

For Each R As DataRow in Processes.Rows
	dim ProcName As String = CStr(R("Process Name"))
	Dim PID As Integer = CInt(R("PID"))
	For Each P As Process in Process.GetProcesses()
		If P.ProcessName = ProcName OrElse P.ID = PID Then
			Process_Statistics.Rows.Add(New Object() {P.ProcessName, P.ID, P.WorkingSet64, P.VirtualMemorySize64})
		End If
	Next
Next]]></code></stage><stage stageid="2d4e55c2-5e4d-45d5-8fd3-27d58de71615" name="Processes" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /></collectioninfo><initialvalue><row><field name="Process Name" type="text" value="Automate" /><field name="PID" type="number" value="-1" /></row><row><field name="Process Name" type="text" value="javaw" /><field name="PID" type="number" value="-1" /></row></initialvalue></stage><stage stageid="99b25e8c-cd81-4e2f-99c3-d4c8afb738fc" name="Process Statistics" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /><field name="Working Set" type="number" /><field name="Virtual Memory" type="number" /></collectioninfo></stage><stage stageid="f781848e-f409-4be9-aea7-4672e21e840e" name="Read Process Working Set" type="SubSheetInfo"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><narrative>Gets the size of the working set for the given process.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="41b78729-d533-460b-98af-6180066d831b" name="Start" type="Start"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process you want stats for" stage="Process Name" /></inputs><onsuccess>92e54184-9c46-425a-a681-ca15d5f38671</onsuccess></stage><stage stageid="d9a48cd9-620d-4b45-87bb-cb1a223d729e" name="End" type="End"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Working Set" narrative="The working set number holding memory stats for your process" stage="Working Set" /></outputs></stage><stage stageid="92e54184-9c46-425a-a681-ca15d5f38671" name="Get Memory Set" type="Code"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><narrative>Used += to return the total memory used by the application we are interested - just in case it is running multiple times.</narrative><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Proc" expr="[Process Name]" /></inputs><outputs><output type="number" name="Working Set" stage="Working Set" /></outputs><onsuccess>d9a48cd9-620d-4b45-87bb-cb1a223d729e</onsuccess><code><![CDATA[
For Each P As Process in Process.GetProcesses()
	If P.ProcessName = Proc Then
		Working_Set += P.WorkingSet64
	End If
Next]]></code></stage><stage stageid="2db08314-74db-4968-8a01-2fffb03cc350" name="Process Name" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="135" y="-105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="192be4f9-084a-4c4d-99a1-67383bb9cf30" name="Working Set" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">0</initialvalue><private /><alwaysinit /></stage><stage stageid="fb42bad5-7a16-4ac1-8cc7-148cb8ad1d0f" name="Font Smoothing Enabled" type="SubSheetInfo"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><narrative>Gets the font smoothing setting for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ad641c65-2bb5-4746-a61c-38a70a4e0b89" name="Start" type="Start"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>96f9fe29-f641-44ab-ab0e-a4091edaec4c</onsuccess></stage><stage stageid="9150eaee-22ec-4228-803e-123c888b87e5" name="End" type="End"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" narrative="True if font smoothing is enabled" stage="Enabled?" /></outputs></stage><stage stageid="96f9fe29-f641-44ab-ab0e-a4091edaec4c" name="Get Font Smoothing Enabled" type="Code"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" stage="Enabled?" /></outputs><onsuccess>9150eaee-22ec-4228-803e-123c888b87e5</onsuccess><code><![CDATA[Enabled=System.Windows.Forms.Systeminformation.IsFontSmoothingEnabled]]></code></stage><stage stageid="d7db2bff-a394-483d-a249-bae03f688e95" name="Enabled?" type="Data"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><display x="120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80a2dcaa-31dd-419b-9fd4-a61249245b1b" name="Start Process" type="SubSheetInfo"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><narrative>Starts a process directly with the given arguments.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d5177aa-21f6-4dac-b731-60fd85c76097" name="Start" type="Start"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or short cut to start" stage="Application" /><input type="text" name="Arguments" narrative="Any arguments needed for the app" stage="Arguments" /></inputs><onsuccess>8fd5d005-95ec-43c3-acae-de13b914eb3e</onsuccess></stage><stage stageid="9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3" name="End" type="End"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3401dc5-5639-4e5d-b55a-b633330db327" name="Run Process Until Ended" type="SubSheetInfo"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><narrative>Run a process and wait until completion or timeout.</narrative><display x="-195" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f6878e25-301c-4540-a15d-7a83dfc57a75" name="End" type="End"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ddad15-d793-4697-8f79-1a42247fb0ba" name="Note1" type="Note"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca8b3a6e-c15d-4b6b-bf9f-96c0675d8e04" name="Application" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d495c29-e0f2-4bdd-ac85-b7875f7b1117" name="Arguments" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8fd5d005-95ec-43c3-acae-de13b914eb3e" name="Start Process" type="Code"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" expr="[Application]" /><input type="text" name="Arguments" expr="[Arguments]" /></inputs><onsuccess>9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3</onsuccess><code><![CDATA[If Arguments<>"" Then
  System.Diagnostics.Process.Start(Application, Arguments)
Else
  System.Diagnostics.Process.Start(Application)
End If]]></code></stage><stage stageid="085fdcca-3a7c-4a20-8b83-69add0889a54" name="Application" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e53a27fe-26fe-4503-ab86-8a5208e43d80" name="Arguments" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b84d4bb-deea-40c5-96eb-6adcf59fe7cf" name="Run Process" type="Code"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="appn" expr="[Application]" /><input type="text" name="args" expr="[Arguments]" /><input type="text" name="dir" expr="[Working Folder]" /><input type="timespan" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="timedOut" stage="Fail Datetime Reached?" /></outputs><onsuccess>7fa022c9-fce8-496a-a40b-9119406000db</onsuccess><code><![CDATA[timedOut = False
Dim startTime as Date = Date.Now

Dim info as New ProcessStartInfo(appn)
If args <> "" Then  info.Arguments = args
If dir <> "" Then info.WorkingDirectory = dir

Using proc As Process = Process.Start(info)
	timedOut = Not proc.WaitForExit( _
	 CInt(timeout.TotalMilliseconds))
End Using]]></code></stage><stage stageid="f0792b52-0999-4f35-a46c-513fdcc3c381" name="Timeout" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>0.00:00:10</initialvalue><private /><alwaysinit /></stage><stage stageid="2adaf80c-c627-4556-8b6d-64929056128b" name="Start" type="Start"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or shortcut to start" stage="Application" /><input type="text" name="Arguments" narrative="Optional - any arguments needed to run the application" stage="Arguments" /><input type="text" name="Working Folder" narrative="Optional - the application working folder" stage="Working Folder" /><input type="timespan" name="Timeout" narrative="How long to wait for the application to finish. Default is 10 seconds" stage="Timeout" /></inputs><onsuccess>0b84d4bb-deea-40c5-96eb-6adcf59fe7cf</onsuccess></stage><stage stageid="c91ac000-31f2-44b8-a481-a878929285ae" name="Fail Datetime Reached?" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="7fa022c9-fce8-496a-a40b-9119406000db" name="Timed Out?" type="Decision"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Fail Datetime Reached?]" /><ontrue>433c4289-a312-4554-bc27-6ee3c7ace153</ontrue><onfalse>f6878e25-301c-4540-a15d-7a83dfc57a75</onfalse></stage><stage stageid="433c4289-a312-4554-bc27-6ee3c7ace153" name="System Exception" type="Exception"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Application &quot; &amp; [Application] &amp; &quot; was still running after the maximum time period&quot;" /></stage><stage stageid="bcdc67ee-3c90-443c-9c4f-ec02fc8ee8d2" name="Wait for Process" type="SubSheetInfo"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><narrative>Attach to a process and wait for it to complete.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99a09b67-00bd-4e8a-bad7-2f589ac9de94" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="0dcbb991-85d4-45bb-aaa9-a8bf5da36d15" name="Start" type="Start"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Maximum wait time (seconds)" narrative="The maximum time to wait for the process to complete" stage="Maximum wait time (seconds)" /><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /></inputs><onsuccess>dfe0f2dc-5806-4cf9-82f3-269f9b06b03f</onsuccess></stage><stage stageid="55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="e1eea34b-f6e4-49b3-bcae-930f70caec29" name="Maximum wait time (seconds)" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dfe0f2dc-5806-4cf9-82f3-269f9b06b03f" name="Wait for process" type="Code"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Max Wait" expr="[Maximum wait time (seconds)]" /></inputs><outputs><output type="flag" name="Found?" stage="Found?" /></outputs><onsuccess>55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd</onsuccess><code><![CDATA[                Try
                  Found_ = False
                  Dim bProcFound as Boolean = False
                  Dim iLoop as Integer = 0
                  Dim myProcesses() As System.Diagnostics.Process
                  Dim instance As System.Diagnostics.Process
                  Do While bProcFound = False AND iLoop < Max_Wait
                    myProcesses = System.Diagnostics.Process.GetProcessesByName(Process_Name)
                    For Each instance In myProcesses
                        bProcFound = True
                        Found_ = True
                    Next
                    Threading.Thread.Sleep(1000)
                    iloop += 1
                  Loop
                Catch ex As Exception
                End Try]]></code></stage><stage stageid="9344b166-5d5d-4b99-bc53-0c0331b8c776" name="Found?" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a02d7fb-31ed-4c83-92c9-9a9a7831920e" name="Process Name" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="952ca62f-afb2-4f25-adea-21d86339081c" name="Wait for Process Window" type="SubSheetInfo"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><narrative>Waits for a process with a given name has displayed a window with the given title.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19ea35dc-66b8-406e-9eca-4c6ef4d4e0ab" name="Start" type="Start"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /><input type="text" name="Window Title" narrative="The title of the window within the process" stage="Window Title" /><input type="number" name="Wait" narrative="The maximum amount of time to wait for" stage="Wait" /></inputs><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess></stage><stage stageid="b6fdc874-6a8d-405b-946e-10b6b47a6ae1" name="End" type="End"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /></outputs></stage><stage stageid="d3b1986a-fa70-41e9-a8af-cd2ffc78342e" name="Find Process" type="Code"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="text" name="Window Title" expr="[Window Title]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f</onsuccess><code><![CDATA[try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(process_name)

	if p.mainwindowtitle.trim.tolower like window_title.trim.tolower then
		found = true
		exit sub
	end if

next

catch e as exception
end try]]></code></stage><stage stageid="6088ca18-1f7c-4db7-84af-ccecfe1ced0f" name="Time Out2" type="WaitEnd"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid></stage><stage stageid="4498756a-e9e1-4bef-86e6-3b7ed91a7439" name="Wait" type="WaitStart"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid><choices /><timeout>0.5</timeout></stage><stage stageid="ba11e756-90e9-4cd7-a787-a41c2818e4b6" name="Count Down" type="Calculation"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4498756a-e9e1-4bef-86e6-3b7ed91a7439</onsuccess><calculation expression="[Wait]-0.5" stage="Wait" /></stage><stage stageid="a5225d0b-41b3-4ed2-9f7c-31461a1f262a" name="Wait?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Wait]&gt;0" /><ontrue>ba11e756-90e9-4cd7-a787-a41c2818e4b6</ontrue><onfalse>ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9</onfalse></stage><stage stageid="d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f" name="Found?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Found]" /><ontrue>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</ontrue><onfalse>a5225d0b-41b3-4ed2-9f7c-31461a1f262a</onfalse></stage><stage stageid="ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9" name="anchor1" type="Anchor"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</onsuccess></stage><stage stageid="00581602-0606-4a0b-8f92-3dab2b97c72d" name="Process Name" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6f981e4-e1f7-40a1-bf9e-461e118c4bf3" name="Window Title" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5eaecb90-3ed2-45ac-9948-5fb96f2b416a" name="Found" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80076f3c-7351-4c27-97b5-c8578ae2761c" name="Wait" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7fc8557d-14e7-4b64-b495-23b8a7c76ef7" name="Get Clipboard" type="SubSheetInfo"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><narrative>Gets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1de3e23-13cc-4058-95cb-5d1b72e68cac" name="Start" type="Start"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>106d82b6-72c5-41b6-af2c-3ab3709a9c4e</onsuccess></stage><stage stageid="211e889c-ac33-46c2-8c6a-3d01c6f1ae4a" name="End" type="End"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs></stage><stage stageid="106d82b6-72c5-41b6-af2c-3ab3709a9c4e" name="Get" type="Calculation"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>211e889c-ac33-46c2-8c6a-3d01c6f1ae4a</onsuccess><calculation expression="GetClipboard()" stage="Clipboard" /></stage><stage stageid="0634315f-c572-4cf9-8727-98308e50c2c2" name="Clipboard" type="Data"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><display x="90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62bf25c7-7263-4fb3-bef2-20c9d9c2113d" name="Set Clipboard" type="SubSheetInfo"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><narrative>Sets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="57eca987-ec5e-485a-a03b-40c653f72a34" name="Start" type="Start"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" narrative="The value to set the clipboard to." stage="Clipboard" /></inputs><onsuccess>54826c34-2991-4964-b0a3-0e0a2f951f29</onsuccess></stage><stage stageid="d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c" name="End" type="End"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54826c34-2991-4964-b0a3-0e0a2f951f29" name="Set" type="Code"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="[Clipboard]" /></inputs><onsuccess>d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c</onsuccess><code><![CDATA[System.Windows.Forms.Clipboard.SetDataObject(Clipboard)]]></code></stage><stage stageid="121f76bc-6b69-43a4-9484-16729e37267b" name="Clipboard" type="Data"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8fa4afe-4c2c-409d-9691-e213b773c434" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><narrative>Clears the clipboard contents.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="706b08af-a9e1-4484-8c41-b06b8e76af1e" name="Start" type="Start"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d1113981-40f5-450a-8b7e-e059eed37e76</onsuccess></stage><stage stageid="e13b6d4e-e05c-491e-ace6-54389e4a99fb" name="End" type="End"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1113981-40f5-450a-8b7e-e059eed37e76" name="Set Clipboard" type="SubSheet"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="&quot;&quot;" /></inputs><onsuccess>e13b6d4e-e05c-491e-ace6-54389e4a99fb</onsuccess><processid>cf9f6573-f06c-4ab6-9672-34d2e644415e</processid></stage><stage stageid="15c6de75-886d-492c-8c12-5f0de483e1f7" name="Get User Name" type="SubSheetInfo"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a6bce0ea-b898-4abc-9a4f-bcfce32b3bb9" name="Start" type="Start"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c731c906-58b6-4969-bd70-b7ecd7fa47ae</onsuccess></stage><stage stageid="ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae" name="End" type="End"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="User Name" narrative="The name of the logged in user in the current system" stage="Username" /></outputs></stage><stage stageid="c731c906-58b6-4969-bd70-b7ecd7fa47ae" name="GetUserName" type="Code"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="username" stage="Username" /></outputs><onsuccess>ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae</onsuccess><code><![CDATA[
username = Environment.UserName]]></code></stage><stage stageid="b3608be8-eeaa-4984-891b-4d8c705ac7f4" name="Username" type="Data"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b47157dd-5fca-4b0b-989b-b23a03641f3f" name="Get Machine Name" type="SubSheetInfo"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f26fd0-6cfa-4de8-b62a-fd9c09f47be4" name="Start" type="Start"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61db579f-944a-4ba8-aedc-bdf80bc31cb7</onsuccess></stage><stage stageid="a69b53e7-8e67-4383-9b6f-28c57c9a82eb" name="End" type="End"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Machine Name" narrative="The hostname of the machine running this action" stage="Machine Name" /></outputs></stage><stage stageid="61db579f-944a-4ba8-aedc-bdf80bc31cb7" name="GetMachineName" type="Code"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="machineName" stage="Machine Name" /></outputs><onsuccess>a69b53e7-8e67-4383-9b6f-28c57c9a82eb</onsuccess><code><![CDATA[
machineName = Environment.MachineName]]></code></stage><stage stageid="e3b5bdc7-5646-4f63-b78b-c9824a496d2f" name="Machine Name" type="Data"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94b4d694-3e3a-4bb2-bcb6-15a401f31b76" name="Working Folder" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc49d63c-0e29-422f-b99c-4689f5b5afd1" name="Input Args" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="91242c6b-8086-4fd1-99ea-efb0549f2517" name="Variables" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="fe09088f-160d-4f5e-af9d-a2cf44a91d21" name="Start Process Read Stderr and Stdout" type="SubSheetInfo"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><narrative>Starts a process directly with the given arguments, reads the standard output and standard error and outputs them in seperate data items.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="56b0bbbe-2836-41b5-8ccf-30fa098e975f" name="Start" type="Start"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="0" /><inputs><input type="text" name="Arguments" narrative="The arguments that coincide with the process." stage="Arguments" /><input type="text" name="Process Name" narrative="The name of the process to start." stage="Process Name" /></inputs><onsuccess>d8552129-84eb-4d65-8bee-d06820fb6e5f</onsuccess></stage><stage stageid="e9699401-5328-4e3b-ad11-bd29880236e4" name="End" type="End"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="120" /><outputs><output type="text" name="Standard Output" stage="Standard Output" /><output type="text" name="Standard Error" stage="Standard Error" /></outputs></stage><stage stageid="1a31c8d4-725e-4b41-8b64-72ff5feccd2f" name="Arguments" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="0" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d8552129-84eb-4d65-8bee-d06820fb6e5f" name="Run Process read Output" type="Code"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-15" y="60" /><inputs><input type="text" name="Argument" expr="[Arguments]" /><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="text" name="Standard Output" stage="Standard Output" /><output type="text" name="Standard Error" stage="Standard Error" /></outputs><onsuccess>e9699401-5328-4e3b-ad11-bd29880236e4</onsuccess><code><![CDATA[Dim processName As String = Process_Name

Dim process As New Process() With {
	.StartInfo = New ProcessStartInfo() With {
		.FileName = processName,
		.Arguments = Argument,
		.UseShellExecute = False,
		.CreateNoWindow = True,
		.RedirectStandardError = True,
		.RedirectStandardOutput = True
	}
}

process.Start()

' Read the standard out and standard error async
' to avoid any EOF blocking while the process
' waits to exit.

Dim standardOutput = process.StandardOutput.ReadToEndAsync()
Dim standardError = process.StandardError.ReadToEndAsync()

process.WaitForExit()

If standardOutput.isCompleted Then Standard_Output = standardOutput.Result
If standardError.isCompleted Then Standard_Error = standardError.Result]]></code></stage><stage stageid="458272d5-fe32-4588-9ef3-7af2fbacdf25" name="Standard Output" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="180" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a63c7a4b-9add-4e2e-8f28-e8886b11dee1" name="Standard Error" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1fe26b2b-6b1d-4e63-9679-97779a9da64f" name="Inputs" type="Block"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-270" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="679cebbb-478d-4647-9cf9-6459799440aa" name="Outputs" type="Block"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><loginhibit /><display x="-270" y="105" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8f6e9278-4ab8-4754-935f-66082c13a038" name="Process Name" type="Data"><subsheetid>80ee143b-0379-4ba5-b13f-5d42dde3160d</subsheetid><display x="-195" y="45" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="7c00fc3b-c10e-40dc-8d46-33f171ca3041" name="Utility - Environment - Extended" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Environment - Extended" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>aae3946f-e20b-43b2-9f48-a961a1e4f30c</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="f488e1d8-5f51-416e-9769-e4f5cff5cc0f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8771a13f-7526-48b0-877b-12ad7f1b3608" type="Normal" published="True"><name>Get Desktop path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="38a5bccc-aeb1-424d-8d20-c1facdfed6ba" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>22599e55-2567-44d1-8c24-8ca3fbf87726</onsuccess></stage><stage stageid="22599e55-2567-44d1-8c24-8ca3fbf87726" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="46125995-91c0-44e7-9e49-16a31def2cbd" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="ef68a89b-e64f-49c8-8e3c-8b4b0d2a5e51" name="Clean Up" type="SubSheetInfo"><subsheetid>f488e1d8-5f51-416e-9769-e4f5cff5cc0f</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4ed85b4d-c78b-4e04-b2bd-f4cc8ca66fcd" name="Start" type="Start"><subsheetid>f488e1d8-5f51-416e-9769-e4f5cff5cc0f</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>2f6a0d7a-9729-4fbc-a834-e4bd14dbae7e</onsuccess></stage><stage stageid="2f6a0d7a-9729-4fbc-a834-e4bd14dbae7e" name="End" type="End"><subsheetid>f488e1d8-5f51-416e-9769-e4f5cff5cc0f</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="9168503e-d971-494a-b543-9d4259b83946" name="Get Desktop path" type="SubSheetInfo"><subsheetid>8771a13f-7526-48b0-877b-12ad7f1b3608</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5a04c788-6508-48d9-8326-417795c09ca8" name="Start" type="Start"><subsheetid>8771a13f-7526-48b0-877b-12ad7f1b3608</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>70151342-d633-4ca4-9cb1-5941b79fe02c</onsuccess></stage><stage stageid="ff110307-5605-40d7-8713-651f7853f06a" name="End" type="End"><subsheetid>8771a13f-7526-48b0-877b-12ad7f1b3608</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Path" narrative="The desktop path of the current user" stage="Path" /></outputs></stage><stage stageid="c943721b-b2ec-46a1-be64-4d0e64a3e85c" name="" type="Note"><subsheetid>f488e1d8-5f51-416e-9769-e4f5cff5cc0f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="41b69794-9501-437b-9f16-6a8761d60e7a" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="70151342-d633-4ca4-9cb1-5941b79fe02c" name="Desktop path" type="Code"><subsheetid>8771a13f-7526-48b0-877b-12ad7f1b3608</subsheetid><loginhibit /><display x="15" y="-30" /><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>ff110307-5605-40d7-8713-651f7853f06a</onsuccess><code><![CDATA[Path = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);]]></code></stage><stage stageid="02025fb6-5a75-4a39-9bbc-a2553ec4e3e7" name="Path" type="Data"><subsheetid>8771a13f-7526-48b0-877b-12ad7f1b3608</subsheetid><display x="-135" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="e7707cff-2f70-4c61-8f60-be8537f12a2a" name="Utility - Environment_Set Image in ClipBoard" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Environment_Set Image in ClipBoard" version="5.0.11" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>257afd68-bed2-460b-94e5-17b2b6263b15</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="72ac1b78-ac00-4ede-b5fa-13beef468814" type="Normal" published="True"><name>Font Smoothing Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf31a66d-5534-4af0-9a07-433066d1a4b9" type="Normal" published="True"><name>Get Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf9f6573-f06c-4ab6-9672-34d2e644415e" type="Normal" published="True"><name>Set Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="50ea2955-c157-4803-b16c-fea2255ce9e2" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a7ea3097-4e9b-48f3-9431-68977353a6bc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4987fdec-ac7a-4166-a60b-adef47ecdcc7" type="Normal" published="True"><name>Get Screen Resolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5864a25-e7a2-430a-9045-78a116e64701" type="Normal" published="True"><name>Kill Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d4412bd-579a-4d1e-937e-12fbb756630c" type="Normal" published="True"><name>Read Memory Stats</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b5cc7aa-ca53-495f-a51e-4ed559efe88b" type="Normal" published="True"><name>Read Process Working Set</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7" type="Normal" published="True"><name>Start Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="29015311-1659-438e-b7b6-b8ff65e4a840" type="Normal" published="True"><name>Run Process Until Ended</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13c8f06e-8a7c-4da8-b813-d5738ce5369a" type="Normal" published="True"><name>Wait for Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e22dc28-2f71-421b-9687-c367358919e3" type="Normal" published="True"><name>Wait for Process Window</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b6e051bf-8afe-4ea3-9ae0-52eee58eec76" type="Normal" published="True"><name>Get User Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c556a801-8bd8-4e0e-bf8e-2dd6b5642063" type="Normal" published="True"><name>Get Machine Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="5f046b4e-e1db-4786-ae90-3d5d6c6d9302" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9e4646d0-d8c7-44d6-a5d9-9509e3ba8883</onsuccess></stage><stage stageid="9e4646d0-d8c7-44d6-a5d9-9509e3ba8883" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e9a8ad-308f-49f4-9dd0-9dafbc1f625a" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>system.windows.forms.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Windows.Forms</import><import>System.Diagnostics</import><import>System.Data</import><import>Microsoft.VisualBasic</import><import>System.Threading</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="6e5c9120-5c20-4fe2-9bfd-149470c9a1ea" name="Clean Up" type="SubSheetInfo"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e36d7ef5-340c-4d1f-a670-d1f1dcd7bdc3" name="Start" type="Start"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1451859f-91ff-4e0a-b8a8-7bbd6dc50341</onsuccess></stage><stage stageid="1451859f-91ff-4e0a-b8a8-7bbd6dc50341" name="End" type="End"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f50788a0-79a5-446b-b3cc-fc8d66091330" name="Get Screen Resolution" type="SubSheetInfo"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><narrative>Gets the resolution of the screen in pixels for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e8deba-018e-4402-bb33-773a299ae864" name="Start" type="Start"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd2d0918-9c73-4138-90b8-538eaa06f135</onsuccess></stage><stage stageid="3348aa7d-5b76-4d3f-a590-e571a9a83494" name="End" type="End"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" narrative="The number of pixels in the horizontal screen axis" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" narrative="The number of pixels in the vertical screen axis" stage="Vertical Resolution" /></outputs></stage><stage stageid="c970b361-339a-4e60-a056-cf8571553cb8" name="new" type="Note"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="faf2adc8-9198-4483-b6dc-e67e978cbf7b" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bd2d0918-9c73-4138-90b8-538eaa06f135" name="GetResolution" type="Code"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" stage="Vertical Resolution" /></outputs><onsuccess>3348aa7d-5b76-4d3f-a590-e571a9a83494</onsuccess><code><![CDATA[dim S As Size = Screen.PrimaryScreen.Bounds.Size
Horizontal_Resolution = S.Width
Vertical_Resolution = S.Height]]></code></stage><stage stageid="37500b62-bdb6-42ed-91a3-02fbcffc75ee" name="Horizontal Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8edafede-371d-454f-a5ca-0b28eda542e5" name="Vertical Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="165" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8bff191-0772-44c3-bea4-1d4ff701d49f" name="Kill Process" type="SubSheetInfo"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><narrative>Force kills all processes with a given name.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e3791a92-d20e-4afe-81bf-5aab170c3aba" name="Start" type="Start"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All processes with the given name will be terminated." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" stage="Process Name" /></inputs><onsuccess>697bc06f-0d64-430d-a5ea-b3fd02b746c8</onsuccess></stage><stage stageid="e9c6833a-30a3-4233-840b-35d605e44199" name="End" type="End"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06a89dc2-9ed1-497c-b7f0-14664bdb76c5" name="Process Name" type="Data"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><display x="120" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="697bc06f-0d64-430d-a5ea-b3fd02b746c8" name="Kill Process1" type="Code"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><onsuccess>e9c6833a-30a3-4233-840b-35d605e44199</onsuccess><code><![CDATA[  Try
    for each p as System.Diagnostics.Process in System.Diagnostics.Process.GetProcessesByName(Process_Name)
      p.kill
    next
  Catch ex As Exception
  End Try]]></code></stage><stage stageid="374fc1ad-8b82-4d95-b3d4-9710692a2725" name="Read Memory Stats" type="SubSheetInfo"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><narrative>Get memory statistics for a given set of processes including the working set and the virtual memory size.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="237994c5-9c89-409f-9459-a9f1ce60d7ad" name="Start" type="Start"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Process Names" narrative="The names of the processes to get memory statistics for" stage="Processes" /></inputs><onsuccess>c64eaa40-85d5-42b9-bcfe-0e314328bccb</onsuccess></stage><stage stageid="83912618-be8e-4f5a-860a-03cc449519c4" name="End" type="End"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Process Statistics" narrative="A collection of process statistics including the working set and the virtual memory size" stage="Process Statistics" /></outputs></stage><stage stageid="c64eaa40-85d5-42b9-bcfe-0e314328bccb" name="Get Stats" type="Code"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Processes" expr="[Processes]" /></inputs><outputs><output type="collection" name="Process Statistics" stage="Process Statistics" /></outputs><onsuccess>83912618-be8e-4f5a-860a-03cc449519c4</onsuccess><code><![CDATA[GC.Collect()
Process_Statistics = New DataTable
process_statistics.Columns.Add("Process Name", GetType(String))
process_statistics.Columns.Add("PID", GetType(Decimal))
process_statistics.Columns.Add("Working Set", GetType(Decimal))
process_statistics.Columns.Add("Virtual Memory", GetType(Decimal))

For Each R As DataRow in Processes.Rows
	dim ProcName As String = CStr(R("Process Name"))
	Dim PID As Integer = CInt(R("PID"))
	For Each P As Process in Process.GetProcesses()
		If P.ProcessName = ProcName OrElse P.ID = PID Then
			Process_Statistics.Rows.Add(New Object() {P.ProcessName, P.ID, P.WorkingSet64, P.VirtualMemorySize64})
		End If
	Next
Next]]></code></stage><stage stageid="2d4e55c2-5e4d-45d5-8fd3-27d58de71615" name="Processes" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /></collectioninfo><initialvalue><row><field name="Process Name" type="text" value="Automate" /><field name="PID" type="number" value="-1" /></row><row><field name="Process Name" type="text" value="javaw" /><field name="PID" type="number" value="-1" /></row></initialvalue></stage><stage stageid="99b25e8c-cd81-4e2f-99c3-d4c8afb738fc" name="Process Statistics" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /><field name="Working Set" type="number" /><field name="Virtual Memory" type="number" /></collectioninfo></stage><stage stageid="f781848e-f409-4be9-aea7-4672e21e840e" name="Read Process Working Set" type="SubSheetInfo"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><narrative>Gets the size of the working set for the given process.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="41b78729-d533-460b-98af-6180066d831b" name="Start" type="Start"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process you want stats for" stage="Process Name" /></inputs><onsuccess>92e54184-9c46-425a-a681-ca15d5f38671</onsuccess></stage><stage stageid="d9a48cd9-620d-4b45-87bb-cb1a223d729e" name="End" type="End"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Working Set" narrative="The working set number holding memory stats for your process" stage="Working Set" /></outputs></stage><stage stageid="92e54184-9c46-425a-a681-ca15d5f38671" name="Get Memory Set" type="Code"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><narrative>Used += to return the total memory used by the application we are interested - just in case it is running multiple times.</narrative><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Proc" expr="[Process Name]" /></inputs><outputs><output type="number" name="Working Set" stage="Working Set" /></outputs><onsuccess>d9a48cd9-620d-4b45-87bb-cb1a223d729e</onsuccess><code><![CDATA[
For Each P As Process in Process.GetProcesses()
	If P.ProcessName = Proc Then
		Working_Set += P.WorkingSet64
	End If
Next]]></code></stage><stage stageid="2db08314-74db-4968-8a01-2fffb03cc350" name="Process Name" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="135" y="-105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="192be4f9-084a-4c4d-99a1-67383bb9cf30" name="Working Set" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">0</initialvalue><private /><alwaysinit /></stage><stage stageid="fb42bad5-7a16-4ac1-8cc7-148cb8ad1d0f" name="Font Smoothing Enabled" type="SubSheetInfo"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><narrative>Gets the font smoothing setting for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ad641c65-2bb5-4746-a61c-38a70a4e0b89" name="Start" type="Start"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>96f9fe29-f641-44ab-ab0e-a4091edaec4c</onsuccess></stage><stage stageid="9150eaee-22ec-4228-803e-123c888b87e5" name="End" type="End"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" narrative="True if font smoothing is enabled" stage="Enabled?" /></outputs></stage><stage stageid="96f9fe29-f641-44ab-ab0e-a4091edaec4c" name="Get Font Smoothing Enabled" type="Code"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" stage="Enabled?" /></outputs><onsuccess>9150eaee-22ec-4228-803e-123c888b87e5</onsuccess><code><![CDATA[Enabled=System.Windows.Forms.Systeminformation.IsFontSmoothingEnabled]]></code></stage><stage stageid="d7db2bff-a394-483d-a249-bae03f688e95" name="Enabled?" type="Data"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><display x="120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80a2dcaa-31dd-419b-9fd4-a61249245b1b" name="Start Process" type="SubSheetInfo"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><narrative>Starts a process directly with the given arguments.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d5177aa-21f6-4dac-b731-60fd85c76097" name="Start" type="Start"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or short cut to start" stage="Application" /><input type="text" name="Arguments" narrative="Any arguments needed for the app" stage="Arguments" /></inputs><onsuccess>8fd5d005-95ec-43c3-acae-de13b914eb3e</onsuccess></stage><stage stageid="9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3" name="End" type="End"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3401dc5-5639-4e5d-b55a-b633330db327" name="Run Process Until Ended" type="SubSheetInfo"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><narrative>Run a process and wait until completion or timeout.</narrative><display x="-195" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f6878e25-301c-4540-a15d-7a83dfc57a75" name="End" type="End"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ddad15-d793-4697-8f79-1a42247fb0ba" name="Note1" type="Note"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca8b3a6e-c15d-4b6b-bf9f-96c0675d8e04" name="Application" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d495c29-e0f2-4bdd-ac85-b7875f7b1117" name="Arguments" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8fd5d005-95ec-43c3-acae-de13b914eb3e" name="Start Process" type="Code"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" expr="[Application]" /><input type="text" name="Arguments" expr="[Arguments]" /></inputs><onsuccess>9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3</onsuccess><code><![CDATA[If Arguments<>"" Then
  System.Diagnostics.Process.Start(Application, Arguments)
Else
  System.Diagnostics.Process.Start(Application)
End If]]></code></stage><stage stageid="085fdcca-3a7c-4a20-8b83-69add0889a54" name="Application" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e53a27fe-26fe-4503-ab86-8a5208e43d80" name="Arguments" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b84d4bb-deea-40c5-96eb-6adcf59fe7cf" name="Run Process" type="Code"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="appn" expr="[Application]" /><input type="text" name="args" expr="[Arguments]" /><input type="text" name="dir" expr="[Working Folder]" /><input type="timespan" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="timedOut" stage="Fail Datetime Reached?" /></outputs><onsuccess>7fa022c9-fce8-496a-a40b-9119406000db</onsuccess><code><![CDATA[timedOut = False
Dim startTime as Date = Date.Now

Dim info as New ProcessStartInfo(appn)
If args <> "" Then  info.Arguments = args
If dir <> "" Then info.WorkingDirectory = dir

Using proc As Process = Process.Start(info)
	timedOut = Not proc.WaitForExit( _
	 CInt(timeout.TotalMilliseconds))
End Using]]></code></stage><stage stageid="f0792b52-0999-4f35-a46c-513fdcc3c381" name="Timeout" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>0.00:00:10</initialvalue><private /><alwaysinit /></stage><stage stageid="2adaf80c-c627-4556-8b6d-64929056128b" name="Start" type="Start"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or shortcut to start" stage="Application" /><input type="text" name="Arguments" narrative="Optional - any arguments needed to run the application" stage="Arguments" /><input type="text" name="Working Folder" narrative="Optional - the application working folder" stage="Working Folder" /><input type="timespan" name="Timeout" narrative="How long to wait for the application to finish. Default is 10 seconds" stage="Timeout" /></inputs><onsuccess>0b84d4bb-deea-40c5-96eb-6adcf59fe7cf</onsuccess></stage><stage stageid="c91ac000-31f2-44b8-a481-a878929285ae" name="Fail Datetime Reached?" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="7fa022c9-fce8-496a-a40b-9119406000db" name="Timed Out?" type="Decision"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Fail Datetime Reached?]" /><ontrue>433c4289-a312-4554-bc27-6ee3c7ace153</ontrue><onfalse>f6878e25-301c-4540-a15d-7a83dfc57a75</onfalse></stage><stage stageid="433c4289-a312-4554-bc27-6ee3c7ace153" name="System Exception" type="Exception"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Application &quot; &amp; [Application] &amp; &quot; was still running after the maximum time period&quot;" /></stage><stage stageid="bcdc67ee-3c90-443c-9c4f-ec02fc8ee8d2" name="Wait for Process" type="SubSheetInfo"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><narrative>Attach to a process and wait for it to complete.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99a09b67-00bd-4e8a-bad7-2f589ac9de94" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="0dcbb991-85d4-45bb-aaa9-a8bf5da36d15" name="Start" type="Start"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Maximum wait time (seconds)" narrative="The maximum time to wait for the process to complete" stage="Maximum wait time (seconds)" /><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /></inputs><onsuccess>dfe0f2dc-5806-4cf9-82f3-269f9b06b03f</onsuccess></stage><stage stageid="55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="e1eea34b-f6e4-49b3-bcae-930f70caec29" name="Maximum wait time (seconds)" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dfe0f2dc-5806-4cf9-82f3-269f9b06b03f" name="Wait for process" type="Code"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Max Wait" expr="[Maximum wait time (seconds)]" /></inputs><outputs><output type="flag" name="Found?" stage="Found?" /></outputs><onsuccess>55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd</onsuccess><code><![CDATA[                Try
                  Found_ = False
                  Dim bProcFound as Boolean = False
                  Dim iLoop as Integer = 0
                  Dim myProcesses() As System.Diagnostics.Process
                  Dim instance As System.Diagnostics.Process
                  Do While bProcFound = False AND iLoop < Max_Wait
                    myProcesses = System.Diagnostics.Process.GetProcessesByName(Process_Name)
                    For Each instance In myProcesses
                        bProcFound = True
                        Found_ = True
                    Next
                    Threading.Thread.Sleep(1000)
                    iloop += 1
                  Loop
                Catch ex As Exception
                End Try]]></code></stage><stage stageid="9344b166-5d5d-4b99-bc53-0c0331b8c776" name="Found?" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a02d7fb-31ed-4c83-92c9-9a9a7831920e" name="Process Name" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="952ca62f-afb2-4f25-adea-21d86339081c" name="Wait for Process Window" type="SubSheetInfo"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><narrative>Waits for a process with a given name has displayed a window with the given title.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19ea35dc-66b8-406e-9eca-4c6ef4d4e0ab" name="Start" type="Start"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /><input type="text" name="Window Title" narrative="The title of the window within the process" stage="Window Title" /><input type="number" name="Wait" narrative="The maximum amount of time to wait for" stage="Wait" /></inputs><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess></stage><stage stageid="b6fdc874-6a8d-405b-946e-10b6b47a6ae1" name="End" type="End"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /></outputs></stage><stage stageid="d3b1986a-fa70-41e9-a8af-cd2ffc78342e" name="Find Process" type="Code"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="text" name="Window Title" expr="[Window Title]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f</onsuccess><code><![CDATA[try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(process_name)

	if p.mainwindowtitle.trim.tolower like window_title.trim.tolower then
		found = true
		exit sub
	end if

next

catch e as exception
end try]]></code></stage><stage stageid="6088ca18-1f7c-4db7-84af-ccecfe1ced0f" name="Time Out2" type="WaitEnd"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid></stage><stage stageid="4498756a-e9e1-4bef-86e6-3b7ed91a7439" name="Wait" type="WaitStart"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid><choices /><timeout>0.5</timeout></stage><stage stageid="ba11e756-90e9-4cd7-a787-a41c2818e4b6" name="Count Down" type="Calculation"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4498756a-e9e1-4bef-86e6-3b7ed91a7439</onsuccess><calculation expression="[Wait]-0.5" stage="Wait" /></stage><stage stageid="a5225d0b-41b3-4ed2-9f7c-31461a1f262a" name="Wait?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Wait]&gt;0" /><ontrue>ba11e756-90e9-4cd7-a787-a41c2818e4b6</ontrue><onfalse>ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9</onfalse></stage><stage stageid="d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f" name="Found?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Found]" /><ontrue>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</ontrue><onfalse>a5225d0b-41b3-4ed2-9f7c-31461a1f262a</onfalse></stage><stage stageid="ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9" name="anchor1" type="Anchor"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</onsuccess></stage><stage stageid="00581602-0606-4a0b-8f92-3dab2b97c72d" name="Process Name" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6f981e4-e1f7-40a1-bf9e-461e118c4bf3" name="Window Title" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5eaecb90-3ed2-45ac-9948-5fb96f2b416a" name="Found" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80076f3c-7351-4c27-97b5-c8578ae2761c" name="Wait" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7fc8557d-14e7-4b64-b495-23b8a7c76ef7" name="Get Clipboard" type="SubSheetInfo"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><narrative>Gets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1de3e23-13cc-4058-95cb-5d1b72e68cac" name="Start" type="Start"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>106d82b6-72c5-41b6-af2c-3ab3709a9c4e</onsuccess></stage><stage stageid="211e889c-ac33-46c2-8c6a-3d01c6f1ae4a" name="End" type="End"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs></stage><stage stageid="106d82b6-72c5-41b6-af2c-3ab3709a9c4e" name="Get" type="Calculation"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>211e889c-ac33-46c2-8c6a-3d01c6f1ae4a</onsuccess><calculation expression="GetClipboard()" stage="Clipboard" /></stage><stage stageid="0634315f-c572-4cf9-8727-98308e50c2c2" name="Clipboard" type="Data"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><display x="90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62bf25c7-7263-4fb3-bef2-20c9d9c2113d" name="Set Clipboard" type="SubSheetInfo"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><narrative>Sets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="57eca987-ec5e-485a-a03b-40c653f72a34" name="Start" type="Start"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Clipboard" narrative="The value to set the clipboard to." stage="Clipboard(Image)" /></inputs><onsuccess>54826c34-2991-4964-b0a3-0e0a2f951f29</onsuccess></stage><stage stageid="d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c" name="End" type="End"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54826c34-2991-4964-b0a3-0e0a2f951f29" name="Set" type="Code"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Clipboard" expr="[Clipboard(Image)]" /></inputs><onsuccess>d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c</onsuccess><code><![CDATA[System.Windows.Forms.Clipboard.SetDataObject(Clipboard)]]></code></stage><stage stageid="121f76bc-6b69-43a4-9484-16729e37267b" name="Clipboard(Image)" type="Data"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><alwaysinit /></stage><stage stageid="b8fa4afe-4c2c-409d-9691-e213b773c434" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><narrative>Clears the clipboard contents.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="706b08af-a9e1-4484-8c41-b06b8e76af1e" name="Start" type="Start"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d1113981-40f5-450a-8b7e-e059eed37e76</onsuccess></stage><stage stageid="e13b6d4e-e05c-491e-ace6-54389e4a99fb" name="End" type="End"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1113981-40f5-450a-8b7e-e059eed37e76" name="Set Clipboard" type="SubSheet"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="&quot;&quot;" /></inputs><onsuccess>e13b6d4e-e05c-491e-ace6-54389e4a99fb</onsuccess><processid>cf9f6573-f06c-4ab6-9672-34d2e644415e</processid></stage><stage stageid="15c6de75-886d-492c-8c12-5f0de483e1f7" name="Get User Name" type="SubSheetInfo"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a6bce0ea-b898-4abc-9a4f-bcfce32b3bb9" name="Start" type="Start"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c731c906-58b6-4969-bd70-b7ecd7fa47ae</onsuccess></stage><stage stageid="ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae" name="End" type="End"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="User Name" narrative="The name of the logged in user in the current system" stage="Username" /></outputs></stage><stage stageid="c731c906-58b6-4969-bd70-b7ecd7fa47ae" name="GetUserName" type="Code"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="username" stage="Username" /></outputs><onsuccess>ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae</onsuccess><code><![CDATA[
username = Environment.UserName]]></code></stage><stage stageid="b3608be8-eeaa-4984-891b-4d8c705ac7f4" name="Username" type="Data"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b47157dd-5fca-4b0b-989b-b23a03641f3f" name="Get Machine Name" type="SubSheetInfo"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f26fd0-6cfa-4de8-b62a-fd9c09f47be4" name="Start" type="Start"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61db579f-944a-4ba8-aedc-bdf80bc31cb7</onsuccess></stage><stage stageid="a69b53e7-8e67-4383-9b6f-28c57c9a82eb" name="End" type="End"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Machine Name" narrative="The hostname of the machine running this action" stage="Machine Name" /></outputs></stage><stage stageid="61db579f-944a-4ba8-aedc-bdf80bc31cb7" name="GetMachineName" type="Code"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="machineName" stage="Machine Name" /></outputs><onsuccess>a69b53e7-8e67-4383-9b6f-28c57c9a82eb</onsuccess><code><![CDATA[
machineName = Environment.MachineName]]></code></stage><stage stageid="e3b5bdc7-5646-4f63-b78b-c9824a496d2f" name="Machine Name" type="Data"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94b4d694-3e3a-4bb2-bcb6-15a401f31b76" name="Working Folder" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc49d63c-0e29-422f-b99c-4689f5b5afd1" name="Input Args" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="91242c6b-8086-4fd1-99ea-efb0549f2517" name="Variables" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="223b1fe8-4d86-4b33-9183-82480741ec15" name="Utility - Environment_Set To Clipboard(Image)" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Environment_Set To Clipboard(Image)" version="5.0.11" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>257afd68-bed2-460b-94e5-17b2b6263b15</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="72ac1b78-ac00-4ede-b5fa-13beef468814" type="Normal" published="True"><name>Font Smoothing Enabled</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf31a66d-5534-4af0-9a07-433066d1a4b9" type="Normal" published="True"><name>Get Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cf9f6573-f06c-4ab6-9672-34d2e644415e" type="Normal" published="True"><name>Set Clipboard</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="50ea2955-c157-4803-b16c-fea2255ce9e2" type="Normal" published="True"><name>Clear Clipboard</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a7ea3097-4e9b-48f3-9431-68977353a6bc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4987fdec-ac7a-4166-a60b-adef47ecdcc7" type="Normal" published="True"><name>Get Screen Resolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5864a25-e7a2-430a-9045-78a116e64701" type="Normal" published="True"><name>Kill Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3d4412bd-579a-4d1e-937e-12fbb756630c" type="Normal" published="True"><name>Read Memory Stats</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7b5cc7aa-ca53-495f-a51e-4ed559efe88b" type="Normal" published="True"><name>Read Process Working Set</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7" type="Normal" published="True"><name>Start Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="29015311-1659-438e-b7b6-b8ff65e4a840" type="Normal" published="True"><name>Run Process Until Ended</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="13c8f06e-8a7c-4da8-b813-d5738ce5369a" type="Normal" published="True"><name>Wait for Process</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e22dc28-2f71-421b-9687-c367358919e3" type="Normal" published="True"><name>Wait for Process Window</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b6e051bf-8afe-4ea3-9ae0-52eee58eec76" type="Normal" published="True"><name>Get User Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c556a801-8bd8-4e0e-bf8e-2dd6b5642063" type="Normal" published="True"><name>Get Machine Name</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="5f046b4e-e1db-4786-ae90-3d5d6c6d9302" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9e4646d0-d8c7-44d6-a5d9-9509e3ba8883</onsuccess></stage><stage stageid="9e4646d0-d8c7-44d6-a5d9-9509e3ba8883" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e9a8ad-308f-49f4-9dd0-9dafbc1f625a" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>system.windows.forms.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Windows.Forms</import><import>System.Diagnostics</import><import>System.Data</import><import>Microsoft.VisualBasic</import><import>System.Threading</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="6e5c9120-5c20-4fe2-9bfd-149470c9a1ea" name="Clean Up" type="SubSheetInfo"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e36d7ef5-340c-4d1f-a670-d1f1dcd7bdc3" name="Start" type="Start"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1451859f-91ff-4e0a-b8a8-7bbd6dc50341</onsuccess></stage><stage stageid="1451859f-91ff-4e0a-b8a8-7bbd6dc50341" name="End" type="End"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f50788a0-79a5-446b-b3cc-fc8d66091330" name="Get Screen Resolution" type="SubSheetInfo"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><narrative>Gets the resolution of the screen in pixels for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d9e8deba-018e-4402-bb33-773a299ae864" name="Start" type="Start"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd2d0918-9c73-4138-90b8-538eaa06f135</onsuccess></stage><stage stageid="3348aa7d-5b76-4d3f-a590-e571a9a83494" name="End" type="End"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" narrative="The number of pixels in the horizontal screen axis" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" narrative="The number of pixels in the vertical screen axis" stage="Vertical Resolution" /></outputs></stage><stage stageid="c970b361-339a-4e60-a056-cf8571553cb8" name="new" type="Note"><subsheetid>a7ea3097-4e9b-48f3-9431-68977353a6bc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="faf2adc8-9198-4483-b6dc-e67e978cbf7b" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bd2d0918-9c73-4138-90b8-538eaa06f135" name="GetResolution" type="Code"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Horizontal Resolution" stage="Horizontal Resolution" /><output type="number" name="Vertical Resolution" stage="Vertical Resolution" /></outputs><onsuccess>3348aa7d-5b76-4d3f-a590-e571a9a83494</onsuccess><code><![CDATA[dim S As Size = Screen.PrimaryScreen.Bounds.Size
Horizontal_Resolution = S.Width
Vertical_Resolution = S.Height]]></code></stage><stage stageid="37500b62-bdb6-42ed-91a3-02fbcffc75ee" name="Horizontal Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8edafede-371d-454f-a5ca-0b28eda542e5" name="Vertical Resolution" type="Data"><subsheetid>4987fdec-ac7a-4166-a60b-adef47ecdcc7</subsheetid><display x="165" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e8bff191-0772-44c3-bea4-1d4ff701d49f" name="Kill Process" type="SubSheetInfo"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><narrative>Force kills all processes with a given name.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e3791a92-d20e-4afe-81bf-5aab170c3aba" name="Start" type="Start"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All processes with the given name will be terminated." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" stage="Process Name" /></inputs><onsuccess>697bc06f-0d64-430d-a5ea-b3fd02b746c8</onsuccess></stage><stage stageid="e9c6833a-30a3-4233-840b-35d605e44199" name="End" type="End"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06a89dc2-9ed1-497c-b7f0-14664bdb76c5" name="Process Name" type="Data"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><display x="120" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="697bc06f-0d64-430d-a5ea-b3fd02b746c8" name="Kill Process1" type="Code"><subsheetid>e5864a25-e7a2-430a-9045-78a116e64701</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><onsuccess>e9c6833a-30a3-4233-840b-35d605e44199</onsuccess><code><![CDATA[  Try
    for each p as System.Diagnostics.Process in System.Diagnostics.Process.GetProcessesByName(Process_Name)
      p.kill
    next
  Catch ex As Exception
  End Try]]></code></stage><stage stageid="374fc1ad-8b82-4d95-b3d4-9710692a2725" name="Read Memory Stats" type="SubSheetInfo"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><narrative>Get memory statistics for a given set of processes including the working set and the virtual memory size.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="237994c5-9c89-409f-9459-a9f1ce60d7ad" name="Start" type="Start"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Process Names" narrative="The names of the processes to get memory statistics for" stage="Processes" /></inputs><onsuccess>c64eaa40-85d5-42b9-bcfe-0e314328bccb</onsuccess></stage><stage stageid="83912618-be8e-4f5a-860a-03cc449519c4" name="End" type="End"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Process Statistics" narrative="A collection of process statistics including the working set and the virtual memory size" stage="Process Statistics" /></outputs></stage><stage stageid="c64eaa40-85d5-42b9-bcfe-0e314328bccb" name="Get Stats" type="Code"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Processes" expr="[Processes]" /></inputs><outputs><output type="collection" name="Process Statistics" stage="Process Statistics" /></outputs><onsuccess>83912618-be8e-4f5a-860a-03cc449519c4</onsuccess><code><![CDATA[GC.Collect()
Process_Statistics = New DataTable
process_statistics.Columns.Add("Process Name", GetType(String))
process_statistics.Columns.Add("PID", GetType(Decimal))
process_statistics.Columns.Add("Working Set", GetType(Decimal))
process_statistics.Columns.Add("Virtual Memory", GetType(Decimal))

For Each R As DataRow in Processes.Rows
	dim ProcName As String = CStr(R("Process Name"))
	Dim PID As Integer = CInt(R("PID"))
	For Each P As Process in Process.GetProcesses()
		If P.ProcessName = ProcName OrElse P.ID = PID Then
			Process_Statistics.Rows.Add(New Object() {P.ProcessName, P.ID, P.WorkingSet64, P.VirtualMemorySize64})
		End If
	Next
Next]]></code></stage><stage stageid="2d4e55c2-5e4d-45d5-8fd3-27d58de71615" name="Processes" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /></collectioninfo><initialvalue><row><field name="Process Name" type="text" value="Automate" /><field name="PID" type="number" value="-1" /></row><row><field name="Process Name" type="text" value="javaw" /><field name="PID" type="number" value="-1" /></row></initialvalue></stage><stage stageid="99b25e8c-cd81-4e2f-99c3-d4c8afb738fc" name="Process Statistics" type="Collection"><subsheetid>3d4412bd-579a-4d1e-937e-12fbb756630c</subsheetid><display x="120" y="90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Process Name" type="text" /><field name="PID" type="number" /><field name="Working Set" type="number" /><field name="Virtual Memory" type="number" /></collectioninfo></stage><stage stageid="f781848e-f409-4be9-aea7-4672e21e840e" name="Read Process Working Set" type="SubSheetInfo"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><narrative>Gets the size of the working set for the given process.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="41b78729-d533-460b-98af-6180066d831b" name="Start" type="Start"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process you want stats for" stage="Process Name" /></inputs><onsuccess>92e54184-9c46-425a-a681-ca15d5f38671</onsuccess></stage><stage stageid="d9a48cd9-620d-4b45-87bb-cb1a223d729e" name="End" type="End"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Working Set" narrative="The working set number holding memory stats for your process" stage="Working Set" /></outputs></stage><stage stageid="92e54184-9c46-425a-a681-ca15d5f38671" name="Get Memory Set" type="Code"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><narrative>Used += to return the total memory used by the application we are interested - just in case it is running multiple times.</narrative><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Proc" expr="[Process Name]" /></inputs><outputs><output type="number" name="Working Set" stage="Working Set" /></outputs><onsuccess>d9a48cd9-620d-4b45-87bb-cb1a223d729e</onsuccess><code><![CDATA[
For Each P As Process in Process.GetProcesses()
	If P.ProcessName = Proc Then
		Working_Set += P.WorkingSet64
	End If
Next]]></code></stage><stage stageid="2db08314-74db-4968-8a01-2fffb03cc350" name="Process Name" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><loginhibit /><display x="135" y="-105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="192be4f9-084a-4c4d-99a1-67383bb9cf30" name="Working Set" type="Data"><subsheetid>7b5cc7aa-ca53-495f-a51e-4ed559efe88b</subsheetid><display x="135" y="90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">0</initialvalue><private /><alwaysinit /></stage><stage stageid="fb42bad5-7a16-4ac1-8cc7-148cb8ad1d0f" name="Font Smoothing Enabled" type="SubSheetInfo"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><narrative>Gets the font smoothing setting for the current environment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ad641c65-2bb5-4746-a61c-38a70a4e0b89" name="Start" type="Start"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>96f9fe29-f641-44ab-ab0e-a4091edaec4c</onsuccess></stage><stage stageid="9150eaee-22ec-4228-803e-123c888b87e5" name="End" type="End"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" narrative="True if font smoothing is enabled" stage="Enabled?" /></outputs></stage><stage stageid="96f9fe29-f641-44ab-ab0e-a4091edaec4c" name="Get Font Smoothing Enabled" type="Code"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Enabled" stage="Enabled?" /></outputs><onsuccess>9150eaee-22ec-4228-803e-123c888b87e5</onsuccess><code><![CDATA[Enabled=System.Windows.Forms.Systeminformation.IsFontSmoothingEnabled]]></code></stage><stage stageid="d7db2bff-a394-483d-a249-bae03f688e95" name="Enabled?" type="Data"><subsheetid>72ac1b78-ac00-4ede-b5fa-13beef468814</subsheetid><display x="120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80a2dcaa-31dd-419b-9fd4-a61249245b1b" name="Start Process" type="SubSheetInfo"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><narrative>Starts a process directly with the given arguments.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6d5177aa-21f6-4dac-b731-60fd85c76097" name="Start" type="Start"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or short cut to start" stage="Application" /><input type="text" name="Arguments" narrative="Any arguments needed for the app" stage="Arguments" /></inputs><onsuccess>8fd5d005-95ec-43c3-acae-de13b914eb3e</onsuccess></stage><stage stageid="9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3" name="End" type="End"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b3401dc5-5639-4e5d-b55a-b633330db327" name="Run Process Until Ended" type="SubSheetInfo"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><narrative>Run a process and wait until completion or timeout.</narrative><display x="-195" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f6878e25-301c-4540-a15d-7a83dfc57a75" name="End" type="End"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ddad15-d793-4697-8f79-1a42247fb0ba" name="Note1" type="Note"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ca8b3a6e-c15d-4b6b-bf9f-96c0675d8e04" name="Application" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9d495c29-e0f2-4bdd-ac85-b7875f7b1117" name="Arguments" type="Data"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="-165" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8fd5d005-95ec-43c3-acae-de13b914eb3e" name="Start Process" type="Code"><subsheetid>12ea7001-8ac4-4a2f-a00d-9b6e3a9583f7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" expr="[Application]" /><input type="text" name="Arguments" expr="[Arguments]" /></inputs><onsuccess>9c57d68b-5d25-4c88-8bb1-8f7c6aa327d3</onsuccess><code><![CDATA[If Arguments<>"" Then
  System.Diagnostics.Process.Start(Application, Arguments)
Else
  System.Diagnostics.Process.Start(Application)
End If]]></code></stage><stage stageid="085fdcca-3a7c-4a20-8b83-69add0889a54" name="Application" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e53a27fe-26fe-4503-ab86-8a5208e43d80" name="Arguments" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0b84d4bb-deea-40c5-96eb-6adcf59fe7cf" name="Run Process" type="Code"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-105" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="appn" expr="[Application]" /><input type="text" name="args" expr="[Arguments]" /><input type="text" name="dir" expr="[Working Folder]" /><input type="timespan" name="timeout" expr="[Timeout]" /></inputs><outputs><output type="flag" name="timedOut" stage="Fail Datetime Reached?" /></outputs><onsuccess>7fa022c9-fce8-496a-a40b-9119406000db</onsuccess><code><![CDATA[timedOut = False
Dim startTime as Date = Date.Now

Dim info as New ProcessStartInfo(appn)
If args <> "" Then  info.Arguments = args
If dir <> "" Then info.WorkingDirectory = dir

Using proc As Process = Process.Start(info)
	timedOut = Not proc.WaitForExit( _
	 CInt(timeout.TotalMilliseconds))
End Using]]></code></stage><stage stageid="f0792b52-0999-4f35-a46c-513fdcc3c381" name="Timeout" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue>0.00:00:10</initialvalue><private /><alwaysinit /></stage><stage stageid="2adaf80c-c627-4556-8b6d-64929056128b" name="Start" type="Start"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Application" narrative="The application or shortcut to start" stage="Application" /><input type="text" name="Arguments" narrative="Optional - any arguments needed to run the application" stage="Arguments" /><input type="text" name="Working Folder" narrative="Optional - the application working folder" stage="Working Folder" /><input type="timespan" name="Timeout" narrative="How long to wait for the application to finish. Default is 10 seconds" stage="Timeout" /></inputs><onsuccess>0b84d4bb-deea-40c5-96eb-6adcf59fe7cf</onsuccess></stage><stage stageid="c91ac000-31f2-44b8-a481-a878929285ae" name="Fail Datetime Reached?" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-195" y="150" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="7fa022c9-fce8-496a-a40b-9119406000db" name="Timed Out?" type="Decision"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="-45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Fail Datetime Reached?]" /><ontrue>433c4289-a312-4554-bc27-6ee3c7ace153</ontrue><onfalse>f6878e25-301c-4540-a15d-7a83dfc57a75</onfalse></stage><stage stageid="433c4289-a312-4554-bc27-6ee3c7ace153" name="System Exception" type="Exception"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><display x="45" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;Application &quot; &amp; [Application] &amp; &quot; was still running after the maximum time period&quot;" /></stage><stage stageid="bcdc67ee-3c90-443c-9c4f-ec02fc8ee8d2" name="Wait for Process" type="SubSheetInfo"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><narrative>Attach to a process and wait for it to complete.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99a09b67-00bd-4e8a-bad7-2f589ac9de94" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="0dcbb991-85d4-45bb-aaa9-a8bf5da36d15" name="Start" type="Start"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Maximum wait time (seconds)" narrative="The maximum time to wait for the process to complete" stage="Maximum wait time (seconds)" /><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /></inputs><onsuccess>dfe0f2dc-5806-4cf9-82f3-269f9b06b03f</onsuccess></stage><stage stageid="55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd" name="End" type="End"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found?" narrative="True=process found, false=process not found" stage="Found?" /></outputs></stage><stage stageid="e1eea34b-f6e4-49b3-bcae-930f70caec29" name="Maximum wait time (seconds)" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="dfe0f2dc-5806-4cf9-82f3-269f9b06b03f" name="Wait for process" type="Code"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="number" name="Max Wait" expr="[Maximum wait time (seconds)]" /></inputs><outputs><output type="flag" name="Found?" stage="Found?" /></outputs><onsuccess>55ae0a29-1ee0-4fd1-b077-eeb2e6f1e9dd</onsuccess><code><![CDATA[                Try
                  Found_ = False
                  Dim bProcFound as Boolean = False
                  Dim iLoop as Integer = 0
                  Dim myProcesses() As System.Diagnostics.Process
                  Dim instance As System.Diagnostics.Process
                  Do While bProcFound = False AND iLoop < Max_Wait
                    myProcesses = System.Diagnostics.Process.GetProcessesByName(Process_Name)
                    For Each instance In myProcesses
                        bProcFound = True
                        Found_ = True
                    Next
                    Threading.Thread.Sleep(1000)
                    iloop += 1
                  Loop
                Catch ex As Exception
                End Try]]></code></stage><stage stageid="9344b166-5d5d-4b99-bc53-0c0331b8c776" name="Found?" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a02d7fb-31ed-4c83-92c9-9a9a7831920e" name="Process Name" type="Data"><subsheetid>13c8f06e-8a7c-4da8-b813-d5738ce5369a</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="952ca62f-afb2-4f25-adea-21d86339081c" name="Wait for Process Window" type="SubSheetInfo"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><narrative>Waits for a process with a given name has displayed a window with the given title.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="19ea35dc-66b8-406e-9eca-4c6ef4d4e0ab" name="Start" type="Start"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process to attach to" stage="Process Name" /><input type="text" name="Window Title" narrative="The title of the window within the process" stage="Window Title" /><input type="number" name="Wait" narrative="The maximum amount of time to wait for" stage="Wait" /></inputs><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess></stage><stage stageid="b6fdc874-6a8d-405b-946e-10b6b47a6ae1" name="End" type="End"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /></outputs></stage><stage stageid="d3b1986a-fa70-41e9-a8af-cd2ffc78342e" name="Find Process" type="Code"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /><input type="text" name="Window Title" expr="[Window Title]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f</onsuccess><code><![CDATA[try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(process_name)

	if p.mainwindowtitle.trim.tolower like window_title.trim.tolower then
		found = true
		exit sub
	end if

next

catch e as exception
end try]]></code></stage><stage stageid="6088ca18-1f7c-4db7-84af-ccecfe1ced0f" name="Time Out2" type="WaitEnd"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d3b1986a-fa70-41e9-a8af-cd2ffc78342e</onsuccess><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid></stage><stage stageid="4498756a-e9e1-4bef-86e6-3b7ed91a7439" name="Wait" type="WaitStart"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="-45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>d8f20257-87c3-4cf6-a20e-b44dbd21ce6a</groupid><choices /><timeout>0.5</timeout></stage><stage stageid="ba11e756-90e9-4cd7-a787-a41c2818e4b6" name="Count Down" type="Calculation"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4498756a-e9e1-4bef-86e6-3b7ed91a7439</onsuccess><calculation expression="[Wait]-0.5" stage="Wait" /></stage><stage stageid="a5225d0b-41b3-4ed2-9f7c-31461a1f262a" name="Wait?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Wait]&gt;0" /><ontrue>ba11e756-90e9-4cd7-a787-a41c2818e4b6</ontrue><onfalse>ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9</onfalse></stage><stage stageid="d0d526bd-c3dd-4eb6-bbe7-2d46cca6e06f" name="Found?" type="Decision"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Found]" /><ontrue>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</ontrue><onfalse>a5225d0b-41b3-4ed2-9f7c-31461a1f262a</onfalse></stage><stage stageid="ec831f1a-5b48-4bc2-8ceb-a362fa4e15d9" name="anchor1" type="Anchor"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><loginhibit /><display x="105" y="75" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6fdc874-6a8d-405b-946e-10b6b47a6ae1</onsuccess></stage><stage stageid="00581602-0606-4a0b-8f92-3dab2b97c72d" name="Process Name" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d6f981e4-e1f7-40a1-bf9e-461e118c4bf3" name="Window Title" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5eaecb90-3ed2-45ac-9948-5fb96f2b416a" name="Found" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="80076f3c-7351-4c27-97b5-c8578ae2761c" name="Wait" type="Data"><subsheetid>1e22dc28-2f71-421b-9687-c367358919e3</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="7fc8557d-14e7-4b64-b495-23b8a7c76ef7" name="Get Clipboard" type="SubSheetInfo"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><narrative>Gets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1de3e23-13cc-4058-95cb-5d1b72e68cac" name="Start" type="Start"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>106d82b6-72c5-41b6-af2c-3ab3709a9c4e</onsuccess></stage><stage stageid="211e889c-ac33-46c2-8c6a-3d01c6f1ae4a" name="End" type="End"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs></stage><stage stageid="106d82b6-72c5-41b6-af2c-3ab3709a9c4e" name="Get" type="Calculation"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>211e889c-ac33-46c2-8c6a-3d01c6f1ae4a</onsuccess><calculation expression="GetClipboard()" stage="Clipboard" /></stage><stage stageid="0634315f-c572-4cf9-8727-98308e50c2c2" name="Clipboard" type="Data"><subsheetid>cf31a66d-5534-4af0-9a07-433066d1a4b9</subsheetid><display x="90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="62bf25c7-7263-4fb3-bef2-20c9d9c2113d" name="Set Clipboard" type="SubSheetInfo"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><narrative>Sets the contents of the clipboard.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="57eca987-ec5e-485a-a03b-40c653f72a34" name="Start" type="Start"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Clipboard" narrative="The value to set the clipboard to." stage="Clipboard" /></inputs><onsuccess>54826c34-2991-4964-b0a3-0e0a2f951f29</onsuccess></stage><stage stageid="d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c" name="End" type="End"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="54826c34-2991-4964-b0a3-0e0a2f951f29" name="Set" type="Code"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="[Clipboard]" /></inputs><onsuccess>d2b91dd7-f7a4-45e5-8b5c-8f867e6be05c</onsuccess><code><![CDATA[System.Windows.Forms.Clipboard.SetDataObject(Clipboard)]]></code></stage><stage stageid="121f76bc-6b69-43a4-9484-16729e37267b" name="Clipboard" type="Data"><subsheetid>cf9f6573-f06c-4ab6-9672-34d2e644415e</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b8fa4afe-4c2c-409d-9691-e213b773c434" name="Clear Clipboard" type="SubSheetInfo"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><narrative>Clears the clipboard contents.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="706b08af-a9e1-4484-8c41-b06b8e76af1e" name="Start" type="Start"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d1113981-40f5-450a-8b7e-e059eed37e76</onsuccess></stage><stage stageid="e13b6d4e-e05c-491e-ace6-54389e4a99fb" name="End" type="End"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1113981-40f5-450a-8b7e-e059eed37e76" name="Set Clipboard" type="SubSheet"><subsheetid>50ea2955-c157-4803-b16c-fea2255ce9e2</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Clipboard" expr="&quot;&quot;" /></inputs><onsuccess>e13b6d4e-e05c-491e-ace6-54389e4a99fb</onsuccess><processid>cf9f6573-f06c-4ab6-9672-34d2e644415e</processid></stage><stage stageid="15c6de75-886d-492c-8c12-5f0de483e1f7" name="Get User Name" type="SubSheetInfo"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a6bce0ea-b898-4abc-9a4f-bcfce32b3bb9" name="Start" type="Start"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c731c906-58b6-4969-bd70-b7ecd7fa47ae</onsuccess></stage><stage stageid="ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae" name="End" type="End"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="User Name" narrative="The name of the logged in user in the current system" stage="Username" /></outputs></stage><stage stageid="c731c906-58b6-4969-bd70-b7ecd7fa47ae" name="GetUserName" type="Code"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="username" stage="Username" /></outputs><onsuccess>ddc4be1a-94ee-4487-b6dc-0f12e4fc40ae</onsuccess><code><![CDATA[
username = Environment.UserName]]></code></stage><stage stageid="b3608be8-eeaa-4984-891b-4d8c705ac7f4" name="Username" type="Data"><subsheetid>b6e051bf-8afe-4ea3-9ae0-52eee58eec76</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b47157dd-5fca-4b0b-989b-b23a03641f3f" name="Get Machine Name" type="SubSheetInfo"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b4f26fd0-6cfa-4de8-b62a-fd9c09f47be4" name="Start" type="Start"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>61db579f-944a-4ba8-aedc-bdf80bc31cb7</onsuccess></stage><stage stageid="a69b53e7-8e67-4383-9b6f-28c57c9a82eb" name="End" type="End"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Machine Name" narrative="The hostname of the machine running this action" stage="Machine Name" /></outputs></stage><stage stageid="61db579f-944a-4ba8-aedc-bdf80bc31cb7" name="GetMachineName" type="Code"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><loginhibit /><display x="-45" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="machineName" stage="Machine Name" /></outputs><onsuccess>a69b53e7-8e67-4383-9b6f-28c57c9a82eb</onsuccess><code><![CDATA[
machineName = Environment.MachineName]]></code></stage><stage stageid="e3b5bdc7-5646-4f63-b78b-c9824a496d2f" name="Machine Name" type="Data"><subsheetid>c556a801-8bd8-4e0e-bf8e-2dd6b5642063</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="94b4d694-3e3a-4bb2-bcb6-15a401f31b76" name="Working Folder" type="Data"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dc49d63c-0e29-422f-b99c-4689f5b5afd1" name="Input Args" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="150" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="91242c6b-8086-4fd1-99ea-efb0549f2517" name="Variables" type="Block"><subsheetid>29015311-1659-438e-b7b6-b8ff65e4a840</subsheetid><loginhibit /><display x="-270" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" name="Utility - File Management" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - File Management" version="5.0.11" bpversion="7.0.1.49890" narrative="Utility methods for interacting with the file System." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>149</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e3c209b-a109-46a0-9ff0-e2dc6b8791fb" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8043916d-2ef9-45b8-ab66-f4c20ef1b8e3" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea" type="Normal" published="True"><name>Download File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a12dbad-57fd-45a4-b859-62df514a34d3" type="Normal" published="True"><name>Get Files</name><view><camerax>106</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bafee17-a81a-40f0-9b6b-80b78142dd87" type="Normal" published="True"><name>Get Folders</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60b8a01d-1f74-4169-b192-5e363a7b5e61" type="Normal" published="True"><name>File Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3bc2286b-bf9e-490f-84a5-9b8604b05075" type="Normal" published="False"><name>Action 25</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20e6a636-d89b-4c08-b90d-8852894005a4" type="Normal" published="True"><name>Directory Exists</name><view><camerax>0</camerax><cameray>-2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ff30a41-e177-40c5-a756-a6b466004f32" type="Normal" published="True"><name>Create Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d68f192f-eeb7-420e-b156-9636503b6082" type="Normal" published="True"><name>Delete Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8" type="Normal" published="True"><name>Sub Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3050915-ad2e-446e-a1d6-99d11506f55e" type="Normal" published="True"><name>Split Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c80dea92-57e8-4e2e-8df4-f3ee6ceeb717" type="Normal" published="True"><name>Combine Path</name><view><camerax>202</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed509af2-4b4a-447d-8196-18105ed12739" type="Normal" published="True"><name>Delete Files</name><view><camerax>106</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70940cba-8680-4eb9-8066-9e383fc5b39b" type="Normal" published="True"><name>Delete File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e9dd304c-7d26-40f5-b193-eef36f0a370c" type="Normal" published="True"><name>Copy File</name><view><camerax>49</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85156833-c61c-4c78-916f-0b75a9a83e8d" type="Normal" published="True"><name>Move File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ca00106-fe4e-46c0-bffc-0dda1561434f" type="Normal" published="True"><name>Get File Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2530b0d-5530-4692-8a60-1f91d1c5a9c9" type="Normal" published="True"><name>Append to Text File</name><view><camerax>69</camerax><cameray>30</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8eb61369-ddab-4205-9a55-81054c2e4afb" type="Normal" published="True"><name>Read All Text from File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a9cff0d-c7c5-440a-bd8d-0007e15eae4d" type="Normal" published="True"><name>Read Lines From File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="602b7aad-2626-40ba-8c4b-1ec926ae9098" type="Normal" published="True"><name>Write Text File</name><view><camerax>-91</camerax><cameray>-30</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="842c79f8-aa64-4781-ad18-3982e21f0fd1" type="Normal" published="True"><name>Write Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7fa43ec-67e2-4acb-8d13-ced3c5027761" type="Normal" published="True"><name>Get CSV Text As Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c6e605-9948-429a-ac84-d2810bca75fc" type="Normal" published="True"><name>Get Special Folder Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Data.OleDB</import><import>System.Text</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="07048754-58c7-4201-9869-e206f1d6c32a" name="Get Files" type="SubSheetInfo"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><narrative>Gets all files in the specified folder matching the supplied file type pattern string.

Patterns - A comma-separated list of file patterns identifying the type(s) of files sought. Eg "*.jpg, *.png" retrieves all jpg and png files. The pattern "*.*" will return all files. It does not matter whether you leave a space between each pattern, or not. Where a comma is required in a file pattern it should be escaped out using the backslash character, e.g. a pattern of "*\,November.xlsx" will return all files that end with ",November.xlsx"</narrative><display x="-195" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8448350e-b6a9-4a15-a3d0-501c4967c0f9" name="Start" type="Start"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All matching files will be returned." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" stage="Folder" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" stage="Patterns CSV" /></inputs><onsuccess>acbbbddf-8b42-4353-8b0a-83eaeb216a63</onsuccess></stage><stage stageid="acbbbddf-8b42-4353-8b0a-83eaeb216a63" name="Get Files" type="Code"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Patterns CSV" expr="[Patterns CSV]" /></inputs><outputs><output type="collection" name="Files" stage="Files" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFiles As FileInfo()
Dim aPatterns As String()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Folder," _
		& "Name," _
		& "Extension," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written," _
		& "Read Only," _
		& "Bytes", _
		"System.String," _
		& "System.String," _
		& "System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.Boolean," _
		& "System.Double")
		
	Patterns_CSV = Patterns_CSV.replace("\,", "?")
	aPatterns = Patterns_CSV.split(",")

	For each sPattern As String in aPatterns
		sPattern = sPattern.replace("?", ",")
		aFiles = oDirectory.GetFiles(sPattern.Trim)
		For each oFile as FileInfo in aFiles
			objRow = objTable.NewRow()
			objRow("Path") = oFile.FullName
			objRow("Folder") = oFile.DirectoryName
			objRow("Name") = oFile.Name
			objRow("Extension") = oFile.Extension
			objRow("Created") = oFile.CreationTimeUtc
			objRow("Last Accessed") = oFile.LastAccessTimeUtc
			objRow("Last Written") = oFile.LastWriteTimeUtc
			objRow("Read Only") = oFile.IsReadOnly
			objRow("Bytes") = oFile.Length

			objTable.Rows.Add(objRow)
		Next
	Next

	objTable = objTable.DefaultView.ToTable(True, _
		"Path", _
		"Folder", _
		"Name", _
		"Extension", _
		"Created", _
		"Last Accessed", _
		"Last Written", _
		"Read Only", _
		"Bytes")

	Files = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="913867cd-7535-4857-b6b9-1b1ead2bc67f" name="Folder" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-240" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp</initialvalue><private /><alwaysinit /></stage><stage stageid="624240c2-02c8-48c3-9040-e9388fddf1b1" name="Patterns CSV" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-180" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.jpg</initialvalue><private /><alwaysinit /></stage><stage stageid="95f234d2-8c1a-466c-b8a6-fb7dc34de936" name="Files" type="Collection"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-240" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3764ae17-85d7-4ebb-99b5-502b95d7abd6" name="End" type="End"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs></stage><stage stageid="8e80cc1d-27ed-43d9-985e-90d828191fb7" name="Success" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-180" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="950111b1-7b05-4076-a673-b07166b76cdb" name="Message" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32964141-871e-474a-a1f8-eea0b10c5df2" name="Delete Files" type="SubSheetInfo"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><narrative>Deletes all files in the specified folder, matching the supplied file extension pattern.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82b919fe-64b2-4c2b-8173-5706f671c5ce" name="End" type="End"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea337dc4-4fd9-4d31-8cc6-23da41cd5665" name="Start" type="Start"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All files within the named folder which match the supplied pattern will have been deleted." /></postconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The path from which to delete the files" stage="Folder" /><input type="text" name="Pattern" narrative="The wildcard pattern of files to delete" stage="Pattern" /></inputs><onsuccess>202c81a6-fd90-46ed-9eee-73c24863b69b</onsuccess></stage><stage stageid="202c81a6-fd90-46ed-9eee-73c24863b69b" name="Delete Files" type="Code"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Pattern" expr="[Pattern]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess><code><![CDATA[Dim aFiles As String()

Try

	aFiles = Directory.GetFiles(Folder, Pattern)

	For each f as String in aFiles
		File.Delete(f)
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try
]]></code></stage><stage stageid="119002ff-ee61-4f32-b096-f3953ad107e1" name="Folder" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp\Blue Prism</initialvalue><private /><alwaysinit /></stage><stage stageid="121b4fd7-a9da-4498-a8d5-6a0ab2dae758" name="Pattern" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-180" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.TIF</initialvalue><private /><alwaysinit /></stage><stage stageid="623ad5b5-f965-4f97-9d46-435717e70b25" name="Success" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-240" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77c8238b-c415-496f-87c3-50033ec4d2a5" name="Message" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-180" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7891b89f-2307-4444-8b6e-17e25e53501f" name="Append to Text File" type="SubSheetInfo"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><narrative>Appends some text to the specified file.</narrative><display x="-210" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="83010bd2-019e-4b04-af0b-b401efe8d128" name="Start" type="Start"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data. The destination file need not exist already. If it does not exist then it will be created." /></preconditions><postconditions><condition narrative="The supplied text will have been appended." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" stage="File Name" /><input type="text" name="Text" narrative="The text to append to the file" stage="Text" /></inputs><onsuccess>eeb7f0eb-73fc-4849-96a9-35f410bbde67</onsuccess></stage><stage stageid="39862014-df78-414b-9ccd-5c0d392aa282" name="End" type="End"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="f9d3e8a1-7f67-4991-b9f1-e8ec160de075" name="Success" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-240" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2ef09390-e450-4d10-a32b-4448a65b0aaf" name="Message" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-180" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e77fcf2-8d12-4f3b-acf3-e15dccb8e90a" name="Text" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-180" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Hello,how,are,you</initialvalue><private /><alwaysinit /></stage><stage stageid="f599b6ac-5574-438b-8617-8821d9800cf7" name="File Name" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-240" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Users\BPOWBT06\Desktop\knna.txt</initialvalue><private /><alwaysinit /></stage><stage stageid="eeb7f0eb-73fc-4849-96a9-35f410bbde67" name="Append" type="Code"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e441202-3878-4eb6-b156-6f517be6de00</onsuccess><code><![CDATA[Try

	Dim sw As StreamWriter

	If File.Exists(File_Name) = False Then
		sw = File.CreateText(File_Name)
	Else
		sw = File.AppendText(File_Name)
	End If

	sw.WriteLine(Text)
	sw.Flush()
	sw.Close()
	
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="6428e7b4-8ed6-4930-bc8f-636cc71e955a" name="Read All Text from File" type="SubSheetInfo"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><narrative>Reads the entire contents of a file as text.</narrative><display x="-225" y="-90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a783ee6f-6425-4420-9b9f-759c781f3544" name="Start" type="Start"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><preconditions><condition narrative="The file must exist." /></preconditions><postconditions><condition narrative="The full text of the file will be read." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path the file to read the text from" stage="File Name" /></inputs><onsuccess>8107f164-7ef3-4164-8a2c-500055c7b374</onsuccess></stage><stage stageid="0a76495e-bc0d-4cea-bae0-85da1e15c74f" name="End" type="End"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="text" name="Text" narrative="The text of the file" stage="Text" /></outputs></stage><stage stageid="995662eb-baf3-436e-a2c1-2cc3ccfcf8fb" name="Success" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee454760-e4c3-44cc-b071-30cdafbe8355" name="Message" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-255" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dbbbe6e-0b94-4d90-940a-c99f9671b774" name="Text" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265e14ba-8649-477d-9d21-092a9bc9ad2d" name="File Name" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8107f164-7ef3-4164-8a2c-500055c7b374" name="Read Text" type="Code"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Text" stage="Text" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7419fb71-5c79-4fb6-9e59-b9fbc1d63e45</onsuccess><code><![CDATA[Try
   If File.Exists(File_Name) Then
   	Dim sr As New StreamReader(File_Name)
   	Text = sr.ReadToEnd
   	sr.Close()
   	Success = True
   	Message = ""
   Else
      Throw New ApplicationException("The file at " & File_Name & " does not exist")
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="a3f9a500-e2f0-4f48-9bb2-38ad1a4592b9" name="Write Text File" type="SubSheetInfo"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced.</narrative><display x="-225" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f408f78-c150-49f6-9f52-a3fb59ce307e" name="Start" type="Start"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data." /></preconditions><postconditions><condition narrative="The supplied text will have been written to the destination file." /></postconditions><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /></inputs><onsuccess>7d5efe35-64fc-48a0-b5a7-a5b787e90578</onsuccess></stage><stage stageid="1aab3a10-a813-470b-97c8-57938a0d0024" name="End" type="End"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="e85add3f-f65a-47dd-8be7-5ee764878dee" name="Success" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-255" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3ba21666-440e-40ea-80e4-bb02ff535775" name="Message" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="951ed278-f157-450e-90d0-06cc330e358c" name="Text" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20ca70ee-ce56-4594-90ca-a03ba1934f47" name="File Name" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d5efe35-64fc-48a0-b5a7-a5b787e90578" name="Write" type="Code"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9219c3c4-effd-4dfc-9020-8dafd054ea8f</onsuccess><code><![CDATA[Try
	File.WriteAllText(File_Name, Text,Encoding.UTF8)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="7dfd4754-e49a-447b-b9c3-c36266dfa2e8" name="File Exists" type="SubSheetInfo"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><narrative>Determines whether the specified file exsts. The full path must be specified.</narrative><display x="-240" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da1de8a5-b06c-4fc0-b316-2fec1a802056" name="End" type="End"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the file exists" stage="Exists" /></outputs></stage><stage stageid="6b0d4683-2748-485e-88ed-cdf57c76992d" name="Start" type="Start"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The existence of the file of interest will have been determined." /></postconditions><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The name of the file to check" stage="File Name" /></inputs><onsuccess>7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed</onsuccess></stage><stage stageid="f92a43a8-74e6-4f49-bf65-dc7663017f2b" name="File Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-285" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed" name="File Exists" type="Code"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File_Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>da1de8a5-b06c-4fc0-b316-2fec1a802056</onsuccess><code><![CDATA[Try
	Exists = File.Exists(File_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="817167f9-bb73-4622-9254-e249dff5369f" name="Exists" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c50578e4-df15-4b21-8a4c-469dae40724d" name="Copy File" type="SubSheetInfo"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><narrative>Copies a file to the named destination.</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30f8df38-bbc1-4b94-916b-ce06a40b630c" name="Start" type="Start"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><preconditions><condition narrative="The file to be copied must exist. The full destination path must be specified. There must be sufficient free disk space to complete the operation." /></preconditions><postconditions><condition narrative="The file will have been copied to the specified destination." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to be copied" stage="File Path" /><input type="text" name="Destination Path" narrative="The path of the directory to copy the file to" stage="Destination Path" /></inputs><onsuccess>8de7d816-2984-4b8f-a1f0-dfdf25b3f108</onsuccess></stage><stage stageid="53e1058f-89a5-4172-b9b5-89530de8ef51" name="Success" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-240" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="471fd171-54c1-4c9b-aa1d-6f471b939942" name="Message" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-180" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8de7d816-2984-4b8f-a1f0-dfdf25b3f108" name="Copy" type="Code"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acf72cc7-cf73-466f-8c22-9fb633ed3c24</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.CopyTo(sDestinationFile, True)
		Else
			oFile.CopyTo(sDestinationFolder & oFile.Name, True)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f12e4bba-1185-469f-aea9-0b8954cbed77" name="File Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-240" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30982d9d-8e54-4d64-af7e-2a7df861c94f" name="Destination Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-180" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d608807-5c80-49f5-a177-05a15f6d0ff7" name="Get File Size" type="SubSheetInfo"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><narrative>Gets the size of the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d07f9435-79c9-4cd5-b803-1cde78f5262c" name="End" type="End"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Size" narrative="The size of the file in bytes" stage="Bytes" /></outputs></stage><stage stageid="d573bf14-6cce-4455-ae05-908d9a527dcb" name="Start" type="Start"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><preconditions><condition narrative="The specified file must exist." /></preconditions><postconditions><condition narrative="The file size will have been determined." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="Full path to the file to get the file size" stage="File Path" /></inputs><onsuccess>6543595a-59fb-4304-b9f3-1acf662a1237</onsuccess></stage><stage stageid="0c8b0631-90f5-4646-b0cf-8fab74f80999" name="File Path" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-210" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6543595a-59fb-4304-b9f3-1acf662a1237" name="Get Byte Count" type="Code"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="number" name="Bytes" stage="Bytes" /></outputs><onsuccess>d07f9435-79c9-4cd5-b803-1cde78f5262c</onsuccess><code><![CDATA[Try

	Bytes = File.ReadAllBytes(File_Path).Length

Catch e As Exception
	Bytes = 0
End Try]]></code></stage><stage stageid="3eb7673c-2193-4d7f-ac06-85b1da9ce046" name="Bytes" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-150" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1f13191-1583-4a03-865c-3f0758139ca3" name="Delete File" type="SubSheetInfo"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><narrative>Deletes a single file from the file system.</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="31d32d9a-4f5c-4793-afc7-d84f096922b9" name="Start" type="Start"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><preconditions><condition narrative="The file to be deleted must exist." /></preconditions><postconditions><condition narrative="The named file will have been deleted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to delete" stage="File Name" /></inputs><onsuccess>b6262d8e-0c7b-459d-b177-37ae4d226ddf</onsuccess></stage><stage stageid="cd763cbc-81c0-42b1-9d9d-b2b7d325235d" name="File Name" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-240" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6262d8e-0c7b-459d-b177-37ae4d226ddf" name="Delete File" type="Code"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess><code><![CDATA[Try
   If Not File.Exists(File_Name) Then
      Throw New ApplicationException("The specified file at " & File_Name & " does not exist.")
   Else
	   File.Delete(File_Name)
	   Success = True
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1cd4abb9-4dc3-494c-86a7-d85877a1827a" name="Success" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc5b5c19-fe76-4278-95d2-f89c3588893c" name="Message" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-180" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7bae4fd-01fc-4447-8cf4-fbfd04353f72" name="End" type="End"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="576295b9-757e-4588-948e-34aac5140c29" name="End" type="End"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="cef63c98-a65d-4862-9d1d-ff02fbfc92f5" name="Get Folders" type="SubSheetInfo"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><narrative>Gets a collection of all subfolders in the specified file system folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f90df4f3-71ee-4470-b90b-1e8a0513cad8" name="Start" type="Start"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All sub-folders will be returned, if any exist." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for sub-folders" stage="Folder" /></inputs><onsuccess>ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43</onsuccess></stage><stage stageid="ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43" name="Get Folders" type="Code"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /></inputs><outputs><output type="collection" name="Folders" stage="Folders" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3dde4f26-00a8-4e1a-af12-b8a14178d89c</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFolders As DirectoryInfo()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Name," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written", _
		"System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime")
		
	aFolders = oDirectory.GetDirectories()
	For each oFolder as DirectoryInfo in aFolders
		objRow = objTable.NewRow()
		objRow("Path") = oFolder.FullName
		objRow("Name") = oFolder.Name
		objRow("Created") = oFolder.CreationTimeUtc
		objRow("Last Accessed") = oFolder.LastAccessTimeUtc
		objRow("Last Written") = oFolder.LastWriteTimeUtc

		objTable.Rows.Add(objRow)
	Next

	Folders = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f72d7f92-f944-412b-8890-737f3be3b0a1" name="Folder" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\</initialvalue><private /><alwaysinit /></stage><stage stageid="1384f5ee-e382-4900-9900-e2e2eb7a9a78" name="Folders" type="Collection"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-180" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa67216d-b83f-4c14-9f71-5ec6df626c08" name="End" type="End"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="collection" name="Folders" narrative="A collection of the sub-folders found within the folder" stage="Folders" /></outputs></stage><stage stageid="759f9ebb-96f6-432b-a21e-6673b71cac22" name="Success" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5afbf383-4ea5-42f7-a298-d02bf6dc267a" name="Message" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-240" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="076db864-0743-4339-b606-174f056c63f9" name="Move File" type="SubSheetInfo"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><narrative>Moves the specified file to a new location.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8c383fb0-b58b-44cd-8dec-c5934289e107" name="Start" type="Start"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><preconditions><condition narrative="The file to be moved must exist. There must be sufficient disk space to move the file." /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" stage="File Path" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" stage="Destination Path" /></inputs><onsuccess>8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b</onsuccess></stage><stage stageid="2c8abe9a-1466-4283-999a-c5c7838a0e27" name="End" type="End"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="a980280c-98cd-41d0-8a54-734c9bfacc5c" name="Success" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-240" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="779e3dfa-a01e-47f9-98c4-9ac10fcd5a11" name="Message" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-180" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b" name="Move" type="Code"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.MoveTo(sDestinationFile)
		Else
			oFile.MoveTo(sDestinationFolder & oFile.Name)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ba83bbd5-0c51-49b0-ac63-de9e754aab48" name="File Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57b074ac-98b9-40d1-a342-36dc0a514f77" name="Destination Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-180" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83a23da-bc05-4aa4-8a8e-6c09524e2baf" name="Split Path" type="SubSheetInfo"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><narrative>Splits a file path into its component parts - the filename and the folder path. The trailing backslash is omitted from the directory part.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c655f85-fb96-448d-be05-5f6c833e1882" name="Start" type="Start"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><preconditions><condition narrative="The specified path must correspond to a file which exists on disk." /></preconditions><postconditions><condition narrative="The path will have been separated." /></postconditions><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The path to split" stage="File Path" /></inputs><onsuccess>138061d1-d866-403d-af52-37ea509c7e78</onsuccess></stage><stage stageid="138061d1-d866-403d-af52-37ea509c7e78" name="Split Path" type="Code"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="text" name="Folder" stage="Folder" /><output type="text" name="File Name" stage="File Name" /></outputs><onsuccess>0e35cb6c-257d-40a6-ba20-d661c3ad83fe</onsuccess><code><![CDATA[
Folder = Path.GetDirectoryName(File_Path)
File_Name = Path.GetFileName(File_Path)
]]></code></stage><stage stageid="69bae4e1-98fe-460c-807d-30657ae18ebf" name="File Name" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de3608a3-9cb7-41c3-ae88-da3dad92053e" name="Folder" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-180" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0497cae-7418-46ec-a442-ac21369c7a2f" name="File Path" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e35cb6c-257d-40a6-ba20-d661c3ad83fe" name="End" type="End"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="File Name" narrative="The filename" stage="File Name" /><output type="text" name="Folder" narrative="The folder" stage="Folder" /></outputs></stage><stage stageid="3068b898-6d19-4469-8efd-f355853fda4e" name="Directory Exists" type="SubSheetInfo"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><narrative>Determines whether the specified directory exsts. The full path must be specified.</narrative><display x="-225" y="-210" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="14e7b70b-4620-4b05-a9f8-5c31396209bd" name="Start" type="Start"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" narrative="The directory to check exists" stage="Directory Name" /></inputs><onsuccess>50ef1149-8307-4080-9028-d6bec6eafd78</onsuccess></stage><stage stageid="4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44" name="End" type="End"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the directory exists" stage="Exists" /></outputs></stage><stage stageid="50ef1149-8307-4080-9028-d6bec6eafd78" name="Directory Exists" type="Code"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory_Name" expr="[Directory Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44</onsuccess><code><![CDATA[Try
	Exists = Directory.Exists(Directory_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="89cff60a-371d-476b-bc55-f0e56150ef45" name="Exists" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="-210" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9da119d-dbd9-4320-90e1-ca33fae50a91" name="Directory Name" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="-270" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1f89739-7f1c-4179-82ea-b123ecfc2854" name="Write Binary Data" type="SubSheetInfo"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><narrative>Writes binary data to a file. Any existing data in the file (if it exists) will be replaced.</narrative><display x="-210" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="067fe5ce-ad15-436e-92fa-11e920e00501" name="Start" type="Start"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" narrative="The data to write to the file" stage="Binary Data" /><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>48430903-e8af-4e4a-8544-8b04afc3478b</onsuccess></stage><stage stageid="83dc26e0-402d-403d-a18c-0d3ca147ba6d" name="Binary Data" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48430903-e8af-4e4a-8544-8b04afc3478b" name="Write Binary Data" type="Code"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" expr="[Binary Data]" /><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>aed480e9-2938-4d36-b400-a3bd2580921a</onsuccess><code><![CDATA[Try
	File.WriteAllBytes(FileName, Binary_Data)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="709d1a16-f19e-4504-ae79-4a48d1e058c7" name="End" type="End"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="43cbdbc2-6fdc-4080-b257-af95daad3fe4" name="Success" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-240" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0aebe753-5358-4cf3-982a-a9f0a9870be7" name="Message" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-180" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e035935-d499-4706-8ba0-78fdee0a782f" name="FileName" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-180" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7604000-e2fb-4a03-b8b4-caac4c6b9f9b" name="Combine Path" type="SubSheetInfo"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><narrative>Takes a file and folder and combines them into a full path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="71908284-0a93-418a-9205-32dc4780032c" name="Start" type="Start"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The path will have been combined." /></postconditions><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder to combine" stage="Folder" /><input type="text" name="File Name" narrative="The file to combine" stage="File Name" /></inputs><onsuccess>39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1</onsuccess></stage><stage stageid="39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1" name="Combine Path" type="Code"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>b4d82bcb-e011-4728-a3ec-4c052dcebaaf</onsuccess><code><![CDATA[
Path = IO.Path.Combine(Folder, File_Name)
]]></code></stage><stage stageid="dca04a3f-b696-45b1-95c8-63dce520abe3" name="File Name" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e27e592f-8a2e-4df9-9453-1cdc8621051b" name="Folder" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-180" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4d82bcb-e011-4728-a3ec-4c052dcebaaf" name="End" type="End"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Path" narrative="The combined full path" stage="Path" /></outputs></stage><stage stageid="ef4fc19c-8897-431e-8688-11a52561113f" name="Path" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-240" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a664d6c1-8951-4309-95b7-b7ae2edced0d" name="Create Directory" type="SubSheetInfo"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><narrative>Creates a directory under the given path.</narrative><display x="-195" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82e63828-72ff-4705-8c88-89c3316aa73e" name="Start" type="Start"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path in which to create the directory" stage="Directory Path" /><input type="flag" name="Error If Already Exists" narrative="True to generate an error if the directory already exists" stage="Error If Already Exists" /></inputs><onsuccess>98af3f34-4ec7-49c5-a6cc-1cf6192b0e05</onsuccess></stage><stage stageid="e061382f-4149-485b-9668-f2fc0ca334bd" name="End" type="End"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="800212c5-6bfb-4df9-b501-39f55906a7b2" name="Directory Path" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="-240" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e00501ce-6aa6-4616-9bf2-3904d515656c" name="Error If Already Exists" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="-180" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="98af3f34-4ec7-49c5-a6cc-1cf6192b0e05" name="Create Directory" type="Code"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory_Path" expr="[Directory Path]" /><input type="flag" name="ErrorIfAlreadyExists" expr="[Error If Already Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>060a1fdb-6243-40f1-96e0-1c0b54382bfa</onsuccess><code><![CDATA[Try
   If Not Directory.Exists(Directory_Path) Then
   	Directory.CreateDirectory(Directory_Path)
   Else
      If ErrorIfAlreadyExists Then Throw New ApplicationException("Directory already exists")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="3b33d39b-1c7c-4664-ab8b-859aa2e15836" name="Success" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="-240" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9cbff7ae-931b-479f-b70f-7773ddda315c" name="Error Message" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="-180" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20cbacd9-1e17-4fc0-85de-64615b1f3d18" name="Delete Directory" type="SubSheetInfo"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><narrative>Deletes a directory and if Recursive is True will delete all subdirectories if present</narrative><display x="-195" y="-165" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df3458a7-2e7e-451c-b27a-efc3737c22a4" name="Start" type="Start"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to delete" stage="Directory Path" /><input type="flag" name="Error If Not Exists" narrative="Set True to raise an error if the path does not exist" stage="Error If Not Exists" /><input type="flag" name="Recursive" narrative="Set True to delete all sub-directories of the path aswell" stage="Recursive" /></inputs><onsuccess>ef40ac3e-3a06-4ca9-a3be-daae97b8c700</onsuccess></stage><stage stageid="09677c01-2e36-4330-ae33-defa66a1e7b1" name="End" type="End"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="3afa3efd-a788-4410-a16c-5e2ecfc599d8" name="Directory Path" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="-240" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef40ac3e-3a06-4ca9-a3be-daae97b8c700" name="Delete Directory" type="Code"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="Recursive" expr="[Recursive]" /><input type="flag" name="ErrorIfNotExists" expr="[Error If Not Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>8db31208-966a-494a-9315-8a4add93c64c</onsuccess><code><![CDATA[Try
   If Directory.Exists(Directory_Path) Then

		Dim SubDirectories As Boolean
		SubDirectories = False

		Dim SubdirectoryEntries As String() 
		SubdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If SubdirectoryEntries.Length > 0 Then SubDirectories = True

		If SubDirectories And Not Recursive Then Throw New ApplicationException("Directory has sub directories and will not be deleted")
   	
		Directory.Delete(Directory_Path, Recursive) 
   
Else
      If ErrorIfNotExists Then Throw New ApplicationException("Directory does not exist")
   End If

	Success = True


Catch UAEx as UnauthorizedAccessException
	Success = False
	Error_Message = "The caller does not have the required permission to delete this directory or sub directories"

Catch ANEx as ArgumentNullException
	Success = False
	Error_Message = "Please check Directory Path parameter is not null"

Catch AEx as ArgumentException
	Success = False
	Error_Message = "Please check Directory Path parameter is a valid string"

Catch PTLEx as PathTooLongException
	Success = False
	Error_Message = "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters."

Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()

End Try]]></code></stage><stage stageid="1ea4ba58-4e52-4229-9f95-9f91c0fda672" name="Success" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="-240" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd89d345-b43b-43b1-a112-d69cd7b07387" name="Error Message" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="-240" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="498faab3-e919-4560-a284-8303f82f3c54" name="Recursive" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="-180" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c7f09a8a-5e8c-4bd8-ae1c-03c88a61bc8b" name="Error If Not Exists" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="-180" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a001ca1-2f75-4d52-8668-8537da4738b3" name="Sub Directory Exists" type="SubSheetInfo"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><narrative>Checks if a directory contains sub directories</narrative><display x="-195" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d21f26b-5ccc-4f2f-b6f3-3443cb23a95f" name="Start" type="Start"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to check for sub directories" stage="Directory Path" /></inputs><onsuccess>9bd1eb97-f903-4b5b-bdb0-9aa7d84feead</onsuccess></stage><stage stageid="167ee595-8609-4b40-9cbb-70394613201b" name="End" type="End"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if sub directories exist" stage="Exists" /><output type="flag" name="Success" narrative="True if the check was successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="9bd1eb97-f903-4b5b-bdb0-9aa7d84feead" name="Get Sub Directories" type="Code"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>33ba9e06-b05b-4e51-baa6-7f6c9165c558</onsuccess><code><![CDATA[Try
   
Exists = False
If Directory.Exists(Directory_Path) Then
   	Dim subdirectoryEntries As String() 
		
		subdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If subdirectoryEntries.Length > 0 Then Exists = True

   Else
      Throw New ApplicationException("Directory does not exist")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try
]]></code></stage><stage stageid="50a0102e-8884-426d-b94f-ed07f6b9eb46" name="Exists" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="-180" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c52a3808-5f20-4498-a5a6-6e8bd391e41c" name="Directory Path" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="-240" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\TEMP\Test Directory\A\c</initialvalue><private /><alwaysinit /></stage><stage stageid="227470b6-fe82-4351-a497-6094c99e4193" name="Success" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="-240" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="586142aa-051e-4ec9-8b60-fe063eb60b77" name="Error Message" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="-180" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12caee97-e82e-461c-8b22-dabe4248d7a8" name="Get CSV Text As Collection" type="SubSheetInfo"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><narrative>Turns a comma seperated values file into a collection</narrative><display x="-210" y="-120" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="939139f9-83c3-4076-85ca-1daa3e637601" name="Start" type="Start"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /></inputs><onsuccess>dd7efc8a-65d0-432e-a205-643037779b8d</onsuccess></stage><stage stageid="c85955cf-695f-4e82-acdb-72332a337fc7" name="End" type="End"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /></outputs></stage><stage stageid="96016690-fb73-49d3-bcfc-56b25dd9d3db" name="CSV Location" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="-240" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\BluePrism\Medalytix\iGrading\Test_Suite\ImagesIndex.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="dd7efc8a-65d0-432e-a205-643037779b8d" name="Parse CSV" type="Code"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /></outputs><onsuccess>c85955cf-695f-4e82-acdb-72332a337fc7</onsuccess><code><![CDATA[Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"


Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim cn As New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";FMT=Delimited""")
Dim da As New OleDbDataAdapter()
Dim ds As New DataSet()
Dim cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)
cn.Open()
da.SelectCommand = cd
ds.Clear()
da.Fill(ds, "CSV")
Values = ds.Tables(0)
cn.Close()]]></code></stage><stage stageid="5fe33334-21a0-4751-931d-92622545fe5d" name="CSV Values" type="Collection"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="-120" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dc002ef-16ce-4e9b-9eed-1c4c8a375f11" name="First Line Is Header" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="-180" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1836bd9-a0bc-45e9-9f62-2835fb1f6144" name="Get Special Folder Path" type="SubSheetInfo"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><narrative>Gets the path of a special folder.</narrative><display x="-210" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="984cc49d-2710-42f2-85cc-b02b1af6ff97" name="Start" type="Start"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder Name" narrative="The name of the special folder. Supported values include ApplicationData, DesktopDirectory, MyDocuments, ProgramFiles. The values correspond to the .NET Environment.SpecialFolder enumeration." stage="Special Folder Name" /></inputs><onsuccess>548052a7-4e77-4da0-a80e-07ce9d38ecba</onsuccess></stage><stage stageid="f77e4b56-0c20-4361-b1ac-7fbae4cebd0a" name="End" type="End"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Folder Path" narrative="The corresponding path of the requested special folder" stage="Folder Path" /></outputs></stage><stage stageid="1eb8ae16-c4b3-4a26-9476-974fec0fb4c4" name="Special Folder Name" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="-240" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">InternetCache</initialvalue><private /><alwaysinit /></stage><stage stageid="548052a7-4e77-4da0-a80e-07ce9d38ecba" name="Get Folder Path" type="Code"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder" expr="[Special Folder Name]" /></inputs><outputs><output type="text" name="Folder Path" stage="Folder Path" /></outputs><onsuccess>f77e4b56-0c20-4361-b1ac-7fbae4cebd0a</onsuccess><code><![CDATA[Dim EnumVal as Environment.SpecialFolder
Try
	EnumVal = Ctype(System.Enum.Parse(GetType(Environment.SpecialFolder), Special_Folder), Environment.SpecialFolder)
Catch Ex As Exception
	Throw New ApplicationException("Value '" & Special_Folder & "' is not recognised as a special folder")
End Try

Folder_Path = Environment.GetFolderPath(EnumVal)]]></code></stage><stage stageid="394a43a7-79f9-4edb-887f-d051122fa5f0" name="Folder Path" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="-180" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a81b69-65ad-4194-8361-a2e49aab6c2c" name="Download File" type="SubSheetInfo"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><narrative>Downloads a file from a web URL and saves it in a folder on disk.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce6133ff-352a-4e74-b9a9-a2bb5d8c8858" name="Start" type="Start"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Source URL" narrative="The URL of the file that is to be downloaded" stage="Source URL" /><input type="text" name="Destination Path" narrative="The location of the folder where the file is to be saved" stage="Destination Path" /></inputs><onsuccess>a9bb95cf-84c0-42b2-9fac-e36252a56808</onsuccess></stage><stage stageid="00124bb2-c920-40c3-92e1-efb49b029dc0" name="End" type="End"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b30cabb-184c-427b-860e-a315e03763ba" name="Destination Path" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-150" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ee09d3b-a12d-48c7-89a2-7a947d431ac5" name="Source URL" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-225" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9bb95cf-84c0-42b2-9fac-e36252a56808" name="Download File" type="Code"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Url" expr="[Source URL]" /><input type="text" name="Path" expr="[Destination Path]" /></inputs><onsuccess>00124bb2-c920-40c3-92e1-efb49b029dc0</onsuccess><code><![CDATA[Using wc As New System.Net.WebClient()
	wc.DownloadFile(Url, Path)
End Using]]></code></stage><stage stageid="744e3f22-df5c-4d9e-984b-eceb276cbb95" name="Read Lines From File" type="SubSheetInfo"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><narrative>Reads a range of lines fom a text file</narrative><display x="-210" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ef75fb-7cbe-4b43-900b-bd0112866589" name="File Path" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-255" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3721f65-c0fd-4187-9e61-da35cecde126" name="Start Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3444d260-8bd2-44b4-91c8-1f4dc3a07e1d" name="End Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-135" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de2f0517-71e7-4bfa-b20b-0f6049ee064d" name="EOF" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-255" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e19c2d2b-f05b-48b3-a6c0-e6c368a0720b" name="Success" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-255" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2814638b-191d-44de-9e9d-e38ce3a2bdb5" name="Message" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="677752c3-298c-4ea1-abaf-244b239d65d0" name="Lines" type="Collection"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-135" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5bbb949-f610-4f45-bcb7-10a0fc6b123d" name="Line Count" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf17d04b-65f1-4bf3-a12c-7121e3c2a075" name="Start" type="Start"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><preconditions><condition narrative="The text file exists and the user has appropriate privileges to allow reading it" /><condition narrative="The Start Line argument is less than or equal to the End Line argument" /></preconditions><postconditions><condition narrative="The lines between and including Start Line and End Line are returned" /><condition narrative="EOF will indicate if the end of the file was reached before End Line was reached" /></postconditions><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The file to read" stage="File Path" /><input type="number" name="Start Line" narrative="The first line to read" stage="Start Line" /><input type="number" name="End Line" narrative="The last line to read" stage="End Line" /></inputs><onsuccess>4942f615-9ff9-497d-b3ff-dd697860c232</onsuccess></stage><stage stageid="76661ec7-b5b7-4cf5-9b34-27ca45c70b40" name="Read Lines" type="Code"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="number" name="Start Line" expr="[Start Line]" /><input type="number" name="End Line" expr="[End Line]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Lines" stage="Lines" /><output type="number" name="Line Count" stage="Line Count" /><output type="flag" name="EOF" stage="EOF" /></outputs><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess><code><![CDATA[' Assume success
Success = True
Message = ""

Try
	Lines = New DataTable()
	Lines.Columns.Add("Line", GetType(String))

	Using sr As New StreamReader(File_Path)

		EOF = False
		Start_Line = Math.Max(1, Start_Line)

		Dim line as String
		Dim lineNo As Integer = 0
		Do
			line = sr.ReadLine()
			lineNo += 1

			If line Is Nothing Then EOF = True : Exit Do
			If lineNo >= Start_Line Then Lines.Rows.Add(line)
			If lineNo = End_Line Then Exit Do

		Loop Until line Is Nothing
		Line_Count = Lines.Rows.Count

	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="bcb21a17-13b7-404f-b11f-16d75385411f" name="End" type="End"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True is the read was successful" stage="Success" /><output type="text" name="Message" narrative="The exception detail if the read was unsuccessful" stage="Message" /><output type="collection" name="Lines" narrative="The lines read - the collection contains a single text column 'Line'" stage="Lines" /><output type="number" name="Line Count" narrative="The number of lines read" stage="Line Count" /><output type="flag" name="End of File" narrative="True if the end of the file was reached before the 'End Line' was reached" stage="EOF" /></outputs></stage><stage stageid="4942f615-9ff9-497d-b3ff-dd697860c232" name="Start Line &gt; End Line?" type="Decision"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Start Line] &gt; [End Line]" /><ontrue>fb13e8fc-442c-4cbb-87c1-b4ec596ee962</ontrue><onfalse>76661ec7-b5b7-4cf5-9b34-27ca45c70b40</onfalse></stage><stage stageid="fb13e8fc-442c-4cbb-87c1-b4ec596ee962" name="Semi-Exception" type="MultipleCalculation"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>362c841e-8d1e-4972-b0b5-710b7bdb1f27</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Start Line (&quot; &amp; [Start Line] &amp; &quot;) cannot be later than End Line (&quot; &amp; [End Line] &amp; &quot;)&quot;" stage="Message" /></steps></stage><stage stageid="362c841e-8d1e-4972-b0b5-710b7bdb1f27" name="anchor1" type="Anchor"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess></stage><stage stageid="d049bf7c-ac22-489e-bf3d-f62d1b4b744a" name="Configure" type="SubSheetInfo"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f64d939-b1af-4604-a33c-d730215d51aa" name="Start" type="Start"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>63f0aaf5-553d-43fd-b40d-6b3196b7c075</onsuccess></stage><stage stageid="63f0aaf5-553d-43fd-b40d-6b3196b7c075" name="End" type="End"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e00cf6f-bf06-484e-bcc5-5c0ea5f2dcf1" name="Raise exception on any failure" type="Data"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><display x="-210" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e8d8821c-ea33-4e7e-a499-9095f71ab91f" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="360a869a-24fc-4d19-abbe-b1444dd28c58" name="Start" type="Start"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>f72ef338-2cee-4c45-8a9a-31011244644f</onsuccess></stage><stage stageid="94d641fc-9887-40ca-8919-8613e5fafda0" name="End" type="End"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af41ccc8-b3bd-4925-84ba-5df075402e08" name="Success" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-225" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd0e1bfa-b960-4e5e-b8e5-9a24adfd36e1" name="Error Message" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-150" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f72ef338-2cee-4c45-8a9a-31011244644f" name="Should Raise Exception?" type="Decision"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>f42fee03-c39b-416a-b55f-3d69a9ebe812</ontrue><onfalse>94d641fc-9887-40ca-8919-8613e5fafda0</onfalse></stage><stage stageid="f42fee03-c39b-416a-b55f-3d69a9ebe812" name="FAIL" type="Exception"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="90" y="-60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3764ae17-85d7-4ebb-99b5-502b95d7abd6</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="3dde4f26-00a8-4e1a-af12-b8a14178d89c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>aa67216d-b83f-4c14-9f71-5ec6df626c08</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="060a1fdb-6243-40f1-96e0-1c0b54382bfa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>e061382f-4149-485b-9668-f2fc0ca334bd</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="8db31208-966a-494a-9315-8a4add93c64c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>09677c01-2e36-4330-ae33-defa66a1e7b1</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="33ba9e06-b05b-4e51-baa6-7f6c9165c558" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>167ee595-8609-4b40-9cbb-70394613201b</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="d0021635-222d-46f1-93ad-a7435640cf9f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>82b919fe-64b2-4c2b-8173-5706f671c5ce</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="249acd28-3283-498f-aca8-76c67cb2295c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>576295b9-757e-4588-948e-34aac5140c29</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acf72cc7-cf73-466f-8c22-9fb633ed3c24" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>a7bae4fd-01fc-4447-8cf4-fbfd04353f72</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>2c8abe9a-1466-4283-999a-c5c7838a0e27</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="1e441202-3878-4eb6-b156-6f517be6de00" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>39862014-df78-414b-9ccd-5c0d392aa282</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7419fb71-5c79-4fb6-9e59-b9fbc1d63e45" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>0a76495e-bc0d-4cea-bae0-85da1e15c74f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7d20fad4-4b50-4841-94e9-5f38571de063" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>bcb21a17-13b7-404f-b11f-16d75385411f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="9219c3c4-effd-4dfc-9020-8dafd054ea8f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>1aab3a10-a813-470b-97c8-57938a0d0024</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="aed480e9-2938-4d36-b400-a3bd2580921a" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>709d1a16-f19e-4504-ae79-4a48d1e058c7</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="edd83e13-dc03-47f4-a539-954f88ee129c" name="File_Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-165" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ba2eae4-b411-4e53-8703-31cec76cc368" name="Action 25" type="SubSheetInfo"><subsheetid>3bc2286b-bf9e-490f-84a5-9b8604b05075</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="65413687-55ba-4809-b865-e8e861818fef" name="Start" type="Start"><subsheetid>3bc2286b-bf9e-490f-84a5-9b8604b05075</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>cde1770b-da08-4ec8-b44a-52aec73f8613</onsuccess></stage><stage stageid="cde1770b-da08-4ec8-b44a-52aec73f8613" name="End" type="End"><subsheetid>3bc2286b-bf9e-490f-84a5-9b8604b05075</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="06e7321b-6b33-41e2-a887-db72fc1231ee" name="Block1" type="Block"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8a2e3629-3e4c-4be3-8adb-86b2f0240a67" name="Block2" type="Block"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="49ae4a54-c66b-48e3-bffe-463a9da93d86" name="Block3" type="Block"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="45" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e07cdf4b-e447-4e9d-8312-3dcf04698777" name="Block4" type="Block"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="-270" y="-60" w="180" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a98164f5-ed8f-48ae-af60-4740b9eaf93d" name="Block5" type="Block"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="38c7ec42-f5aa-4c74-9b1e-e0899a963e7c" name="Block6" type="Block"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-315" y="-135" w="180" h="45" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="b18adda3-b29f-48f9-8c39-3ec5e85870ea" name="Block7" type="Block"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-300" y="-150" w="135" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="db3e3d0e-c1b4-4ce1-8a72-724a0fa1a666" name="Block8" type="Block"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="-270" y="-60" w="135" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="37764311-8de8-41a1-9ba4-51afc1cc8de1" name="Block9" type="Block"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-285" y="-105" w="150" h="135" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f24e6646-c7a6-4617-b7df-1b3d5579b0dc" name="Block10" type="Block"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-285" y="-120" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="54b35b3f-903e-4fe4-bf0c-7f91fd48a535" name="Block11" type="Block"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="79734f2d-0e99-4136-a20d-98b104bdf62e" name="Block12" type="Block"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="-270" y="-45" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="c0a6f2df-8453-4b2c-9aa4-9b6f3ed62dd9" name="Block13" type="Block"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="-270" y="-45" w="135" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="d060f261-1347-453c-b566-f14d6aa1d825" name="Block14" type="Block"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="-270" y="-75" w="180" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="8c6ae4b8-8d14-41d7-b9cb-49f2350fa3d4" name="Block15" type="Block"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-270" y="-75" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1b5bb979-8e81-4a1e-8fcb-40832eeb7d26" name="Block16" type="Block"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-270" y="-45" w="135" h="90" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1097b52c-395f-4044-8d4b-43ac73d874c5" name="Block17" type="Block"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="-255" y="-30" w="135" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ddfbf7f1-1f2b-461a-99f2-3a39f7abffb2" name="Block18" type="Block"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-285" y="-30" w="165" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e7b5a0a8-745d-4986-9cbd-519d8b43489c" name="Block19" type="Block"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-300" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7251521b-960d-4004-8108-14d656df69b1" name="Block20" type="Block"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-300" y="-120" w="195" h="150" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="6329f27c-4d23-4b90-8e15-8b83a376706d" name="Block21" type="Block"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-300" y="-30" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="083d05c8-dbc0-48ed-8e73-a4e562269a3a" name="Block22" type="Block"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-285" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0f0bac25-d6ca-4b96-be2f-ec9cb641842e" name="Block23" type="Block"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-285" y="-60" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="e3df1567-6c4f-4022-ac6d-33a40f71f087" name="Block24" type="Block"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-270" y="-120" w="135" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="d1b336e6-b4ca-4420-9d97-5ad9ef00916c" name="Utility - File Management 64bit" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - File Management 64bit" version="7.2.0.5997" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>149</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e3c209b-a109-46a0-9ff0-e2dc6b8791fb" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8043916d-2ef9-45b8-ab66-f4c20ef1b8e3" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea" type="Normal" published="True"><name>Download File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a12dbad-57fd-45a4-b859-62df514a34d3" type="Normal" published="True"><name>Get Files</name><view><camerax>106</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bafee17-a81a-40f0-9b6b-80b78142dd87" type="Normal" published="True"><name>Get Folders</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60b8a01d-1f74-4169-b192-5e363a7b5e61" type="Normal" published="True"><name>File Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20e6a636-d89b-4c08-b90d-8852894005a4" type="Normal" published="True"><name>Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ff30a41-e177-40c5-a756-a6b466004f32" type="Normal" published="True"><name>Create Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d68f192f-eeb7-420e-b156-9636503b6082" type="Normal" published="True"><name>Delete Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8" type="Normal" published="True"><name>Sub Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3050915-ad2e-446e-a1d6-99d11506f55e" type="Normal" published="True"><name>Split Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c80dea92-57e8-4e2e-8df4-f3ee6ceeb717" type="Normal" published="True"><name>Combine Path</name><view><camerax>202</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed509af2-4b4a-447d-8196-18105ed12739" type="Normal" published="True"><name>Delete Files</name><view><camerax>106</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70940cba-8680-4eb9-8066-9e383fc5b39b" type="Normal" published="True"><name>Delete File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e9dd304c-7d26-40f5-b193-eef36f0a370c" type="Normal" published="True"><name>Copy File</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85156833-c61c-4c78-916f-0b75a9a83e8d" type="Normal" published="True"><name>Move File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ca00106-fe4e-46c0-bffc-0dda1561434f" type="Normal" published="True"><name>Get File Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2530b0d-5530-4692-8a60-1f91d1c5a9c9" type="Normal" published="True"><name>Append to Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8eb61369-ddab-4205-9a55-81054c2e4afb" type="Normal" published="True"><name>Read All Text from File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a9cff0d-c7c5-440a-bd8d-0007e15eae4d" type="Normal" published="True"><name>Read Lines From File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="602b7aad-2626-40ba-8c4b-1ec926ae9098" type="Normal" published="True"><name>Write Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="842c79f8-aa64-4781-ad18-3982e21f0fd1" type="Normal" published="True"><name>Write Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7fa43ec-67e2-4acb-8d13-ced3c5027761" type="Normal" published="True"><name>Get CSV Text As Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c6e605-9948-429a-ac84-d2810bca75fc" type="Normal" published="True"><name>Get Special Folder Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Data.OleDB</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			If objColumn.DataType = GetType(DateTime) Then
				objColumn.DateTimeMode = DataSetDateTime.Utc
			End If
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="07048754-58c7-4201-9869-e206f1d6c32a" name="Get Files" type="SubSheetInfo"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><narrative>Gets all files in the specified folder matching the supplied file type pattern string.

Patterns - A comma-separated list of file patterns identifying the type(s) of files sought. Eg "*.jpg, *.png" retrieves all jpg and png files. The pattern "*.*" will return all files. It does not matter whether you leave a space between each pattern, or not. Where a comma is required in a file pattern it should be escaped out using the backslash character, e.g. a pattern of "*\,November.xlsx" will return all files that end with ",November.xlsx"</narrative><display x="-195" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8448350e-b6a9-4a15-a3d0-501c4967c0f9" name="Start" type="Start"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All matching files will be returned." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" stage="Folder" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" stage="Patterns CSV" /></inputs><onsuccess>acbbbddf-8b42-4353-8b0a-83eaeb216a63</onsuccess></stage><stage stageid="acbbbddf-8b42-4353-8b0a-83eaeb216a63" name="Get Files" type="Code"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Patterns CSV" expr="[Patterns CSV]" /></inputs><outputs><output type="collection" name="Files" stage="Files" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFiles As FileInfo()
Dim aPatterns As String()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Folder," _
		& "Name," _
		& "Extension," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written," _
		& "Read Only," _
		& "Bytes", _
		"System.String," _
		& "System.String," _
		& "System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.Boolean," _
		& "System.Double")
		
	Patterns_CSV = Patterns_CSV.replace("\,", "?")
	aPatterns = Patterns_CSV.split(",")

	For each sPattern As String in aPatterns
		sPattern = sPattern.replace("?", ",")
		aFiles = oDirectory.GetFiles(sPattern.Trim)
		For each oFile as FileInfo in aFiles
			objRow = objTable.NewRow()
			objRow("Path") = oFile.FullName
			objRow("Folder") = oFile.DirectoryName
			objRow("Name") = oFile.Name
			objRow("Extension") = oFile.Extension
			objRow("Created") = oFile.CreationTimeUtc
			objRow("Last Accessed") = oFile.LastAccessTimeUtc
			objRow("Last Written") = oFile.LastWriteTimeUtc
			objRow("Read Only") = oFile.IsReadOnly
			objRow("Bytes") = oFile.Length

			objTable.Rows.Add(objRow)
		Next
	Next

	objTable = objTable.DefaultView.ToTable(True, _
		"Path", _
		"Folder", _
		"Name", _
		"Extension", _
		"Created", _
		"Last Accessed", _
		"Last Written", _
		"Read Only", _
		"Bytes")

	Files = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="913867cd-7535-4857-b6b9-1b1ead2bc67f" name="Folder" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp</initialvalue><private /><alwaysinit /></stage><stage stageid="624240c2-02c8-48c3-9040-e9388fddf1b1" name="Patterns CSV" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.jpg</initialvalue><private /><alwaysinit /></stage><stage stageid="95f234d2-8c1a-466c-b8a6-fb7dc34de936" name="Files" type="Collection"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3764ae17-85d7-4ebb-99b5-502b95d7abd6" name="End" type="End"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs></stage><stage stageid="8e80cc1d-27ed-43d9-985e-90d828191fb7" name="Success" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="950111b1-7b05-4076-a673-b07166b76cdb" name="Message" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32964141-871e-474a-a1f8-eea0b10c5df2" name="Delete Files" type="SubSheetInfo"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><narrative>Deletes all files in the specified folder, matching the supplied file extension pattern.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82b919fe-64b2-4c2b-8173-5706f671c5ce" name="End" type="End"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea337dc4-4fd9-4d31-8cc6-23da41cd5665" name="Start" type="Start"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All files within the named folder which match the supplied pattern will have been deleted." /></postconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The path from which to delete the files" stage="Folder" /><input type="text" name="Pattern" narrative="The wildcard pattern of files to delete" stage="Pattern" /></inputs><onsuccess>202c81a6-fd90-46ed-9eee-73c24863b69b</onsuccess></stage><stage stageid="202c81a6-fd90-46ed-9eee-73c24863b69b" name="Delete Files" type="Code"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Pattern" expr="[Pattern]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess><code><![CDATA[Dim aFiles As String()

Try

	aFiles = Directory.GetFiles(Folder, Pattern)

	For each f as String in aFiles
		File.Delete(f)
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try
]]></code></stage><stage stageid="119002ff-ee61-4f32-b096-f3953ad107e1" name="Folder" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp\Blue Prism</initialvalue><private /><alwaysinit /></stage><stage stageid="121b4fd7-a9da-4498-a8d5-6a0ab2dae758" name="Pattern" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.TIF</initialvalue><private /><alwaysinit /></stage><stage stageid="623ad5b5-f965-4f97-9d46-435717e70b25" name="Success" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77c8238b-c415-496f-87c3-50033ec4d2a5" name="Message" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7891b89f-2307-4444-8b6e-17e25e53501f" name="Append to Text File" type="SubSheetInfo"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><narrative>Appends some text to the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="83010bd2-019e-4b04-af0b-b401efe8d128" name="Start" type="Start"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data. The destination file need not exist already. If it does not exist then it will be created." /></preconditions><postconditions><condition narrative="The supplied text will have been appended." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" stage="File Name" /><input type="text" name="Text" narrative="The text to append to the file" stage="Text" /></inputs><onsuccess>eeb7f0eb-73fc-4849-96a9-35f410bbde67</onsuccess></stage><stage stageid="39862014-df78-414b-9ccd-5c0d392aa282" name="End" type="End"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="f9d3e8a1-7f67-4991-b9f1-e8ec160de075" name="Success" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2ef09390-e450-4d10-a32b-4448a65b0aaf" name="Message" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e77fcf2-8d12-4f3b-acf3-e15dccb8e90a" name="Text" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f599b6ac-5574-438b-8617-8821d9800cf7" name="File Name" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeb7f0eb-73fc-4849-96a9-35f410bbde67" name="Append" type="Code"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e441202-3878-4eb6-b156-6f517be6de00</onsuccess><code><![CDATA[Try

	Dim sw As StreamWriter

	If File.Exists(File_Name) = False Then
		sw = File.CreateText(File_Name)
	Else
		sw = File.AppendText(File_Name)
	End If

	sw.WriteLine(Text)
	sw.Flush()
	sw.Close()
	
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="6428e7b4-8ed6-4930-bc8f-636cc71e955a" name="Read All Text from File" type="SubSheetInfo"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><narrative>Reads the entire contents of a file as text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a783ee6f-6425-4420-9b9f-759c781f3544" name="Start" type="Start"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><preconditions><condition narrative="The file must exist." /></preconditions><postconditions><condition narrative="The full text of the file will be read." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path the file to read the text from" stage="File Name" /></inputs><onsuccess>8107f164-7ef3-4164-8a2c-500055c7b374</onsuccess></stage><stage stageid="0a76495e-bc0d-4cea-bae0-85da1e15c74f" name="End" type="End"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="text" name="Text" narrative="The text of the file" stage="Text" /></outputs></stage><stage stageid="995662eb-baf3-436e-a2c1-2cc3ccfcf8fb" name="Success" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee454760-e4c3-44cc-b071-30cdafbe8355" name="Message" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dbbbe6e-0b94-4d90-940a-c99f9671b774" name="Text" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265e14ba-8649-477d-9d21-092a9bc9ad2d" name="File Name" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8107f164-7ef3-4164-8a2c-500055c7b374" name="Read Text" type="Code"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Text" stage="Text" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7419fb71-5c79-4fb6-9e59-b9fbc1d63e45</onsuccess><code><![CDATA[Try
   If File.Exists(File_Name) Then
   	Dim sr As New StreamReader(File_Name)
   	Text = sr.ReadToEnd
   	sr.Close()
   	Success = True
   	Message = ""
   Else
      Throw New ApplicationException("The file at " & File_Name & " does not exist")
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="a3f9a500-e2f0-4f48-9bb2-38ad1a4592b9" name="Write Text File" type="SubSheetInfo"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f408f78-c150-49f6-9f52-a3fb59ce307e" name="Start" type="Start"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data." /></preconditions><postconditions><condition narrative="The supplied text will have been written to the destination file." /></postconditions><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /></inputs><onsuccess>7d5efe35-64fc-48a0-b5a7-a5b787e90578</onsuccess></stage><stage stageid="1aab3a10-a813-470b-97c8-57938a0d0024" name="End" type="End"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="e85add3f-f65a-47dd-8be7-5ee764878dee" name="Success" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3ba21666-440e-40ea-80e4-bb02ff535775" name="Message" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="951ed278-f157-450e-90d0-06cc330e358c" name="Text" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20ca70ee-ce56-4594-90ca-a03ba1934f47" name="File Name" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d5efe35-64fc-48a0-b5a7-a5b787e90578" name="Write" type="Code"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9219c3c4-effd-4dfc-9020-8dafd054ea8f</onsuccess><code><![CDATA[Try
	File.WriteAllText(File_Name, Text)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="7dfd4754-e49a-447b-b9c3-c36266dfa2e8" name="File Exists" type="SubSheetInfo"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><narrative>Determines whether the specified file exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da1de8a5-b06c-4fc0-b316-2fec1a802056" name="End" type="End"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the file exists" stage="Exists" /></outputs></stage><stage stageid="6b0d4683-2748-485e-88ed-cdf57c76992d" name="Start" type="Start"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The existence of the file of interest will have been determined." /></postconditions><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The name of the file to check" stage="File Name" /></inputs><onsuccess>7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed</onsuccess></stage><stage stageid="f92a43a8-74e6-4f49-bf65-dc7663017f2b" name="File Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed" name="File Exists" type="Code"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>da1de8a5-b06c-4fc0-b316-2fec1a802056</onsuccess><code><![CDATA[Try
	Exists = File.Exists(File_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="817167f9-bb73-4622-9254-e249dff5369f" name="Exists" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c50578e4-df15-4b21-8a4c-469dae40724d" name="Copy File" type="SubSheetInfo"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><narrative>Copies a file to the named destination.</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30f8df38-bbc1-4b94-916b-ce06a40b630c" name="Start" type="Start"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><preconditions><condition narrative="The file to be copied must exist. The full destination path must be specified. There must be sufficient free disk space to complete the operation." /></preconditions><postconditions><condition narrative="The file will have been copied to the specified destination." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to be copied" stage="File Path" /><input type="text" name="Destination Path" narrative="The path of the directory to copy the file to" stage="Destination Path" /></inputs><onsuccess>8de7d816-2984-4b8f-a1f0-dfdf25b3f108</onsuccess></stage><stage stageid="53e1058f-89a5-4172-b9b5-89530de8ef51" name="Success" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="471fd171-54c1-4c9b-aa1d-6f471b939942" name="Message" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8de7d816-2984-4b8f-a1f0-dfdf25b3f108" name="Copy" type="Code"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acf72cc7-cf73-466f-8c22-9fb633ed3c24</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.CopyTo(sDestinationFile, True)
		Else
			oFile.CopyTo(sDestinationFolder & oFile.Name, True)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f12e4bba-1185-469f-aea9-0b8954cbed77" name="File Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30982d9d-8e54-4d64-af7e-2a7df861c94f" name="Destination Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d608807-5c80-49f5-a177-05a15f6d0ff7" name="Get File Size" type="SubSheetInfo"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><narrative>Gets the size of the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d07f9435-79c9-4cd5-b803-1cde78f5262c" name="End" type="End"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Size" narrative="The size of the file in bytes" stage="Bytes" /></outputs></stage><stage stageid="d573bf14-6cce-4455-ae05-908d9a527dcb" name="Start" type="Start"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><preconditions><condition narrative="The specified file must exist." /></preconditions><postconditions><condition narrative="The file size will have been determined." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="Full path to the file to get the file size" stage="File Path" /></inputs><onsuccess>6543595a-59fb-4304-b9f3-1acf662a1237</onsuccess></stage><stage stageid="0c8b0631-90f5-4646-b0cf-8fab74f80999" name="File Path" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6543595a-59fb-4304-b9f3-1acf662a1237" name="Get Byte Count" type="Code"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="number" name="Bytes" stage="Bytes" /></outputs><onsuccess>d07f9435-79c9-4cd5-b803-1cde78f5262c</onsuccess><code><![CDATA[Try

	Bytes = File.ReadAllBytes(File_Path).Length

Catch e As Exception
	Bytes = 0
End Try]]></code></stage><stage stageid="3eb7673c-2193-4d7f-ac06-85b1da9ce046" name="Bytes" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1f13191-1583-4a03-865c-3f0758139ca3" name="Delete File" type="SubSheetInfo"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><narrative>Deletes a single file from the file system.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="31d32d9a-4f5c-4793-afc7-d84f096922b9" name="Start" type="Start"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><preconditions><condition narrative="The file to be deleted must exist." /></preconditions><postconditions><condition narrative="The named file will have been deleted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to delete" stage="File Name" /></inputs><onsuccess>b6262d8e-0c7b-459d-b177-37ae4d226ddf</onsuccess></stage><stage stageid="cd763cbc-81c0-42b1-9d9d-b2b7d325235d" name="File Name" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6262d8e-0c7b-459d-b177-37ae4d226ddf" name="Delete File" type="Code"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess><code><![CDATA[Try
   If Not File.Exists(File_Name) Then
      Throw New ApplicationException("The specified file at " & File_Name & " does not exist.")
   Else
	   File.Delete(File_Name)
	   Success = True
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1cd4abb9-4dc3-494c-86a7-d85877a1827a" name="Success" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc5b5c19-fe76-4278-95d2-f89c3588893c" name="Message" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7bae4fd-01fc-4447-8cf4-fbfd04353f72" name="End" type="End"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="576295b9-757e-4588-948e-34aac5140c29" name="End" type="End"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="cef63c98-a65d-4862-9d1d-ff02fbfc92f5" name="Get Folders" type="SubSheetInfo"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><narrative>Gets a collection of all subfolders in the specified file system folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f90df4f3-71ee-4470-b90b-1e8a0513cad8" name="Start" type="Start"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All sub-folders will be returned, if any exist." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for sub-folders" stage="Folder" /></inputs><onsuccess>ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43</onsuccess></stage><stage stageid="ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43" name="Get Folders" type="Code"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /></inputs><outputs><output type="collection" name="Folders" stage="Folders" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3dde4f26-00a8-4e1a-af12-b8a14178d89c</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFolders As DirectoryInfo()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Name," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written", _
		"System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime")
		
	aFolders = oDirectory.GetDirectories()
	For each oFolder as DirectoryInfo in aFolders
		objRow = objTable.NewRow()
		objRow("Path") = oFolder.FullName
		objRow("Name") = oFolder.Name
		objRow("Created") = oFolder.CreationTimeUtc
		objRow("Last Accessed") = oFolder.LastAccessTimeUtc
		objRow("Last Written") = oFolder.LastWriteTimeUtc

		objTable.Rows.Add(objRow)
	Next

	Folders = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f72d7f92-f944-412b-8890-737f3be3b0a1" name="Folder" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\</initialvalue><private /><alwaysinit /></stage><stage stageid="1384f5ee-e382-4900-9900-e2e2eb7a9a78" name="Folders" type="Collection"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa67216d-b83f-4c14-9f71-5ec6df626c08" name="End" type="End"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="collection" name="Folders" narrative="A collection of the sub-folders found within the folder" stage="Folders" /></outputs></stage><stage stageid="759f9ebb-96f6-432b-a21e-6673b71cac22" name="Success" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5afbf383-4ea5-42f7-a298-d02bf6dc267a" name="Message" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="076db864-0743-4339-b606-174f056c63f9" name="Move File" type="SubSheetInfo"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><narrative>Moves the specified file to a new location.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8c383fb0-b58b-44cd-8dec-c5934289e107" name="Start" type="Start"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><preconditions><condition narrative="The file to be moved must exist. There must be sufficient disk space to move the file." /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" stage="File Path" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" stage="Destination Path" /></inputs><onsuccess>8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b</onsuccess></stage><stage stageid="2c8abe9a-1466-4283-999a-c5c7838a0e27" name="End" type="End"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="a980280c-98cd-41d0-8a54-734c9bfacc5c" name="Success" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="779e3dfa-a01e-47f9-98c4-9ac10fcd5a11" name="Message" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b" name="Move" type="Code"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.MoveTo(sDestinationFile)
		Else
			oFile.MoveTo(sDestinationFolder & oFile.Name)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ba83bbd5-0c51-49b0-ac63-de9e754aab48" name="File Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57b074ac-98b9-40d1-a342-36dc0a514f77" name="Destination Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83a23da-bc05-4aa4-8a8e-6c09524e2baf" name="Split Path" type="SubSheetInfo"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><narrative>Splits a file path into its component parts - the filename and the folder path. The trailing backslash is omitted from the directory part.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c655f85-fb96-448d-be05-5f6c833e1882" name="Start" type="Start"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><preconditions><condition narrative="The specified path must correspond to a file which exists on disk." /></preconditions><postconditions><condition narrative="The path will have been separated." /></postconditions><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The path to split" stage="File Path" /></inputs><onsuccess>138061d1-d866-403d-af52-37ea509c7e78</onsuccess></stage><stage stageid="138061d1-d866-403d-af52-37ea509c7e78" name="Split Path" type="Code"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="text" name="Folder" stage="Folder" /><output type="text" name="File Name" stage="File Name" /></outputs><onsuccess>0e35cb6c-257d-40a6-ba20-d661c3ad83fe</onsuccess><code><![CDATA[
Folder = Path.GetDirectoryName(File_Path)
File_Name = Path.GetFileName(File_Path)
]]></code></stage><stage stageid="69bae4e1-98fe-460c-807d-30657ae18ebf" name="File Name" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de3608a3-9cb7-41c3-ae88-da3dad92053e" name="Folder" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0497cae-7418-46ec-a442-ac21369c7a2f" name="File Path" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e35cb6c-257d-40a6-ba20-d661c3ad83fe" name="End" type="End"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="File Name" narrative="The filename" stage="File Name" /><output type="text" name="Folder" narrative="The folder" stage="Folder" /></outputs></stage><stage stageid="3068b898-6d19-4469-8efd-f355853fda4e" name="Directory Exists" type="SubSheetInfo"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><narrative>Determines whether the specified directory exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="14e7b70b-4620-4b05-a9f8-5c31396209bd" name="Start" type="Start"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" narrative="The directory to check exists" stage="Directory Name" /></inputs><onsuccess>50ef1149-8307-4080-9028-d6bec6eafd78</onsuccess></stage><stage stageid="4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44" name="End" type="End"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the directory exists" stage="Exists" /></outputs></stage><stage stageid="50ef1149-8307-4080-9028-d6bec6eafd78" name="Directory Exists" type="Code"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" expr="[Directory Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44</onsuccess><code><![CDATA[Try
	Exists = Directory.Exists(Directory_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="89cff60a-371d-476b-bc55-f0e56150ef45" name="Exists" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9da119d-dbd9-4320-90e1-ca33fae50a91" name="Directory Name" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1f89739-7f1c-4179-82ea-b123ecfc2854" name="Write Binary Data" type="SubSheetInfo"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><narrative>Writes binary data to a file. Any existing data in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="067fe5ce-ad15-436e-92fa-11e920e00501" name="Start" type="Start"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" narrative="The data to write to the file" stage="Binary Data" /><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>48430903-e8af-4e4a-8544-8b04afc3478b</onsuccess></stage><stage stageid="83dc26e0-402d-403d-a18c-0d3ca147ba6d" name="Binary Data" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48430903-e8af-4e4a-8544-8b04afc3478b" name="Write Binary Data" type="Code"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" expr="[Binary Data]" /><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>aed480e9-2938-4d36-b400-a3bd2580921a</onsuccess><code><![CDATA[Try
	File.WriteAllBytes(FileName, Binary_Data)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="709d1a16-f19e-4504-ae79-4a48d1e058c7" name="End" type="End"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="43cbdbc2-6fdc-4080-b257-af95daad3fe4" name="Success" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0aebe753-5358-4cf3-982a-a9f0a9870be7" name="Message" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e035935-d499-4706-8ba0-78fdee0a782f" name="FileName" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7604000-e2fb-4a03-b8b4-caac4c6b9f9b" name="Combine Path" type="SubSheetInfo"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><narrative>Takes a file and folder and combines them into a full path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="71908284-0a93-418a-9205-32dc4780032c" name="Start" type="Start"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The path will have been combined." /></postconditions><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder to combine" stage="Folder" /><input type="text" name="File Name" narrative="The file to combine" stage="File Name" /></inputs><onsuccess>39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1</onsuccess></stage><stage stageid="39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1" name="Combine Path" type="Code"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>b4d82bcb-e011-4728-a3ec-4c052dcebaaf</onsuccess><code><![CDATA[
Path = IO.Path.Combine(Folder, File_Name)
]]></code></stage><stage stageid="dca04a3f-b696-45b1-95c8-63dce520abe3" name="File Name" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e27e592f-8a2e-4df9-9453-1cdc8621051b" name="Folder" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4d82bcb-e011-4728-a3ec-4c052dcebaaf" name="End" type="End"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Path" narrative="The combined full path" stage="Path" /></outputs></stage><stage stageid="ef4fc19c-8897-431e-8688-11a52561113f" name="Path" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a664d6c1-8951-4309-95b7-b7ae2edced0d" name="Create Directory" type="SubSheetInfo"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><narrative>Creates a directory under the given path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82e63828-72ff-4705-8c88-89c3316aa73e" name="Start" type="Start"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path in which to create the directory" stage="Directory Path" /><input type="flag" name="Error If Already Exists" narrative="True to generate an error if the directory already exists" stage="Error If Already Exists" /></inputs><onsuccess>98af3f34-4ec7-49c5-a6cc-1cf6192b0e05</onsuccess></stage><stage stageid="e061382f-4149-485b-9668-f2fc0ca334bd" name="End" type="End"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="800212c5-6bfb-4df9-b501-39f55906a7b2" name="Directory Path" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e00501ce-6aa6-4616-9bf2-3904d515656c" name="Error If Already Exists" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="98af3f34-4ec7-49c5-a6cc-1cf6192b0e05" name="Create Directory" type="Code"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="ErrorIfAlreadyExists" expr="[Error If Already Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>060a1fdb-6243-40f1-96e0-1c0b54382bfa</onsuccess><code><![CDATA[Try
   If Not Directory.Exists(Directory_Path) Then
   	Directory.CreateDirectory(Directory_Path)
   Else
      If ErrorIfAlreadyExists Then Throw New ApplicationException("Directory already exists")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="3b33d39b-1c7c-4664-ab8b-859aa2e15836" name="Success" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9cbff7ae-931b-479f-b70f-7773ddda315c" name="Error Message" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20cbacd9-1e17-4fc0-85de-64615b1f3d18" name="Delete Directory" type="SubSheetInfo"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><narrative>Deletes a directory and if Recursive is True will delete all subdirectories if present</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df3458a7-2e7e-451c-b27a-efc3737c22a4" name="Start" type="Start"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to delete" stage="Directory Path" /><input type="flag" name="Error If Not Exists" narrative="Set True to raise an error if the path does not exist" stage="Error If Not Exists" /><input type="flag" name="Recursive" narrative="Set True to delete all sub-directories of the path aswell" stage="Recursive" /></inputs><onsuccess>ef40ac3e-3a06-4ca9-a3be-daae97b8c700</onsuccess></stage><stage stageid="09677c01-2e36-4330-ae33-defa66a1e7b1" name="End" type="End"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="3afa3efd-a788-4410-a16c-5e2ecfc599d8" name="Directory Path" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef40ac3e-3a06-4ca9-a3be-daae97b8c700" name="Delete Directory" type="Code"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="Recursive" expr="[Recursive]" /><input type="flag" name="ErrorIfNotExists" expr="[Error If Not Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>8db31208-966a-494a-9315-8a4add93c64c</onsuccess><code><![CDATA[Try
   If Directory.Exists(Directory_Path) Then

		Dim SubDirectories As Boolean
		SubDirectories = False

		Dim SubdirectoryEntries As String() 
		SubdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If SubdirectoryEntries.Length > 0 Then SubDirectories = True

		If SubDirectories And Not Recursive Then Throw New ApplicationException("Directory has sub directories and will not be deleted")
   	
		Directory.Delete(Directory_Path, Recursive) 
   
Else
      If ErrorIfNotExists Then Throw New ApplicationException("Directory does not exist")
   End If

	Success = True


Catch UAEx as UnauthorizedAccessException
	Success = False
	Error_Message = "The caller does not have the required permission to delete this directory or sub directories"

Catch ANEx as ArgumentNullException
	Success = False
	Error_Message = "Please check Directory Path parameter is not null"

Catch AEx as ArgumentException
	Success = False
	Error_Message = "Please check Directory Path parameter is a valid string"

Catch PTLEx as PathTooLongException
	Success = False
	Error_Message = "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters."

Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()

End Try]]></code></stage><stage stageid="1ea4ba58-4e52-4229-9f95-9f91c0fda672" name="Success" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="105" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd89d345-b43b-43b1-a112-d69cd7b07387" name="Error Message" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="240" y="-45" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="498faab3-e919-4560-a284-8303f82f3c54" name="Recursive" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c7f09a8a-5e8c-4bd8-ae1c-03c88a61bc8b" name="Error If Not Exists" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a001ca1-2f75-4d52-8668-8537da4738b3" name="Sub Directory Exists" type="SubSheetInfo"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><narrative>Checks if a directory contains sub directories</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d21f26b-5ccc-4f2f-b6f3-3443cb23a95f" name="Start" type="Start"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to check for sub directories" stage="Directory Path" /></inputs><onsuccess>9bd1eb97-f903-4b5b-bdb0-9aa7d84feead</onsuccess></stage><stage stageid="167ee595-8609-4b40-9cbb-70394613201b" name="End" type="End"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if sub directories exist" stage="Exists" /><output type="flag" name="Success" narrative="True if the check was successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="9bd1eb97-f903-4b5b-bdb0-9aa7d84feead" name="Get Sub Directories" type="Code"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>33ba9e06-b05b-4e51-baa6-7f6c9165c558</onsuccess><code><![CDATA[Try
   
Exists = False
If Directory.Exists(Directory_Path) Then
   	Dim subdirectoryEntries As String() 
		
		subdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If subdirectoryEntries.Length > 0 Then Exists = True

   Else
      Throw New ApplicationException("Directory does not exist")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try
]]></code></stage><stage stageid="50a0102e-8884-426d-b94f-ed07f6b9eb46" name="Exists" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c52a3808-5f20-4498-a5a6-6e8bd391e41c" name="Directory Path" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\TEMP\Test Directory\A\c</initialvalue><private /><alwaysinit /></stage><stage stageid="227470b6-fe82-4351-a497-6094c99e4193" name="Success" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="330" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="586142aa-051e-4ec9-8b60-fe063eb60b77" name="Error Message" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="450" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12caee97-e82e-461c-8b22-dabe4248d7a8" name="Get CSV Text As Collection" type="SubSheetInfo"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><narrative>Turns a comma seperated values file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="939139f9-83c3-4076-85ca-1daa3e637601" name="Start" type="Start"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /></inputs><onsuccess>dd7efc8a-65d0-432e-a205-643037779b8d</onsuccess></stage><stage stageid="c85955cf-695f-4e82-acdb-72332a337fc7" name="End" type="End"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /></outputs></stage><stage stageid="96016690-fb73-49d3-bcfc-56b25dd9d3db" name="CSV Location" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\BluePrism\Medalytix\iGrading\Test_Suite\ImagesIndex.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="dd7efc8a-65d0-432e-a205-643037779b8d" name="Parse CSV" type="Code"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /></outputs><onsuccess>c85955cf-695f-4e82-acdb-72332a337fc7</onsuccess><code><![CDATA[Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"


Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim cn As New OleDbConnection("Provider=Microsoft.ACE.OLEDB.12.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";FMT=Delimited""")
Dim da As New OleDbDataAdapter()
Dim ds As New DataSet()
Dim cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)

cn.Open()
da.SelectCommand = cd
ds.Clear()
da.Fill(ds, "CSV")
Values = ds.Tables(0)
cn.Close()]]></code></stage><stage stageid="5fe33334-21a0-4751-931d-92622545fe5d" name="CSV Values" type="Collection"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dc002ef-16ce-4e9b-9eed-1c4c8a375f11" name="First Line Is Header" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="120" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1836bd9-a0bc-45e9-9f62-2835fb1f6144" name="Get Special Folder Path" type="SubSheetInfo"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><narrative>Gets the path of a special folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="984cc49d-2710-42f2-85cc-b02b1af6ff97" name="Start" type="Start"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder Name" narrative="The name of the special folder. Supported values include ApplicationData, DesktopDirectory, MyDocuments, ProgramFiles. The values correspond to the .NET Environment.SpecialFolder enumeration." stage="Special Folder Name" /></inputs><onsuccess>548052a7-4e77-4da0-a80e-07ce9d38ecba</onsuccess></stage><stage stageid="f77e4b56-0c20-4361-b1ac-7fbae4cebd0a" name="End" type="End"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Folder Path" narrative="The corresponding path of the requested special folder" stage="Folder Path" /></outputs></stage><stage stageid="1eb8ae16-c4b3-4a26-9476-974fec0fb4c4" name="Special Folder Name" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">InternetCache</initialvalue><private /><alwaysinit /></stage><stage stageid="548052a7-4e77-4da0-a80e-07ce9d38ecba" name="Get Folder Path" type="Code"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder" expr="[Special Folder Name]" /></inputs><outputs><output type="text" name="Folder Path" stage="Folder Path" /></outputs><onsuccess>f77e4b56-0c20-4361-b1ac-7fbae4cebd0a</onsuccess><code><![CDATA[Dim EnumVal as Environment.SpecialFolder
Try
	EnumVal = Ctype(System.Enum.Parse(GetType(Environment.SpecialFolder), Special_Folder), Environment.SpecialFolder)
Catch Ex As Exception
	Throw New ApplicationException("Value '" & Special_Folder & "' is not recognised as a special folder")
End Try

Folder_Path = Environment.GetFolderPath(EnumVal)]]></code></stage><stage stageid="394a43a7-79f9-4edb-887f-d051122fa5f0" name="Folder Path" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a81b69-65ad-4194-8361-a2e49aab6c2c" name="Download File" type="SubSheetInfo"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><narrative>Downloads a file from a web URL and saves it in a folder on disk.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce6133ff-352a-4e74-b9a9-a2bb5d8c8858" name="Start" type="Start"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Source URL" narrative="The URL of the file that is to be downloaded" stage="Source URL" /><input type="text" name="Destination Path" narrative="The location of the folder where the file is to be saved" stage="Destination Path" /></inputs><onsuccess>a9bb95cf-84c0-42b2-9fac-e36252a56808</onsuccess></stage><stage stageid="00124bb2-c920-40c3-92e1-efb49b029dc0" name="End" type="End"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b30cabb-184c-427b-860e-a315e03763ba" name="Destination Path" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ee09d3b-a12d-48c7-89a2-7a947d431ac5" name="Source URL" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9bb95cf-84c0-42b2-9fac-e36252a56808" name="Download File" type="Code"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Url" expr="[Source URL]" /><input type="text" name="Path" expr="[Destination Path]" /></inputs><onsuccess>00124bb2-c920-40c3-92e1-efb49b029dc0</onsuccess><code><![CDATA[Using wc As New System.Net.WebClient()
	wc.DownloadFile(Url, Path)
End Using]]></code></stage><stage stageid="744e3f22-df5c-4d9e-984b-eceb276cbb95" name="Read Lines From File" type="SubSheetInfo"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><narrative>Reads a range of lines fom a text file</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ef75fb-7cbe-4b43-900b-bd0112866589" name="File Path" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3721f65-c0fd-4187-9e61-da35cecde126" name="Start Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3444d260-8bd2-44b4-91c8-1f4dc3a07e1d" name="End Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de2f0517-71e7-4bfa-b20b-0f6049ee064d" name="EOF" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e19c2d2b-f05b-48b3-a6c0-e6c368a0720b" name="Success" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2814638b-191d-44de-9e9d-e38ce3a2bdb5" name="Message" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="677752c3-298c-4ea1-abaf-244b239d65d0" name="Lines" type="Collection"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="180" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5bbb949-f610-4f45-bcb7-10a0fc6b123d" name="Line Count" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf17d04b-65f1-4bf3-a12c-7121e3c2a075" name="Start" type="Start"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><preconditions><condition narrative="The text file exists and the user has appropriate privileges to allow reading it" /><condition narrative="The Start Line argument is less than or equal to the End Line argument" /></preconditions><postconditions><condition narrative="The lines between and including Start Line and End Line are returned" /><condition narrative="EOF will indicate if the end of the file was reached before End Line was reached" /></postconditions><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The file to read" stage="File Path" /><input type="number" name="Start Line" narrative="The first line to read" stage="Start Line" /><input type="number" name="End Line" narrative="The last line to read" stage="End Line" /></inputs><onsuccess>4942f615-9ff9-497d-b3ff-dd697860c232</onsuccess></stage><stage stageid="76661ec7-b5b7-4cf5-9b34-27ca45c70b40" name="Read Lines" type="Code"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="number" name="Start Line" expr="[Start Line]" /><input type="number" name="End Line" expr="[End Line]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Lines" stage="Lines" /><output type="number" name="Line Count" stage="Line Count" /><output type="flag" name="EOF" stage="EOF" /></outputs><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess><code><![CDATA[' Assume success
Success = True
Message = ""

Try
	Lines = New DataTable()
	Lines.Columns.Add("Line", GetType(String))

	Using sr As New StreamReader(File_Path)

		EOF = False
		Start_Line = Math.Max(1, Start_Line)

		Dim line as String
		Dim lineNo As Integer = 0
		Do
			line = sr.ReadLine()
			lineNo += 1

			If line Is Nothing Then EOF = True : Exit Do
			If lineNo >= Start_Line Then Lines.Rows.Add(line)
			If lineNo = End_Line Then Exit Do

		Loop Until line Is Nothing
		Line_Count = Lines.Rows.Count

	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="bcb21a17-13b7-404f-b11f-16d75385411f" name="End" type="End"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True is the read was successful" stage="Success" /><output type="text" name="Message" narrative="The exception detail if the read was unsuccessful" stage="Message" /><output type="collection" name="Lines" narrative="The lines read - the collection contains a single text column 'Line'" stage="Lines" /><output type="number" name="Line Count" narrative="The number of lines read" stage="Line Count" /><output type="flag" name="End of File" narrative="True if the end of the file was reached before the 'End Line' was reached" stage="EOF" /></outputs></stage><stage stageid="4942f615-9ff9-497d-b3ff-dd697860c232" name="Start Line &gt; End Line?" type="Decision"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Start Line] &gt; [End Line]" /><ontrue>fb13e8fc-442c-4cbb-87c1-b4ec596ee962</ontrue><onfalse>76661ec7-b5b7-4cf5-9b34-27ca45c70b40</onfalse></stage><stage stageid="fb13e8fc-442c-4cbb-87c1-b4ec596ee962" name="Semi-Exception" type="MultipleCalculation"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>362c841e-8d1e-4972-b0b5-710b7bdb1f27</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Start Line (&quot; &amp; [Start Line] &amp; &quot;) cannot be later than End Line (&quot; &amp; [End Line] &amp; &quot;)&quot;" stage="Message" /></steps></stage><stage stageid="362c841e-8d1e-4972-b0b5-710b7bdb1f27" name="anchor1" type="Anchor"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess></stage><stage stageid="d049bf7c-ac22-489e-bf3d-f62d1b4b744a" name="Configure" type="SubSheetInfo"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f64d939-b1af-4604-a33c-d730215d51aa" name="Start" type="Start"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>63f0aaf5-553d-43fd-b40d-6b3196b7c075</onsuccess></stage><stage stageid="63f0aaf5-553d-43fd-b40d-6b3196b7c075" name="End" type="End"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e00cf6f-bf06-484e-bcc5-5c0ea5f2dcf1" name="Raise exception on any failure" type="Data"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e8d8821c-ea33-4e7e-a499-9095f71ab91f" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="360a869a-24fc-4d19-abbe-b1444dd28c58" name="Start" type="Start"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>f72ef338-2cee-4c45-8a9a-31011244644f</onsuccess></stage><stage stageid="94d641fc-9887-40ca-8919-8613e5fafda0" name="End" type="End"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af41ccc8-b3bd-4925-84ba-5df075402e08" name="Success" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd0e1bfa-b960-4e5e-b8e5-9a24adfd36e1" name="Error Message" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f72ef338-2cee-4c45-8a9a-31011244644f" name="Should Raise Exception?" type="Decision"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>f42fee03-c39b-416a-b55f-3d69a9ebe812</ontrue><onfalse>94d641fc-9887-40ca-8919-8613e5fafda0</onfalse></stage><stage stageid="f42fee03-c39b-416a-b55f-3d69a9ebe812" name="FAIL" type="Exception"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="90" y="-60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3764ae17-85d7-4ebb-99b5-502b95d7abd6</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="3dde4f26-00a8-4e1a-af12-b8a14178d89c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>aa67216d-b83f-4c14-9f71-5ec6df626c08</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="060a1fdb-6243-40f1-96e0-1c0b54382bfa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>e061382f-4149-485b-9668-f2fc0ca334bd</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="8db31208-966a-494a-9315-8a4add93c64c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>09677c01-2e36-4330-ae33-defa66a1e7b1</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="33ba9e06-b05b-4e51-baa6-7f6c9165c558" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>167ee595-8609-4b40-9cbb-70394613201b</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="d0021635-222d-46f1-93ad-a7435640cf9f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>82b919fe-64b2-4c2b-8173-5706f671c5ce</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="249acd28-3283-498f-aca8-76c67cb2295c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>576295b9-757e-4588-948e-34aac5140c29</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acf72cc7-cf73-466f-8c22-9fb633ed3c24" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>a7bae4fd-01fc-4447-8cf4-fbfd04353f72</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>2c8abe9a-1466-4283-999a-c5c7838a0e27</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="1e441202-3878-4eb6-b156-6f517be6de00" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>39862014-df78-414b-9ccd-5c0d392aa282</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7419fb71-5c79-4fb6-9e59-b9fbc1d63e45" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>0a76495e-bc0d-4cea-bae0-85da1e15c74f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7d20fad4-4b50-4841-94e9-5f38571de063" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>bcb21a17-13b7-404f-b11f-16d75385411f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="9219c3c4-effd-4dfc-9020-8dafd054ea8f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>1aab3a10-a813-470b-97c8-57938a0d0024</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="aed480e9-2938-4d36-b400-a3bd2580921a" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>709d1a16-f19e-4504-ae79-4a48d1e058c7</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage></process></object>
        <object id="d5a3949b-8a1e-432d-92f0-248991d3ef6e" name="Utility - File Management_Test" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - File Management_Test" version="7.0.1.49890" bpversion="7.0.1.49890" narrative="Utility methods for interacting with the file System." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>149</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1e3c209b-a109-46a0-9ff0-e2dc6b8791fb" type="Normal" published="True"><name>Configure</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8043916d-2ef9-45b8-ab66-f4c20ef1b8e3" type="Normal" published="False"><name>Raise Exception If Appropriate</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea" type="Normal" published="True"><name>Download File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3a12dbad-57fd-45a4-b859-62df514a34d3" type="Normal" published="True"><name>Get Files</name><view><camerax>106</camerax><cameray>16</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bafee17-a81a-40f0-9b6b-80b78142dd87" type="Normal" published="True"><name>Get Folders</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="60b8a01d-1f74-4169-b192-5e363a7b5e61" type="Normal" published="True"><name>File Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="20e6a636-d89b-4c08-b90d-8852894005a4" type="Normal" published="True"><name>Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1ff30a41-e177-40c5-a756-a6b466004f32" type="Normal" published="True"><name>Create Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d68f192f-eeb7-420e-b156-9636503b6082" type="Normal" published="True"><name>Delete Directory</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8" type="Normal" published="True"><name>Sub Directory Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b3050915-ad2e-446e-a1d6-99d11506f55e" type="Normal" published="True"><name>Split Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c80dea92-57e8-4e2e-8df4-f3ee6ceeb717" type="Normal" published="True"><name>Combine Path</name><view><camerax>202</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ed509af2-4b4a-447d-8196-18105ed12739" type="Normal" published="True"><name>Delete Files</name><view><camerax>106</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="70940cba-8680-4eb9-8066-9e383fc5b39b" type="Normal" published="True"><name>Delete File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e9dd304c-7d26-40f5-b193-eef36f0a370c" type="Normal" published="True"><name>Copy File</name><view><camerax>49</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85156833-c61c-4c78-916f-0b75a9a83e8d" type="Normal" published="True"><name>Move File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7ca00106-fe4e-46c0-bffc-0dda1561434f" type="Normal" published="True"><name>Get File Size</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d2530b0d-5530-4692-8a60-1f91d1c5a9c9" type="Normal" published="True"><name>Append to Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8eb61369-ddab-4205-9a55-81054c2e4afb" type="Normal" published="True"><name>Read All Text from File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a9cff0d-c7c5-440a-bd8d-0007e15eae4d" type="Normal" published="True"><name>Read Lines From File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="602b7aad-2626-40ba-8c4b-1ec926ae9098" type="Normal" published="True"><name>Write Text File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="842c79f8-aa64-4781-ad18-3982e21f0fd1" type="Normal" published="True"><name>Write Binary Data</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f7fa43ec-67e2-4acb-8d13-ced3c5027761" type="Normal" published="True"><name>Get CSV Text As Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="40c6e605-9948-429a-ac84-d2810bca75fc" type="Normal" published="True"><name>Get Special Folder Path</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Data.OleDB</import></imports><language>visualbasic</language><globalcode><![CDATA[
]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			If objColumn.DataType = GetType(DateTime) Then
				objColumn.DateTimeMode = DataSetDateTime.Utc
			End If
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="07048754-58c7-4201-9869-e206f1d6c32a" name="Get Files" type="SubSheetInfo"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><narrative>Gets all files in the specified folder matching the supplied file type pattern string.

Patterns - A comma-separated list of file patterns identifying the type(s) of files sought. Eg "*.jpg, *.png" retrieves all jpg and png files. The pattern "*.*" will return all files. It does not matter whether you leave a space between each pattern, or not. Where a comma is required in a file pattern it should be escaped out using the backslash character, e.g. a pattern of "*\,November.xlsx" will return all files that end with ",November.xlsx"</narrative><display x="-195" y="-105" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8448350e-b6a9-4a15-a3d0-501c4967c0f9" name="Start" type="Start"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="All matching files will be returned." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for files" stage="Folder" /><input type="text" name="Patterns CSV" narrative="The comma seperated list of wildcard patterns" stage="Patterns CSV" /></inputs><onsuccess>acbbbddf-8b42-4353-8b0a-83eaeb216a63</onsuccess></stage><stage stageid="acbbbddf-8b42-4353-8b0a-83eaeb216a63" name="Get Files" type="Code"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Patterns CSV" expr="[Patterns CSV]" /></inputs><outputs><output type="collection" name="Files" stage="Files" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFiles As FileInfo()
Dim aPatterns As String()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Folder," _
		& "Name," _
		& "Extension," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written," _
		& "Read Only," _
		& "Bytes", _
		"System.String," _
		& "System.String," _
		& "System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.Boolean," _
		& "System.Double")
		
	Patterns_CSV = Patterns_CSV.replace("\,", "?")
	aPatterns = Patterns_CSV.split(",")

	For each sPattern As String in aPatterns
		sPattern = sPattern.replace("?", ",")
		aFiles = oDirectory.GetFiles(sPattern.Trim)
		For each oFile as FileInfo in aFiles
			objRow = objTable.NewRow()
			objRow("Path") = oFile.FullName
			objRow("Folder") = oFile.DirectoryName
			objRow("Name") = oFile.Name
			objRow("Extension") = oFile.Extension
			objRow("Created") = oFile.CreationTimeUtc
			objRow("Last Accessed") = oFile.LastAccessTimeUtc
			objRow("Last Written") = oFile.LastWriteTimeUtc
			objRow("Read Only") = oFile.IsReadOnly
			objRow("Bytes") = oFile.Length

			objTable.Rows.Add(objRow)
		Next
	Next

	objTable = objTable.DefaultView.ToTable(True, _
		"Path", _
		"Folder", _
		"Name", _
		"Extension", _
		"Created", _
		"Last Accessed", _
		"Last Written", _
		"Read Only", _
		"Bytes")

	Files = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="913867cd-7535-4857-b6b9-1b1ead2bc67f" name="Folder" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp</initialvalue><private /><alwaysinit /></stage><stage stageid="624240c2-02c8-48c3-9040-e9388fddf1b1" name="Patterns CSV" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.jpg</initialvalue><private /><alwaysinit /></stage><stage stageid="95f234d2-8c1a-466c-b8a6-fb7dc34de936" name="Files" type="Collection"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3764ae17-85d7-4ebb-99b5-502b95d7abd6" name="End" type="End"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="A message if unsuccessful" stage="Message" /><output type="collection" name="Files" narrative="The collection of files found" stage="Files" /></outputs></stage><stage stageid="8e80cc1d-27ed-43d9-985e-90d828191fb7" name="Success" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="950111b1-7b05-4076-a673-b07166b76cdb" name="Message" type="Data"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32964141-871e-474a-a1f8-eea0b10c5df2" name="Delete Files" type="SubSheetInfo"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><narrative>Deletes all files in the specified folder, matching the supplied file extension pattern.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82b919fe-64b2-4c2b-8173-5706f671c5ce" name="End" type="End"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ea337dc4-4fd9-4d31-8cc6-23da41cd5665" name="Start" type="Start"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All files within the named folder which match the supplied pattern will have been deleted." /></postconditions><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The path from which to delete the files" stage="Folder" /><input type="text" name="Pattern" narrative="The wildcard pattern of files to delete" stage="Pattern" /></inputs><onsuccess>202c81a6-fd90-46ed-9eee-73c24863b69b</onsuccess></stage><stage stageid="202c81a6-fd90-46ed-9eee-73c24863b69b" name="Delete Files" type="Code"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="Pattern" expr="[Pattern]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>d0021635-222d-46f1-93ad-a7435640cf9f</onsuccess><code><![CDATA[Dim aFiles As String()

Try

	aFiles = Directory.GetFiles(Folder, Pattern)

	For each f as String in aFiles
		File.Delete(f)
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try
]]></code></stage><stage stageid="119002ff-ee61-4f32-b096-f3953ad107e1" name="Folder" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\temp\Blue Prism</initialvalue><private /><alwaysinit /></stage><stage stageid="121b4fd7-a9da-4498-a8d5-6a0ab2dae758" name="Pattern" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">*.TIF</initialvalue><private /><alwaysinit /></stage><stage stageid="623ad5b5-f965-4f97-9d46-435717e70b25" name="Success" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="77c8238b-c415-496f-87c3-50033ec4d2a5" name="Message" type="Data"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7891b89f-2307-4444-8b6e-17e25e53501f" name="Append to Text File" type="SubSheetInfo"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><narrative>Appends some text to the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="83010bd2-019e-4b04-af0b-b401efe8d128" name="Start" type="Start"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data. The destination file need not exist already. If it does not exist then it will be created." /></preconditions><postconditions><condition narrative="The supplied text will have been appended." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path of the text file to append to" stage="File Name" /><input type="text" name="Text" narrative="The text to append to the file" stage="Text" /></inputs><onsuccess>eeb7f0eb-73fc-4849-96a9-35f410bbde67</onsuccess></stage><stage stageid="39862014-df78-414b-9ccd-5c0d392aa282" name="End" type="End"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="f9d3e8a1-7f67-4991-b9f1-e8ec160de075" name="Success" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2ef09390-e450-4d10-a32b-4448a65b0aaf" name="Message" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e77fcf2-8d12-4f3b-acf3-e15dccb8e90a" name="Text" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f599b6ac-5574-438b-8617-8821d9800cf7" name="File Name" type="Data"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="eeb7f0eb-73fc-4849-96a9-35f410bbde67" name="Append" type="Code"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>1e441202-3878-4eb6-b156-6f517be6de00</onsuccess><code><![CDATA[Try

	Dim sw As StreamWriter

	If File.Exists(File_Name) = False Then
		sw = File.CreateText(File_Name)
	Else
		sw = File.AppendText(File_Name)
	End If

	sw.WriteLine(Text)
	sw.Flush()
	sw.Close()
	
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="6428e7b4-8ed6-4930-bc8f-636cc71e955a" name="Read All Text from File" type="SubSheetInfo"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><narrative>Reads the entire contents of a file as text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a783ee6f-6425-4420-9b9f-759c781f3544" name="Start" type="Start"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><preconditions><condition narrative="The file must exist." /></preconditions><postconditions><condition narrative="The full text of the file will be read." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path the file to read the text from" stage="File Name" /></inputs><onsuccess>8107f164-7ef3-4164-8a2c-500055c7b374</onsuccess></stage><stage stageid="0a76495e-bc0d-4cea-bae0-85da1e15c74f" name="End" type="End"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="text" name="Text" narrative="The text of the file" stage="Text" /></outputs></stage><stage stageid="995662eb-baf3-436e-a2c1-2cc3ccfcf8fb" name="Success" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ee454760-e4c3-44cc-b071-30cdafbe8355" name="Message" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2dbbbe6e-0b94-4d90-940a-c99f9671b774" name="Text" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="265e14ba-8649-477d-9d21-092a9bc9ad2d" name="File Name" type="Data"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8107f164-7ef3-4164-8a2c-500055c7b374" name="Read Text" type="Code"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Text" stage="Text" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>7419fb71-5c79-4fb6-9e59-b9fbc1d63e45</onsuccess><code><![CDATA[Try
   If File.Exists(File_Name) Then
   	Dim sr As New StreamReader(File_Name)
   	Text = sr.ReadToEnd
   	sr.Close()
   	Success = True
   	Message = ""
   Else
      Throw New ApplicationException("The file at " & File_Name & " does not exist")
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="a3f9a500-e2f0-4f48-9bb2-38ad1a4592b9" name="Write Text File" type="SubSheetInfo"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><narrative>Writes text to a file. Any existing text in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f408f78-c150-49f6-9f52-a3fb59ce307e" name="Start" type="Start"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><preconditions><condition narrative="There must be sufficient disk space to accommodate the new data." /></preconditions><postconditions><condition narrative="The supplied text will have been written to the destination file." /></postconditions><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" stage="File Name" /><input type="text" name="Text" narrative="The text to write to the file" stage="Text" /></inputs><onsuccess>7d5efe35-64fc-48a0-b5a7-a5b787e90578</onsuccess></stage><stage stageid="1aab3a10-a813-470b-97c8-57938a0d0024" name="End" type="End"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="e85add3f-f65a-47dd-8be7-5ee764878dee" name="Success" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="3ba21666-440e-40ea-80e4-bb02ff535775" name="Message" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="951ed278-f157-450e-90d0-06cc330e358c" name="Text" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20ca70ee-ce56-4594-90ca-a03ba1934f47" name="File Name" type="Data"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7d5efe35-64fc-48a0-b5a7-a5b787e90578" name="Write" type="Code"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>9219c3c4-effd-4dfc-9020-8dafd054ea8f</onsuccess><code><![CDATA[Try
	File.WriteAllText(File_Name, Text)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="7dfd4754-e49a-447b-b9c3-c36266dfa2e8" name="File Exists" type="SubSheetInfo"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><narrative>Determines whether the specified file exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="da1de8a5-b06c-4fc0-b316-2fec1a802056" name="End" type="End"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the file exists" stage="Exists" /></outputs></stage><stage stageid="6b0d4683-2748-485e-88ed-cdf57c76992d" name="Start" type="Start"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The existence of the file of interest will have been determined." /></postconditions><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The name of the file to check" stage="File Name" /></inputs><onsuccess>7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed</onsuccess></stage><stage stageid="f92a43a8-74e6-4f49-bf65-dc7663017f2b" name="File Name" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7cc66b68-5ab8-4f99-95fa-fde9dbfa38ed" name="File Exists" type="Code"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>da1de8a5-b06c-4fc0-b316-2fec1a802056</onsuccess><code><![CDATA[Try
	Exists = File.Exists(File_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="817167f9-bb73-4622-9254-e249dff5369f" name="Exists" type="Data"><subsheetid>60b8a01d-1f74-4169-b192-5e363a7b5e61</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c50578e4-df15-4b21-8a4c-469dae40724d" name="Copy File" type="SubSheetInfo"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><narrative>Copies a file to the named destination.</narrative><display x="-195" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="30f8df38-bbc1-4b94-916b-ce06a40b630c" name="Start" type="Start"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><preconditions><condition narrative="The file to be copied must exist. The full destination path must be specified. There must be sufficient free disk space to complete the operation." /></preconditions><postconditions><condition narrative="The file will have been copied to the specified destination." /><condition narrative="" /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to be copied" stage="File Path" /><input type="text" name="Destination Path" narrative="The path of the directory to copy the file to" stage="Destination Path" /></inputs><onsuccess>8de7d816-2984-4b8f-a1f0-dfdf25b3f108</onsuccess></stage><stage stageid="53e1058f-89a5-4172-b9b5-89530de8ef51" name="Success" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="471fd171-54c1-4c9b-aa1d-6f471b939942" name="Message" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8de7d816-2984-4b8f-a1f0-dfdf25b3f108" name="Copy" type="Code"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acf72cc7-cf73-466f-8c22-9fb633ed3c24</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.CopyTo(sDestinationFile, True)
		Else
			oFile.CopyTo(sDestinationFolder & oFile.Name, True)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f12e4bba-1185-469f-aea9-0b8954cbed77" name="File Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="30982d9d-8e54-4d64-af7e-2a7df861c94f" name="Destination Path" type="Data"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6d608807-5c80-49f5-a177-05a15f6d0ff7" name="Get File Size" type="SubSheetInfo"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><narrative>Gets the size of the specified file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d07f9435-79c9-4cd5-b803-1cde78f5262c" name="End" type="End"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Size" narrative="The size of the file in bytes" stage="Bytes" /></outputs></stage><stage stageid="d573bf14-6cce-4455-ae05-908d9a527dcb" name="Start" type="Start"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><preconditions><condition narrative="The specified file must exist." /></preconditions><postconditions><condition narrative="The file size will have been determined." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="Full path to the file to get the file size" stage="File Path" /></inputs><onsuccess>6543595a-59fb-4304-b9f3-1acf662a1237</onsuccess></stage><stage stageid="0c8b0631-90f5-4646-b0cf-8fab74f80999" name="File Path" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6543595a-59fb-4304-b9f3-1acf662a1237" name="Get Byte Count" type="Code"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="number" name="Bytes" stage="Bytes" /></outputs><onsuccess>d07f9435-79c9-4cd5-b803-1cde78f5262c</onsuccess><code><![CDATA[Try

	Bytes = File.ReadAllBytes(File_Path).Length

Catch e As Exception
	Bytes = 0
End Try]]></code></stage><stage stageid="3eb7673c-2193-4d7f-ac06-85b1da9ce046" name="Bytes" type="Data"><subsheetid>7ca00106-fe4e-46c0-bffc-0dda1561434f</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d1f13191-1583-4a03-865c-3f0758139ca3" name="Delete File" type="SubSheetInfo"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><narrative>Deletes a single file from the file system.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="31d32d9a-4f5c-4793-afc7-d84f096922b9" name="Start" type="Start"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><preconditions><condition narrative="The file to be deleted must exist." /></preconditions><postconditions><condition narrative="The named file will have been deleted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" narrative="The full path to the file to delete" stage="File Name" /></inputs><onsuccess>b6262d8e-0c7b-459d-b177-37ae4d226ddf</onsuccess></stage><stage stageid="cd763cbc-81c0-42b1-9d9d-b2b7d325235d" name="File Name" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b6262d8e-0c7b-459d-b177-37ae4d226ddf" name="Delete File" type="Code"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>249acd28-3283-498f-aca8-76c67cb2295c</onsuccess><code><![CDATA[Try
   If Not File.Exists(File_Name) Then
      Throw New ApplicationException("The specified file at " & File_Name & " does not exist.")
   Else
	   File.Delete(File_Name)
	   Success = True
   End If
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="1cd4abb9-4dc3-494c-86a7-d85877a1827a" name="Success" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bc5b5c19-fe76-4278-95d2-f89c3588893c" name="Message" type="Data"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a7bae4fd-01fc-4447-8cf4-fbfd04353f72" name="End" type="End"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="576295b9-757e-4588-948e-34aac5140c29" name="End" type="End"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="cef63c98-a65d-4862-9d1d-ff02fbfc92f5" name="Get Folders" type="SubSheetInfo"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><narrative>Gets a collection of all subfolders in the specified file system folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f90df4f3-71ee-4470-b90b-1e8a0513cad8" name="Start" type="Start"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><preconditions><condition narrative="The named folder must exist." /></preconditions><postconditions><condition narrative="All sub-folders will be returned, if any exist." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder in which to look for sub-folders" stage="Folder" /></inputs><onsuccess>ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43</onsuccess></stage><stage stageid="ff503eb2-2cb7-4dbb-90fe-2ab47a5e4a43" name="Get Folders" type="Code"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /></inputs><outputs><output type="collection" name="Folders" stage="Folders" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>3dde4f26-00a8-4e1a-af12-b8a14178d89c</onsuccess><code><![CDATA[
Dim objTable As DataTable
Dim objRow As DataRow
Dim aFolders As DirectoryInfo()
Dim oDirectory As New DirectoryInfo(Folder)

Try

	'Create a data table to output as a collection
	objTable = GetDataTable( _
		"Path," _
		& "Name," _
		& "Created," _
		& "Last Accessed," _
		& "Last Written", _
		"System.String," _
		& "System.String," _
		& "System.DateTime," _
		& "System.DateTime," _
		& "System.DateTime")
		
	aFolders = oDirectory.GetDirectories()
	For each oFolder as DirectoryInfo in aFolders
		objRow = objTable.NewRow()
		objRow("Path") = oFolder.FullName
		objRow("Name") = oFolder.Name
		objRow("Created") = oFolder.CreationTimeUtc
		objRow("Last Accessed") = oFolder.LastAccessTimeUtc
		objRow("Last Written") = oFolder.LastWriteTimeUtc

		objTable.Rows.Add(objRow)
	Next

	Folders = objTable
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="f72d7f92-f944-412b-8890-737f3be3b0a1" name="Folder" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\</initialvalue><private /><alwaysinit /></stage><stage stageid="1384f5ee-e382-4900-9900-e2e2eb7a9a78" name="Folders" type="Collection"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="aa67216d-b83f-4c14-9f71-5ec6df626c08" name="End" type="End"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /><output type="collection" name="Folders" narrative="A collection of the sub-folders found within the folder" stage="Folders" /></outputs></stage><stage stageid="759f9ebb-96f6-432b-a21e-6673b71cac22" name="Success" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5afbf383-4ea5-42f7-a298-d02bf6dc267a" name="Message" type="Data"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="076db864-0743-4339-b606-174f056c63f9" name="Move File" type="SubSheetInfo"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><narrative>Moves the specified file to a new location.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8c383fb0-b58b-44cd-8dec-c5934289e107" name="Start" type="Start"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><preconditions><condition narrative="The file to be moved must exist. There must be sufficient disk space to move the file." /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The full path to the file to move" stage="File Path" /><input type="text" name="Destination Path" narrative="The path to the folder to move the file to" stage="Destination Path" /></inputs><onsuccess>8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b</onsuccess></stage><stage stageid="2c8abe9a-1466-4283-999a-c5c7838a0e27" name="End" type="End"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="a980280c-98cd-41d0-8a54-734c9bfacc5c" name="Success" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="779e3dfa-a01e-47f9-98c4-9ac10fcd5a11" name="Message" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="-195" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8cb5b945-a1c1-451f-b39e-fba3e2b5ab1b" name="Move" type="Code"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="text" name="Destination" expr="[Destination Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7</onsuccess><code><![CDATA[Try

	Dim sSourceFolder As String = Mid(File_Path, 1, File_Path.LastIndexOf("\") + 1)
	Dim sSourceFileName As String = Mid(File_Path, File_Path.LastIndexOf("\") + 2)
 
	Dim sDestinationFolder As String
	Dim sDestinationFile As String
	If Directory.Exists(Destination) Then
		sDestinationFolder = Destination
		If Not sDestinationFolder.EndsWith("\") Then
			sDestinationFolder &= "\"
		End If
		sDestinationFile = ""
	Else
		sDestinationFolder = ""
		sDestinationFile = Destination
	End If
 
	Dim objDirectoryInfo As DirectoryInfo = New DirectoryInfo(sSourceFolder)
	Dim aFiles As FileInfo() = objDirectoryInfo.GetFiles(sSourceFileName)

	If aFiles Is Nothing OrElse aFiles.Length <= 0 Then
		Success = False
		Message = "No files found"
		Return
	End If

	For Each oFile As FileInfo In aFiles
		If sDestinationFolder = "" Then
			oFile.MoveTo(sDestinationFile)
		Else
			oFile.MoveTo(sDestinationFolder & oFile.Name)
		End If
	Next

	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="ba83bbd5-0c51-49b0-ac63-de9e754aab48" name="File Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57b074ac-98b9-40d1-a342-36dc0a514f77" name="Destination Path" type="Data"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><display x="-195" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83a23da-bc05-4aa4-8a8e-6c09524e2baf" name="Split Path" type="SubSheetInfo"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><narrative>Splits a file path into its component parts - the filename and the folder path. The trailing backslash is omitted from the directory part.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c655f85-fb96-448d-be05-5f6c833e1882" name="Start" type="Start"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><preconditions><condition narrative="The specified path must correspond to a file which exists on disk." /></preconditions><postconditions><condition narrative="The path will have been separated." /></postconditions><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The path to split" stage="File Path" /></inputs><onsuccess>138061d1-d866-403d-af52-37ea509c7e78</onsuccess></stage><stage stageid="138061d1-d866-403d-af52-37ea509c7e78" name="Split Path" type="Code"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /></inputs><outputs><output type="text" name="Folder" stage="Folder" /><output type="text" name="File Name" stage="File Name" /></outputs><onsuccess>0e35cb6c-257d-40a6-ba20-d661c3ad83fe</onsuccess><code><![CDATA[
Folder = Path.GetDirectoryName(File_Path)
File_Name = Path.GetFileName(File_Path)
]]></code></stage><stage stageid="69bae4e1-98fe-460c-807d-30657ae18ebf" name="File Name" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de3608a3-9cb7-41c3-ae88-da3dad92053e" name="Folder" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e0497cae-7418-46ec-a442-ac21369c7a2f" name="File Path" type="Data"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><display x="-120" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e35cb6c-257d-40a6-ba20-d661c3ad83fe" name="End" type="End"><subsheetid>b3050915-ad2e-446e-a1d6-99d11506f55e</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="File Name" narrative="The filename" stage="File Name" /><output type="text" name="Folder" narrative="The folder" stage="Folder" /></outputs></stage><stage stageid="3068b898-6d19-4469-8efd-f355853fda4e" name="Directory Exists" type="SubSheetInfo"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><narrative>Determines whether the specified directory exsts. The full path must be specified.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="14e7b70b-4620-4b05-a9f8-5c31396209bd" name="Start" type="Start"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" narrative="The directory to check exists" stage="Directory Name" /></inputs><onsuccess>50ef1149-8307-4080-9028-d6bec6eafd78</onsuccess></stage><stage stageid="4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44" name="End" type="End"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the directory exists" stage="Exists" /></outputs></stage><stage stageid="50ef1149-8307-4080-9028-d6bec6eafd78" name="Directory Exists" type="Code"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><loginhibit /><display x="-60" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Name" expr="[Directory Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>4f5a5ea1-9bcf-4b0d-b58b-fb6b18580e44</onsuccess><code><![CDATA[Try
	Exists = Directory.Exists(Directory_Name)
Catch
	Exists = False
End Try]]></code></stage><stage stageid="89cff60a-371d-476b-bc55-f0e56150ef45" name="Exists" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9da119d-dbd9-4320-90e1-ca33fae50a91" name="Directory Name" type="Data"><subsheetid>20e6a636-d89b-4c08-b90d-8852894005a4</subsheetid><display x="30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a1f89739-7f1c-4179-82ea-b123ecfc2854" name="Write Binary Data" type="SubSheetInfo"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><narrative>Writes binary data to a file. Any existing data in the file (if it exists) will be replaced.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="067fe5ce-ad15-436e-92fa-11e920e00501" name="Start" type="Start"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" narrative="The data to write to the file" stage="Binary Data" /><input type="text" name="File Name" narrative="The full path of the file to write to" stage="FileName" /></inputs><onsuccess>48430903-e8af-4e4a-8544-8b04afc3478b</onsuccess></stage><stage stageid="83dc26e0-402d-403d-a18c-0d3ca147ba6d" name="Binary Data" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>binary</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="48430903-e8af-4e4a-8544-8b04afc3478b" name="Write Binary Data" type="Code"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="binary" name="Binary Data" expr="[Binary Data]" /><input type="text" name="FileName" expr="[FileName]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>aed480e9-2938-4d36-b400-a3bd2580921a</onsuccess><code><![CDATA[Try
	File.WriteAllBytes(FileName, Binary_Data)
	Success = True
	Message = ""
Catch e As Exception
	Success = False
	Message = e.Message
End Try]]></code></stage><stage stageid="709d1a16-f19e-4504-ae79-4a48d1e058c7" name="End" type="End"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs></stage><stage stageid="43cbdbc2-6fdc-4080-b257-af95daad3fe4" name="Success" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="0aebe753-5358-4cf3-982a-a9f0a9870be7" name="Message" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="-120" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e035935-d499-4706-8ba0-78fdee0a782f" name="FileName" type="Data"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c7604000-e2fb-4a03-b8b4-caac4c6b9f9b" name="Combine Path" type="SubSheetInfo"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><narrative>Takes a file and folder and combines them into a full path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="71908284-0a93-418a-9205-32dc4780032c" name="Start" type="Start"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><postconditions><condition narrative="The path will have been combined." /></postconditions><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" narrative="The folder to combine" stage="Folder" /><input type="text" name="File Name" narrative="The file to combine" stage="File Name" /></inputs><onsuccess>39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1</onsuccess></stage><stage stageid="39d35633-fc08-4dd1-a13a-1bfc9a0a9bd1" name="Combine Path" type="Code"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Folder" expr="[Folder]" /><input type="text" name="File Name" expr="[File Name]" /></inputs><outputs><output type="text" name="Path" stage="Path" /></outputs><onsuccess>b4d82bcb-e011-4728-a3ec-4c052dcebaaf</onsuccess><code><![CDATA[
Path = IO.Path.Combine(Folder, File_Name)
]]></code></stage><stage stageid="dca04a3f-b696-45b1-95c8-63dce520abe3" name="File Name" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e27e592f-8a2e-4df9-9453-1cdc8621051b" name="Folder" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="-90" y="30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b4d82bcb-e011-4728-a3ec-4c052dcebaaf" name="End" type="End"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><loginhibit /><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Path" narrative="The combined full path" stage="Path" /></outputs></stage><stage stageid="ef4fc19c-8897-431e-8688-11a52561113f" name="Path" type="Data"><subsheetid>c80dea92-57e8-4e2e-8df4-f3ee6ceeb717</subsheetid><display x="195" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a664d6c1-8951-4309-95b7-b7ae2edced0d" name="Create Directory" type="SubSheetInfo"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><narrative>Creates a directory under the given path.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="82e63828-72ff-4705-8c88-89c3316aa73e" name="Start" type="Start"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path in which to create the directory" stage="Directory Path" /><input type="flag" name="Error If Already Exists" narrative="True to generate an error if the directory already exists" stage="Error If Already Exists" /></inputs><onsuccess>98af3f34-4ec7-49c5-a6cc-1cf6192b0e05</onsuccess></stage><stage stageid="e061382f-4149-485b-9668-f2fc0ca334bd" name="End" type="End"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="800212c5-6bfb-4df9-b501-39f55906a7b2" name="Directory Path" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e00501ce-6aa6-4616-9bf2-3904d515656c" name="Error If Already Exists" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="98af3f34-4ec7-49c5-a6cc-1cf6192b0e05" name="Create Directory" type="Code"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="ErrorIfAlreadyExists" expr="[Error If Already Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>060a1fdb-6243-40f1-96e0-1c0b54382bfa</onsuccess><code><![CDATA[Try
   If Not Directory.Exists(Directory_Path) Then
   	Directory.CreateDirectory(Directory_Path)
   Else
      If ErrorIfAlreadyExists Then Throw New ApplicationException("Directory already exists")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try]]></code></stage><stage stageid="3b33d39b-1c7c-4664-ab8b-859aa2e15836" name="Success" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="120" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9cbff7ae-931b-479f-b70f-7773ddda315c" name="Error Message" type="Data"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><display x="180" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20cbacd9-1e17-4fc0-85de-64615b1f3d18" name="Delete Directory" type="SubSheetInfo"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><narrative>Deletes a directory and if Recursive is True will delete all subdirectories if present</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df3458a7-2e7e-451c-b27a-efc3737c22a4" name="Start" type="Start"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to delete" stage="Directory Path" /><input type="flag" name="Error If Not Exists" narrative="Set True to raise an error if the path does not exist" stage="Error If Not Exists" /><input type="flag" name="Recursive" narrative="Set True to delete all sub-directories of the path aswell" stage="Recursive" /></inputs><onsuccess>ef40ac3e-3a06-4ca9-a3be-daae97b8c700</onsuccess></stage><stage stageid="09677c01-2e36-4330-ae33-defa66a1e7b1" name="End" type="End"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="3afa3efd-a788-4410-a16c-5e2ecfc599d8" name="Directory Path" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ef40ac3e-3a06-4ca9-a3be-daae97b8c700" name="Delete Directory" type="Code"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /><input type="flag" name="Recursive" expr="[Recursive]" /><input type="flag" name="ErrorIfNotExists" expr="[Error If Not Exists]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>8db31208-966a-494a-9315-8a4add93c64c</onsuccess><code><![CDATA[Try
   If Directory.Exists(Directory_Path) Then

		Dim SubDirectories As Boolean
		SubDirectories = False

		Dim SubdirectoryEntries As String() 
		SubdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If SubdirectoryEntries.Length > 0 Then SubDirectories = True

		If SubDirectories And Not Recursive Then Throw New ApplicationException("Directory has sub directories and will not be deleted")
   	
		Directory.Delete(Directory_Path, Recursive) 
   
Else
      If ErrorIfNotExists Then Throw New ApplicationException("Directory does not exist")
   End If

	Success = True


Catch UAEx as UnauthorizedAccessException
	Success = False
	Error_Message = "The caller does not have the required permission to delete this directory or sub directories"

Catch ANEx as ArgumentNullException
	Success = False
	Error_Message = "Please check Directory Path parameter is not null"

Catch AEx as ArgumentException
	Success = False
	Error_Message = "Please check Directory Path parameter is a valid string"

Catch PTLEx as PathTooLongException
	Success = False
	Error_Message = "The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters."

Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()

End Try]]></code></stage><stage stageid="1ea4ba58-4e52-4229-9f95-9f91c0fda672" name="Success" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="105" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd89d345-b43b-43b1-a112-d69cd7b07387" name="Error Message" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="240" y="-45" w="180" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="498faab3-e919-4560-a284-8303f82f3c54" name="Recursive" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="180" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="c7f09a8a-5e8c-4bd8-ae1c-03c88a61bc8b" name="Error If Not Exists" type="Data"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><display x="285" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="1a001ca1-2f75-4d52-8668-8537da4738b3" name="Sub Directory Exists" type="SubSheetInfo"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><narrative>Checks if a directory contains sub directories</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9d21f26b-5ccc-4f2f-b6f3-3443cb23a95f" name="Start" type="Start"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" narrative="The path of the directory to check for sub directories" stage="Directory Path" /></inputs><onsuccess>9bd1eb97-f903-4b5b-bdb0-9aa7d84feead</onsuccess></stage><stage stageid="167ee595-8609-4b40-9cbb-70394613201b" name="End" type="End"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if sub directories exist" stage="Exists" /><output type="flag" name="Success" narrative="True if the check was successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="9bd1eb97-f903-4b5b-bdb0-9aa7d84feead" name="Get Sub Directories" type="Code"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Directory Path" expr="[Directory Path]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>33ba9e06-b05b-4e51-baa6-7f6c9165c558</onsuccess><code><![CDATA[Try
   
Exists = False
If Directory.Exists(Directory_Path) Then
   	Dim subdirectoryEntries As String() 
		
		subdirectoryEntries = Directory.GetDirectories(Directory_Path) 
		
		If subdirectoryEntries.Length > 0 Then Exists = True

   Else
      Throw New ApplicationException("Directory does not exist")
   End If

	Success = True
Catch Ex as Exception
	Success = False
	Error_Message = Ex.ToString()
End Try
]]></code></stage><stage stageid="50a0102e-8884-426d-b94f-ed07f6b9eb46" name="Exists" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c52a3808-5f20-4498-a5a6-6e8bd391e41c" name="Directory Path" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="225" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\TEMP\Test Directory\A\c</initialvalue><private /><alwaysinit /></stage><stage stageid="227470b6-fe82-4351-a497-6094c99e4193" name="Success" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="330" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="586142aa-051e-4ec9-8b60-fe063eb60b77" name="Error Message" type="Data"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><display x="450" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="12caee97-e82e-461c-8b22-dabe4248d7a8" name="Get CSV Text As Collection" type="SubSheetInfo"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><narrative>Turns a comma seperated values file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="939139f9-83c3-4076-85ca-1daa3e637601" name="Start" type="Start"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV File Path" narrative="The full path to the CSV file" stage="CSV Location" /><input type="flag" name="First Line Is Header" narrative="Set True if you want to treat the first line as a header" stage="First Line Is Header" /></inputs><onsuccess>dd7efc8a-65d0-432e-a205-643037779b8d</onsuccess></stage><stage stageid="c85955cf-695f-4e82-acdb-72332a337fc7" name="End" type="End"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="CSV Values" narrative="The collection populated with the values of the CSV file" stage="CSV Values" /></outputs></stage><stage stageid="96016690-fb73-49d3-bcfc-56b25dd9d3db" name="CSV Location" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="60" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\BluePrism\Medalytix\iGrading\Test_Suite\ImagesIndex.csv</initialvalue><private /><alwaysinit /></stage><stage stageid="dd7efc8a-65d0-432e-a205-643037779b8d" name="Parse CSV" type="Code"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><loginhibit /><display x="-15" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV Location" expr="[CSV Location]" /><input type="flag" name="First_Line_Is_Header" expr="[First Line Is Header]" /></inputs><outputs><output type="collection" name="Values" stage="CSV Values" /></outputs><onsuccess>c85955cf-695f-4e82-acdb-72332a337fc7</onsuccess><code><![CDATA[Dim HDRString As String = "No"
If First_Line_Is_Header Then HDRSTring = "Yes"


Dim Folder as String = nothing
Dim FileName As String = Nothing
Split_Path(CSV_Location, Folder, Filename)

Dim cn As New OleDbConnection("Provider=Microsoft.Jet.OLEDB.4.0; Data Source=" & Folder & ";Extended Properties=""Text;HDR=" & HDRString & ";FMT=Delimited""")
Dim da As New OleDbDataAdapter()
Dim ds As New DataSet()
Dim cd As New OleDbCommand("SELECT * FROM [" & Filename & "]", cn)

cn.Open()
da.SelectCommand = cd
ds.Clear()
da.Fill(ds, "CSV")
Values = ds.Tables(0)
cn.Close()]]></code></stage><stage stageid="5fe33334-21a0-4751-931d-92622545fe5d" name="CSV Values" type="Collection"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="1dc002ef-16ce-4e9b-9eed-1c4c8a375f11" name="First Line Is Header" type="Data"><subsheetid>f7fa43ec-67e2-4acb-8d13-ced3c5027761</subsheetid><display x="120" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1836bd9-a0bc-45e9-9f62-2835fb1f6144" name="Get Special Folder Path" type="SubSheetInfo"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><narrative>Gets the path of a special folder.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="984cc49d-2710-42f2-85cc-b02b1af6ff97" name="Start" type="Start"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder Name" narrative="The name of the special folder. Supported values include ApplicationData, DesktopDirectory, MyDocuments, ProgramFiles. The values correspond to the .NET Environment.SpecialFolder enumeration." stage="Special Folder Name" /></inputs><onsuccess>548052a7-4e77-4da0-a80e-07ce9d38ecba</onsuccess></stage><stage stageid="f77e4b56-0c20-4361-b1ac-7fbae4cebd0a" name="End" type="End"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Folder Path" narrative="The corresponding path of the requested special folder" stage="Folder Path" /></outputs></stage><stage stageid="1eb8ae16-c4b3-4a26-9476-974fec0fb4c4" name="Special Folder Name" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">InternetCache</initialvalue><private /><alwaysinit /></stage><stage stageid="548052a7-4e77-4da0-a80e-07ce9d38ecba" name="Get Folder Path" type="Code"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><loginhibit /><display x="-30" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Special Folder" expr="[Special Folder Name]" /></inputs><outputs><output type="text" name="Folder Path" stage="Folder Path" /></outputs><onsuccess>f77e4b56-0c20-4361-b1ac-7fbae4cebd0a</onsuccess><code><![CDATA[Dim EnumVal as Environment.SpecialFolder
Try
	EnumVal = Ctype(System.Enum.Parse(GetType(Environment.SpecialFolder), Special_Folder), Environment.SpecialFolder)
Catch Ex As Exception
	Throw New ApplicationException("Value '" & Special_Folder & "' is not recognised as a special folder")
End Try

Folder_Path = Environment.GetFolderPath(EnumVal)]]></code></stage><stage stageid="394a43a7-79f9-4edb-887f-d051122fa5f0" name="Folder Path" type="Data"><subsheetid>40c6e605-9948-429a-ac84-d2810bca75fc</subsheetid><display x="75" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9a81b69-65ad-4194-8361-a2e49aab6c2c" name="Download File" type="SubSheetInfo"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><narrative>Downloads a file from a web URL and saves it in a folder on disk.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ce6133ff-352a-4e74-b9a9-a2bb5d8c8858" name="Start" type="Start"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><preconditions><condition narrative="None." /></preconditions><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Source URL" narrative="The URL of the file that is to be downloaded" stage="Source URL" /><input type="text" name="Destination Path" narrative="The location of the folder where the file is to be saved" stage="Destination Path" /></inputs><onsuccess>a9bb95cf-84c0-42b2-9fac-e36252a56808</onsuccess></stage><stage stageid="00124bb2-c920-40c3-92e1-efb49b029dc0" name="End" type="End"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b30cabb-184c-427b-860e-a315e03763ba" name="Destination Path" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1ee09d3b-a12d-48c7-89a2-7a947d431ac5" name="Source URL" type="Data"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a9bb95cf-84c0-42b2-9fac-e36252a56808" name="Download File" type="Code"><subsheetid>d7b21a3e-52ee-4632-b2e4-88c0e1ff0dea</subsheetid><loginhibit /><display x="0" y="-90" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Url" expr="[Source URL]" /><input type="text" name="Path" expr="[Destination Path]" /></inputs><onsuccess>00124bb2-c920-40c3-92e1-efb49b029dc0</onsuccess><code><![CDATA[Using wc As New System.Net.WebClient()
	wc.DownloadFile(Url, Path)
End Using]]></code></stage><stage stageid="744e3f22-df5c-4d9e-984b-eceb276cbb95" name="Read Lines From File" type="SubSheetInfo"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><narrative>Reads a range of lines fom a text file</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="09ef75fb-7cbe-4b43-900b-bd0112866589" name="File Path" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3721f65-c0fd-4187-9e61-da35cecde126" name="Start Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3444d260-8bd2-44b4-91c8-1f4dc3a07e1d" name="End Line" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="de2f0517-71e7-4bfa-b20b-0f6049ee064d" name="EOF" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="225" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e19c2d2b-f05b-48b3-a6c0-e6c368a0720b" name="Success" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="2814638b-191d-44de-9e9d-e38ce3a2bdb5" name="Message" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-195" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="677752c3-298c-4ea1-abaf-244b239d65d0" name="Lines" type="Collection"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="180" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5bbb949-f610-4f45-bcb7-10a0fc6b123d" name="Line Count" type="Data"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><display x="-195" y="255" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf17d04b-65f1-4bf3-a12c-7121e3c2a075" name="Start" type="Start"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><preconditions><condition narrative="The text file exists and the user has appropriate privileges to allow reading it" /><condition narrative="The Start Line argument is less than or equal to the End Line argument" /></preconditions><postconditions><condition narrative="The lines between and including Start Line and End Line are returned" /><condition narrative="EOF will indicate if the end of the file was reached before End Line was reached" /></postconditions><display x="-15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" narrative="The file to read" stage="File Path" /><input type="number" name="Start Line" narrative="The first line to read" stage="Start Line" /><input type="number" name="End Line" narrative="The last line to read" stage="End Line" /></inputs><onsuccess>4942f615-9ff9-497d-b3ff-dd697860c232</onsuccess></stage><stage stageid="76661ec7-b5b7-4cf5-9b34-27ca45c70b40" name="Read Lines" type="Code"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="File Path" expr="[File Path]" /><input type="number" name="Start Line" expr="[Start Line]" /><input type="number" name="End Line" expr="[End Line]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Lines" stage="Lines" /><output type="number" name="Line Count" stage="Line Count" /><output type="flag" name="EOF" stage="EOF" /></outputs><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess><code><![CDATA[' Assume success
Success = True
Message = ""

Try
	Lines = New DataTable()
	Lines.Columns.Add("Line", GetType(String))

	Using sr As New StreamReader(File_Path)

		EOF = False
		Start_Line = Math.Max(1, Start_Line)

		Dim line as String
		Dim lineNo As Integer = 0
		Do
			line = sr.ReadLine()
			lineNo += 1

			If line Is Nothing Then EOF = True : Exit Do
			If lineNo >= Start_Line Then Lines.Rows.Add(line)
			If lineNo = End_Line Then Exit Do

		Loop Until line Is Nothing
		Line_Count = Lines.Rows.Count

	End Using

Catch ex As Exception
	Success = False
	Message = ex.Message

End Try
]]></code></stage><stage stageid="bcb21a17-13b7-404f-b11f-16d75385411f" name="End" type="End"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Success" narrative="True is the read was successful" stage="Success" /><output type="text" name="Message" narrative="The exception detail if the read was unsuccessful" stage="Message" /><output type="collection" name="Lines" narrative="The lines read - the collection contains a single text column 'Line'" stage="Lines" /><output type="number" name="Line Count" narrative="The number of lines read" stage="Line Count" /><output type="flag" name="End of File" narrative="True if the end of the file was reached before the 'End Line' was reached" stage="EOF" /></outputs></stage><stage stageid="4942f615-9ff9-497d-b3ff-dd697860c232" name="Start Line &gt; End Line?" type="Decision"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="-90" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Start Line] &gt; [End Line]" /><ontrue>fb13e8fc-442c-4cbb-87c1-b4ec596ee962</ontrue><onfalse>76661ec7-b5b7-4cf5-9b34-27ca45c70b40</onfalse></stage><stage stageid="fb13e8fc-442c-4cbb-87c1-b4ec596ee962" name="Semi-Exception" type="MultipleCalculation"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>362c841e-8d1e-4972-b0b5-710b7bdb1f27</onsuccess><steps><calculation expression="False" stage="Success" /><calculation expression="&quot;Start Line (&quot; &amp; [Start Line] &amp; &quot;) cannot be later than End Line (&quot; &amp; [End Line] &amp; &quot;)&quot;" stage="Message" /></steps></stage><stage stageid="362c841e-8d1e-4972-b0b5-710b7bdb1f27" name="anchor1" type="Anchor"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="105" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7d20fad4-4b50-4841-94e9-5f38571de063</onsuccess></stage><stage stageid="d049bf7c-ac22-489e-bf3d-f62d1b4b744a" name="Configure" type="SubSheetInfo"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><narrative>Configures this instance of the utility VBO. Calling it with no parameters will cause the configuration to be reset to default values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1f64d939-b1af-4604-a33c-d730215d51aa" name="Start" type="Start"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Raise exception on any failure" narrative="Flag indicating if failure should cause an exception to be raised rather than a return of a success output value" stage="Raise exception on any failure" /></inputs><onsuccess>63f0aaf5-553d-43fd-b40d-6b3196b7c075</onsuccess></stage><stage stageid="63f0aaf5-553d-43fd-b40d-6b3196b7c075" name="End" type="End"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9e00cf6f-bf06-484e-bcc5-5c0ea5f2dcf1" name="Raise exception on any failure" type="Data"><subsheetid>1e3c209b-a109-46a0-9ff0-e2dc6b8791fb</subsheetid><display x="-195" y="-30" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><alwaysinit /></stage><stage stageid="e8d8821c-ea33-4e7e-a499-9095f71ab91f" name="Raise Exception If Appropriate" type="SubSheetInfo"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="360a869a-24fc-4d19-abbe-b1444dd28c58" name="Start" type="Start"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" stage="Success" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" stage="Error Message" /></inputs><onsuccess>f72ef338-2cee-4c45-8a9a-31011244644f</onsuccess></stage><stage stageid="94d641fc-9887-40ca-8919-8613e5fafda0" name="End" type="End"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af41ccc8-b3bd-4925-84ba-5df075402e08" name="Success" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="-30" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd0e1bfa-b960-4e5e-b8e5-9a24adfd36e1" name="Error Message" type="Data"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="-195" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f72ef338-2cee-4c45-8a9a-31011244644f" name="Should Raise Exception?" type="Decision"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><loginhibit /><display x="15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Success] = False AND [Raise exception on any failure]" /><ontrue>f42fee03-c39b-416a-b55f-3d69a9ebe812</ontrue><onfalse>94d641fc-9887-40ca-8919-8613e5fafda0</onfalse></stage><stage stageid="f42fee03-c39b-416a-b55f-3d69a9ebe812" name="FAIL" type="Exception"><subsheetid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</subsheetid><display x="90" y="-60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Action Failed" detail="[Error Message]" /></stage><stage stageid="9cdf0f78-05d1-44d4-80a0-9f78ca0b22ae" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>3a12dbad-57fd-45a4-b859-62df514a34d3</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>3764ae17-85d7-4ebb-99b5-502b95d7abd6</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="3dde4f26-00a8-4e1a-af12-b8a14178d89c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bafee17-a81a-40f0-9b6b-80b78142dd87</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>aa67216d-b83f-4c14-9f71-5ec6df626c08</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="060a1fdb-6243-40f1-96e0-1c0b54382bfa" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>1ff30a41-e177-40c5-a756-a6b466004f32</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>e061382f-4149-485b-9668-f2fc0ca334bd</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="8db31208-966a-494a-9315-8a4add93c64c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d68f192f-eeb7-420e-b156-9636503b6082</subsheetid><loginhibit /><display x="-45" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>09677c01-2e36-4330-ae33-defa66a1e7b1</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="33ba9e06-b05b-4e51-baa6-7f6c9165c558" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>0bad9bbd-7a9f-4791-b6a8-ff5a2c4c39b8</subsheetid><loginhibit /><display x="-15" y="-60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Error Message]" /></inputs><onsuccess>167ee595-8609-4b40-9cbb-70394613201b</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="d0021635-222d-46f1-93ad-a7435640cf9f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>ed509af2-4b4a-447d-8196-18105ed12739</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>82b919fe-64b2-4c2b-8173-5706f671c5ce</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="249acd28-3283-498f-aca8-76c67cb2295c" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>70940cba-8680-4eb9-8066-9e383fc5b39b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>576295b9-757e-4588-948e-34aac5140c29</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acf72cc7-cf73-466f-8c22-9fb633ed3c24" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>e9dd304c-7d26-40f5-b193-eef36f0a370c</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>a7bae4fd-01fc-4447-8cf4-fbfd04353f72</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="acbc8cd8-d4ad-4eae-a7c3-ebbac1d3f4c7" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>85156833-c61c-4c78-916f-0b75a9a83e8d</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>2c8abe9a-1466-4283-999a-c5c7838a0e27</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="1e441202-3878-4eb6-b156-6f517be6de00" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>d2530b0d-5530-4692-8a60-1f91d1c5a9c9</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>39862014-df78-414b-9ccd-5c0d392aa282</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7419fb71-5c79-4fb6-9e59-b9fbc1d63e45" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>8eb61369-ddab-4205-9a55-81054c2e4afb</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>0a76495e-bc0d-4cea-bae0-85da1e15c74f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="7d20fad4-4b50-4841-94e9-5f38571de063" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>6a9cff0d-c7c5-440a-bd8d-0007e15eae4d</subsheetid><loginhibit /><display x="-15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>bcb21a17-13b7-404f-b11f-16d75385411f</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="9219c3c4-effd-4dfc-9020-8dafd054ea8f" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>602b7aad-2626-40ba-8c4b-1ec926ae9098</subsheetid><loginhibit /><display x="-30" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>1aab3a10-a813-470b-97c8-57938a0d0024</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage><stage stageid="aed480e9-2938-4d36-b400-a3bd2580921a" name="Raise Exception If Appropriate" type="SubSheet"><subsheetid>842c79f8-aa64-4781-ad18-3982e21f0fd1</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Success" narrative="Flag indicating success or otherwise" expr="[Success]" /><input type="text" name="Error Message" narrative="The message detailing the lack of success, empty if the current state indicates success" expr="[Message]" /></inputs><onsuccess>709d1a16-f19e-4504-ae79-4a48d1e058c7</onsuccess><processid>8043916d-2ef9-45b8-ab66-f4c20ef1b8e3</processid></stage></process></object>
        <object id="88d28317-a894-42e7-b45c-abe265af61ce" name="Utility - Foreground Locker" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Foreground Locker" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Controls access to foreground operations by providing a locking mechanism" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>569c1f8a-4d40-400d-809f-2cfecbacae88</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="61114d9e-13f2-4fad-bfb5-4a1975e731f4" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e76e12db-361a-43d0-9b04-13bc9ce2162f" type="Normal" published="False"><name>Overview</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="59019d20-d12a-4725-9721-8dad1e952c11" type="Normal" published="False"><name>Set Up Master Key</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f40a9168-d73c-43ef-abc0-e269b4b0e992" type="Normal" published="True"><name>Lock Foreground</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a999ee6-140f-462d-964e-446debef89e2" type="Normal" published="True"><name>Release Foreground Lock</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="fd9f6a6b-8dc2-4036-a978-72263497bdaa" name="Start" type="Start"><loginhibit /><display x="15" y="-240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cf562934-8d9b-4de7-81c5-2dcd3653bd2f</onsuccess></stage><stage stageid="ce5b2570-bd06-4537-8677-e89987af3159" name="End" type="End"><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="afe72005-0746-41d8-96c4-e490bd32aedc" name="Stage1" type="ProcessInfo"><display x="-165" y="-240" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="23f8ad6c-4a17-456f-aa49-218b48f086bf" name="Clean Up" type="SubSheetInfo"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c5b752f8-3115-4e90-8d15-9faf2150e4df" name="Start" type="Start"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>924bee34-4d20-496d-b7c2-9e7b533b540c</onsuccess></stage><stage stageid="924bee34-4d20-496d-b7c2-9e7b533b540c" name="End" type="End"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="18fffa33-9ffe-4ecd-b236-bfbbf088e9a4" name="Lock Foreground" type="SubSheetInfo"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d4a6ad5a-5b79-4fd0-852f-0944b85c3fba" name="Start" type="Start"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="timespan" name="Timeout" narrative="The timeout " stage="Timeout" /></inputs><onsuccess>9c60978a-68d2-4812-954d-21a8ffad59eb</onsuccess></stage><stage stageid="7ab69f85-6478-414b-bbbe-f85afaaf07a3" name="End" type="End"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a26a272e-f867-41f6-9c43-16b132a1b347" name="new" type="Note"><subsheetid>61114d9e-13f2-4fad-bfb5-4a1975e731f4</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9c60978a-68d2-4812-954d-21a8ffad59eb" name="Lock" type="Action"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" expr="[Foreground Lock For This Resource]" /><input type="timespan" name="Timeout" expr="[Timeout]" /></inputs><onsuccess>7ab69f85-6478-414b-bbbe-f85afaaf07a3</onsuccess><resource object="Utility - Locking" action="Lock Item" /></stage><stage stageid="0192fbd9-907d-484d-8e29-9034faafd0a5" name="Release Foreground Lock" type="SubSheetInfo"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="06d54752-a9f4-4c20-9911-df2f1ad5ff25" name="Start" type="Start"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the foreground is not locked" stage="Error If Not Locked" /></inputs><onsuccess>e5235bdf-ff57-4020-a9e4-97e4fe67d8d1</onsuccess></stage><stage stageid="b59391d7-81e0-4bfe-aaea-45fe8a963480" name="End" type="End"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e5235bdf-ff57-4020-a9e4-97e4fe67d8d1" name="Release" type="Action"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." expr="[Foreground Lock For This Resource]" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" expr="[Error If Not Locked]" /></inputs><onsuccess>b59391d7-81e0-4bfe-aaea-45fe8a963480</onsuccess><resource object="Utility - Locking" action="Release Lock" /></stage><stage stageid="b03db9c9-39e9-4958-8f9c-931ead033beb" name="Error If Not Locked" type="Data"><subsheetid>7a999ee6-140f-462d-964e-446debef89e2</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a2fa4ae6-e62e-4280-b7c1-d38798f7fcc0" name="Overview" type="SubSheetInfo"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="60580345-e73d-4a94-b102-def07e750eae" name="Start" type="Start"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>911aecf2-9832-4245-b99d-8c04b7e41b1e</onsuccess></stage><stage stageid="911aecf2-9832-4245-b99d-8c04b7e41b1e" name="End" type="End"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="31ab2245-b34a-4e4a-bbd5-bda030b464fb" name="Note1" type="Note"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><narrative>- OVERVIEW - 

This object is designed to control access to "foreground" operations by two processes requiring global mouse clicks and such.

It works by automatically creating a queue item key on the current machine. Thus at runtime there will be one queue item per resource PC.

To prevent a possible race condition in which two processes create duplicate locks on the same machine, a master lock is obtained in order to have the right to create a new queue item. This master lock is shared by all machines.</narrative><display x="210" y="-60" w="270" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b6806a5b-4ba2-4fd6-a412-b139b918d676" name="Note1" type="Note"><subsheetid>e76e12db-361a-43d0-9b04-13bc9ce2162f</subsheetid><loginhibit /><narrative>- SETUP - 

Import the Locking business object used by this process.

Set up the queue expected by that business object.

Use this business object it to create a unique "Foreground Master Lock" key - see the appropriate page in this object.

Use this business object by peppering it around your business objects. Respect the "try-finally" approach by always releasing any foreground lock that your page has obtained.

Your business objects can be marked as "background" provided you implement your locking properly.</narrative><display x="210" y="195" w="270" h="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ab47a353-e238-48df-9df1-ec203a834cb0" name="Ensure Queue Item Exists For This Resource" type="Action"><loginhibit /><display x="15" y="45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" narrative="The item key of the queue item to be created" expr="[Foreground Lock For This Resource]" /><input type="flag" name="Ignore If Exists" narrative="When true, no action will be taken if the item already exists. Otherwise an exception will be thrown." expr="True" /></inputs><onsuccess>9159bccb-c8f5-4136-9832-7242da1784fe</onsuccess><resource object="Utility - Locking" action="Set Up Queue Item" /></stage><stage stageid="dbd73bf9-7c61-4aca-8b76-114da4a7ce76" name="Foreground Lock For This Resource" type="Data"><loginhibit /><display x="210" y="165" w="210" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><alwaysinit /></stage><stage stageid="25ef5771-771f-431c-ae7c-7fb5fd308922" name="Decide Key Based On Resource Name" type="Calculation"><loginhibit /><display x="15" y="-45" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ab47a353-e238-48df-9df1-ec203a834cb0</onsuccess><calculation expression="Left(&quot;FG Lock - &quot; &amp; [Resource Name], 30)" stage="Foreground Lock For This Resource" /></stage><stage stageid="cf562934-8d9b-4de7-81c5-2dcd3653bd2f" name="Lock Master Key" type="Action"><loginhibit /><display x="15" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" expr="[Master Lock Key Item]" /><input type="timespan" name="Timeout" expr="MakeTimeSpan(0,0,1,0,0)" /></inputs><onsuccess>4a0a15e7-9d46-4888-aeac-245f144c40e9</onsuccess><resource object="Utility - Locking" action="Lock Item" /></stage><stage stageid="da76554d-e098-4906-8724-26392d2c15f8" name="Master Lock Key Item" type="Data"><loginhibit /><display x="180" y="-180" w="210" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Foreground Locking Master Key</initialvalue><alwaysinit /></stage><stage stageid="9159bccb-c8f5-4136-9832-7242da1784fe" name="Release Master Key" type="Action"><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." expr="[Master Lock Key Item]" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" expr="False" /></inputs><onsuccess>ce5b2570-bd06-4537-8677-e89987af3159</onsuccess><resource object="Utility - Locking" action="Release Lock" /></stage><stage stageid="0569c9b3-b85f-460f-8090-fd59cb464856" name="Recover1" type="Recover"><loginhibit /><display x="180" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>06b2785e-65e8-445e-9a5d-f5934cd28b56</onsuccess></stage><stage stageid="06b2785e-65e8-445e-9a5d-f5934cd28b56" name="Resume1" type="Resume"><loginhibit /><display x="180" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9159bccb-c8f5-4136-9832-7242da1784fe</onsuccess></stage><stage stageid="da84a764-4d04-49fa-bee9-3d67d3b7b53a" name="Set Up Master Key" type="SubSheetInfo"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6c7467b5-9374-4ea0-8075-80f4b2c0a758" name="Start" type="Start"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b7ca0c89-877b-447b-ac49-cd70ddb17514</onsuccess></stage><stage stageid="b243a25a-2eb4-4a26-b804-fa32201dfd57" name="End" type="End"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b7ca0c89-877b-447b-ac49-cd70ddb17514" name="Set Up Master Key" type="Action"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" narrative="The item key of the queue item to be created" expr="[Master Lock Key Item]" /><input type="flag" name="Ignore If Exists" narrative="When true, no action will be taken if the item already exists. Otherwise an exception will be thrown." expr="True" /></inputs><onsuccess>b243a25a-2eb4-4a26-b804-fa32201dfd57</onsuccess><resource object="Utility - Locking" action="Set Up Queue Item" /></stage><stage stageid="614580a0-bf30-4db9-acb7-ef8f4b9319b0" name="Note2" type="Note"><subsheetid>59019d20-d12a-4725-9721-8dad1e952c11</subsheetid><loginhibit /><narrative>Private page for setup

Run once only on each database - not needed for each machine. Further per-machine keys are created automatically on the fly.</narrative><display x="180" y="-15" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7d81d9fb-8fa5-4c2b-9af8-6cf0a0c22a6f" name="Timeout" type="Data"><subsheetid>f40a9168-d73c-43ef-abc0-e269b4b0e992</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea4e1a60-f68c-43d3-aeae-71ad16f8b73c" name="Get Resource Name" type="Calculation"><loginhibit /><display x="135" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>25ef5771-771f-431c-ae7c-7fb5fd308922</onsuccess><calculation expression="GetResourceName()" stage="Resource Name" /></stage><stage stageid="a3aa9026-6c07-4ca6-8d64-4cda91d8bb1b" name="Note3" type="Note"><loginhibit /><narrative>Bug 5029 means that GetResourceName() does not work</narrative><display x="300" y="-120" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ea4e1a60-f68c-43d3-aeae-71ad16f8b73c</onsuccess></stage><stage stageid="65804118-1e81-4ef4-a7b4-7cd1d6fd9aa9" name="Resource Name" type="Data"><display x="-75" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a0a15e7-9d46-4888-aeac-245f144c40e9" name="Get Resource Name" type="Code"><loginhibit /><display x="15" y="-120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Resource Name" stage="Resource Name" /></outputs><onsuccess>25ef5771-771f-431c-ae7c-7fb5fd308922</onsuccess><code><![CDATA[Resource_Name = Environment.MachineName()]]></code></stage></process></object>
        <object id="bf926e5b-5a53-4629-bf02-31a58a120117" name="Utility - General" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - General" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="General utility functions which don't fit into specific categories" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>1f3e584e-cb89-48ad-bd40-602968bdf4b9</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="177b593b-1118-4903-802c-d939d96ab07d" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1cfff60e-8c0b-4cec-af1e-645eaa20d5cd" type="Normal" published="True"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d0540501-519a-45f1-b6f3-3af4af12e619" type="Normal" published="True"><name>Process Exists</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd" type="Normal" published="True"><name>Window Exists</name><view><camerax>66</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="644da7bd-f4b1-44af-af67-fcf711356e70" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9c3f9d10-70e5-4ac1-b987-48f7bd33f56d</onsuccess></stage><stage stageid="9c3f9d10-70e5-4ac1-b987-48f7bd33f56d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3395d1a0-fcba-4944-9f09-7c218000fc1f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="baccb181-ead3-4cec-abfa-94bb52412e67" name="Clean Up" type="SubSheetInfo"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7ab68dda-e80a-4e91-b3ca-b9bbeecb0ca0" name="Start" type="Start"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd</onsuccess></stage><stage stageid="3475f7ae-9063-4cbe-85b1-f8f5b0dc90dd" name="End" type="End"><subsheetid>177b593b-1118-4903-802c-d939d96ab07d</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="27709e12-6519-4529-8d76-45eb27236042" name="Process Exists" type="SubSheetInfo"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><narrative>Checks to see if a process with the given name exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="541b75f3-1868-4536-9ed1-f0340805cf52" name="End" type="End"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the process exists" stage="Exists" /></outputs></stage><stage stageid="9e9ff0c4-2102-4dde-851b-568ecca9dd5c" name="Start" type="Start"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" narrative="The name of the process" stage="Process Name" /></inputs><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess></stage><stage stageid="2987b0b2-bcfe-44df-8d60-3cf441c023bf" name="Process Name" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a65e5d31-3b82-44bd-85e8-42d30bf96cec" name="Process Exists" type="Code"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Process Name" expr="[Process Name]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>541b75f3-1868-4536-9ed1-f0340805cf52</onsuccess><code><![CDATA[
try

for each p as system.diagnostics.process in system.diagnostics.process.getprocessesbyname(Process_Name)
 exists = true
 exit sub
next

catch e as exception
end try

exists = false]]></code></stage><stage stageid="d97aef89-802a-4cf4-b301-aaa31126177f" name="Exists" type="Data"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4adb19bc-3b13-48e7-9f69-079649e29bdc" name="Window Exists" type="SubSheetInfo"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><narrative>Checks to see if a window with the given title exists.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="071bf0aa-e2d9-416a-813b-a48a15296bf7" name="Start" type="Start"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" stage="Title" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" stage="Wildcard" /></inputs><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess></stage><stage stageid="94672b8d-1060-4a0a-91f9-0c96cd778618" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="a7f48e3c-d61a-43dc-8546-646ae6b6c63b" name="End" type="End"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="Exists" /></outputs></stage><stage stageid="f04edf78-80f6-4e20-90ad-cea14b6a29ff" name="Window Exists" type="Code"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Title" expr="[Title]" /><input type="flag" name="Wildcard" expr="[Wildcard]" /></inputs><outputs><output type="flag" name="Exists" stage="Exists" /></outputs><onsuccess>a7f48e3c-d61a-43dc-8546-646ae6b6c63b</onsuccess><code><![CDATA[try

if wildcard then
	title = title.replace("*", ".*")
	title = title.replace("?", "\w")
end if

exists = false
for each p as system.diagnostics.process in system.diagnostics.process.getprocesses()
	if wildcard then
		if system.text.regularexpressions.regex.ismatch(p.mainwindowtitle, title) then
			exists = true
			exit sub
		end if
	else
		if p.mainwindowtitle.tolower = title.tolower then
			exists = true
			exit sub
		end if
	end if
next

catch e as exception

end try
]]></code></stage><stage stageid="911b7620-4b36-4299-a8fe-8be896ab0176" name="Exists" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="588fd5df-2393-49f6-8dec-e6205287dedf" name="Title" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9df24660-8a75-41df-bf4c-69e3e18a14fa" name="Wildcard" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="cd594031-696a-419e-a6c2-36688addfb0f" name="Titles CSV" type="Data"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3d281508-283c-4d63-81dd-ec07cb0c7697" name="Test" type="Calculation"><subsheetid>d0540501-519a-45f1-b6f3-3af4af12e619</subsheetid><loginhibit /><display x="135" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a65e5d31-3b82-44bd-85e8-42d30bf96cec</onsuccess><calculation expression="&quot;iexplore&quot;" stage="Process Name" /></stage><stage stageid="149317ed-25d5-4998-b8d2-9e8793a9cebe" name="Test" type="MultipleCalculation"><subsheetid>d500b9f6-798c-40d6-a9b8-e0eb9b16d9cd</subsheetid><loginhibit /><display x="165" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f04edf78-80f6-4e20-90ad-cea14b6a29ff</onsuccess><steps><calculation expression="&quot;* - Windows Internet Explorer&quot;" stage="Title" /><calculation expression="True" stage="Wildcard" /></steps></stage><stage stageid="645b3fce-eacd-4d15-be94-499bf9d05f19" name="Sleep" type="SubSheetInfo"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><narrative>Pauses for a given time (in seconds).</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f8281856-0b5c-4d54-bcb5-dd2aea75e3a6" name="Start" type="Start"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" narrative="The time (in seconds) for which to sleep" stage="Sleep Time (Seconds)" /></inputs><onsuccess>bdd3e5d7-002e-4c18-b363-b1474b2b1868</onsuccess></stage><stage stageid="64257152-cf77-42ee-814a-16c63b20d83b" name="End" type="End"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="fed99019-3566-4cf6-a7ab-82e05808dee6" name="Sleep Time (Seconds)" type="Data"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5bd29fe1-ab40-4cc5-b409-a4e444b93f51" name="Time Out1" type="WaitEnd"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="45" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>64257152-cf77-42ee-814a-16c63b20d83b</onsuccess><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid></stage><stage stageid="bdd3e5d7-002e-4c18-b363-b1474b2b1868" name="Wait1" type="WaitStart"><subsheetid>1cfff60e-8c0b-4cec-af1e-645eaa20d5cd</subsheetid><loginhibit /><display x="75" y="-30" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>997b23cb-7481-4893-b115-278ce1c05c0a</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage></process></object>
        <object id="6efb1579-126a-4563-b2e9-3d9e432c1a79" name="Utility - HTTP" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - HTTP" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Communicates with web services using the HTTP protocol." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>2ba17e26-49eb-43ed-84dd-c40e67e990b0</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="925e0261-2b2e-41ed-b555-4c5ccf8a00fc" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f3a55ad6-3bfa-4401-baa9-0e50afe42879" type="Normal" published="True"><name>Post</name><view><camerax>109</camerax><cameray>56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ecff5a78-99b1-4ecb-a356-a075c487ef71" type="Normal" published="True"><name>Post JSON</name><view><camerax>28</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d30e8f45-db72-40d2-9f17-9700006fe152" type="Normal" published="True"><name>HTTP Request</name><view><camerax>50</camerax><cameray>47</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="519a0dc7-b254-478b-b2ed-c7883124e31b" type="Normal" published="True"><name>Load Certificate</name><view><camerax>0</camerax><cameray>84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="704436d5-f51b-4369-b763-a4fdc6e894c2" type="Normal" published="True"><name>URL Encode</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="bee831af-f964-4218-87f3-d3378e2eab10" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>071f13b7-de3d-4625-9498-9da634d452b4</onsuccess></stage><stage stageid="11e111be-101c-4df7-9d5c-910a10c02e2d" name="End" type="End"><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9c4d6f4e-1d32-4d1f-a37d-f279b42fa480" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Web.dll</reference><reference>System.Xml.dll</reference><reference>System.Web.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Net.Http.dll</reference></references><imports><import>System</import><import>System.Net</import><import>System.Data</import><import>System.Security.Cryptography.X509Certificates</import><import>System.Collections.Generic</import><import>System.Web</import><import>System.Media</import><import>System.IO</import><import>System.Text</import><import>Newtonsoft.Json</import><import>System.Net.Http.Headers</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[Private m_Certificates As New Dictionary(Of String, X509Certificate2)

Private Function GetCertificate(ByVal subject As String) As X509Certificate2
	Dim store As New X509Store(StoreName.My, StoreLocation.LocalMachine)
	Try
		store.Open(OpenFlags.ReadOnly)
		Dim certs As X509Certificate2Collection = store.Certificates.Find(X509FindType.FindBySubjectName, subject, True)
		For Each cert As X509Certificate2 In certs
			Return cert
		Next
	Finally
		store.Close()
	End Try
	Return Nothing
End Function

Function ToDictionary(webResponse As HttpWebResponse ) As Dictionary(Of String, String)

	Dim dict = New Dictionary(Of String, String)()

	For index As Integer = 0 To webResponse.Headers.Count - 1

		If webResponse.Headers.Keys.Count -1 >= index Then

			dict.Add(webResponse.Headers.Keys(index), webResponse.Headers(index) )

		End if

	Next

	Return dict

End Function]]></code></stage><stage stageid="b48af877-43b3-4056-b8b4-88bac82a5c80" name="Clean Up" type="SubSheetInfo"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d35cb9b6-000c-45e5-9a29-9001404a21d0" name="Start" type="Start"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f1054fe8-46c8-42ab-b236-5b07592ec5eb</onsuccess></stage><stage stageid="f1054fe8-46c8-42ab-b236-5b07592ec5eb" name="End" type="End"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ab202953-451b-4e7c-8cd5-c050e06e286a" name="Post" type="SubSheetInfo"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><narrative>Sends a message to HTTP endpoint using the POST method. The collection data is encoded using "application/x-www-form-urlencoded"</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e2777b38-8eba-4a04-a611-28bcd6c4add6" name="Start" type="Start"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" /><input type="collection" name="Post Data" narrative="A collection of values to send as Post data" stage="Post Data" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: HTTP Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /></inputs><onsuccess>e42b0caa-40c1-4a89-a873-f6977581053b</onsuccess></stage><stage stageid="f51a79a9-1213-484c-bedc-065f44051a02" name="End" type="End"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Post Headers" narrative="The headers related to the Post query" stage="ResultHeadersJson" /></outputs></stage><stage stageid="14154308-012d-47e4-a707-8ca80b73651e" name="new" type="Note"><subsheetid>925e0261-2b2e-41ed-b555-4c5ccf8a00fc</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4228ae7a-9bb3-4de4-9bbf-00e32d925ecf" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e42b0caa-40c1-4a89-a873-f6977581053b" name="Get Body" type="Code"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="postData" expr="[Post Data]" /></inputs><outputs><output type="text" name="body" stage="Body" /></outputs><onsuccess>e9085eba-5f15-4b65-91ed-41abf7c6917f</onsuccess><code><![CDATA[Dim sb As New System.Text.StringBuilder
For Each r As DataRow In postData.Rows
	Dim first As Boolean = True
	For Each c As DataColumn In postData.Columns
		If first Then
			first = False
		Else
			sb.Append("&")
		End If
		Dim columnName As String = c.ColumnName
		Dim encodedCol As String = System.Web.HttpUtility.UrlEncode(columnName)
		sb.Append(encodedCol)
		sb.Append("=")
		Dim val As String = r(columnName).ToString
		Dim encodedVal As String = System.Web.HttpUtility.UrlEncode(val)
		sb.Append(encodedVal)
	Next
	Exit For 'Only one row is allowed
Next

body=sb.ToString()
]]></code></stage><stage stageid="1c58d0fb-9a9b-4d2f-861f-5c22ab835c31" name="Result" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-225" y="270" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b98abed4-9669-476c-87d9-3f485683d049" name="Address URL" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f4c2a5eb-36de-4904-a963-a8513b7e8840" name="Post Data" type="Collection"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="071f13b7-de3d-4625-9498-9da634d452b4" name="Setup" type="Code"><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>11e111be-101c-4df7-9d5c-910a10c02e2d</onsuccess><code><![CDATA[System.Net.ServicePointManager.Expect100Continue = False]]></code></stage><stage stageid="f6ed43b3-714e-4161-b44b-b60490592281" name="Proxy Password" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="bcedbed1-3ed7-42d7-8f16-7e2071c3e187" name="Proxy Username" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66afe5b7-37e4-4ed7-a9fc-a78e1ab8890c" name="Proxy URL" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="be7856fe-4027-4226-8caa-851bb6e7df21" name="Use Proxy" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="38c313e6-bc0d-49e5-a6ab-4042a0682d3d" name="Post JSON" type="SubSheetInfo"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><narrative>Sends a message to HTTP endpoint using the POST method. The action expects a raw string and sets the content type to "application/json"</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="37166627-b66b-4a9c-a321-539933de2123" name="End" type="End"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Result Headers" narrative="The headers related to the Post Query" stage="ResultHeadersJson" /></outputs></stage><stage stageid="878a70a1-d658-4563-b27c-245f947b74be" name="Result" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="195" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6875cda6-dbbe-47b6-ab82-b62f89c90a88" name="JSON" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4956e14f-001c-4406-a401-38c63ff06696" name="Start" type="Start"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP Post data to" stage="Address URL" /><input type="text" name="JSON" narrative="The JSON to send" stage="JSON" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers Collection" stage="Headers" /></inputs><onsuccess>6b571f09-555c-45a8-9475-957d41cafb24</onsuccess></stage><stage stageid="696696c8-af04-4075-aea0-a8024e2431fe" name="Address URL" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="582df200-7287-4dc1-a9a2-6c9e09276f77" name="Proxy Password" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="924eb1dd-b782-4f71-82b6-9923ea0093ec" name="Proxy Username" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed09a5ed-6c7b-4dd3-9bf0-8df61da66ea3" name="Proxy URL" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5e35c8d6-3f97-4ae4-8566-35fb0981e145" name="Use Proxy" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a9fcaf1-4310-45cb-a775-ebfadc75ac8a" name="Headers" type="Collection"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-240" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="9e64259d-1a91-444b-8620-b8cd186832d1" name="Accept" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58e7a470-3ec3-4033-bb19-0fee1bdcaaed" name="HTTP Request" type="SubSheetInfo"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><narrative>Sends a message to HTTP endpoint using the specified HTTP method and content-type</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d0a11dcd-f002-46b5-aff6-1026c3be2da8" name="End" type="End"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="0" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /></outputs></stage><stage stageid="1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8" name="HTTP Request" type="Code"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="0" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="addressURL" expr="[Address URL]" /><input type="text" name="body" expr="[Body]" /><input type="text" name="contentType" expr="[Content Type]" /><input type="text" name="method" expr="[Method]" /><input type="text" name="proxyURL" expr="[Proxy URL]" /><input type="flag" name="useProxy" expr="[Use Proxy]" /><input type="text" name="proxyUsername" expr="[Proxy Username]" /><input type="password" name="proxyPassword" expr="[Proxy Password]" /><input type="collection" name="headers" expr="[Headers]" /><input type="text" name="accept" expr="[Accept]" /><input type="text" name="username" expr="[Username]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="certID" expr="[Certificate ID]" /><input type="flag" name="forcePreAuth" expr="[Force Pre Authorization]" /><input type="flag" name="usingFile" expr="[File]" /></inputs><outputs><output type="text" name="resultData" stage="Result" /><output type="text" name="resultHeadersJson" stage="ResultHeadersJson" /></outputs><onsuccess>d0a11dcd-f002-46b5-aff6-1026c3be2da8</onsuccess><code><![CDATA[Try
	Dim request As WebRequest = WebRequest.Create(addressURL)

	If forcePreAuth Then
	   'Sometimes a web server will require the authorisation header in the initial request
	   'In which case we have to add the basic authorization header manually.
	   Dim bytes() As Byte = System.Text.Encoding.UTF8.GetBytes(String.Format("{0}:{1}",username,password))
	   Dim base64 As String = Convert.ToBase64String(bytes)
	   request.Headers.Add("Authorization", "Basic " & base64)
	Else
	  If Not String.IsNullOrEmpty(username) AndAlso Not String.IsNullOrEmpty(password) Then
		request.Credentials = New NetworkCredential(username,password)
	  End If
	End If

	If useProxy Then
		Dim proxyURI As New Uri(proxyURL)
		Dim proxy As New WebProxy(proxyURI, True)
		Dim proxyCred As New NetworkCredential(proxyUsername, proxyPassword)
		Dim credCache As New CredentialCache()
		credCache.Add(proxyURI, "Basic", proxyCred)
		proxy.UseDefaultCredentials = False
		proxy.Credentials = credCache
		request.Proxy = proxy
	End If

	request.Method = method
	request.ContentType = contentType

	Dim httpRequest As HttpWebRequest = TryCast(request, HttpWebRequest)
	If httpRequest IsNot Nothing Then
	  If Not String.IsNullOrEmpty(accept) Then
		httpRequest.Accept = accept
	  End If
	  If Not String.IsNullOrEmpty(certID) Then
		httpRequest.ClientCertificates.Add(m_Certificates(certID))
	  End If
	End If

	For Each r As DataRow In headers.Rows
		For Each c As DataColumn In headers.Columns
			Dim columnName As String = c.ColumnName
			Dim val As String = r(columnName).ToString
			request.Headers.Add(columnName,val)
		Next
		Exit For 'Only one row is allowed
	Next

	' Normal stream writer, we aren't encoding a file etc.
	If Not usingFile Then

		If Not String.IsNullOrEmpty(body) Then
		  Dim requestStream As IO.Stream = request.GetRequestStream()
		  Using sw As New IO.StreamWriter(requestStream, New Text.UTF8Encoding(False))
			sw.Write(body)
		  End Using
		End If

	Else If usingFile Then
		' Prep the request body
		Dim byteArray = File.ReadAllBytes( body )
		Dim requestStream As IO.Stream = request.GetRequestStream()
		requestStream.Write(byteArray,0, byteArray.Length)
End If

	Using response As WebResponse = request.GetResponse()
	  resultHeadersJson = JsonConvert.SerializeObject(ToDictionary(response))
	  Dim responseStream As IO.Stream = response.GetResponseStream()
	  Dim sr As New IO.StreamReader(responseStream)
	  resultData = sr.ReadToEnd()
	End Using

Catch e As WebException

	Using response As WebResponse = e.Response
		Dim httpResponse As HttpWebResponse = CType(response, HttpWebResponse)
		Using data As Stream = response.GetResponseStream()
			Using reader = New StreamReader(data)
				Dim text As String = reader.ReadToEnd()
				resultData = resultData + text
			End Using

		End Using
	End Using

End Try]]></code></stage><stage stageid="96e2df5a-429a-4030-9565-b8cbbf7be6b3" name="Result" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-225" y="375" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8f28cc4e-4ae2-4b01-ad23-0b632027d627" name="Body" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e305dce1-1fd7-459b-8211-27c26350676d" name="Block1" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="-60" y="-45" w="210" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="0e0138a9-ccaa-44b1-b742-ad843c39aca1" name="Recover1" type="Recover"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="90" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0645751f-e202-459a-b704-5fb0e0cbebe7</onsuccess></stage><stage stageid="0645751f-e202-459a-b704-5fb0e0cbebe7" name="Exception1" type="Exception"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="210" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="d8c39895-52d1-45ad-8cd0-be309896d0e5" name="Start" type="Start"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="0" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" stage="Address URL" /><input type="text" name="Body" narrative="The body text of the HTTP request" stage="Body" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" stage="Use Proxy" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." stage="Content Type" /><input type="text" name="Method" narrative="The method of the HTTP request." stage="Method" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" stage="Proxy URL" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" stage="Proxy Username" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" stage="Proxy Password" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" stage="Headers" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" stage="Accept" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" stage="Username" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" stage="Password" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" stage="Certificate ID" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" stage="Force Pre Authorization" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" stage="File" /></inputs><onsuccess>1fa7def4-c6a8-4325-9bc8-2c6027c0b8e8</onsuccess></stage><stage stageid="c4e87c4e-8150-4a15-8fc5-ddc736b949ae" name="Address URL" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="038a7411-25dc-456c-8007-bb82f3d94de7" name="Proxy Password" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="210" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="8ef02e3a-8214-4163-b44d-a5081ed8b9e4" name="Proxy Username" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="210" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1c6f3a8d-428e-4a61-815c-f32a8a117ae3" name="Proxy URL" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5c4cc5f6-0531-4375-b9c1-3fcb529dde9b" name="Use Proxy" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="165" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4a98d0d5-c3b8-42fb-933f-2168265f12d6" name="Content Type" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fc9f21c4-39ba-4135-8356-f9a516bf6b99" name="Method" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6b571f09-555c-45a8-9475-957d41cafb24" name="HTTP Request" type="SubSheet"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[JSON]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/json&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" expr="" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /></outputs><onsuccess>37166627-b66b-4a9c-a321-539933de2123</onsuccess><processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid></stage><stage stageid="33b3447c-a55e-4af3-be35-6cb5624d6a4f" name="Headers" type="Collection"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ac16a164-f018-4111-949f-3db9d4d873d9" name="Accept" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="75" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="23c8dd77-277a-4aac-8df7-31c951626abd" name="Body" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-195" y="195" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e9085eba-5f15-4b65-91ed-41abf7c6917f" name="HTTP Request" type="SubSheet"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Address URL" narrative="The URL to send the HTTP data to" expr="[Address URL]" /><input type="text" name="Body" narrative="The body text of the HTTP request" expr="[Body]" /><input type="flag" name="Use Proxy" narrative="Set true if you need to use a proxy" expr="[Use Proxy]" /><input type="text" name="Content Type" narrative="The content type of the HTTP request." expr="&quot;application/x-www-form-urlencoded&quot;" /><input type="text" name="Method" narrative="The method of the HTTP request." expr="&quot;POST&quot;" /><input type="text" name="Proxy URL" narrative="OPTIONAL: The proxy url" expr="[Proxy URL]" /><input type="text" name="Proxy Username" narrative="OPTIONAL: The proxy username" expr="[Proxy Username]" /><input type="password" name="Proxy Password" narrative="OPTIONAL: The proxy password" expr="[Proxy Password]" /><input type="collection" name="Headers" narrative="OPTIONAL: Headers" expr="[Headers]" /><input type="text" name="Accept" narrative="OPTIONAL: Accept" expr="[Accept]" /><input type="text" name="Username" narrative="OPTIONAL: Basic Authentication username" expr="" /><input type="password" name="Password" narrative="OPTIONAL: Basic Authenction password" expr="" /><input type="text" name="Certificate ID" narrative="OPTIONAL: The id of the client authentication certificate" expr="" /><input type="flag" name="Force Pre Authorization" narrative="OPTIONAL: Force the request to send the authorization headers" expr="" /><input type="flag" name="File URL" narrative="OPTIONAL: Is the JSON Body a file instead?" expr="" /></inputs><outputs><output type="text" name="Result" narrative="The result from the Post query." stage="Result" /><output type="text" name="Headers as Json" narrative="The returned headers response as Json" stage="ResultHeadersJson" /></outputs><onsuccess>f51a79a9-1213-484c-bedc-065f44051a02</onsuccess><processid>d30e8f45-db72-40d2-9f17-9700006fe152</processid></stage><stage stageid="4bd01e67-49a4-4082-be0d-df1bb9cecb13" name="Username" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="255" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dac70b0c-83cb-4605-8f7b-d1d8d21922d3" name="Password" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="255" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="9091a189-b87b-4ed7-9747-1e1e9fe657f6" name="Load Certificate" type="SubSheetInfo"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3cff8803-c15f-4ab4-a032-d0afb9fa20ae" name="Start" type="Start"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Filename" narrative="OPTIONAL: The full path to a file containing the certificate" stage="Filename" /><input type="text" name="Subject" narrative="OPTIONAL: The subject of the certificate if loading from the store" stage="Subject" /><input type="password" name="Password" narrative="OPTIONAL: The password to load the certificate if needed" stage="Password" /></inputs><onsuccess>8962b858-f6e2-413c-9ceb-3d80dee88de2</onsuccess></stage><stage stageid="17fddf56-07f2-4942-8515-e1b183458a7f" name="End" type="End"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Certificate ID" narrative="The ID of the certificate" stage="Certificate ID" /></outputs></stage><stage stageid="e9b8de2b-8e54-4772-b186-046ca262c94c" name="Filename" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-240" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5f0ec822-a1c0-4b6b-91ba-739b0b2762b8" name="Subject" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-150" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8962b858-f6e2-413c-9ceb-3d80dee88de2" name="Load" type="Code"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="filename" expr="[Filename]" /><input type="password" name="password" expr="[Password]" /><input type="text" name="subject" expr="[Subject]" /></inputs><outputs><output type="text" name="thumbprint" stage="Certificate ID" /></outputs><onsuccess>17fddf56-07f2-4942-8515-e1b183458a7f</onsuccess><code><![CDATA[Dim cert As X509Certificate2 = Nothing
If Not String.IsNullOrEmpty(filename) Then
  cert = New X509Certificate2(filename,password)
End If

If Not String.IsNullOrEmpty(subject) Then
  cert=GetCertificate(subject)
End If

thumbprint = cert.Thumbprint
m_Certificates.Add(thumbprint,cert)
]]></code></stage><stage stageid="745e7557-7761-4078-8ff7-334b6873f126" name="Certificate ID" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-195" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="471ae54f-286f-4472-b48c-114fc7d04bf9" name="Password" type="Data"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><display x="-240" y="30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>password</datatype><initialvalueenc></initialvalueenc><private /><alwaysinit /></stage><stage stageid="452476e7-b29f-4e5f-999a-c67789bbb0db" name="Certificate ID" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="300" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5de144f5-aa91-46e0-8f9c-ac8495d2ab0c" name="Force Pre Authorization" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-240" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c83483da-e145-4802-8407-a40cf74fc86a" name="URL Encode" type="SubSheetInfo"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f640efd4-cb34-48ee-b07d-de356b07b09b" name="Start" type="Start"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="URL" narrative="The URL to encode" stage="URL" /></inputs><onsuccess>d0c241bd-a746-44fc-9fdd-5f73a4c55bf9</onsuccess></stage><stage stageid="0d4cffb2-879f-49d1-b815-43da8446a39c" name="End" type="End"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="URL" narrative="The encoded URL" stage="URL" /></outputs></stage><stage stageid="d0c241bd-a746-44fc-9fdd-5f73a4c55bf9" name="Encode URL" type="Code"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="15" y="-45" /><inputs><input type="text" name="URL" expr="[URL]" /></inputs><outputs><output type="text" name="Encoded URL" stage="URL" /></outputs><onsuccess>0d4cffb2-879f-49d1-b815-43da8446a39c</onsuccess><code><![CDATA[
Encoded_URL = HttpUtility.UrlEncode( URL )]]></code></stage><stage stageid="7a1cd30a-feef-4786-89fd-cf1838f4dfaa" name="URL" type="Data"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><display x="-180" y="-15" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e627cc07-7d3a-40bd-a02a-0a2952f079d0" name="Headers" type="Collection"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-255" y="120" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="FF6600" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="495a88d6-260c-4b89-a04c-64a12af7b759" name="File" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="120" w="90" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="765d4221-5509-4c70-97c4-a946b7d3d186" name="ResultHeadersJson" type="Data"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><display x="-150" y="375" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ea993d2e-35df-484b-9c46-a2d69a172ceb" name="ResultHeadersJson" type="Data"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><display x="-165" y="195" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="031e4c4f-fa80-4e54-b2ab-847483e49414" name="ResultHeadersJson" type="Data"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><display x="-150" y="270" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="caabb2b2-6772-4932-8ad6-0695d1a170d9" name="Inputs" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="ae023e33-e349-4bf0-80e0-7e3794a1dbc2" name="Protected Variables" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-270" y="165" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="76b976d1-2b36-4ea6-8c01-04fa5ea31f20" name="Outputs" type="Block"><subsheetid>f3a55ad6-3bfa-4401-baa9-0e50afe42879</subsheetid><loginhibit /><display x="-300" y="240" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4b809006-50ee-41b3-b1db-2bc0165f895f" name="Inputs" type="Block"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-315" y="-45" w="210" h="195" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="2e4c34da-85e1-4b3d-86a2-de7a6b10fcf6" name="Outputs" type="Block"><subsheetid>ecff5a78-99b1-4ecb-a356-a075c487ef71</subsheetid><loginhibit /><display x="-315" y="165" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="cad4106c-2c71-48d0-960d-4d2c78a91eff" name="Inputs" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="375" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="a42642fa-1d93-42e4-942a-cb7a7087efef" name="Outputs" type="Block"><subsheetid>d30e8f45-db72-40d2-9f17-9700006fe152</subsheetid><loginhibit /><display x="-300" y="345" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="4a325f2f-9650-490c-b4bb-61928ef10e68" name="Inputs" type="Block"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="-300" y="-45" w="210" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="67c03883-48e2-4ef1-8e3a-98ca0652e901" name="Outputs" type="Block"><subsheetid>519a0dc7-b254-478b-b2ed-c7883124e31b</subsheetid><loginhibit /><display x="-300" y="90" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1d4b7d60-b4f9-48d1-8e90-6759e1bfc573" name="Input / Output" type="Block"><subsheetid>704436d5-f51b-4369-b763-a4fdc6e894c2</subsheetid><loginhibit /><display x="-285" y="-45" w="210" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage></process></object>
        <object id="35ff84bb-c65a-4d40-b776-e77f90e721d2" name="Utility - Image Manipulation" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Image Manipulation" version="5.0.11" bpversion="7.0.1.49890" narrative="Utility methods for analysing and manipulating images." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>373c66fe-ed50-4347-8826-961c605c36a2</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="5afcdaf5-28c3-4fa9-9c82-296be88ed2bf" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="770f130d-2233-4b18-b427-a6b2068004c9" type="Normal" published="True"><name>Image is White</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="58ce2146-7428-4658-8368-0a657b4650b8" type="Normal" published="True"><name>Image Contains Colour</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="51f754b0-95a4-49ae-8911-4df231659481" type="Normal" published="True"><name>Image Is Uniform Colour</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6" type="Normal" published="True"><name>Get Sub Image Position</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1415e255-6251-4f44-84a2-9def682b5033" type="Normal" published="True"><name>Find First Pixel From Left</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="86993a9b-04d3-4088-97b9-173ee7ae96e5" type="Normal" published="True"><name>Find First Pixel From Bottom</name><view><camerax>154</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="260695ce-598a-45da-857b-faaf399998a1" type="Normal" published="False"><name>Find First Pixel From Direction</name><view><camerax>97</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="1682a9b9-5e52-4020-9af1-4903109033fc" name="Start" type="Start"><loginhibit onsuccess="true" /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c42f55e8-f668-45da-b9d4-c31d1674ded1</onsuccess></stage><stage stageid="c42f55e8-f668-45da-b9d4-c31d1674ded1" name="End" type="End"><loginhibit onsuccess="true" /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6a2af24c-7a9d-4380-b981-d03dd8ae1334" name="Stage1" type="ProcessInfo"><loginhibit onsuccess="true" /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>Microsoft.VisualBasic</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[
Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function
]]></code></stage><stage stageid="ac71c3ed-405e-43d0-90d0-40a5cbc70038" name="Clean Up" type="SubSheetInfo"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2466cb5f-eb76-43fb-8eb4-6c9abc075131" name="Start" type="Start"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e18f9486-056a-4f45-af10-ebf4fe0dfaa8</onsuccess></stage><stage stageid="e18f9486-056a-4f45-af10-ebf4fe0dfaa8" name="End" type="End"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><loginhibit onsuccess="true" /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7edd516c-669b-4090-8945-e74489e05155" name="new" type="Note"><subsheetid>5afcdaf5-28c3-4fa9-9c82-296be88ed2bf</subsheetid><loginhibit onsuccess="true" /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="55619304-07ca-4697-a7ec-4ab708a96063" name="new" type="Note"><loginhibit onsuccess="true" /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="989c9452-a94a-4dd7-bd86-c6108901a496" name="Image is White" type="SubSheetInfo"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit onsuccess="true" /><narrative>Determines whether the supplied image is all white</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="50daf261-a2c1-4a71-b422-c3930b774d87" name="Start" type="Start"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit onsuccess="true" /><preconditions><condition narrative="None" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image" narrative="The image to check" stage="Image" /></inputs><onsuccess>e3a5956c-32d6-4363-8c93-10a8d6654be2</onsuccess></stage><stage stageid="055b2548-e116-4bfa-9d08-e32e53324111" name="End" type="End"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit onsuccess="true" /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="White" narrative="True if the image is white" stage="White" /></outputs></stage><stage stageid="e3a5956c-32d6-4363-8c93-10a8d6654be2" name="Image Is White" type="Code"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image" expr="[Image]" /></inputs><outputs><output type="flag" name="White" stage="White" /></outputs><onsuccess>055b2548-e116-4bfa-9d08-e32e53324111</onsuccess><code><![CDATA[
Dim c as System.Drawing.Color
White = False

For y As Integer = 0 To Image.Height - 1
 For x As Integer = 0 To Image.Width - 1
  c = Image.GetPixel(x, y)
   If c.Name <> "ffffffff" Then
		White = False
		Exit Sub
   End If
 Next
Next
White = True]]></code></stage><stage stageid="d5332b0b-0700-4136-a598-1e2d5679bcd1" name="Image" type="Data"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d109ed4d-380e-4c12-82c7-bdcc50b8fd73" name="White" type="Data"><subsheetid>770f130d-2233-4b18-b427-a6b2068004c9</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="806e2448-b127-47af-82cf-20a97d90299e" name="Image Contains Colour" type="SubSheetInfo"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><narrative>Determines whether the specified colour is contained in the image.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99d72a81-ce2e-4def-b84a-69a636b594f5" name="Start" type="Start"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><preconditions><condition narrative="None." /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image" narrative="The image to check" stage="Image" /><input type="text" name="Test Colour" narrative="The colour to check for in the hexadecimal format AARRGGBB (eg 'FF336699')" stage="Test Colour" /></inputs><onsuccess>d485eeca-314d-47ab-88d7-da0d7a86bfc1</onsuccess></stage><stage stageid="8ee84eda-d89e-44be-9a93-9d421c786b4a" name="End" type="End"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Contains Colour" stage="Contains Colour" /></outputs></stage><stage stageid="d485eeca-314d-47ab-88d7-da0d7a86bfc1" name="Image Contains Colour" type="Code"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image" expr="[Image]" /><input type="text" name="Test Colour" expr="[Test Colour]" /></inputs><outputs><output type="flag" name="Contains Colour" stage="Contains Colour" /></outputs><onsuccess>8ee84eda-d89e-44be-9a93-9d421c786b4a</onsuccess><code><![CDATA['First Validate the input colour
If Test_Colour.Length = 8
  For Each ch as Char In Test_Colour.ToCharArray()
     If Not char.IsNumber(ch) Then
        Dim IsValidChar As Boolean = False
        For Each ValidChar As Char In New Char() {"A", "B", "C", "D", "E", "F"}
           If char.ToUpper(ch).Equals(ValidChar) Then
              IsValidChar = True
              Exit For
           End If
        Next

        If Not IsValidChar Then
           Throw New ArgumentException("The supplied test colour '" & Test_Colour & "' is not valid. Please use a string in the hexadecimal format AARRGGBB (eg 'FF336699')")
        End If
     End If
  Next
End If

Dim c as System.Drawing.Color
Contains_Colour = False

For y As Integer = 0 To Image.Height - 1
 For x As Integer = 0 To Image.Width - 1
  c = Image.GetPixel(x, y)
   If c.Name.ToUpper() = Test_Colour.ToUpper() Then
		Contains_Colour = True
		Exit Sub
   End If
 Next
Next
]]></code></stage><stage stageid="3ff3d56c-4233-4e9b-9707-f9c463efcc9e" name="Image" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1b1064cd-42e6-4418-b77c-ed32265cec51" name="Black" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="44c80ec6-4258-4d28-b48b-6d5b5793b82f" name="Test Colour" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e65c1106-cd95-4665-b535-7c767f58f68a" name="Get Sub Image Position" type="SubSheetInfo"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><narrative>Finds whether the main image contains a sub image, and if found gives the X,Y coordinates of the sub image.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a7e30009-84a0-48b0-b4ee-8ac3f7e18719" name="Start" type="Start"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Main Image" narrative="The image to check" stage="Main Image" /><input type="image" name="Potential SubImage" narrative="The image to check for" stage="Potential SubImage" /></inputs><onsuccess>9581a702-c064-4ee6-a892-a8f051d39872</onsuccess></stage><stage stageid="1d937619-473b-4d9b-b9bc-03d10e8e426a" name="End" type="End"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="X Index" narrative="The X location of the sub image" stage="X Index" /><output type="number" name="Y Index" narrative="The Y location of the sub image" stage="Y Index" /><output type="flag" name="Contained" narrative="True if the main image contains the sub image" stage="Contained" /></outputs></stage><stage stageid="9581a702-c064-4ee6-a892-a8f051d39872" name="Detect Partial Image" type="Code"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Potential SubImage" expr="[Potential SubImage]" /><input type="image" name="Main Image" expr="[Main Image]" /></inputs><outputs><output type="number" name="X Index" stage="X Index" /><output type="number" name="Y Index" stage="Y Index" /><output type="flag" name="Contained" stage="Contained" /></outputs><onsuccess>1d937619-473b-4d9b-b9bc-03d10e8e426a</onsuccess><code><![CDATA[Contained = False

Dim bmPartial as Bitmap = ctype(Potential_SubImage, bitmap)
Dim bmCaptured as bitmap = ctype(Main_Image, bitmap)

Dim i As Integer = 0
Dim j As Integer = 0
For i = 0 to bmCaptured.Width - bmPartial.Width 
   For j = 0 to bmCaptured.Height - bmPartial.Height 
      Dim IsSubImage as Boolean = True
      For x as integer = 0 to bmpartial.width -1
         For y as integer = 0 to bmpartial.height -1
            If bmCaptured.GetPixel(i+x,j+y).ToArgb() <> bmPartial.GetPixel(x,y).ToArgb()
               IsSubImage = False
               Goto NextAnchor
            End If
         Next
      Next

NextAnchor:
      If IsSubImage Then
         X_Index = i
         Y_Index = j
         Contained = True
         Exit Sub
      End If

   Next
Next

X_Index = -1
Y_Index = -1
Contained = False]]></code></stage><stage stageid="d6454be3-1f6d-4dd6-94f7-383bb306ffad" name="Contained" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="210" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="514ea927-ab73-447d-87c7-f7647125551e" name="Y Index" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b055c12d-48c3-493e-8a96-d403e783e2af" name="X Index" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="52799220-2f09-48da-9a90-bec11811733e" name="Potential SubImage" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="195" y="-105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="843e698a-2e6a-4acc-bdc0-55f88a76e265" name="Main Image" type="Data"><subsheetid>52a8e75a-abe2-40d1-9aaf-8c4df1ed37d6</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dfbd8a53-c386-4e12-b484-0f3052db4f61" name="Contains Colour" type="Data"><subsheetid>58ce2146-7428-4658-8368-0a657b4650b8</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fff62d3f-8e87-40c1-92ef-39744dd31d71" name="Find First Pixel From Left" type="SubSheetInfo"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><narrative>Finds the index of the first column of pixels from the left, containing a pixel of the specified colour.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0aa9c991-2445-4945-8be2-1dad98e7048d" name="Start" type="Start"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." stage="Colour" /><input type="image" name="Image" narrative="The image to be examined." stage="Image" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" stage="Invert Logic" /></inputs><onsuccess>095a4aaf-717c-4e5b-8fd7-6dbd5dc391b4</onsuccess></stage><stage stageid="f4be1535-44d7-41de-b71c-e998382198ac" name="End" type="End"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs></stage><stage stageid="30a1f8e8-5c67-4cb4-8602-f7782964129d" name="Colour" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f8e53b21-c678-4135-85a2-cab7c67da67a" name="Image" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="45be70b4-d30a-40ad-a1e1-cd8b0566b289" name="First Pixel Index" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0f8e4bbb-e816-4a9e-a972-3ab769d9239c" name="Invert Logic" type="Data"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bcdb71aa-15c6-440a-a006-c2a5f32d9343" name="Find First Pixel From Direction" type="SubSheetInfo"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><narrative>Finds the index of the first row or column of pixels from the given direction, containing a pixel of the specified colour.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="44f28f15-0b20-4c21-83f1-cc7f80092cdd" name="Start" type="Start"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." stage="Colour" /><input type="image" name="Image" narrative="The image to be examined." stage="Image" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" stage="Invert Logic" /><input type="text" name="Direction" narrative="The direction to search from - Left, Right, Top, Bottom" stage="Direction" /></inputs><onsuccess>4d5132e6-f382-4bd7-97c9-69e7c58f5a7d</onsuccess></stage><stage stageid="b79ccae7-75cc-4bcc-84f4-749e4f82a147" name="Colour" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="90" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f67e7eff-7bcf-4c31-88a5-980e2f495d23" name="Image" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="150" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9c15ce02-d385-407a-965a-1794ec504bea" name="Invert Logic" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="210" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d20f9712-8c03-4fb2-a7ea-6d03460bcf03" name="Direction" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="270" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4d5132e6-f382-4bd7-97c9-69e7c58f5a7d" name="Find First Pixel" type="Code"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="15" y="45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image" expr="[Image]" /><input type="text" name="Test Colour" expr="[Colour]" /><input type="flag" name="Invert Logic" expr="[Invert Logic]" /><input type="text" name="Direction" expr="[Direction]" /></inputs><outputs><output type="number" name="FirstPixelIndex" stage="First Pixel Index" /></outputs><onsuccess>e8fcf813-e125-4a62-aef5-3009e3839408</onsuccess><code><![CDATA['First Validate the input colour
If Test_Colour.Length = 8
  For Each ch as Char In Test_Colour.ToCharArray()
     If Not char.IsNumber(ch) Then
        Dim IsValidChar As Boolean = False
        For Each ValidChar As Char In New Char() {"A", "B", "C", "D", "E", "F"}
           If char.ToUpper(ch).Equals(ValidChar) Then
              IsValidChar = True
              Exit For
           End If
        Next

        If Not IsValidChar Then
           Throw New ArgumentException("The supplied test colour '" & Test_Colour & "' is not valid. Please use a string in the hexadecimal format AARRGGBB (eg 'FF336699')")
        End If
     End If
  Next
End If

Dim c as System.Drawing.Color
FirstPixelIndex = -1

Dim StartXIndex As Integer
Dim EndXIndex As Integer
Dim StartYIndex As Integer
Dim EndYIndex As Integer
Dim XStep As Integer= 1
Dim YStep As Integer= 1
Select Case Direction
   Case "Left"
		StartXIndex = 0
		EndXIndex = Image.Width - 1
		StartYIndex = 0
		EndYIndex = Image.Height - 1
	Case "Right"
		StartXIndex = Image.Width - 1
		EndXIndex = 0
		StartYIndex = 0
		EndYIndex = Image.Height - 1
	Case "Top"
		StartXIndex = 0
		EndXIndex = Image.Width - 1
		StartYIndex = 0
		EndYIndex = Image.Height - 1
	Case "Bottom"
		StartXIndex = 0
		EndXIndex = Image.Width - 1
		StartYIndex = Image.Height - 1
		EndYIndex = 0
	Case Else
		Throw New ApplicationException("Invalid Direction - " & Direction)
End Select

If StartXIndex > EndXIndex Then XStep = -1
If StartYIndex > EndYIndex Then YStep = -1

If Direction = "Left" OrElse Direction = "Right" Then
	For x As Integer = StartXIndex To EndXIndex Step XStep
	 For y As Integer = StartYIndex To EndYIndex Step YStep
	  c = Image.GetPixel(x, y)
	   Dim Match As Boolean = c.Name.ToUpper() = Test_Colour.ToUpper() 
	   If (Match AndAlso Not Invert_Logic) OrElse (Not Match AndAlso Invert_Logic) Then
			FirstPixelIndex = x
			Exit Sub
	   End If
	 Next
	Next
Else
 'Top or Bottom
 For y As Integer = StartYIndex To EndYIndex Step YStep
	For x As Integer = StartXIndex To EndXIndex Step XStep
	  c = Image.GetPixel(x, y)
	   Dim Match As Boolean = c.Name.ToUpper() = Test_Colour.ToUpper() 
	   If (Match AndAlso Not Invert_Logic) OrElse (Not Match AndAlso Invert_Logic) Then
			FirstPixelIndex = y
			Exit Sub
	   End If
	 Next
	Next
End If
]]></code></stage><stage stageid="095a4aaf-717c-4e5b-8fd7-6dbd5dc391b4" name="Find First Pixel From Direction" type="SubSheet"><subsheetid>1415e255-6251-4f44-84a2-9def682b5033</subsheetid><loginhibit onsuccess="true" /><display x="15" y="0" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." expr="[Colour]" /><input type="image" name="Image" narrative="The image to be examined." expr="[Image]" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" expr="[Invert Logic]" /><input type="text" name="Direction" narrative="The direction to search from - Left, Right, Top, Bottom" expr="&quot;Left&quot;" /></inputs><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs><onsuccess>f4be1535-44d7-41de-b71c-e998382198ac</onsuccess><processid>260695ce-598a-45da-857b-faaf399998a1</processid></stage><stage stageid="e8fcf813-e125-4a62-aef5-3009e3839408" name="End" type="End"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs></stage><stage stageid="8b653267-9f22-4a6c-98a5-1786802aacb3" name="First Pixel Index" type="Data"><subsheetid>260695ce-598a-45da-857b-faaf399998a1</subsheetid><loginhibit onsuccess="true" /><display x="90" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="abc37893-2948-4e5a-a928-8d3ff9d1caf0" name="Find First Pixel From Bottom" type="SubSheetInfo"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><narrative>Finds the index of the first row of pixels from the bottom, containing a pixel of the specified colour.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="507e6b7e-f58f-4a64-bfa2-0208fb1f4b5b" name="Start" type="Start"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><display x="105" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." stage="Colour" /><input type="image" name="Image" narrative="The image to be examined." stage="Image" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" stage="Invert Logic" /></inputs><onsuccess>9587f833-3c43-452e-b0fc-44f0b23ee385</onsuccess></stage><stage stageid="5ad5e976-e5ca-431c-af3a-5413c033f7eb" name="End" type="End"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><display x="105" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs></stage><stage stageid="324d4eab-2e2c-4221-a15d-675362686388" name="Colour" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4ac85c2-9007-4dfc-85b5-c41fc2651643" name="Image" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><display x="240" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28a2bbe9-b996-4f50-9391-bf205a1f3d75" name="First Pixel Index" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><display x="180" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e22ee215-2ceb-4749-8cfd-0bc744f8597f" name="Invert Logic" type="Data"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><display x="300" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9587f833-3c43-452e-b0fc-44f0b23ee385" name="Find First Pixel From Direction" type="SubSheet"><subsheetid>86993a9b-04d3-4088-97b9-173ee7ae96e5</subsheetid><loginhibit onsuccess="true" /><display x="105" y="0" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Colour" narrative="The colour of interest, expressed as AARRGGBB in hex format." expr="[Colour]" /><input type="image" name="Image" narrative="The image to be examined." expr="[Image]" /><input type="flag" name="Invert Logic" narrative="When true, the first pixel NOT equal to the specified colour will be matched" expr="[Invert Logic]" /><input type="text" name="Direction" narrative="The direction to search from - Left, Right, Top, Bottom" expr="&quot;Bottom&quot;" /></inputs><outputs><output type="number" name="First Pixel Index" narrative="The index of the first pixel from the left of the colour of interest, or -1 if no such exists." stage="First Pixel Index" /></outputs><onsuccess>5ad5e976-e5ca-431c-af3a-5413c033f7eb</onsuccess><processid>260695ce-598a-45da-857b-faaf399998a1</processid></stage><stage stageid="fb7b0b1d-6ad3-42ae-abf7-ae9c71c9000e" name="Image Is Uniform Colour" type="SubSheetInfo"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit onsuccess="true" /><narrative>Determines whether the image contains a single colour or not</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3f18bf6a-8403-4cb1-8086-38e576dcb2a5" name="Start" type="Start"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit onsuccess="true" /><display x="-45" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image" narrative="The image to test for uniform colour" stage="Image" /></inputs><onsuccess>bec769bc-c01b-43ba-875b-cb97cb2f090a</onsuccess></stage><stage stageid="bd709bcc-53a9-4ff8-abc5-a3b2a5f45b6c" name="End" type="End"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit onsuccess="true" /><display x="-45" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Uniform" narrative="True if the image contains a single colour (regardless of what that colour is); False if there is any variation" stage="Uniform" /></outputs></stage><stage stageid="bec769bc-c01b-43ba-875b-cb97cb2f090a" name="Is Uniform" type="Code"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit onsuccess="true" /><display x="-45" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image" expr="[Image]" /></inputs><outputs><output type="flag" name="Uniform" stage="Uniform" /></outputs><onsuccess>bd709bcc-53a9-4ff8-abc5-a3b2a5f45b6c</onsuccess><code><![CDATA[' Assume uniform
Uniform = True

' An empty image is (sort of) uniform
If Image.Size = Size.Empty Then Return

' Get the argb value of the origin
Dim argb as Integer = Image.GetPixel(0,0).ToArgb()

' And check each pixel against that value
For y As Integer = 0 To Image.Height - 1
	For x As Integer = 0 To Image.Width - 1
		If Image.GetPixel(x, y).ToArgb() <> argb Then
			Uniform = False
			Return
		End If
	Next
Next
]]></code></stage><stage stageid="8428e08f-f97f-4e39-880e-9a0b8c32e364" name="Image" type="Data"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit onsuccess="true" /><display x="30" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8d1707e3-f291-4617-b0c7-083b8834d748" name="Uniform" type="Data"><subsheetid>51f754b0-95a4-49ae-8911-4df231659481</subsheetid><loginhibit onsuccess="true" /><display x="30" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="ffa813d2-dd88-485d-8a1f-9c0b321cda1d" name="Utility - Image Search" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Image Search" version="1.0" bpversion="7.0.1.49890" narrative="Methods for finding an image within a larger image" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>f4b67385-526c-4af0-9fb8-542585db0489</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="" /><condition narrative="" /></preconditions><endpoint narrative="" /><subsheet subsheetid="8461d46d-afcf-4c95-a775-cd1250a8f804" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="584fccb7-4d9f-432c-8373-7e9d06ea0a28" type="Normal" published="True"><name>Find Image</name><view><camerax>61</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8f7c925a-5af9-4578-bc1c-1b45f38786e7" type="Normal" published="True"><name>Find Image (all instances)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c687d338-5d6b-48a9-b962-83f59905ec4b" type="Normal" published="True"><name>Find Image (by one colour)</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6" type="Normal" published="True"><name>Find Image (all instances, by one colour)</name><view><camerax>-208</camerax><cameray>40</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="1d191544-f5c8-4983-9e26-d105a54e83b8" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>83fe3c7f-b077-4096-a44d-331e660832c7</onsuccess></stage><stage stageid="83fe3c7f-b077-4096-a44d-331e660832c7" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ae774e53-9d35-4592-b206-31d11295b4b7" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Drawing.Imaging</import><import>System.Runtime.InteropServices</import><import>System.Collections.Generic</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[''' <summary>
''' Get the size of each pixel for a given pixel format.
''' </summary>
''' <param name="pf">The pixel format that the size is required for</param>
''' <returns>The number of bytes representing a single pixel in the given
''' pixel format.</returns>
Private Function GetPixelSize(ByVal pf As PixelFormat) As Integer
	Select Case pf
		Case PixelFormat.Format32bppArgb, _
		 PixelFormat.Format32bppRgb
			Return 4

		Case PixelFormat.Format24bppRgb
			Return 3

		Case Else
			Throw New Exception( _
			 "PixelFormat." & pf.ToString() & _
			 " not supported in this image search implementation")
	End Select

End Function

' Constants declaring the offset from the beginning of a pixel to each colour
' component of the pixel
Private Const R As Integer = 2
Private Const G As Integer = 1
Private Const B As Integer = 0

'Searches the larger image for instances of the smaller image.
'Optionally tolerates a colour discrepancy between the images.
'Optionally searches for all instances.
Public Function FindImagesL2R( _
 ByVal bmp1 As Bitmap, ByVal bmp2 As Bitmap, _
 Optional ByVal Tolerance As Integer = 0, _
 Optional ByVal FindAll As Boolean = True) As List(Of Point)

	Dim points As New List(Of Point)

	Dim bytes1() As Byte
	Dim bytes2() As Byte
	Dim bitmapData1 As BitmapData
	Dim bitmapData2 As BitmapData

	Try

		If bmp1 Is Nothing OrElse bmp2 Is Nothing Then
			'Don't do anything
			Return points
		End If

		If bmp1.Size = bmp2.Size Then
			If bmp1.GetPixel(0, 0) <> bmp2.GetPixel(0, 0) Then
				'Images are the same size but don't match
				Return points
			End If
		ElseIf bmp1.Width < bmp2.Width _
		 OrElse bmp1.Height < bmp2.Height Then
			'Target image is too big
			Return points
		End If

		Dim pixSize1 As Integer = GetPixelSize(bmp1.PixelFormat)
		Dim pixSize2 As Integer = GetPixelSize(bmp2.PixelFormat)

		Dim rect1 As New Rectangle(Point.Empty, bmp1.Size)
		Dim rect2 As New Rectangle(Point.Empty, bmp2.Size)

		bitmapData1 = bmp1.LockBits(rect1, _
		 ImageLockMode.ReadOnly, bmp1.PixelFormat)
		bitmapData2 = bmp2.LockBits(rect2, _
		 ImageLockMode.ReadOnly, bmp2.PixelFormat)

		Dim stride1 As Integer = bitmapData1.Stride
		Dim stride2 As Integer = bitmapData2.Stride

		Dim size1 As Integer = stride1 * bmp1.Height
		Dim size2 As Integer = stride2 * bmp2.Height

		ReDim bytes1(size1)
		ReDim bytes2(size2)

		Marshal.Copy(bitmapData1.Scan0, bytes1, 0, size1)
		Marshal.Copy(bitmapData2.Scan0, bytes2, 0, size2)

		bmp2.UnlockBits(bitmapData2)
		bmp1.UnlockBits(bitmapData1)

		Dim xIndex1 As Integer = 0
		Dim yIndex1 As Integer = 0
		Dim xIndex2 As Integer = 0
		Dim yIndex2 As Integer = 0

		Dim x1, y1, x2, y2 As Integer
		Dim r1, g1, b1 As Byte
		Dim r2, g2, b2 As Byte
		Dim bMatch As Boolean

		Tolerance = Math.Abs(Tolerance)

		For y1 = 0 To bmp1.Height - bmp2.Height

			yIndex1 = y1 * stride1

			For x1 = 0 To bmp1.Width - bmp2.Width

				xIndex1 = yIndex1 + x1 * pixSize1
				r1 = bytes1(xIndex1 + R)
				g1 = bytes1(xIndex1 + G)
				b1 = bytes1(xIndex1 + B)

				If Tolerance > 0 Then
					bMatch = (Math.Abs( _
					 r1.CompareTo(bytes2(R))) <= Tolerance _
					AndAlso Math.Abs( _
					 g1.CompareTo(bytes2(G))) <= Tolerance _
					AndAlso Math.Abs( _
					 b1.CompareTo(bytes2(B))) <= Tolerance)
				Else
					bMatch = (r1 = bytes2(R) _
					 AndAlso g1 = bytes2(G) AndAlso b1 = bytes2(B))
				End If

				If Not bMatch Then
					'First pixels do not match so move on
				Else
					For y2 = 0 To bmp2.Height - 1

						yIndex2 = y2 * stride2

						For x2 = 0 To bmp2.Width - 1

							xIndex2 = yIndex2 + x2 * pixSize2
							r2 = bytes2(xIndex2 + R)
							g2 = bytes2(xIndex2 + G)
							b2 = bytes2(xIndex2 + B)

							yIndex1 = (y1 + y2) * stride1
							xIndex1 = yIndex1 + (x1 + x2) * pixSize1
							r1 = bytes1(xIndex1 + R)
							g1 = bytes1(xIndex1 + G)
							b1 = bytes1(xIndex1 + B)

							If Tolerance > 0 Then
								bMatch = (Math.Abs( _
								 r1.CompareTo(r2)) <= Tolerance _
								AndAlso Math.Abs( _
								 g1.CompareTo(g2)) <= Tolerance _
								AndAlso Math.Abs( _
								 b1.CompareTo(b2)) <= Tolerance)
							Else
								bMatch = (r1 = r2 AndAlso _
								 g1 = g2 AndAlso b1 = b2)
							End If

							If Not bMatch Then Exit For
						Next
						If Not bMatch Then Exit For
					Next
				End If
				If bMatch Then
					'Found an instance
					points.Add(New Point(x1, y1))
					If Not FindAll Then Return points
				End If
			Next
		Next

	Finally
		bitmapData1 = Nothing
		bitmapData2 = Nothing
		bytes1 = Nothing
		bytes2 = Nothing
	End Try

	Return points

End Function

'Searches the larger image for instances of the smaller
'image, but only by matching on the given colour.
'The intention is to match one colour and ignore all others,
'ie match the foreground colour and disregard the background colour.
'Optionally searches for all instaces.
Public Function FindImagesByColour( _
 ByVal bmp1 As Bitmap, ByVal bmp2 As Bitmap, _
 ByVal c As Color, Optional ByVal FindAll As Boolean = True) _
 As List(Of Point)

	Dim points As New List(Of Point)

	Dim bytes1() As Byte
	Dim bytes2() As Byte
	Dim bitmapData1 As BitmapData
	Dim bitmapData2 As BitmapData

	Try

		If bmp1 Is Nothing OrElse bmp2 Is Nothing Then
			Return points
		End If

		If bmp1.Size = bmp2.Size Then
			If bmp1.GetPixel(0, 0) <> bmp2.GetPixel(0, 0) Then
				'Images are the same size but don't match
				Return points
			End If
		ElseIf bmp1.Width < bmp2.Width _
		 OrElse bmp1.Height < bmp2.Height Then
			'Target image is too big
			Return points
		End If

		'Find bounds of target colour in smaller image
		Dim p As Color
		Dim cLeft As Integer = -1
		For x As Integer = 0 To bmp2.Width - 1
			For y As Integer = 0 To bmp2.Height - 1
				p = bmp2.GetPixel(x, y)
				If p.R = c.R AndAlso p.G = c.G AndAlso p.B = c.B Then
					cLeft = x
					Exit For
				End If
			Next
			If cLeft <> -1 Then Exit For
		Next
		If cLeft = -1 Then
			'Target colour not found
			Return points
		End If

		Dim cRight As Integer = -1
		For x As Integer = bmp2.Width - 1 To 0 Step -1
			For y As Integer = 0 To bmp2.Height - 1
				p = bmp2.GetPixel(x, y)
				If p.R = c.R AndAlso p.G = c.G AndAlso p.B = c.B Then
					cRight = x
					Exit For
				End If
			Next
			If cRight <> -1 Then Exit For
		Next
		If cRight = -1 Then
			'Target colour not found
			Return points
		End If

		Dim cIndent As Integer = 0
		Dim cTop As Integer = -1
		For y As Integer = 0 To bmp2.Height - 1
			For x As Integer = 0 To bmp2.Width - 1
				p = bmp2.GetPixel(x, y)
				If p.R = c.R AndAlso p.G = c.G AndAlso p.B = c.B Then
					cIndent = x
					cTop = y
					Exit For
				End If
			Next
			If cTop <> -1 Then Exit For
		Next
		If cTop = -1 Then
			'Target colour not found
			Return points
		End If

		Dim cBottom As Integer = -1
		For y As Integer = bmp2.Height - 1 To 0 Step -1
			For x As Integer = 0 To bmp2.Width - 1
				p = bmp2.GetPixel(x, y)
				If p.R = c.R AndAlso p.G = c.G AndAlso p.B = c.B Then
					cBottom = y
					Exit For
				End If
			Next
			If cBottom <> -1 Then Exit For
		Next
		If cBottom = -1 Then
			'Target colour not found
			Return points
		End If

		'Crop smaller image
		Dim cropRect As New Rectangle( _
		 cLeft, cTop, cRight - cLeft + 1, cBottom - cTop + 1)

		'Remember where the target colour is on the first row
		cIndent -= cLeft

		Dim pixSize1 As Integer = GetPixelSize(bmp1.PixelFormat)
		Dim pixSize2 As Integer = GetPixelSize(bmp2.PixelFormat)

		bitmapData1 = bmp1.LockBits( _
		 New Rectangle(0, 0, bmp1.Width, bmp1.Height), _
		 ImageLockMode.ReadOnly, bmp1.PixelFormat)

		bitmapData2 = bmp2.LockBits(cropRect, _
		 ImageLockMode.ReadOnly, bmp2.PixelFormat)

		Dim stride1 As Integer = bitmapData1.Stride
		Dim stride2 As Integer = bitmapData2.Stride

		Dim size1 As Integer = stride1 * bmp1.Height
		Dim size2 As Integer = stride2 * cropRect.Height

		ReDim bytes1(size1)
		ReDim bytes2(size2)

		Marshal.Copy(bitmapData1.Scan0, bytes1, 0, size1)
		Marshal.Copy(bitmapData2.Scan0, bytes2, 0, size2)

		bmp2.UnlockBits(bitmapData2)
		bmp1.UnlockBits(bitmapData1)

		Dim bMatch As Boolean
		Dim xIndex1, yIndex1 As Integer
		Dim xIndex2, yIndex2 As Integer
		Dim r1, g1, b1 As Byte
		Dim r2, g2, b2 As Byte

		For y1 As Integer = 0 To bmp1.Height - cropRect.Height
			yIndex1 = y1 * stride1
			For x1 As Integer = 0 To bmp1.Width - cropRect.Width

				xIndex1 = yIndex1 + x1 * pixSize1
				r1 = bytes1(xIndex1 + R)
				g1 = bytes1(xIndex1 + G)
				b1 = bytes1(xIndex1 + B)

				If r1 <> c.R OrElse g1 <> c.G OrElse b1 <> c.B Then _
				 Continue For

				bMatch = False

				For y2 As Integer = 0 To cropRect.Height - 1
					yIndex2 = y2 * stride2
					For x2 As Integer = 0 To cropRect.Width - 1
						If y2 = 0 And x2 < cIndent Then Continue For

						xIndex2 = yIndex2 + x2 * pixSize2
						r2 = bytes2(xIndex2 + R)
						g2 = bytes2(xIndex2 + G)
						b2 = bytes2(xIndex2 + B)

						yIndex1 = (y1 + y2) * stride1
						xIndex1 = yIndex1 + (x1 + x2 - cIndent) * pixSize1
						r1 = bytes1(xIndex1 + R)
						g1 = bytes1(xIndex1 + G)
						b1 = bytes1(xIndex1 + B)

						If r2 = c.R AndAlso g2 = c.G AndAlso b2 = c.B _
						 AndAlso r1 = r2 AndAlso g1 = g2 AndAlso b1 = b2 Then
							'Target colour in both images
							bMatch = True
						ElseIf (r2 <> c.R OrElse g2 <> c.G OrElse b2 <> c.B) _
						 And (r1 <> c.R OrElse g1 <> c.G OrElse b1 <> c.B) Then
							'Target colour in neither image
							bMatch = True
						Else
							'Colour mismatch
							bMatch = False
						End If

						If Not bMatch Then Exit For
					Next
					If Not bMatch Then Exit For
				Next
				If bMatch Then
					'Found an instance
					points.Add(New Point(x1, y1))
					If Not FindAll Then Return points
				End If
			Next
		Next

	Finally
		bitmapData1 = Nothing
		bitmapData2 = Nothing
		bytes1 = Nothing
		bytes2 = Nothing
	End Try

	Return points

End Function]]></code></stage><stage stageid="9754b6b2-5314-40e5-9a97-3f99bcffb4bf" name="Clean Up" type="SubSheetInfo"><subsheetid>8461d46d-afcf-4c95-a775-cd1250a8f804</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="07f506b8-1fe2-4ee8-8558-6d664033d074" name="Start" type="Start"><subsheetid>8461d46d-afcf-4c95-a775-cd1250a8f804</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>01ee6553-4773-4a91-a4b2-2973c54e55cc</onsuccess></stage><stage stageid="01ee6553-4773-4a91-a4b2-2973c54e55cc" name="End" type="End"><subsheetid>8461d46d-afcf-4c95-a775-cd1250a8f804</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61c50613-14c7-4416-8f60-a90468e7ad6e" name="Find Image" type="SubSheetInfo"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><narrative>Locates a smaller image within a larger image.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="153c1c79-adce-4f0f-b603-e8f7303fbfdd" name="Start" type="Start"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image To Search In" stage="Image To Search In" /><input type="image" name="Image To Search For" stage="Image To Search For" /><input type="number" name="Tolerance" narrative="Optional, default zero. Tolerance for discrepancy in RGB values between the images." stage="Tolerance" /></inputs><onsuccess>4b7f19db-325e-4168-8e8e-fd7af6a96886</onsuccess></stage><stage stageid="c1f2d5bc-674d-462d-ab9f-c15e74f2d3a8" name="End" type="End"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /><output type="number" name="X" narrative="-1 when not found" stage="X" /><output type="number" name="Y" narrative="-1 when not found" stage="Y" /></outputs></stage><stage stageid="f558091f-6dc7-4ae6-bfc4-1ac9ff99680e" name="new" type="Note"><subsheetid>8461d46d-afcf-4c95-a775-cd1250a8f804</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c4ad5b16-04ce-45a2-b1dd-889236ff180d" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cc7bc84e-1127-4dbb-bb12-0d550d8b8fd1" name="Image To Search For" type="Data"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aa4dfd0f-d1a0-426e-ac60-bafa35bc54e3" name="Image To Search In" type="Data"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4b7f19db-325e-4168-8e8e-fd7af6a96886" name="Find Image" type="Code"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image1" expr="[Image To Search In]" /><input type="image" name="Image2" expr="[Image To Search For]" /><input type="number" name="Tolerance" expr="[Tolerance]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /><output type="number" name="X" stage="X" /><output type="number" name="Y" stage="Y" /></outputs><onsuccess>c1f2d5bc-674d-462d-ab9f-c15e74f2d3a8</onsuccess><code><![CDATA[
Dim points As List(Of Point) = FindImagesL2R(Image1, Image2, Tolerance, False)

For Each p As Point In points
	Found = True
	X = p.X
	Y = p.Y
	Exit Sub
Next

Found = False
X = -1
Y = -1]]></code></stage><stage stageid="d41f1362-6f02-41f3-9609-b0178795c053" name="Found" type="Data"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d738dc4b-81a6-4727-944e-ad2e7a6642c9" name="X" type="Data"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><display x="-195" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21b5edf6-27fa-4fe8-9587-a48855da7c46" name="Y" type="Data"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cdeedaf4-5d40-4fba-a774-ecf9e8dbb8dc" name="Tolerance" type="Data"><subsheetid>584fccb7-4d9f-432c-8373-7e9d06ea0a28</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="83439ec7-2202-40bc-a4de-7206f207478a" name="Find Image (all instances)" type="SubSheetInfo"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><narrative>Locates all instances of a smaller image within a larger image.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="99cea640-14eb-4171-a05a-758e97f5462e" name="Start" type="Start"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image To Search In" stage="Image To Search In" /><input type="image" name="Image To Search For" stage="Image To Search For" /><input type="number" name="Tolerance" narrative="Optional, default zero. Tolerance for discrepancy in RGB values between the images." stage="Tolerance" /></inputs><onsuccess>28d7d079-93c8-4ddd-94df-d65e0f45ee76</onsuccess></stage><stage stageid="1328ad3e-f559-4004-ab96-8dcfba0158e6" name="End" type="End"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /><output type="collection" name="Locations" stage="Locations" /></outputs></stage><stage stageid="7668137d-f1e4-443f-b88b-72d0ebcb5ec8" name="Image To Search For" type="Data"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3127e4f6-da81-464a-be76-5347aa46116a" name="Image To Search In" type="Data"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="28d7d079-93c8-4ddd-94df-d65e0f45ee76" name="Find All Images" type="Code"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image1" expr="[Image To Search In]" /><input type="image" name="Image2" expr="[Image To Search For]" /><input type="number" name="Tolerance" expr="[Tolerance]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /><output type="collection" name="Locations" stage="Locations" /></outputs><onsuccess>1328ad3e-f559-4004-ab96-8dcfba0158e6</onsuccess><code><![CDATA[
Locations = New DataTable
Locations.Columns.Add("X", GetType(System.Int32))
Locations.Columns.Add("Y", GetType(System.Int32))

Dim points As List(Of Point) = FindImagesL2R(Image1, Image2, Tolerance, True)

Found= False
If points.Count>0 Then
	For Each p As Point In points
		Dim r As DataRow = Locations.NewRow()
		Found = True
		r("X") = p.X
		r("Y") = p.Y
		Locations.Rows.Add(r)
	Next
End If
]]></code></stage><stage stageid="0f9bb026-180e-4253-8344-8aef6cdd9273" name="Tolerance" type="Data"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="ed3eb039-8260-45ea-b604-0ab61bf297c5" name="Locations" type="Collection"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><display x="-195" y="120" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="X" type="number" /><field name="Y" type="number" /></collectioninfo></stage><stage stageid="9c5498af-9169-44f8-a9c2-48168345d86b" name="Find Image (by one colour)" type="SubSheetInfo"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><narrative>Locates a smaller image within a larger image by matching one colour only. Typically this will be a foreground colour in the smaller image.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a7d2f76f-024a-46fd-9f10-44baa1a8cb36" name="Start" type="Start"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image To Search In" stage="Image To Search In" /><input type="image" name="Image To Search For" stage="Image To Search For" /><input type="number" name="Colour R Value" narrative="Default 255" stage="R" /><input type="number" name="Colour G Value" narrative="Default 255" stage="G" /><input type="number" name="Colour B Value" narrative="Default 255" stage="B" /></inputs><onsuccess>6fe74718-7bd2-47c7-9fcc-58208e7d2929</onsuccess></stage><stage stageid="5397706d-725f-4699-ba75-c07f26b5966f" name="End" type="End"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /><output type="number" name="X" narrative="-1 when not found" stage="X" /><output type="number" name="Y" narrative="-1 when not found" stage="Y" /></outputs></stage><stage stageid="7c412d45-722f-44cf-8eec-b0a57b406422" name="Image To Search For" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="334ccb71-2fbc-43dd-ae36-3f79a69047f8" name="Image To Search In" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6fe74718-7bd2-47c7-9fcc-58208e7d2929" name="Find Image By Colour" type="Code"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image1" expr="[Image To Search In]" /><input type="image" name="Image2" expr="[Image To Search For]" /><input type="number" name="R" expr="[R]" /><input type="number" name="G" expr="[G]" /><input type="number" name="B" expr="[B]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /><output type="number" name="X" stage="X" /><output type="number" name="Y" stage="Y" /></outputs><onsuccess>5397706d-725f-4699-ba75-c07f26b5966f</onsuccess><code><![CDATA[
R = Math.Min(Math.Max(0, R), 255)
G = Math.Min(Math.Max(0, G), 255)
B = Math.Min(Math.Max(0, G), 255)
Dim c As Color = Color.FromARGB(R, G, B)

Dim points As List(Of Point) = FindImagesByColour(Image1, Image2, c, False)

For Each p As Point In points
	Found = True
	X = p.X
	Y = p.Y
	Exit Sub
Next

Found = False
X = -1
Y = -1]]></code></stage><stage stageid="a481048e-2799-4b88-a78c-f975bcd1c601" name="Found" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ed76c46c-db80-409b-bc12-aa834dafae58" name="X" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="35120f40-6aeb-4668-8535-7a985c31ec5b" name="Y" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="195" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5efb7b8a-e7e6-4b1e-99cf-be38ab9ee622" name="R" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>255</initialvalue><private /><alwaysinit /></stage><stage stageid="f1f6cc3e-7505-4020-aa00-f7439649ee4f" name="G" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>255</initialvalue><private /><alwaysinit /></stage><stage stageid="9e69bf69-6e39-42fe-acee-38ae9f42b3e6" name="B" type="Data"><subsheetid>c687d338-5d6b-48a9-b962-83f59905ec4b</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>255</initialvalue><private /><alwaysinit /></stage><stage stageid="715959b0-8b77-4056-bb18-91449730a91d" name="Find Image (all instances, by one colour)" type="SubSheetInfo"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><narrative>Locates all instances of a smaller image within a larger image by matching one colour only. Typically this will be a foreground colour in the smaller image.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="61fd3b10-739a-4303-a451-b3deae4dfd01" name="Image To Search For" type="Data"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="87507af5-4300-4af7-96d0-699da487847b" name="Image To Search In" type="Data"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>image</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1e6a8ff5-ee36-4397-9758-6b005f8c4432" name="Find Images By Colour" type="Code"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image1" expr="[Image To Search In]" /><input type="image" name="Image2" expr="[Image To Search For]" /><input type="number" name="R" expr="[R]" /><input type="number" name="G" expr="[G]" /><input type="number" name="B" expr="[B]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /><output type="collection" name="Locations" stage="Locations" /></outputs><onsuccess>359c42c6-ee55-4316-a3d3-376165507663</onsuccess><code><![CDATA[R = Math.Min(Math.Max(0, R), 255)
G = Math.Min(Math.Max(0, G), 255)
B = Math.Min(Math.Max(0, G), 255)
Dim c As Color = Color.FromARGB(R, G, B)

Locations = New DataTable
Locations.Columns.Add("X", GetType(System.Int32))
Locations.Columns.Add("Y", GetType(System.Int32))

Dim points As List(Of Point) = FindImagesByColour(Image1, Image2, c, True)

Found = False

Dim dr As DataRow
If points.Count>0 Then
	For Each p As Point In points
		Found = True
		dr = Locations.NewRow()
		dr("X") = p.X
		dr("Y") = p.Y
		Locations.Rows.Add(dr)
	Next
End If]]></code></stage><stage stageid="1d382f92-6aa7-4e80-8165-470c38cca24a" name="Locations" type="Collection"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><display x="-195" y="180" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="X" type="number" /><field name="Y" type="number" /></collectioninfo></stage><stage stageid="bee53be6-ad07-4212-afb9-a98de956aa4e" name="R" type="Data"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><display x="-195" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>255</initialvalue><private /><alwaysinit /></stage><stage stageid="87e2faba-7bc1-4431-b122-345d78de590c" name="G" type="Data"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>255</initialvalue><private /><alwaysinit /></stage><stage stageid="5b587714-6e24-48b8-870a-47eb4e424294" name="B" type="Data"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><display x="-195" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>255</initialvalue><private /><alwaysinit /></stage><stage stageid="a4bc1e78-a14b-453b-b52e-53d82227bf47" name="Start" type="Start"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="image" name="Image To Search In" stage="Image To Search In" /><input type="image" name="Image To Search For" stage="Image To Search For" /><input type="number" name="Colour R Value" narrative="Default 255" stage="R" /><input type="number" name="Colour G Value" narrative="Default 255" stage="G" /><input type="number" name="Colour B Value" narrative="Default 255" stage="B" /></inputs><onsuccess>1e6a8ff5-ee36-4397-9758-6b005f8c4432</onsuccess></stage><stage stageid="9b7f9ea5-1a5d-4f12-b205-d773df4d0a0c" name="Found" type="Data"><subsheetid>8f7c925a-5af9-4578-bc1c-1b45f38786e7</subsheetid><display x="-195" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70d39cd0-e056-444c-95c5-5dce28b43c1a" name="Found" type="Data"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><display x="-195" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="359c42c6-ee55-4316-a3d3-376165507663" name="End" type="End"><subsheetid>3aaf5bf5-9cb1-413a-b1b8-49fc5ad45af6</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Found" stage="Found" /><output type="collection" name="Locations" stage="Locations" /></outputs></stage></process></object>
        <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" name="Utility - JSON" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - JSON" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="An object for parsing JSON into a collection and turning a collection into JSON." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>8f20ac0c-296f-43c3-b0d9-59b5b2b7da1c</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="6a9ccb5a-8cc3-44ac-b343-39680558062f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="560472b9-cea4-41d5-bc36-c49d6c1b26e6" type="Normal" published="True"><name>Collection to JSON</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5aeb4cb-cd25-4535-b3be-b46681b4e6b6" type="Normal" published="True"><name>JSON to Collection</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e53062c7-68de-4763-b37a-456688d0d607" type="Normal" published="True"><name>JSON to Collection (skipping JArray)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="222ee4c2-914e-4b2b-8e13-443c1c76b3dd" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ff6524a3-da73-439c-a4ba-2aabb994009c</onsuccess></stage><stage stageid="ff6524a3-da73-439c-a4ba-2aabb994009c" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7fd071f3-6769-4dd5-95cf-a911c73c42ff" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Newtonsoft.Json.dll</reference><reference>System.Core.dll</reference></references><imports><import>System.Data</import><import>System.Drawing</import><import>Newtonsoft.Json</import><import>System.Collections.Generic</import><import>System.Text</import><import>System.IO</import><import>System</import><import>Newtonsoft.Json.Linq</import><import>System.Collections</import><import>System.Linq</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[    Private Class JSON
        Public Const Array As String = "JSON:Array"
        Public Const Null As String = "JSON:Null"
    End Class
    
    Private mUseNewParseMethod As Boolean

    Public Function ConvertToJSON(ByVal dt As DataTable) As String
        Dim o As Object = SerialiseGeneric(dt, True)
        Return JsonConvert.SerializeObject(o)
    End Function

    Public Function SerialiseGeneric(ByVal o As Object, ByVal removeArray As Boolean) As Object
        Dim dt As DataTable = TryCast(o, DataTable)
        If dt IsNot Nothing Then
            Return SerialiseDataTable(dt)
        End If

        Dim dr As DataRow = TryCast(o, DataRow)
        If dr IsNot Nothing Then
            Return SerialiseDataRow(dr, removeArray)
        End If

        Dim s As String = TryCast(o, String)
        If s IsNot Nothing AndAlso s = JSON.Null Then
            Return Nothing
        End If

        If o IsNot Nothing Then
            Return o
        End If

        Return Nothing
    End Function

    Public Function SerialiseDataTable(ByVal dt As DataTable) As Object
        If  IsSingleRow(dt) Then
            Return SerialiseGeneric(dt.Rows(0), False)
        Else
            Dim ja As New JArray()
            For Each r As DataRow In dt.Rows
                ja.Add(SerialiseGeneric(r, True))
            Next
            Return ja
        End If
    End Function

    Public Function IsSingleRow(ByVal dt As DataTable) As Boolean
        If dt.ExtendedProperties.Contains("SingleRow") Then
            Return CBool(dt.ExtendedProperties("SingleRow"))
        End If
        'Fallback for older versions of blueprism
        Return dt.Rows.Count = 1
    End Function

    Public Function SerialiseDataRow(ByVal dr As DataRow, ByVal removeArray As Boolean) As Object
        Dim jo As New JObject()
        For Each c As DataColumn In dr.Table.Columns
            Dim s As String = c.ColumnName
            If removeArray AndAlso s = JSON.Array Then
                Return SerialiseGeneric(dr(s), True)
            End If
            jo(s) = JToken.FromObject(SerialiseGeneric(dr(s), False))
        Next
        Return jo
    End Function

    Public Function ConvertToDataTable(ByVal json As String) As DataTable
        Dim o As Object = JsonConvert.DeserializeObject(json)
        Return DirectCast(DeserialiseGeneric(o, True), DataTable)
    End Function

    Private Function DeserialiseGeneric(ByVal o As Object, ByVal populate As Boolean) As Object
        Dim a As JArray = TryCast(o, JArray)
        If a IsNot Nothing Then
            Return If(mUseNewParseMethod,
                DeserialiseArrayWithoutJArray(a, populate),
                DeserialiseArray(a, populate)
            )
        End If

        Dim jo As JObject = TryCast(o, JObject)
        If jo IsNot Nothing Then
            Return DeserialiseObject(jo, populate)
        End If

        Dim jv As JValue = TryCast(o, JValue)
        If jv IsNot Nothing Then
            Return jv.Value
        End If

        Return JSON.Null
    End Function

    Private Function GetKey(ByVal kv As KeyValuePair(Of String, JToken)) As String
        If kv.Key IsNot Nothing Then
            Return kv.Key.ToString()
        End If
        Return ""
    End Function


    Private Function DeserialiseObject(ByVal o As JObject, ByVal populate As Boolean) As DataTable
        Dim dt As New DataTable

        For Each kv As KeyValuePair(Of String, JToken) In o
            Dim type As Type = GetTypeOf(DeserialiseGeneric(kv.Value, False))
            dt.Columns.Add(GetKey(kv), type)
        Next

        If populate Then
            Dim dr As DataRow = dt.NewRow()
            For Each kv As KeyValuePair(Of String, JToken) In o
                dr(getKey(kv)) = DeserialiseGeneric(kv.Value, True)
            Next
            dt.Rows.Add(dr)
        End If

        Return dt
    End Function

    Private Function DeserialiseArrayWithoutJArray(ByVal jarr As JArray, ByVal populate As Boolean) As DataTable
        Dim dt As New DataTable

        Dim first As Type = Nothing
        For Each e As Object In jarr
            If first Is Nothing Then
                first = GetTypeOf(DeserialiseGeneric(e, False))
            End If
            If GetTypeOf(DeserialiseGeneric(e, False)) IsNot first Then
                Throw New Exception("Data Type mismatch in array")
            End If
        Next

        Dim columns As New Specialized.OrderedDictionary()
        Dim allTypesInColumnsMatch = jarr.All(
            Function(e)
                If Not TypeOf e Is JObject Then Return False
                For Each pair As KeyValuePair(Of String, JToken) In DirectCast(e, JObject)
                    Dim val As Object = pair.Value
                    If TypeOf val Is JValue Then val = CType(val, JValue).Value
                    Dim tp = If(val, CObj("")).GetType()

                    If columns.Contains(pair.Key) Then
                        If tp <> columns(pair.Key) Then Return False
                    Else
                        columns(pair.Key) = tp
                    End If
                Next
                Return True

            End Function
        )

        If allTypesInColumnsMatch Then
            For Each pair As DictionaryEntry In columns
                Dim key As String = CStr(pair.Key)
                Dim tp as Type = CType(pair.Value, Type)
                If tp = GetType(JObject) OrElse tp = GetType(JArray) Then
                    dt.Columns.Add(key, GetType(DataTable))
                Else
                    dt.Columns.Add(key, tp)
                End If
            Next
        ElseIf first IsNot Nothing Then
            dt.Columns.Add(JSON.Array, first)
        End If

        If populate Then
            For Each e As Object In jarr
                Dim dr As DataRow = dt.NewRow()
                If allTypesInColumnsMatch Then
                    For Each pair As KeyValuePair(Of String, JToken) In DirectCast(e, JObject)
                        dr(pair.Key) = DeserialiseGeneric(pair.Value, True)
                    Next
                Else
                    dr(JSON.Array) = DeserialiseGeneric(e, True)
                End If

                dt.Rows.Add(dr)
            Next
        End If

        Return dt
    End Function

    Private Function DeserialiseArray(ByVal o As JArray, ByVal populate As Boolean) As DataTable
        Dim dt As New DataTable

        Dim first As Type = Nothing
        For Each e As Object In o
            If first Is Nothing Then
                first = GetTypeOf(DeserialiseGeneric(e, False))
            End If
            If GetTypeOf(DeserialiseGeneric(e, False)) IsNot first Then
                Throw New Exception("Data Type mismatch in array")
            End If
        Next
        If first IsNot Nothing Then
            dt.Columns.Add(JSON.Array, first)
        End If

        If populate Then
            For Each e As Object In o
                Dim dr As DataRow = dt.NewRow()
                dr(JSON.Array) = DeserialiseGeneric(e, True)
                dt.Rows.Add(dr)
            Next
        End If

        Return dt
    End Function

    Private Function GetTypeOf(ByVal o As Object) As Type
        If o Is Nothing Then Return GetType(String)
        Return o.GetType
    End Function]]></code></stage><stage stageid="c290e7f4-b01b-4012-9422-044432a3cc82" name="Clean Up" type="SubSheetInfo"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="662f70f7-7036-462d-b9bf-f35265dd971a" name="Start" type="Start"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>153f4275-2acd-48a5-b6e6-409fcb2441a8</onsuccess></stage><stage stageid="153f4275-2acd-48a5-b6e6-409fcb2441a8" name="End" type="End"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="885aaf30-a216-44c5-975b-ca58ce02f815" name="JSON to Collection" type="SubSheetInfo"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e5625896-d966-4a10-aa39-2e85611f490f" name="Start" type="Start"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>779de445-0658-4a45-a1ef-a38d6de24429</onsuccess></stage><stage stageid="66526e3e-8b9e-4452-9ca8-f70baa9aec4a" name="End" type="End"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="007e04e2-4ed0-4afd-87d3-c06d79f48d86" name="new" type="Note"><subsheetid>6a9ccb5a-8cc3-44ac-b343-39680558062f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d92fd7fc-b028-457a-a14a-17d66c4b5513" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="779de445-0658-4a45-a1ef-a38d6de24429" name="JSON To Collection" type="Code"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>66526e3e-8b9e-4452-9ca8-f70baa9aec4a</onsuccess><code><![CDATA[result = ConvertToDataTable(json)]]></code></stage><stage stageid="da3984e5-ce52-4649-81c5-a71d452a5ba0" name="json" type="Data"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0e93e91c-85e1-4c75-b74c-52d08c0724e6" name="Collection to JSON" type="SubSheetInfo"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c10fccbd-439b-447d-908a-58f20a540146" name="Start" type="Start"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Data" stage="Data" /></inputs><onsuccess>7923115c-5283-4694-b2c1-142afb4d3788</onsuccess></stage><stage stageid="ede1f653-07f1-42eb-8616-8d2d3dfb5244" name="End" type="End"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="JSON" stage="JSON" /></outputs></stage><stage stageid="8f488472-d2dd-4bbc-a98e-07d6a494ab3f" name="Result" type="Collection"><subsheetid>e5aeb4cb-cd25-4535-b3be-b46681b4e6b6</subsheetid><display x="90" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7923115c-5283-4694-b2c1-142afb4d3788" name="Collection To JSON" type="Code"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="data" expr="[Data]" /></inputs><outputs><output type="text" name="json" stage="JSON" /></outputs><onsuccess>ede1f653-07f1-42eb-8616-8d2d3dfb5244</onsuccess><code><![CDATA[json = convertToJSON(data)]]></code></stage><stage stageid="dbeac687-55ba-4b1a-9e9b-1a5f1e763886" name="Data" type="Collection"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><loginhibit /><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="60425486-0e54-4004-afef-6ccb7e96828d" name="JSON" type="Data"><subsheetid>560472b9-cea4-41d5-bc36-c49d6c1b26e6</subsheetid><display x="75" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="68820997-9906-40ef-b5f3-325f6f0a25b9" name="JSON to Collection (skipping JArray)" type="SubSheetInfo"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14799289-a9b9-4b93-aeb6-f0240547be63" name="Start" type="Start"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" stage="json" /></inputs><onsuccess>8cb729e4-705c-400b-8d1d-0b54dd51fb94</onsuccess></stage><stage stageid="21187841-67f3-4ed1-a3b0-de763bb1e801" name="End" type="End"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="8cb729e4-705c-400b-8d1d-0b54dd51fb94" name="JSON To Collection Without JArray" type="Code"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><loginhibit /><display x="-30" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="json" expr="[json]" /></inputs><outputs><output type="collection" name="result" stage="Result" /></outputs><onsuccess>21187841-67f3-4ed1-a3b0-de763bb1e801</onsuccess><code><![CDATA[Try
	mUseNewParseMethod = True
	result = ConvertToDataTable(json)
Finally
	mUseNewParseMethod = False
End Try]]></code></stage><stage stageid="b3a37b86-f505-4522-80d4-2c9e45ab723c" name="json" type="Data"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="45" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="98ca8a8f-1ce6-4cb7-85e6-9fff8b1b06f9" name="Result" type="Collection"><subsheetid>e53062c7-68de-4763-b37a-456688d0d607</subsheetid><display x="45" y="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage></process></object>
        <object id="6a51f403-f4ab-44ee-b4bf-15710f0dc9bb" name="Utility - Locking" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Locking" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Manages locks on items" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>82d60e0b-a672-4083-9bd7-8e211227ca88</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="1a46f257-7bd7-4c79-bd2f-45b93d4946c4" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="42312858-7074-4e68-9a5f-062306c0f439" type="Normal" published="False"><name>Sleep</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8528e309-fa4d-4abc-8eb3-26c087288eab" type="Normal" published="False"><name>Add to Dictionary</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="83a1957b-e164-4408-ba12-8b16b686769e" type="Normal" published="False"><name>Item ID from Dictionary</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea" type="Normal" published="False"><name>Remove From Dictionary</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e5d65eae-43e9-4bb2-ab20-3b349d092cde" type="Normal" published="True"><name>Set Up Queue Item</name><view><camerax>52</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="39b8267a-c473-4c70-9460-929811e434fa" type="Normal" published="True"><name>Lock Item</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="36e6ed40-192f-48c3-b17d-75284ac86507" type="Normal" published="True"><name>Release Lock</name><view><camerax>0</camerax><cameray>-12</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="4d026044-83a8-46cc-b296-0c959bc5e5d7" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3e6bb003-f4c5-4058-b741-5212a895333e</onsuccess></stage><stage stageid="3e6bb003-f4c5-4058-b741-5212a895333e" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="57eff6f3-2ec4-4e8e-85b8-bd6879776adf" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="15251a4b-1d73-44b9-8f11-b1c4ec9f66ec" name="Clean Up" type="SubSheetInfo"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="39a54109-be85-4fa0-9277-be774e014636" name="Start" type="Start"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="-150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9e29024a-8bc5-4c26-bfc1-84718bffa45e</onsuccess></stage><stage stageid="87c0b1e6-31ce-4621-828a-34ab36550644" name="End" type="End"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="111cac05-9154-4afa-b31d-eb508673a9b0" name="Lock Item" type="SubSheetInfo"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="-285" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2521be69-56c7-4ed2-9fb8-22bf8e1648e3" name="Start" type="Start"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" stage="Item Key" /><input type="timespan" name="Timeout" stage="Timeout" /></inputs><onsuccess>5cbfd3da-5948-4ab5-a12b-edd4e136c358</onsuccess></stage><stage stageid="c160feaa-d779-416d-abf1-9d2bb47e6dbf" name="End" type="End"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="16dacabe-90cb-49ec-b92a-d64489365f8b" name="new" type="Note"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bab68dee-ef0a-4be4-a4d3-9e9da3957066" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="05a8ceb2-ae87-49ef-85fe-ec9536b97075" name="Open Items" type="Collection"><loginhibit /><display x="180" y="-90" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><alwaysinit /><collectioninfo><field name="Queue Name" type="text" /><field name="Item ID" type="text" /><field name="Item Key" type="text" /></collectioninfo></stage><stage stageid="33af5ea1-b0d3-47ec-b089-13184ebd08e0" name="Item Key" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d998e15c-8b94-409a-b6ad-b4dae95bc9df" name="Get Item" type="Action"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><narrative>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</narrative><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue" expr="[Queue Name]" /><input type="text" name="Key Filter" narrative="Optionally, a key value to filter by. Only items with this key value will be considered." expr="[Item Key]" /><input type="text" name="Tag Filter" narrative="Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, &quot;Account: Joint; -Balance: Overdrawn; Card: *Visa*&quot; will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'." expr="" /></inputs><outputs><output type="text" name="Item ID" narrative="The ID of the item retrieved - empty if there are none available." stage="Item ID" /><output type="collection" name="Data" narrative="The data associated with the item - a single collection row." stage="" /><output type="text" name="Status" narrative="The status of the item." stage="" /><output type="number" name="Attempts" narrative="The number of attempts already made to work this item." stage="" /></outputs><onsuccess>35d1273e-3be2-4fe6-83be-522926fadc68</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Get Next Item" /></stage><stage stageid="54e2c328-04e8-4fb6-8548-42c669beb749" name="Item ID" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="35d1273e-3be2-4fe6-83be-522926fadc68" name="Got Item?" type="Decision"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Item ID] &lt;&gt; &quot;&quot;" /><ontrue>e78a5aec-1060-4cdd-a5d0-c2b8395aaba0</ontrue><onfalse>b02e7823-0c34-4fea-8022-2882e82d664d</onfalse></stage><stage stageid="4f49c4f9-1e51-4aa1-8a76-8abc120603d8" name="Timeout" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="-60" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>timespan</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5cbfd3da-5948-4ab5-a12b-edd4e136c358" name="Start Time" type="Calculation"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>d998e15c-8b94-409a-b6ad-b4dae95bc9df</onsuccess><calculation expression="Now()" stage="Start Time" /></stage><stage stageid="c70f3cf5-eee8-4003-a131-d5aee4a99d04" name="Start Time" type="Data"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><display x="90" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>datetime</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b02e7823-0c34-4fea-8022-2882e82d664d" name="Timeout?" type="Decision"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="-90" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Now() - [Start Time] &gt; [Timeout]" /><ontrue>db49422e-e45f-4fab-9db2-fb2809324db1</ontrue><onfalse>bf796355-10ec-4a81-9611-e24aaf4b96ad</onfalse></stage><stage stageid="db49422e-e45f-4fab-9db2-fb2809324db1" name="Exception1" type="Exception"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="-210" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Timeout" detail="&quot;Timeout waiting for lock on item &quot; &amp; [Item Key] &amp; &quot; from queue &quot; &amp; [Queue Name]" /></stage><stage stageid="a1dc34be-2e67-4fa5-97e3-d7affd6a57c5" name="Release Lock" type="SubSheetInfo"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1864dc01-a33d-476f-ae3e-9805cbeba629" name="End" type="End"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="360" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="d37980d2-ef9d-4eba-b19c-132e54820e11" name="Start" type="Start"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." stage="Item Key" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" stage="Error If Not Locked" /></inputs><onsuccess>e5483d20-dd67-42ef-818e-d76532b29c78</onsuccess></stage><stage stageid="d2f70992-f51d-48dd-812e-20833826148c" name="Item Key" type="Data"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="150" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cd5f7ea8-65cf-4863-86bd-418c6b8829ef" name="Defer" type="Action"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><narrative>Marks the item as deferred. It is unlocked, but it will not be made available for processing again until the specified time.

The attempts count for the item is reset to zero.</narrative><display x="15" y="180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" narrative="The ID of the item to defer" expr="[Item ID]" /><input type="datetime" name="Until" narrative="When to resume processing the case" expr="Now()" /></inputs><onsuccess>e1fb1183-a056-464c-ba69-15758a7fcd25</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Defer" /></stage><stage stageid="c3bef86c-67cd-43f8-9aea-b2e4739c05b6" name="Add to Dictionary" type="SubSheetInfo"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="40aa852d-4b23-46bb-9253-1488fb8b354d" name="Start" type="Start"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" stage="Item ID" /><input type="text" name="Item Key" stage="Item Key" /></inputs><onsuccess>8f6cd284-a33c-4c26-a7c1-f3bdc8923224</onsuccess></stage><stage stageid="7dda72be-3705-4754-aac7-1f95b4d32748" name="End" type="End"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="714dd282-2b54-40d7-af90-c36297545521" name="Item ID" type="Data"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="90" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66ef757e-0135-4bd6-8f21-842b2187a698" name="Item Key" type="Data"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="150" y="-225" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d7494916-850e-4c20-9dbb-85ba3228cc7b" name="New Row" type="Action"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Open Items&quot;" /></inputs><onsuccess>3f280f88-002a-4640-ba99-22bebe7a3eaa</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="3f280f88-002a-4640-ba99-22bebe7a3eaa" name="Values" type="MultipleCalculation"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7dda72be-3705-4754-aac7-1f95b4d32748</onsuccess><steps><calculation expression="[Queue Name]" stage="Open Items.Queue Name" /><calculation expression="[Item ID]" stage="Open Items.Item ID" /><calculation expression="[Item Key]" stage="Open Items.Item Key" /></steps></stage><stage stageid="8c30cc6c-4a86-454f-a784-e24f0b6ff488" name="Item ID from Dictionary" type="SubSheetInfo"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="c8f3da09-c811-4603-ae08-6cfe820fd3e7" name="End" type="End"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="180" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Item ID" stage="Item ID" /></outputs></stage><stage stageid="5057e223-f43a-41ed-97ac-20690eebab74" name="Start" type="Start"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" stage="Item Key" /></inputs><onsuccess>d64df9a9-78c4-4223-a35b-f118ca59983d</onsuccess></stage><stage stageid="088dfb80-76dd-4b6b-ae66-cf783120ee66" name="Item Key" type="Data"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><display x="150" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d64df9a9-78c4-4223-a35b-f118ca59983d" name="For Each Open Item" type="LoopStart"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1754c5bb-6679-4128-ad40-755da99d1ec8</onsuccess><groupid>a635c1d6-d740-46dd-b312-be07394f26f8</groupid><looptype>ForEach</looptype><loopdata>Open Items</loopdata></stage><stage stageid="5e528a74-f5b8-47a7-8b2a-3794e087bdc0" name="Next Item" type="LoopEnd"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b2f39e11-2c3a-4768-9d44-e761229f3563</onsuccess><groupid>a635c1d6-d740-46dd-b312-be07394f26f8</groupid></stage><stage stageid="1754c5bb-6679-4128-ad40-755da99d1ec8" name="Match?" type="Decision"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Queue Name] = [Open Items.Queue Name]&#xA;and&#xA;[Item Key] = [Open Items.Item Key]" /><ontrue>c86a166c-7f6b-4a4b-bd16-7bb0906a20b9</ontrue><onfalse>5e528a74-f5b8-47a7-8b2a-3794e087bdc0</onfalse></stage><stage stageid="c86a166c-7f6b-4a4b-bd16-7bb0906a20b9" name="Item ID" type="Calculation"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="180" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c8f3da09-c811-4603-ae08-6cfe820fd3e7</onsuccess><calculation expression="[Open Items.Item ID]" stage="Item ID" /></stage><stage stageid="5108897d-c72d-4ecb-ae4d-0648f60376a0" name="Item ID" type="Data"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><display x="255" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2f39e11-2c3a-4768-9d44-e761229f3563" name="No Item ID" type="Calculation"><subsheetid>83a1957b-e164-4408-ba12-8b16b686769e</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c8f3da09-c811-4603-ae08-6cfe820fd3e7</onsuccess><calculation expression="&quot;&quot;" stage="Item ID" /></stage><stage stageid="8f6cd284-a33c-4c26-a7c1-f3bdc8923224" name="Item ID from Dictionary" type="SubSheet"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-165" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" expr="[Item Key]" /></inputs><outputs><output type="text" name="Item ID" stage="Existing Item ID" /></outputs><onsuccess>95c667e2-8cbd-4291-ae4f-94eb517a9def</onsuccess><processid>83a1957b-e164-4408-ba12-8b16b686769e</processid></stage><stage stageid="95c667e2-8cbd-4291-ae4f-94eb517a9def" name="Found?" type="Decision"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Existing Item ID] &lt;&gt; &quot;&quot;" /><ontrue>614ed257-6f55-4089-867c-96421e2b0419</ontrue><onfalse>d7494916-850e-4c20-9dbb-85ba3228cc7b</onfalse></stage><stage stageid="614ed257-6f55-4089-867c-96421e2b0419" name="Exception2" type="Exception"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="180" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Configuration Exception" detail="&quot;Item already in dictionary&quot;" /></stage><stage stageid="896364b1-4496-4352-aa9c-eac86009ca25" name="Remove From Dictionary" type="SubSheetInfo"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0a3d611e-b91b-4bc2-ad08-6d929bd269ac" name="End" type="End"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="315" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8676ddad-16f2-4cf3-8266-8b63a17f8403" name="Start" type="Start"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" stage="Item ID" /></inputs><onsuccess>4b7a0b18-7cda-42eb-bc69-a597134fbfaa</onsuccess></stage><stage stageid="4b7a0b18-7cda-42eb-bc69-a597134fbfaa" name="For Each Open Item" type="LoopStart"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="-45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ee41e21c-e09a-4b4f-b8dd-97033565112d</onsuccess><groupid>82873f9f-1a34-4c5b-bfa5-be57a7b164ca</groupid><looptype>ForEach</looptype><loopdata>Open Items</loopdata></stage><stage stageid="aaa9472f-5e88-4761-a259-9873d005dcdc" name="Next Item" type="LoopEnd"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>0fe6e637-f2c6-4abb-b52c-6289220a09c7</onsuccess><groupid>82873f9f-1a34-4c5b-bfa5-be57a7b164ca</groupid></stage><stage stageid="ee41e21c-e09a-4b4f-b8dd-97033565112d" name="Match?" type="Decision"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="75" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Item ID] = [Open Items.Item ID]" /><ontrue>0d0e2595-c251-40c4-b39d-5e9f56059121</ontrue><onfalse>aaa9472f-5e88-4761-a259-9873d005dcdc</onfalse></stage><stage stageid="0d0e2595-c251-40c4-b39d-5e9f56059121" name="Remove" type="Action"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><loginhibit /><display x="210" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Open Items&quot;" /></inputs><onsuccess>0a3d611e-b91b-4bc2-ad08-6d929bd269ac</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Remove Row" /></stage><stage stageid="0fe6e637-f2c6-4abb-b52c-6289220a09c7" name="Exception3" type="Exception"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><display x="75" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Configuration Exception" detail="&quot;Item not found in dictionary - cannot remove&quot;" /></stage><stage stageid="9e29024a-8bc5-4c26-bfc1-84718bffa45e" name="For Each Open Item" type="LoopStart"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="-75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4b70d5d8-9e1b-4512-82d3-5a0caa734af3</onsuccess><groupid>3bf3236f-3bfa-40fc-9051-944759b72a2e</groupid><looptype>ForEach</looptype><loopdata>Open Items</loopdata></stage><stage stageid="fc58b778-a789-4610-b7a5-708a3c23b94e" name="Next Item" type="LoopEnd"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="75" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>87c0b1e6-31ce-4621-828a-34ab36550644</onsuccess><groupid>3bf3236f-3bfa-40fc-9051-944759b72a2e</groupid></stage><stage stageid="e5483d20-dd67-42ef-818e-d76532b29c78" name="Item ID from Dictionary" type="SubSheet"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" expr="[Item Key]" /></inputs><outputs><output type="text" name="Item ID" stage="Item ID" /></outputs><onsuccess>11bd4f89-e683-41b8-b23d-02f8b8118c6e</onsuccess><processid>83a1957b-e164-4408-ba12-8b16b686769e</processid></stage><stage stageid="11bd4f89-e683-41b8-b23d-02f8b8118c6e" name="Found?" type="Decision"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Item ID] &lt;&gt; &quot;&quot;" /><ontrue>829f6373-71f3-4343-96c1-4680faab683d</ontrue><onfalse>25f0a550-b572-4b48-b8e6-bcebfe8f8118</onfalse></stage><stage stageid="829f6373-71f3-4343-96c1-4680faab683d" name="Remove from Dictionary" type="SubSheet"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="120" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" expr="[Item ID]" /></inputs><onsuccess>cd5f7ea8-65cf-4863-86bd-418c6b8829ef</onsuccess><processid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</processid></stage><stage stageid="5833d13d-bd66-4ad9-940c-c2aad4ddf980" name="Item ID" type="Data"><subsheetid>88d6eef4-e4f7-4016-92b5-b8bc7d7fdfea</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a4933b59-eaee-453d-b741-0aee31bd074c" name="Exception4" type="Exception"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="315" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="Configuration Exception" detail="&quot;Cannot release item - not found in dictionary&quot;" /></stage><stage stageid="e78a5aec-1060-4cdd-a5d0-c2b8395aaba0" name="Add to Dictionary" type="SubSheet"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="15" y="180" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item ID" expr="[Item ID]" /><input type="text" name="Item Key" expr="[Item Key]" /></inputs><onsuccess>c160feaa-d779-416d-abf1-9d2bb47e6dbf</onsuccess><processid>8528e309-fa4d-4abc-8eb3-26c087288eab</processid></stage><stage stageid="4b70d5d8-9e1b-4512-82d3-5a0caa734af3" name="Release Lock" type="SubSheet"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" narrative="The key of the item to be unlocked." expr="[Open Items.Item Key]" /><input type="flag" name="Error If Not Locked" narrative="Indicates whether an exception should be thrown if the specified item is not locked" expr="False" /></inputs><onsuccess>fc58b778-a789-4610-b7a5-708a3c23b94e</onsuccess><processid>36e6ed40-192f-48c3-b17d-75284ac86507</processid></stage><stage stageid="b29013ba-5063-4886-bc8e-0fc8fe6fb74e" name="Block1" type="Block"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="-45" y="-45" w="390" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="7ad977a4-0f4b-45fc-a818-b69374095fe3" name="Recover1" type="Recover"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="180" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>238fd8a4-ff09-4b06-baea-14be9f8fca84</onsuccess></stage><stage stageid="238fd8a4-ff09-4b06-baea-14be9f8fca84" name="Resume1" type="Resume"><subsheetid>1a46f257-7bd7-4c79-bd2f-45b93d4946c4</subsheetid><loginhibit /><display x="180" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fc58b778-a789-4610-b7a5-708a3c23b94e</onsuccess></stage><stage stageid="816c64fd-5a60-47d2-874b-33581ac0543e" name="Item ID" type="Data"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="105" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee098ccb-a35b-4685-bb52-ee13c3660d92" name="Set Up Queue Item" type="SubSheetInfo"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b8994811-1221-4a60-87b2-e56a2756d291" name="Start" type="Start"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="-165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Item Key" narrative="The item key of the queue item to be created" stage="Item Key" /><input type="flag" name="Ignore If Exists" narrative="When true, no action will be taken if the item already exists. Otherwise an exception will be thrown." stage="Ignore If Exists" /></inputs><onsuccess>70adba11-0d37-43f4-b072-341e8a9fba5f</onsuccess></stage><stage stageid="3b2b4fff-7d48-432e-ba91-490ab36cca33" name="End" type="End"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="47da8e0c-3b3d-42ec-8508-ad5fe754f37b" name="Item Key" type="Data"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="150" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">PAS Login</initialvalue><private /><alwaysinit /></stage><stage stageid="68cf6ffe-3681-4cd2-b271-fb898bdd8638" name="Data" type="Collection"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="330" y="135" w="210" h="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item Key" type="text" /></collectioninfo></stage><stage stageid="6ee915bc-4ec5-4fc3-b1e6-90c710aa3719" name="New Row" type="Action"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Data&quot;" /></inputs><onsuccess>e4c91440-fe42-4e9b-a593-2d086a254ff6</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="e4c91440-fe42-4e9b-a593-2d086a254ff6" name="Values" type="Calculation"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>418995c9-f69b-4a21-a58a-b5896d8824f2</onsuccess><calculation expression="[Item Key]" stage="Data.Item Key" /></stage><stage stageid="418995c9-f69b-4a21-a58a-b5896d8824f2" name="Add to Queue" type="Action"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><narrative>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.

If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.

If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.

If the queue has a key field defined, an item added has key data longer than the maximum permitted 255 characters, an error will occur</narrative><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to add items to" expr="[Queue Name]" /><input type="collection" name="Data" narrative="A collection containing the data, one row for each item to be added" expr="[Data]" /><input type="datetime" name="Defer Until" narrative="Optionally, the date/time the new item(s) should be deferred until" expr="" /><input type="number" name="Priority" narrative="Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0." expr="" /><input type="text" name="Tags" narrative="Optionally, a semi-colon-separated set of tags to apply to the queue item(s)" expr="" /><input type="text" name="Status" narrative="Optionally, the initial status required of the work queue item(s) " expr="" /></inputs><outputs><output type="collection" name="Item IDs" narrative="The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input" stage="" /></outputs><onsuccess>3b2b4fff-7d48-432e-ba91-490ab36cca33</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Add To Queue" /></stage><stage stageid="42913b2d-8e01-4a8a-8e22-65a08fa3cde8" name="Queue Name" type="Data"><loginhibit /><display x="180" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Locking Queue</initialvalue><alwaysinit /></stage><stage stageid="1d5cb36f-7219-4799-8616-7a1f2905ab06" name="Existing Item ID" type="Data"><subsheetid>8528e309-fa4d-4abc-8eb3-26c087288eab</subsheetid><display x="105" y="-180" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="201b6cbb-85fe-4228-8233-69fa3127e021" name="Error If Not Locked" type="Data"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><display x="90" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="25f0a550-b572-4b48-b8e6-bcebfe8f8118" name="Throw Error?" type="Decision"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="165" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Error If Not Locked]" /><ontrue>a4933b59-eaee-453d-b741-0aee31bd074c</ontrue><onfalse>aebe605a-1323-4f23-b798-8c0986a91880</onfalse></stage><stage stageid="aebe605a-1323-4f23-b798-8c0986a91880" name="anchor1" type="Anchor"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="165" y="360" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>1864dc01-a33d-476f-ae3e-9805cbeba629</onsuccess></stage><stage stageid="84da6e4e-fce0-49e9-8de3-90d2aaf00f57" name="Ignore If Exists" type="Data"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="270" y="-165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70adba11-0d37-43f4-b072-341e8a9fba5f" name="Item Exists" type="Action"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><narrative>Check if an item with the given key is already in the queue</narrative><display x="15" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Queue Name" narrative="The name of the queue to check" expr="[Queue Name]" /><input type="text" name="Key" narrative="The key to check." expr="[Item Key]" /><input type="flag" name="Include Pending" narrative="Check any items in the queue which are currently awaiting being worked. This will include any deferred items which have a deferral date in the past and any locked items. Optional - Default is True" expr="True" /><input type="flag" name="Include Deferred" narrative="Check any items in the queue which are currently deferred to a later date. Optional - Default is True" expr="True" /><input type="flag" name="Include Completed" narrative="Check any items in the queue which are completed. Optional - Default is True" expr="True" /><input type="flag" name="Include Terminated" narrative="Check any items in the queue which have been fully terminated. Optional - Default is True" expr="True" /></inputs><outputs><output type="flag" name="Result" narrative="True if an item with the given key is in the queue, False otherwise." stage="Exists" /></outputs><onsuccess>ee1888ef-de98-4e02-ae32-5fdc7a1d159a</onsuccess><resource object="Blueprism.Automate.clsWorkQueuesActions" action="Is Item In Queue" /></stage><stage stageid="160f61b2-1133-436d-827c-13bc186b87a0" name="Exists" type="Data"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="90" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee1888ef-de98-4e02-ae32-5fdc7a1d159a" name="Exists?" type="Decision"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Exists]" /><ontrue>72ac249b-863b-4083-aecd-73f58a6649cc</ontrue><onfalse>6ee915bc-4ec5-4fc3-b1e6-90c710aa3719</onfalse></stage><stage stageid="72ac249b-863b-4083-aecd-73f58a6649cc" name="Throw Error?" type="Decision"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="135" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Ignore If Exists]=False" /><ontrue>70563429-28bc-454f-9bce-35bc9e8d0401</ontrue><onfalse>606571d6-7531-45c5-955c-b42ff7d1cd7a</onfalse></stage><stage stageid="70563429-28bc-454f-9bce-35bc9e8d0401" name="Exception5" type="Exception"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><display x="255" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" /></stage><stage stageid="606571d6-7531-45c5-955c-b42ff7d1cd7a" name="anchor2" type="Anchor"><subsheetid>e5d65eae-43e9-4bb2-ab20-3b349d092cde</subsheetid><loginhibit /><display x="135" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>3b2b4fff-7d48-432e-ba91-490ab36cca33</onsuccess></stage><stage stageid="5284adfc-f465-421e-96d1-6a19ae8cb304" name="Sleep" type="SubSheetInfo"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bb56e330-ba06-4d28-ba43-856fc07f20bc" name="Start" type="Start"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" stage="Sleep Time (Seconds)" /></inputs><onsuccess>be2bce45-1333-4555-931f-3133876a773d</onsuccess></stage><stage stageid="ea0e3448-3460-4035-b927-0136da5a1069" name="End" type="End"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bc854747-21ab-40cb-bb80-2af3f67d6f1c" name="Time Out1" type="WaitEnd"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ea0e3448-3460-4035-b927-0136da5a1069</onsuccess><groupid>50c7bdeb-191b-4d6d-9e9f-e222397e2305</groupid></stage><stage stageid="be2bce45-1333-4555-931f-3133876a773d" name="Wait1" type="WaitStart"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><loginhibit /><display x="15" y="-60" w="30" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>50c7bdeb-191b-4d6d-9e9f-e222397e2305</groupid><choices /><timeout>[Sleep Time (Seconds)]</timeout></stage><stage stageid="1a45e14b-1568-4cc6-bed6-65856ddc5735" name="Sleep Time (Seconds)" type="Data"><subsheetid>42312858-7074-4e68-9a5f-062306c0f439</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e1fb1183-a056-464c-ba69-15758a7fcd25" name="Sleep In Case the Caller Requests This Lock Back Quickly - Give Other Clients A Chance to Grab It" type="SubSheet"><subsheetid>36e6ed40-192f-48c3-b17d-75284ac86507</subsheetid><loginhibit /><display x="15" y="270" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" expr="2 * [Sleep Inteval (Seconds)]" /></inputs><onsuccess>1864dc01-a33d-476f-ae3e-9805cbeba629</onsuccess><processid>42312858-7074-4e68-9a5f-062306c0f439</processid></stage><stage stageid="bf796355-10ec-4a81-9611-e24aaf4b96ad" name="Sleep" type="SubSheet"><subsheetid>39b8267a-c473-4c70-9460-929811e434fa</subsheetid><loginhibit /><display x="-90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Sleep Time (Seconds)" expr="[Sleep Inteval (Seconds)]" /></inputs><onsuccess>d998e15c-8b94-409a-b6ad-b4dae95bc9df</onsuccess><processid>42312858-7074-4e68-9a5f-062306c0f439</processid></stage><stage stageid="af53aed8-4509-4007-b96e-3b7eb07f8570" name="Sleep Inteval (Seconds)" type="Data"><loginhibit /><display x="180" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0.25</initialvalue><alwaysinit /></stage></process></object>
        <object id="ba504fda-e81a-4ee6-a672-6200b55c48e0" name="Utility - Network" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Network" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="A utility object with network related actions." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Utility - Environment (extended)"><id>6d008319-b6b6-4fdf-b366-598241c67d1d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>Win32Attach</id><parameters><parameter><name>WindowTitle</name><value>Administrator*</value></parameter><parameter><name>ProcessName</name><value></value></parameter><parameter><name>Path</name><value></value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>NonInvasive</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter><parameter><name>Options</name></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e5ddf19-f310-4429-8309-a2377c5851e5" type="Normal" published="True"><name>Ping</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="cc386a36-af51-4499-bc43-8a9a5407a881" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6aae6635-0d2b-458f-9052-1ace6bbfd402</onsuccess></stage><stage stageid="6aae6635-0d2b-458f-9052-1ace6bbfd402" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5388b9ac-8551-4b68-8c85-b43fdcabcd28" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Net.NetworkInformation</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="78247cd0-4a8b-4ba9-9606-3a4c6cf51122" name="Clean Up" type="SubSheetInfo"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="80a773f1-2e40-4833-b9be-865fb16ce513" name="Start" type="Start"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>2ba811c0-d8c0-4f72-a5c1-86f4954dc807</onsuccess></stage><stage stageid="2ba811c0-d8c0-4f72-a5c1-86f4954dc807" name="End" type="End"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="f5198681-ab5e-4781-8bdb-4b4cd39e77e1" name="new" type="Note"><subsheetid>5f21a6a2-cdb3-4d80-a8f3-b0efc6665b6f</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="76772e92-3d97-452c-a128-db49a67a65d3" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="63a3a2b4-e879-437e-a3d2-90298c9a24f3" name="Ping" type="SubSheetInfo"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-165" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="adeb690c-9fd3-459a-8a4a-83b624907159" name="Start" type="Start"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="15" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Location" narrative="The computer name or ip address you want to ping" stage="Location" /></inputs><onsuccess>70574e9d-3764-4839-8247-c5df0a5f2f1c</onsuccess></stage><stage stageid="3f976139-c96e-48a5-a84f-b4af0aa75921" name="End" type="End"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Ping Success" stage="Ping Success" /><output type="text" name="Address" stage="Address" /><output type="number" name="Round Trip Time (Milliseconds)" stage="Round Trip Time (Milliseconds)" /><output type="text" name="Ping Exception" stage="Ping Exception" /></outputs></stage><stage stageid="16c0b46b-f799-4e33-8121-5d6d779f4b71" name="Location" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="-150" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="70574e9d-3764-4839-8247-c5df0a5f2f1c" name="Ping" type="Code"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Location" expr="[Location]" /></inputs><outputs><output type="flag" name="Success" stage="Ping Success" /><output type="text" name="Address" stage="Address" /><output type="number" name="Round Trip Time" stage="Round Trip Time (Milliseconds)" /><output type="text" name="Exception" stage="Ping Exception" /></outputs><onsuccess>3f976139-c96e-48a5-a84f-b4af0aa75921</onsuccess><code><![CDATA[Success = False
Dim pingSender As New Ping
Try
	Dim reply As PingReply = pingSender.Send(Location)

	If (reply.Status = IPStatus.Success) Then
		Success = True
		Address = reply.Address.ToString()
		Round_Trip_Time = reply.RoundtripTime
	End If

Catch ex as Exception
	Exception = ex.ToString()
End Try]]></code></stage><stage stageid="ad81f7a6-de26-45e0-af37-1fcc16c65311" name="Ping Success" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-150" y="45" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8db99241-b839-49aa-a493-f51f61418185" name="Round Trip Time (Milliseconds)" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-150" y="105" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="36226432-f5da-4f05-b068-dd8cc8996689" name="Address" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-150" y="75" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="43f92e8a-9aea-4905-a868-f8fae4365ccd" name="Ping Exception" type="Data"><subsheetid>2e5ddf19-f310-4429-8309-a2377c5851e5</subsheetid><display x="-150" y="135" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="e290519e-5e15-4865-a384-bfb313c828d3" name="Utility - Numeric Operations" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Numeric Operations" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Mathematical functions" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>a7f254ce-6c9f-4c50-a9d0-03c2cd24ef07</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="2875d2a6-0236-416e-bf04-c638bbb57806" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="97a91b4e-590f-4fb9-b450-f820d746c260" type="Normal" published="True"><name>Get Absolute Value</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="de3d40ad-d45c-476b-8cb3-409f48fda754" type="Normal" published="True"><name>Calculate Rolling Average (fixed denominator)</name><view><camerax>112</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d3813186-bbc2-4727-a08a-76df7f3419dc" type="Normal" published="True"><name>Calculate Rolling Average (variable denominator)</name><view><camerax>255</camerax><cameray>-192</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="92089dfa-b677-47d9-89dd-d830e0728e56" type="Normal" published="False"><name>Test Rolling Averages</name><view><camerax>0</camerax><cameray>69</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="954f3eee-6816-44ed-890e-338b6fb01349" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>da124292-a510-41de-aa90-d98a7ccc019e</onsuccess></stage><stage stageid="da124292-a510-41de-aa90-d98a7ccc019e" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dadc5051-89c1-4a2d-bc7f-a9e5fa025ea8" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>Microsoft.VisualBasic.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>Microsoft.VisualBasic</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

]]></code></stage><stage stageid="1c87d27f-f30b-4069-8899-ecf4f5fcbb0a" name="Clean Up" type="SubSheetInfo"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="081451dd-39f7-48e2-b47c-21aa18a50082" name="Start" type="Start"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>37195e20-c2cc-4dd1-8c80-e0bb35636321</onsuccess></stage><stage stageid="37195e20-c2cc-4dd1-8c80-e0bb35636321" name="End" type="End"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9a0eaf23-df6e-4ffd-bcbe-c9d5f759eb6c" name="new" type="Note"><subsheetid>2875d2a6-0236-416e-bf04-c638bbb57806</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0820845d-7215-43e2-ae11-3cc74304cc58" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9260f24a-514b-4e85-b4e0-cb745addf3c2" name="Get Absolute Value" type="SubSheetInfo"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><narrative>Gets the numerical value of a number without regard to its sign.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e6b4592b-5e02-45eb-a791-84678ab35798" name="Start" type="Start"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Input" narrative="The number to get the absolute value of " stage="Input" /></inputs><onsuccess>a8066261-2778-4e3d-9cc1-600f96534599</onsuccess></stage><stage stageid="4225cec2-fba0-43f4-ba89-5773dc1199fb" name="End" type="End"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Absolute Value" stage="Input" /></outputs></stage><stage stageid="ee6ae5e3-485c-44ee-bda3-b95fd0bd5f43" name="Input" type="Data"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="a8066261-2778-4e3d-9cc1-600f96534599" name="Negative?" type="Decision"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Input] &lt; 0" /><ontrue>443ea222-04fc-476a-905c-c4f0d8e32a3f</ontrue><onfalse>4225cec2-fba0-43f4-ba89-5773dc1199fb</onfalse></stage><stage stageid="443ea222-04fc-476a-905c-c4f0d8e32a3f" name="Negate" type="Calculation"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="135" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>273e7090-384a-4f21-8770-8fd6f06bcf68</onsuccess><calculation expression="[Input] * -1" stage="Input" /></stage><stage stageid="273e7090-384a-4f21-8770-8fd6f06bcf68" name="anchor1" type="Anchor"><subsheetid>97a91b4e-590f-4fb9-b450-f820d746c260</subsheetid><loginhibit /><display x="135" y="90" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4225cec2-fba0-43f4-ba89-5773dc1199fb</onsuccess></stage><stage stageid="f3ffdd20-3c64-40ff-be03-a65ab5edd2a0" name="Calculate Rolling Average (fixed denominator)" type="SubSheetInfo"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><narrative>Finds the rolling average of a set of numbers given a fixed denominator.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b64329c2-4895-4408-889c-5c11491d3d29" name="Calculate Rolling Average (variable denominator)" type="SubSheetInfo"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><narrative>Finds the rolling average of a set of numbers given a variable set denominators.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5b22715c-629e-4a2a-a008-da75c5629116" name="Start" type="Start"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Numerator Values" narrative="The series of numbers to find the moving average from" stage="Numerator Values" /><input type="collection" name="Denominator Values" narrative="The series of numbers to use as deniminators" stage="Denominator Values" /><input type="flag" name="Break at Zero Points" narrative="Set to true if you wish to break at zero points" stage="Break at Zero Points" /><input type="number" name="Rolling Period Length" narrative="The length of the rolling period" stage="Rolling Period Length" /></inputs><onsuccess>c51a3b69-434e-49bd-aaea-93ccf9175656</onsuccess></stage><stage stageid="ee0a01bc-752f-4e02-8989-1afee7164126" name="End" type="End"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="615" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs></stage><stage stageid="1eb6ffaf-3152-45f0-8337-67c995dfca11" name="Numerator Values" type="Collection"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="-105" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="ede06c50-0c0c-4f56-b8f1-956c680ddc7d" name="Denominator Values" type="Collection"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="195" y="-105" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="464be8b5-6852-4ef7-8b11-231f833ad4db" name="Validate" type="ChoiceStart"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><groupid>d45c276b-e502-4042-8914-05d55c58e8ba</groupid><choices><choice expression="[Numerator Row Count] = 0"><name>No Numerator Rows</name><distance>45</distance><ontrue>c6cf5d20-32a0-4947-b4fc-4ac728eb495a</ontrue></choice><choice expression="[Numerator Row Count] &gt; 1"><name>More than one Numerator Row</name><distance>90</distance><ontrue>470fc45a-d040-4792-8860-0220a95f7053</ontrue></choice><choice expression="[Denominator Row Count] = 0"><name>No Denominator Rows</name><distance>135</distance><ontrue>08ff5c35-f0c6-4497-9894-ca17fae3939e</ontrue></choice><choice expression="[Denominator Row Count] &gt; 1"><name>More than one Denominator Row</name><distance>180</distance><ontrue>6d5f06cb-a0ce-4dd8-991c-0d1f3c3589b6</ontrue></choice><choice expression="[Rolling Period Length] &lt; 1"><name>Invalid Rolling Period Length</name><distance>225</distance><ontrue>73d86166-982d-4051-bfd5-ec8bbbc5601b</ontrue></choice></choices></stage><stage stageid="5681a0ac-3314-49d4-acda-e93198c0896a" name="Valid" type="ChoiceEnd"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="435" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>fe626c6a-6f0a-4faf-bcb1-f8fe0dfaf140</onsuccess><groupid>d45c276b-e502-4042-8914-05d55c58e8ba</groupid></stage><stage stageid="c51a3b69-434e-49bd-aaea-93ccf9175656" name="Count Numerator Rows" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Numerator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Numerator Row Count" /></outputs><onsuccess>2c1f2db9-8089-48c1-a836-318bc03cad7c</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="f0fbf567-bff1-4043-a546-6088d62da8d0" name="Numerator Row Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2c1f2db9-8089-48c1-a836-318bc03cad7c" name="Count Denominator Rows" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Denominator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of rows counted in the collection" stage="Denominator Row Count" /></outputs><onsuccess>6955ab72-2076-4cb9-8ace-6609890a69a4</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Rows" /></stage><stage stageid="6955ab72-2076-4cb9-8ace-6609890a69a4" name="Count Numerator Columns" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="60" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Numerator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of columns counted in the collection" stage="Numerator Column Count" /></outputs><onsuccess>aefdb9e9-ae93-411f-8f7c-9b727c77381e</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Columns" /></stage><stage stageid="4383f084-71ea-4c47-8aad-e3d496dcd480" name="Denominator Row Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="aefdb9e9-ae93-411f-8f7c-9b727c77381e" name="Count Denominator Columns" type="Action"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Denominator Values&quot;" /></inputs><outputs><output type="number" name="Count" narrative="The number of columns counted in the collection" stage="Denominator Column Count" /></outputs><onsuccess>464be8b5-6852-4ef7-8b11-231f833ad4db</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Count Columns" /></stage><stage stageid="b27838d3-3c3c-491d-96ab-a5673fc4b7f2" name="Denominator Column Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="150" y="105" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c6cf5d20-32a0-4947-b4fc-4ac728eb495a" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>14fb216c-8e85-4a1e-a5ad-24d92d86feff</onsuccess><calculation expression="&quot;Numerator Values collection must contain precisely one row - &quot; &amp; [Numerator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="3ad01cf9-7f88-40ed-b772-4efa5f34ad09" name="Error Message" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="300" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="470fc45a-d040-4792-8860-0220a95f7053" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="255" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b3e6253d-5819-4d11-9227-3e66ddeafb3d</onsuccess><calculation expression="&quot;Numerator Values collection must contain precisely one row - &quot; &amp; [Numerator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="08ff5c35-f0c6-4497-9894-ca17fae3939e" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="300" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>29066db6-f2d8-401d-8679-fe7c2b5f4d94</onsuccess><calculation expression="&quot;Denominator Values collection must contain precisely one row - &quot; &amp; [Denominator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="6d5f06cb-a0ce-4dd8-991c-0d1f3c3589b6" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="345" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4bbe75da-da48-4671-9554-5715634cac20</onsuccess><calculation expression="&quot;Denominator Values collection must contain precisely one row - &quot; &amp; [Denominator Row Count] &amp; &quot; rows found&quot;" stage="Error Message" /></stage><stage stageid="14fb216c-8e85-4a1e-a5ad-24d92d86feff" name="anchor2" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="210" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b3e6253d-5819-4d11-9227-3e66ddeafb3d</onsuccess></stage><stage stageid="b3e6253d-5819-4d11-9227-3e66ddeafb3d" name="anchor3" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="255" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>29066db6-f2d8-401d-8679-fe7c2b5f4d94</onsuccess></stage><stage stageid="29066db6-f2d8-401d-8679-fe7c2b5f4d94" name="anchor4" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="300" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4bbe75da-da48-4671-9554-5715634cac20</onsuccess></stage><stage stageid="4bbe75da-da48-4671-9554-5715634cac20" name="anchor5" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="345" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cc3f1a18-65f7-4e46-af57-b9304bfae638</onsuccess></stage><stage stageid="fe626c6a-6f0a-4faf-bcb1-f8fe0dfaf140" name="Calculate Rolling Average" type="Code"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="495" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Numerator Values" expr="[Numerator Values]" /><input type="collection" name="Denominator Values" expr="[Denominator Values]" /><input type="flag" name="Break at Zero Points" expr="[Break at Zero Points]" /><input type="number" name="Rolling Period Length" expr="[Rolling Period Length]" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /></outputs><onsuccess>e1b6ddb7-512d-48a4-bb15-23bcbf8b139c</onsuccess><code><![CDATA[Rolling_Average_Values = New DataTable
For Each Col As DataColumn in Numerator_Values.Columns
	Rolling_Average_Values.Columns.Add(Col.ColumnName, Col.DataType)
Next

Dim Values(Numerator_Values.Columns.Count - 1) As Object
Dim LastBreakPoint As Integer = -1 
For I as Integer = 0 to Numerator_Values.Columns.Count - 1

	If Break_At_Zero_Points AndAlso Numerator_Values.Rows(0)(I) = 0 andalso Denominator_Values.Rows(0)(I) = 0 Then
		LastBreakpoint = I
		Values(I) = 0
	Else

		Dim ThisNumeratorTotal As Decimal = 0d
		Dim ThisDenominatorTotal As Decimal = 0d
		For J as Integer = Math.Max(LastBreakPoint + 1, I - Rolling_Period_Length + 1) To I
			Dim Numerator As Decimal = Numerator_Values.Rows(0)(J)
			Dim Denominator As Decimal = Denominator_Values.Rows(0)(J)
			If Denominator = 0 Then
				If Numerator <> 0 Then
					Throw New ApplicationException("Rolling average cannot be computed - denominator is zero for a non-zero numerator in column " & (J+1).ToString)
				Else
					If Break_At_Zero_Points Then
						'Both zero, should never get here - breakpoints are dealt with above
						Throw New ApplicationException("Unexpected breakpoint")
					End If
				End If
			End If

			ThisNumeratorTotal += Numerator
			ThisDenominatorTotal += Denominator
			Values(I) = ThisNumeratorTotal / ThisDenominatorTotal
		Next

	End If

Next

Rolling_Average_Values.Rows.Add(Values)]]></code></stage><stage stageid="b070c1cd-fd3e-4515-97d8-ff2d3dc77a69" name="Rolling Average Values" type="Collection"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="-75" y="615" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="c153f41a-43ab-4dba-8c9b-66c0a542a943" name="Break at Zero Points" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="270" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="e1b6ddb7-512d-48a4-bb15-23bcbf8b139c" name="Success" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="15" y="540" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ee0a01bc-752f-4e02-8989-1afee7164126</onsuccess><calculation expression="True" stage="Success" /></stage><stage stageid="56aaf772-78b1-40df-a500-c741c7078f57" name="Success" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="-150" y="630" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8a7cf9ae-3b62-49b9-a353-547203a35db2" name="Fail" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="615" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ee0a01bc-752f-4e02-8989-1afee7164126</onsuccess><calculation expression="False" stage="Success" /></stage><stage stageid="ceaedade-3a4c-4a8b-9a04-4bd83c31ae99" name="Rolling Period Length" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="330" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="73d86166-982d-4051-bfd5-ec8bbbc5601b" name="Message" type="Calculation"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="195" y="390" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cc3f1a18-65f7-4e46-af57-b9304bfae638</onsuccess><calculation expression="&quot;Rolling period length must be at least 1 - the value supplied was &quot; &amp; [Rolling Period Length]" stage="Error Message" /></stage><stage stageid="cc3f1a18-65f7-4e46-af57-b9304bfae638" name="anchor5" type="Anchor"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><loginhibit /><display x="255" y="390" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>8a7cf9ae-3b62-49b9-a353-547203a35db2</onsuccess></stage><stage stageid="db942bb1-2512-450b-8950-5b70e390a963" name="Start" type="Start"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Numerator Values" narrative="The series of numbers to find the moving average from" stage="Numerator Values" /><input type="flag" name="Break at Zero Points" narrative="Set to true if you wish to break at zero points" stage="Break at Zero Points" /><input type="number" name="Denominator Value" narrative="The value of the denominator" stage="Denominator Value" /><input type="number" name="Rolling Period Length" narrative="The length of the rolling period" stage="Rolling Period Length" /></inputs><onsuccess>367b78a9-9ec7-428c-b05f-f110867db44b</onsuccess></stage><stage stageid="572eadfb-2155-477d-9c9e-673e9165b282" name="Numerator Values" type="Collection"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="105" y="-75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="62ab1f32-b02f-40bb-8e72-6c276a0c120b" name="Denominator Values" type="Collection"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="195" y="-75" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="f1260d13-d4a4-445a-92ae-0875aee1b5ab" name="Break at Zero Points" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="270" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="75c9aeb4-a05c-44bf-b27a-1443915f64e9" name="Rolling Period Length" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="330" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="bf7abf49-661d-4dbe-97c7-667eb5625132" name="Denominator Value" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="390" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="367b78a9-9ec7-428c-b05f-f110867db44b" name="Create Collection of Denominators" type="Code"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Denominator Value" expr="[Denominator Value]" /><input type="collection" name="Numerator Values" expr="[Numerator Values]" /></inputs><outputs><output type="collection" name="Denominator Values" stage="Denominator Values" /></outputs><onsuccess>507e4969-eaa9-43a2-804b-8bf5be4a61a3</onsuccess><code><![CDATA[Denominator_Values = New DataTable
For Each Col As DataColumn In Numerator_Values.Columns
	Denominator_Values.Columns.Add(Col.ColumnName, Col.DataType)
Next

Dim Values(Numerator_Values.Columns.Count - 1) As Object
For I As Integer = 0 to Values.Length - 1
	Values(I) = Denominator_Value
Next

Denominator_Values.Rows.Add(Values)]]></code></stage><stage stageid="507e4969-eaa9-43a2-804b-8bf5be4a61a3" name="Calculate Rolling Average (variable denominator)" type="SubSheet"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="60" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Numerator Values" expr="[Numerator Values]" /><input type="collection" name="Denominator Values" expr="[Denominator Values]" /><input type="flag" name="Break at Zero Points" expr="[Break at Zero Points]" /><input type="number" name="Rolling Period Length" expr="[Rolling Period Length]" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /><output type="flag" name="Success" stage="Success" /><output type="text" name="Error Message" stage="Error Message" /></outputs><onsuccess>4ce60b03-6f99-47c5-950d-fc05cefe43a1</onsuccess><processid>d3813186-bbc2-4727-a08a-76df7f3419dc</processid></stage><stage stageid="ba3e72a6-040e-4165-8939-03ec2a692985" name="Rolling Average Values" type="Collection"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="135" y="135" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4ce60b03-6f99-47c5-950d-fc05cefe43a1" name="End" type="End"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Rolling Average Values" narrative="The rolling average results" stage="Rolling Average Values" /><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Error Message" narrative="An error message if unsuccessful" stage="Error Message" /></outputs></stage><stage stageid="00eb3893-db7d-4d3f-b157-0394bdb87089" name="Success" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="-75" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7c88f089-49d0-4570-92b9-503aa351254f" name="Error Message" type="Data"><subsheetid>de3d40ad-d45c-476b-8cb3-409f48fda754</subsheetid><display x="-135" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="40deed37-b05e-4037-b736-bb1740a16c51" name="Numerator Column Count" type="Data"><subsheetid>d3813186-bbc2-4727-a08a-76df7f3419dc</subsheetid><display x="105" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1e7926d4-4a29-45b7-83aa-d22db8282755" name="Test Rolling Averages" type="SubSheetInfo"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="32577fe1-e27f-4535-ac18-32ff8bca2032" name="Start" type="Start"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>71dc7a66-0c37-40fd-b429-60977d11f142</onsuccess></stage><stage stageid="19417cd9-95e3-4bf4-86f2-c7d56836e454" name="End" type="End"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="405" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="20c17df7-c7f5-4432-a281-0557bdc717a8" name="Coll1" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="-150" y="0" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field1" type="number" /><field name="Field2" type="number" /><field name="Field3" type="number" /><field name="Field4" type="number" /><field name="Field5" type="number" /><field name="Field6" type="number" /></collectioninfo><initialvalue><row><field name="Field1" type="number" value="1" /><field name="Field2" type="number" value="2" /><field name="Field3" type="number" value="3" /><field name="Field4" type="number" value="0" /><field name="Field5" type="number" value="5" /><field name="Field6" type="number" value="6" /></row></initialvalue></stage><stage stageid="16047749-2018-47aa-a0a3-94d25443857a" name="Coll2" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="-150" y="75" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field1" type="number" /><field name="Field2" type="number" /><field name="Field3" type="number" /><field name="Field4" type="number" /><field name="Field5" type="number" /><field name="Field6" type="number" /></collectioninfo><initialvalue><row><field name="Field1" type="number" value="6" /><field name="Field2" type="number" value="5" /><field name="Field3" type="number" value="4" /><field name="Field4" type="number" value="0" /><field name="Field5" type="number" value="2" /><field name="Field6" type="number" value="1" /></row></initialvalue></stage><stage stageid="71dc7a66-0c37-40fd-b429-60977d11f142" name="Calculate Rolling Average (variable denominator)" type="SubSheet"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="-45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Numerator Values" expr="[Coll1]" /><input type="collection" name="Denominator Values" expr="[Coll2]" /><input type="flag" name="Break at Zero Points" expr="True" /><input type="number" name="Rolling Period Length" expr="2" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values" /><output type="flag" name="Success" /><output type="text" name="Error Message" stage="" /></outputs><onsuccess>6a98671a-73dd-46f1-9df0-16a9ae0e160b</onsuccess><processid>d3813186-bbc2-4727-a08a-76df7f3419dc</processid></stage><stage stageid="1755ffff-dcfe-4188-a6ed-01e4a5a2a8ca" name="Rolling Average Values" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><display x="120" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6a98671a-73dd-46f1-9df0-16a9ae0e160b" name="Calculate Rolling Average (variable denominator)" type="SubSheet"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><loginhibit /><display x="15" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Numerator Values" expr="[Coll1]" /><input type="flag" name="Break at Zero Points" expr="True" /><input type="number" name="Rolling Period Length" expr="2" /><input type="number" name="Denominator Value" expr="5" /></inputs><outputs><output type="collection" name="Rolling Average Values" stage="Rolling Average Values 2" /><output type="flag" name="Success" /><output type="text" name="Error Message" stage="" /></outputs><onsuccess>19417cd9-95e3-4bf4-86f2-c7d56836e454</onsuccess><processid>de3d40ad-d45c-476b-8cb3-409f48fda754</processid></stage><stage stageid="8b1cb360-9652-488d-abfb-d69089a24ce1" name="Rolling Average Values 2" type="Collection"><subsheetid>92089dfa-b677-47d9-89dd-d830e0728e56</subsheetid><display x="120" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage></process></object>
        <object id="da5adf86-56dd-4736-afee-e41cf1ca9340" name="Utility - PDF Read To Variable" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - PDF Read To Variable" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="PDF_ConvertpdftoText"><id>f193a959-463a-4f44-b09d-200a8e52e605</id><element name="window_AdobeWindow"><id>86816dde-342d-445e-9da7-e4d2179acca6</id><type>Window</type><basetype>Window</basetype><datatype>text</datatype><diagnose>False</diagnose><attributes><attribute name="WindowText" comparisontype="dynamic" inuse="True"><ProcessValue datatype="text" value="*Adobe Reader" /></attribute><attribute name="ClassName"><ProcessValue datatype="text" value="AcrobatSDIWindow" /></attribute><attribute name="CtrlID"><ProcessValue datatype="number" value="1084711440" /></attribute><attribute name="X"><ProcessValue datatype="number" value="30" /></attribute><attribute name="Y"><ProcessValue datatype="number" value="30" /></attribute><attribute name="Width"><ProcessValue datatype="number" value="1022" /></attribute><attribute name="Height"><ProcessValue datatype="number" value="981" /></attribute><attribute name="Visible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="ScreenVisible" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Enabled" inuse="True"><ProcessValue datatype="flag" value="True" /></attribute><attribute name="Active"><ProcessValue datatype="flag" value="False" /></attribute><attribute name="Ordinal"><ProcessValue datatype="number" value="6" /></attribute><attribute name="ChildCount"><ProcessValue datatype="number" value="8" /></attribute><attribute name="AncestorsText"><ProcessValue datatype="text" value="&lt;UNKNOWN&gt; " /></attribute><attribute name="AncestorCount"><ProcessValue datatype="number" value="1" /></attribute><attribute name="TypeName" inuse="True"><ProcessValue datatype="text" value="AcrobatSDIWindow" /></attribute><attribute name="ScreenBounds"><ProcessValue datatype="text" value="RECT:38,81,1002,1043" /></attribute><attribute name="Style"><ProcessValue datatype="number" value="382664704" /></attribute><attribute name="MatchIndex" inuse="True"><ProcessValue datatype="number" value="1" /></attribute><attribute name="MatchReverse"><ProcessValue datatype="flag" value="True" /></attribute></attributes></element><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>Win32Launch</id><parameters><parameter><name>Path</name><value>C:\Program Files (x86)\Adobe\Reader 11.0\Reader\AcroRd32.exe</value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>WorkingDirectory</name><value></value></parameter><parameter><name>NonInvasive</name><value>True</value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter><parameter><name>Options</name><value></value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="8b56b908-d72c-414e-8e0e-9b41cfabbcbe" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="195fb680-9a39-4fc4-9261-8c785e10b9b5" type="Normal" published="True"><name>Pdf to Txt</name><view><camerax>167</camerax><cameray>15</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f07d9481-ef5a-46ee-8da4-01dd28e0ed35" type="Normal" published="True"><name>Pdf - Txt</name><view><camerax>-178</camerax><cameray>-45</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="c65d6270-48a5-4f8e-b5f5-8231b28f5084" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>5b34f3b6-df78-46a7-adda-fa08923ec1df</onsuccess></stage><stage stageid="5b34f3b6-df78-46a7-adda-fa08923ec1df" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="7fea6e4a-3d24-4e90-8263-dd16f9a2347f" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="5f21b018-28ce-4cd7-92e6-d40662f059f2" name="Clean Up" type="SubSheetInfo"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="2459ba60-9bca-46b6-b812-23f71e3193a8" name="Start" type="Start"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>6447a040-42ba-4852-8e35-e1d4fc0f5513</onsuccess></stage><stage stageid="6447a040-42ba-4852-8e35-e1d4fc0f5513" name="End" type="End"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="b1daae46-e08f-49fd-8cca-147443783b9a" name="Pdf to Txt" type="SubSheetInfo"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4dfabece-94df-486f-8120-f594211c31d3" name="Start" type="Start"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-195" /><inputs><input type="text" name="File Path" stage="FilePath" /><input type="number" name="TimeOut" stage="TimeOut" /></inputs><onsuccess>c0f13973-d7e0-4be3-90b8-c201c3b9097b</onsuccess></stage><stage stageid="ce31bf94-8155-4061-b70f-7a302f73bf3f" name="End" type="End"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="315" /><outputs><output type="text" name="Output Text" stage="Clipboard" /></outputs></stage><stage stageid="d1c7f793-7e4d-4ad5-8d1f-42f9a38a414b" name="Note1" type="Note"><subsheetid>8b56b908-d72c-414e-8e0e-9b41cfabbcbe</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c7627b98-7082-4eb1-8452-fb5c1f92c663" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="bd84f180-3e3c-474f-8b83-1fcce4219c25" name="Kiil Adobe Reader" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-75" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" expr="&quot;AcroRd32&quot;" /></inputs><onsuccess>3f124d90-5f75-48a2-8e86-6daa29e6bfa8</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="3f124d90-5f75-48a2-8e86-6daa29e6bfa8" name="Launch" type="Navigate"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-15" /><onsuccess>adb58d7c-4361-41c5-899a-0a848bb23fea</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value>[FilePath]</value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="44b0c9dc-32ad-40b4-9bf4-d6ecd2b5bf8c" name="FilePath" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-165" y="15" /><datatype>text</datatype><initialvalue xml:space="preserve">\\nrrisiprdsmb02\Artificial_Intelligence\PWC\POS\Statements\ALINMADIG1\1.pdf</initialvalue><private /><alwaysinit /></stage><stage stageid="e5d54118-13be-432f-a56e-b13fc6a5ec94" name="Activate and Click Centre" type="Navigate" interval="0.5"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="60" /><onsuccess>59fed3cc-3319-41e2-bd55-fa2d8d1a9350</onsuccess><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>[Title]</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>ActivateApp</id></action></step><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>[Title]</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>MouseClickCentre</id><arguments><argument><id>newtext</id><value></value></argument></arguments></action></step></stage><stage stageid="b703c482-5d9c-4df8-b279-2af8a9585888" name="Get Clipboard" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="180" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs><onsuccess>a3cec926-990d-4446-9563-9f1f504c2c11</onsuccess><resource object="Utility - Environment" action="Get Clipboard" /></stage><stage stageid="3ad7508f-d56d-4a85-a1e3-74f2ec53a447" name="Clipboard" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-165" y="75" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9860219-6f5c-4fa2-bba3-09e325de03a2" name="Title" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-165" y="45" /><datatype>text</datatype><initialvalue xml:space="preserve">*Adobe Reader*</initialvalue><private /><alwaysinit /></stage><stage stageid="c0f13973-d7e0-4be3-90b8-c201c3b9097b" name="Clear Clipboard" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="-135" /><onsuccess>bd84f180-3e3c-474f-8b83-1fcce4219c25</onsuccess><resource object="Utility - Environment" action="Clear Clipboard" /></stage><stage stageid="59fed3cc-3319-41e2-bd55-fa2d8d1a9350" name="Select All and Copy" type="Navigate" interval="5"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="120" /><onsuccess>d6dd94e7-43ee-4d6f-bc7d-745f32f5c02a</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeys</id><arguments><argument><id>newtext</id><value>"^a"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeys</id><arguments><argument><id>newtext</id><value>"^c"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="29b21fff-b330-4deb-8501-e5c1b96a9a44" name="Time Out - Wait for 2 sec" type="WaitEnd"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="60" w="30" h="30" /><onsuccess>e5d54118-13be-432f-a56e-b13fc6a5ec94</onsuccess><groupid>1a920236-8cab-48a5-a63b-5ffcc8085554</groupid></stage><stage stageid="adb58d7c-4361-41c5-899a-0a848bb23fea" name="Wait for 2 sec" type="WaitStart"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="-15" w="30" h="30" /><groupid>1a920236-8cab-48a5-a63b-5ffcc8085554</groupid><choices /><timeout>2</timeout></stage><stage stageid="0e060241-6d8e-45c0-a751-605e248e5a89" name="Time Out - Wait for 5 sec" type="WaitEnd"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="180" w="30" h="30" /><onsuccess>b703c482-5d9c-4df8-b279-2af8a9585888</onsuccess><groupid>d308c83d-1626-42d3-8a49-681e4529c252</groupid></stage><stage stageid="d6dd94e7-43ee-4d6f-bc7d-745f32f5c02a" name="Wait for 5 sec" type="WaitStart"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-15" y="120" w="30" h="30" /><groupid>d308c83d-1626-42d3-8a49-681e4529c252</groupid><choices /><timeout>[TimeOut]</timeout></stage><stage stageid="a977e5de-9866-4256-85b5-1b9defce3e97" name="Unable to kill Adobe." type="Block"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="30" y="-45" w="255" h="60" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="96e2a900-9b13-44ba-bf73-782a6c9022cd" name="Recover" type="Recover"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="240" y="-15" /><onsuccess>fcb9a509-7946-4a2d-b138-d0400c047ff9</onsuccess></stage><stage stageid="03a68075-409d-4a4a-868c-59aeb215900a" name="Resume" type="Resume"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="510" y="-15" /><onsuccess>4237c045-d164-4b06-a7d2-e0086ac7dff2</onsuccess></stage><stage stageid="18599178-e8f7-46fd-9fc7-d014a669fe79" name="Count" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-165" y="105" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="fcb9a509-7946-4a2d-b138-d0400c047ff9" name="Increment Count" type="Calculation"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="330" y="-15" /><onsuccess>c4707758-425d-42d7-b28d-ab233bb2266e</onsuccess><calculation expression="[Count]+1" stage="Count" /></stage><stage stageid="c4707758-425d-42d7-b28d-ab233bb2266e" name="Count Extended?" type="Decision"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="420" y="-15" /><decision expression="[Count]&gt;3" /><ontrue>e8d3c178-4974-4561-8fc6-d53fab8ac221</ontrue><onfalse>03a68075-409d-4a4a-868c-59aeb215900a</onfalse></stage><stage stageid="e8d3c178-4974-4561-8fc6-d53fab8ac221" name="System Exception" type="Exception"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="420" y="60" /><exception type="System Exception" detail="&quot;Unable to close Adobe Reader.&quot;" /></stage><stage stageid="838a892d-7190-4f5a-ae3e-57b8a9648608" name="Time Out - Wait for 2 sec" type="WaitEnd"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="420" y="-75" w="30" h="30" /><onsuccess>bd84f180-3e3c-474f-8b83-1fcce4219c25</onsuccess><groupid>b63fbb06-30f7-4381-9283-a12b0d2f0d22</groupid></stage><stage stageid="4237c045-d164-4b06-a7d2-e0086ac7dff2" name="Wait for 2 sec" type="WaitStart"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="510" y="-75" w="30" h="30" /><groupid>b63fbb06-30f7-4381-9283-a12b0d2f0d22</groupid><choices /><timeout>2</timeout></stage><stage stageid="3def2003-95dc-40b9-be5e-4fdb5a4e23c5" name="Text" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-165" y="135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="774a2079-fda0-4871-b408-a27d6b1f9ed9" name="TimeOut" type="Data"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="-165" y="165" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a3cec926-990d-4446-9563-9f1f504c2c11" name="Kiil Adobe Reader" type="Action"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="75" y="240" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" expr="&quot;AcroRd32&quot;" /></inputs><onsuccess>ce31bf94-8155-4061-b70f-7a302f73bf3f</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="02565b55-f483-403b-8331-d82f840ec058" name="Block1" type="Block"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="-60" y="30" w="285" h="240" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="f4ca2dd8-e0d4-465a-9aea-569f56e7b0d7" name="Recover1" type="Recover"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><loginhibit /><display x="180" y="225" /><onsuccess>baf6949c-85e4-4c7d-99a5-c35e934c03b2</onsuccess></stage><stage stageid="baf6949c-85e4-4c7d-99a5-c35e934c03b2" name="Exception1" type="Exception"><subsheetid>195fb680-9a39-4fc4-9261-8c785e10b9b5</subsheetid><display x="360" y="225" /><exception type="System Exceptiom" detail="Trim(&quot;Not able to work on the file. Unable to open file&quot;)" /></stage><stage stageid="48a6878f-b45d-4ac2-b6d3-99caa210e9d0" name="Pdf - Txt" type="SubSheetInfo"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="-390" y="-105" w="150" h="90" /></stage><stage stageid="1889a2a9-7db4-460a-8929-5dcea26e5ee0" name="Start" type="Start"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-300" y="15" /><inputs><input type="text" name="File Path" stage="File Path" /><input type="text" name="Application No" stage="txt_Application No" /></inputs><onsuccess>549f3bbf-e66d-4ec5-b621-eaeb5207c34c</onsuccess></stage><stage stageid="5deee92a-e01c-4c9d-bdee-1827e3c8c1b8" name="End" type="End"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="705" y="15" /><outputs><output type="text" name="Clipboard" stage="Clipboard" /></outputs></stage><stage stageid="0e970ad5-e37f-4603-8b46-8d2471b998c2" name="Launch Pdf File" type="Navigate"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="15" /><onsuccess>f5fc8742-e2e0-411c-b171-a40d4caf8230</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>Launch</id><arguments><argument><id>Path</id><value></value></argument><argument><id>CommandLineParams</id><value>[File Path]</value></argument><argument><id>WorkingDirectory</id><value></value></argument><argument><id>NonInvasive</id><value></value></argument><argument><id>ProcessMode</id><value></value></argument><argument><id>Options</id><value></value></argument></arguments></action></step></stage><stage stageid="bb4fc526-f7ee-4bb0-b992-51e66cf3353e" name="File Path" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="15" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ba248f4b-3c45-4c01-86c8-ff843f0a6d91" name="Inputs" type="Block"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-15" y="-165" w="195" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="7546bf10-6674-45c5-a2ed-68b0be769a76" name="Kill Adobe" type="Action"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-210" y="15" /><inputs><input type="text" name="Process Name" narrative="The name of the process to kill" expr="&quot;AcroRd32&quot;" /></inputs><onsuccess>32650fd3-c465-4214-bc0e-43a21596dfb4</onsuccess><resource object="Utility - Environment" action="Kill Process" /></stage><stage stageid="f5fc8742-e2e0-411c-b171-a40d4caf8230" name="PDF Opened?" type="Action"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="60" y="15" /><inputs><input type="text" name="Window Title" narrative="The title of the window to check" expr="&quot;*Adobe Reader&quot;" /><input type="flag" name="Use Wildcard Match" narrative="Set true to allow wildcards in the window title match" expr="True" /></inputs><outputs><output type="flag" name="Exists" narrative="True if the window exists" stage="PDF Window Exists?" /></outputs><onsuccess>2a725662-4b4d-45dd-bd9f-df4775860257</onsuccess><resource object="Utility - General" action="Window Exists" /></stage><stage stageid="168f22c5-c664-445c-b1b9-d1dcd096c684" name="PDF Window Exists?" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="-435" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a168fef7-7212-4dd1-aed4-c05e6e10bb3d" name="Outputs" type="Block"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-465" y="-45" w="75" h="195" /><font family="Segoe UI" size="10" style="Regular" color="CC99FF" /></stage><stage stageid="549f3bbf-e66d-4ec5-b621-eaeb5207c34c" name="Anchor1" type="Anchor"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-255" y="15" w="10" h="10" /><onsuccess>7546bf10-6674-45c5-a2ed-68b0be769a76</onsuccess></stage><stage stageid="84ad81b1-070e-4a3f-9752-9fe158288961" name="Retry" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="90" y="-135" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="f2baa5cf-f92b-4cec-8339-a3c2f916fab3" name="Detach" type="Navigate"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="300" y="15" /><onsuccess>50f3fca5-3b78-41e3-9e8a-43e18c1d5067</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>DetachApplication</id></action></step></stage><stage stageid="acecaad4-7511-48d0-b033-1242005affbd" name="Attach File" type="Navigate"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="450" y="15" /><onsuccess>1f31747b-9f00-4586-baaf-1dbdec56732d</onsuccess><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>AttachApplication</id><arguments><argument><id>WindowTitlesCollection</id><value></value></argument><argument><id>WindowTitle</id><value>"*"&amp;[txt_Application No]&amp;"*"</value></argument><argument><id>ProcessName</id><value>"AcroRd32"</value></argument><argument><id>ProcessID</id><value></value></argument><argument><id>Username</id><value></value></argument><argument><id>ChildIndex</id><value></value></argument></arguments></action></step></stage><stage stageid="2af6edd9-0175-43ed-a6ab-68bda4e4ed8b" name="Time Out - Wait for detach" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="450" y="-45" w="30" h="30" /><onsuccess>acecaad4-7511-48d0-b033-1242005affbd</onsuccess><groupid>8da6046a-e3d6-4614-b658-8ba9cfd60917</groupid></stage><stage stageid="50f3fca5-3b78-41e3-9e8a-43e18c1d5067" name="Wait for detach" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="300" y="-45" w="30" h="30" /><groupid>8da6046a-e3d6-4614-b658-8ba9cfd60917</groupid><choices /><timeout>3</timeout></stage><stage stageid="93375a51-8b33-4755-9869-914bfaaebc29" name="Attach Note" type="Note"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><narrative>Detach and Attach will make the Pdf Automation more certain</narrative><display x="375" y="15" w="60" h="60" /></stage><stage stageid="c11552df-eef4-429a-93c9-ffa7b3208d88" name="Recover" type="Recover"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="-30" /><onsuccess>bb962c76-e6a7-48e4-ad08-9239dcf7f66f</onsuccess></stage><stage stageid="2e44ac8e-1da5-4dc3-8413-d3f1750aefa4" name="Resume" type="Resume"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-255" y="-30" /><onsuccess>549f3bbf-e66d-4ec5-b621-eaeb5207c34c</onsuccess></stage><stage stageid="c16a55f1-321d-4aac-ba9e-e10ba7de2130" name="Block2" type="Block"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-75" y="-60" w="90" h="105" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="1f31747b-9f00-4586-baaf-1dbdec56732d" name="Select and Copy data" type="Navigate" interval="3"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="540" y="15" /><onsuccess>51cccb0a-9856-4004-8776-59d3f39394ea</onsuccess><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>"*"&amp;[txt_Application No]&amp;"*"</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>ActivateApp</id></action></step><step><element id="86816dde-342d-445e-9da7-e4d2179acca6"><elementparameter><name>WindowText</name><expression>"*"&amp;[txt_Application No]&amp;"*"</expression><datatype>text</datatype><comparisontype>Wildcard</comparisontype></elementparameter></element><action><id>MouseClickCentre</id><arguments><argument><id>newtext</id><value></value></argument></arguments></action></step><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeyEvents</id><arguments><argument><id>newtext</id><value>"&lt;{CTRL}A&gt;{CTRL}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step><step><element id="f193a959-463a-4f44-b09d-200a8e52e605" /><action><id>SendKeyEvents</id><arguments><argument><id>newtext</id><value>"&lt;{CTRL}C&gt;{CTRL}"</value></argument><argument><id>interval</id><value></value></argument></arguments></action></step></stage><stage stageid="233171ed-fb12-47f9-afb7-28631e95a035" name="Get Clipboard " type="Action"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="615" y="15" /><outputs><output type="text" name="Clipboard" narrative="The value from the clipboard." stage="Clipboard" /></outputs><onsuccess>5deee92a-e01c-4c9d-bdee-1827e3c8c1b8</onsuccess><resource object="Utility - Environment" action="Get Clipboard" /></stage><stage stageid="61c64aac-a388-4469-9f1c-a5790e90d0d5" name="Clipboard" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="-435" y="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="841193cc-26d4-4a3c-9002-25c93e0bdab5" name="Increment Retry Count" type="Calculation"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-255" y="-75" /><onsuccess>2e44ac8e-1da5-4dc3-8413-d3f1750aefa4</onsuccess><calculation expression="[Retry]+1" stage="Retry" /></stage><stage stageid="bb962c76-e6a7-48e4-ad08-9239dcf7f66f" name="Retry Count=3 ?" type="Decision"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-30" y="-75" /><decision expression="[Retry]=3" /><ontrue>096ef0e1-d715-4e20-bbf3-6bec7e230951</ontrue><onfalse>841193cc-26d4-4a3c-9002-25c93e0bdab5</onfalse></stage><stage stageid="096ef0e1-d715-4e20-bbf3-6bec7e230951" name="Adobe Launch Error" type="Exception"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><display x="75" y="-75" /><exception type="System Exception" detail="&quot;Unable to Launch file in Adobe Reader&quot;" /></stage><stage stageid="b6676700-5aa6-413b-8d91-aaaac07c699b" name="Time Out1" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="615" y="-45" w="30" h="30" /><onsuccess>233171ed-fb12-47f9-afb7-28631e95a035</onsuccess><groupid>e511545a-8057-402e-9655-f11578d6e720</groupid></stage><stage stageid="51cccb0a-9856-4004-8776-59d3f39394ea" name="Wait1" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="540" y="-45" w="30" h="30" /><groupid>e511545a-8057-402e-9655-f11578d6e720</groupid><choices /><timeout>5</timeout></stage><stage stageid="84aabb51-eac7-4b30-befe-db77cff92325" name="Time Out2" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-90" y="15" w="30" h="30" /><onsuccess>0e970ad5-e37f-4603-8b46-8d2471b998c2</onsuccess><groupid>5e5f2e69-14cb-4043-ab78-314043a15a6a</groupid></stage><stage stageid="32650fd3-c465-4214-bc0e-43a21596dfb4" name="Wait2" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="-150" y="15" w="30" h="30" /><groupid>5e5f2e69-14cb-4043-ab78-314043a15a6a</groupid><choices /><timeout>8</timeout></stage><stage stageid="46d2c508-4666-483c-9173-730f5820b41e" name="Time Out2" type="WaitEnd"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="180" y="15" w="30" h="30" /><onsuccess>f2baa5cf-f92b-4cec-8339-a3c2f916fab3</onsuccess><groupid>9ee63cb3-c57b-4321-b577-53b49978f92b</groupid></stage><stage stageid="2a725662-4b4d-45dd-bd9f-df4775860257" name="Wait2" type="WaitStart"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="120" y="15" w="30" h="30" /><groupid>9ee63cb3-c57b-4321-b577-53b49978f92b</groupid><choices /><timeout>8</timeout></stage><stage stageid="613c930f-81d5-43d1-8b27-110889c1dc7a" name="txt_Application No" type="Data"><subsheetid>f07d9481-ef5a-46ee-8da4-01dd28e0ed35</subsheetid><loginhibit /><display x="150" y="-135" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="198719dc-8546-4744-b8d9-8f18c81328c1" name="Utility - PDF To Text File Extractor" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - PDF To Text File Extractor" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>5e180f6c-6db8-42d1-9efb-f2aad532d825</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-157</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="6e51405f-663e-4fe8-ac19-25294891a9e4" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="88eed0b8-10f6-4927-8544-03988a582786" type="Normal" published="True"><name>EMKAN - Extract Defaults Table Line by Line</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3551b427-2829-405e-90ab-8116f816712a" type="Normal" published="True"><name>EMKAN - Extract Defaults Table (Collection)</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="2e67965f-8f39-4fb8-ae7d-8be4c7db4b80" type="Normal" published="True"><name>EMKAN - Extract Credit Table (Collection)</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="7a118868-bf09-49b5-8306-176c72cc19cd" type="Normal" published="False"><name>Extract Text</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="a716ed96-ccac-4cbb-a129-fa02d68f081e" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>29fa2f58-d0df-4144-a17d-69e0bfd8fbd2</onsuccess></stage><stage stageid="29fa2f58-d0df-4144-a17d-69e0bfd8fbd2" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="82fa4622-890b-413c-b26e-1a1abd4fbbb8" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>itextsharp.dll</reference><reference>BouncyCastle.Crypto.dll</reference><reference>System.Core.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Text</import><import>System.IO</import><import>iTextSharp.text.pdf</import><import>iTextSharp.text.pdf.parser</import><import>System.Collections.Generic</import><import>System.Text.RegularExpressions</import><import>System.Linq</import><import>System.Globalization</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[public class PdfTextExtractorUtility
{
    public static (bool, string) ExtractTextFromPdf(string path, string outpath)
    {
        StringBuilder sb = new StringBuilder();
        try
        {
            using (PdfReader reader = new PdfReader(path))
            {
				using (StreamWriter outputFile = new StreamWriter(outpath, false, Encoding.UTF8))
                {
                 for (int i = 1; i <= reader.NumberOfPages; i++)
                 {
                     sb.AppendLine(PdfTextExtractor.GetTextFromPage(reader, i,new SimpleTextExtractionStrategy()));
					 string text = PdfTextExtractor.GetTextFromPage(reader, i, new SimpleTextExtractionStrategy());
                     outputFile.WriteLine(text);
                 }
				}
            } 

            //File.WriteAllText(outpath, sb.ToString());
            return (true, sb.ToString());
        }
        catch (Exception ex)
        {
            // Log the exception details if necessary
            // Console.WriteLine(ex.ToString());
            return (false, $"Error: Failed to extract text - {ex.Message}");
        }
    }

    public static (bool, string) ExtractTextFromPdfData(string path)
    {
        StringBuilder sb = new StringBuilder();
        try
        {
            using (PdfReader reader = new PdfReader(path))
            {
                 for (int i = 1; i <= reader.NumberOfPages; i++)
                 {
                     sb.AppendLine(PdfTextExtractor.GetTextFromPage(reader, i,new SimpleTextExtractionStrategy()));
                 }
            } 
            return (true, sb.ToString());
        }
        catch (Exception ex)
        {
            // Log the exception details if necessary
            // Console.WriteLine(ex.ToString());
            return (false, $"Error: Failed to extract text - {ex.Message}");
        }
    }
}


public class TextProcessingUtility
{
    // Method to process input text directly
    public static DataTable ProcessDefaultsSectionFromText(string inputText)
    {
        DataTable dataTable = new DataTable();
        dataTable.Columns.Add("DefaultsTableEntry", typeof(string));

        // Split the input text into lines
        string[] lines = inputText.Split(new[] { '\n', '\r' }, StringSplitOptions.RemoveEmptyEntries);
        bool isDefaultsSection = false;

        foreach (var line in lines)
        {
            if (line.StartsWith(" Defaults") && !line.StartsWith("Defaults as Guarantor"))
            {
                isDefaultsSection = true;
                continue;
            }

            if (line.StartsWith("Defaults as Guarantor"))
            {
                break;
            }

            if (isDefaultsSection)
            {
                if (!line.StartsWith("Product Type") && !line.Trim().Equals("Balance") && !string.IsNullOrWhiteSpace(line) && !line.StartsWith("Status Settlement Date"))
                {
                    DataRow row = dataTable.NewRow();
                    row["DefaultsTableEntry"] = ProcessEntry(line);
                    dataTable.Rows.Add(row);
                }
            }
        }

        return dataTable;
    }

    // Helper method to process each entry
    private static string ProcessEntry(string entry)
    {
        var parts = entry.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);
        return string.Join(" | ", parts);
    }
}


// code for Defalts collection START

public class ExtractDefaultsTable
{
    public static string ExtractDefaultsSection(string inputText)
    {
        var startIndex = inputText.IndexOf("Defaults");
        var endIndex = inputText.IndexOf("Defaults as Guarantor");
        if (startIndex != -1 && endIndex != -1)
        {
            return inputText.Substring(startIndex, endIndex - startIndex);
        }
        return string.Empty;
    }

    public static DataTable ParseDefaultsDetailsToDataTable(string defaultsSection)
    {
        DataTable dataTable = new DataTable();
        dataTable.Columns.Add("Product Type", typeof(string));
        dataTable.Columns.Add("Creditor", typeof(string));
        dataTable.Columns.Add("Account Number", typeof(string));
        dataTable.Columns.Add("Date Loaded", typeof(string));
        dataTable.Columns.Add("Original Amount", typeof(decimal));
        dataTable.Columns.Add("Outstanding Balance", typeof(decimal));
        dataTable.Columns.Add("Status", typeof(string));
        dataTable.Columns.Add("Settlement Date", typeof(string));

        string pattern = @"(.*?)\s([A-Z]+)\s([\w-_.]+)\s(\d{2}/\d{2}/\d{4})\s([\d.]+)\s([\d.]+)\s([A-Z]+)(?:\s(\d{2}/\d{2}/\d{4}))?";
        var matches = Regex.Matches(defaultsSection, pattern);

        foreach (Match match in matches)
        {
            if (match.Success)
            {
                DataRow row = dataTable.NewRow();
                row["Product Type"] = match.Groups[1].Value.Trim();
                row["Creditor"] = match.Groups[2].Value.Trim();
                row["Account Number"] = match.Groups[3].Value.Trim();
                row["Date Loaded"] = DateTime.ParseExact(match.Groups[4].Value, "dd/MM/yyyy", null).ToString("dd/MM/yyyy");
                row["Original Amount"] = decimal.Parse(match.Groups[5].Value);
                row["Outstanding Balance"] = decimal.Parse(match.Groups[6].Value);
                row["Status"] = match.Groups[7].Value.Trim();
                row["Settlement Date"] = match.Groups[8].Success ? (object)DateTime.ParseExact(match.Groups[8].Value, "dd/MM/yyyy", null).ToString("dd/MM/yyyy") : DBNull.Value;

                dataTable.Rows.Add(row);
            }
        }

        return dataTable;
    }
}
// code for Defalts collection END


// code for Credit Instrument Details START


public class ExtractCreditTable
{
  public static List<Dictionary<string, string>> ParseTextIntoRecords(string text, List<string> keys)
    {
        var records = new List<Dictionary<string, string>>();
        var currentRecord = new Dictionary<string, string>();
        var lines = text.Split(new[] { "\r\n", "\n" }, StringSplitOptions.None);

        foreach (var line in lines)
        {
            if (string.IsNullOrWhiteSpace(line))
                continue; // Skip empty lines

            bool isNewRecord = line.Contains("Creditor") && currentRecord.Count > 0;
            if (isNewRecord)
            {
                records.Add(new Dictionary<string, string>(currentRecord));
                currentRecord.Clear();
            }

            foreach (var key in keys)
            {
                if (line.Contains(key))
                {
                   var keyValue = line.Substring(line.IndexOf(key) + key.Length).Trim();
                    //new_line = line.Substring(line.IndexOf(key) + key.Length).Trim();
                    if (keyValue.IndexOf(' ') != -1)
                    {
                        keyValue = keyValue.Substring(0, keyValue.IndexOf(' '));
                    }
                    currentRecord[key] = keyValue;
                }
            }
        }

        if (currentRecord.Count > 0)
        {
            records.Add(currentRecord);
        }

        return records;
    }
	 public static DataTable CreateDataTable(List<string> keys)
    {
        DataTable table = new DataTable("CreditInstruments");

        // Add columns to the DataTable
        foreach (var key in keys)
        {
            table.Columns.Add(key);
        }

        return table;
    }
	  public static void PopulateDataTable(DataTable table, List<Dictionary<string, string>> records)
    {
        foreach (var record in records)
        {
            DataRow row = table.NewRow();

            foreach (var key in record.Keys)
            {
                if (table.Columns.Contains(key))
                {
                    row[key] = record[key];
                }
            }

            table.Rows.Add(row);
        }
    }
}

// code for Credit Instrument Details END]]></code></stage><stage stageid="5fde1254-23a5-48c7-9db4-1f96e3adba09" name="Clean Up" type="SubSheetInfo"><subsheetid>6e51405f-663e-4fe8-ac19-25294891a9e4</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5a02da25-fef3-4e6f-b76a-bb79371fd36d" name="Start" type="Start"><subsheetid>6e51405f-663e-4fe8-ac19-25294891a9e4</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>cd8758b4-fbb0-4d95-a23b-264fbcc8d5b5</onsuccess></stage><stage stageid="cd8758b4-fbb0-4d95-a23b-264fbcc8d5b5" name="End" type="End"><subsheetid>6e51405f-663e-4fe8-ac19-25294891a9e4</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="be64fa08-f03f-4d37-bdbd-287cbb8d28d9" name="" type="Note"><subsheetid>6e51405f-663e-4fe8-ac19-25294891a9e4</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="dba9909a-e442-457c-acf3-c33efb85f5f7" name="" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="c007e171-a92c-48cb-a1d1-6063c3a4b1f9" name="EMKAN - Extract Defaults Table Line by Line" type="SubSheetInfo"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="063005fa-4a7a-469d-9f0b-6c9e44e0be4b" name="End" type="End"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><loginhibit /><display x="0" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="9a25fd09-8898-48c4-8c11-169829fc8ef5" name="Start" type="Start"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><loginhibit /><display x="0" y="-120" /><inputs><input type="text" name="PDF Path" stage="PDF Path" /></inputs><onsuccess>eac763be-ce22-4452-808c-a0ac9cb21326</onsuccess></stage><stage stageid="1ebad7d4-dd0d-4655-b1b4-996d1cbe5cf5" name="EMKAN - Extract Defaults Table" type="Code"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><loginhibit /><display x="0" y="45" /><inputs><input type="text" name="PdfText" expr="[Message]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>063005fa-4a7a-469d-9f0b-6c9e44e0be4b</onsuccess><code><![CDATA[Result = TextProcessingUtility.ProcessDefaultsSectionFromText(PdfText);]]></code></stage><stage stageid="470e283c-8a97-4126-a912-f3445e4fa734" name="PDF Path" type="Data"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><display x="-225" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0227d67d-4b0b-406c-aab2-0f41fafba404" name="Success" type="Data"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><display x="-240" y="120" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5fc99d9-ed02-4ed9-827d-a14224da23b3" name="Message" type="Data"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><display x="-180" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c4c434a-7367-4e40-822b-4fcdca96e102" name="Result" type="Collection"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><display x="-240" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="eac763be-ce22-4452-808c-a0ac9cb21326" name="Extract Text" type="SubSheet"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><loginhibit /><display x="0" y="-60" /><inputs><input type="text" name="PDF Path" friendlyname="PDF Path" expr="[PDF Path]" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" stage="Success" /><output type="text" name="Message" friendlyname="Message" stage="Message" /></outputs><onsuccess>6e6ada66-7a19-4533-9a2b-f7041d859c3c</onsuccess><processid>7a118868-bf09-49b5-8306-176c72cc19cd</processid></stage><stage stageid="edf517f1-9b77-474f-95e8-779b2ce939de" name="End" type="End"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><loginhibit /><display x="150" y="-15" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="6e6ada66-7a19-4533-9a2b-f7041d859c3c" name="Successfully Extracted Data?" type="Decision"><subsheetid>88eed0b8-10f6-4927-8544-03988a582786</subsheetid><loginhibit /><display x="0" y="-15" /><decision expression="[Success]" /><ontrue>1ebad7d4-dd0d-4655-b1b4-996d1cbe5cf5</ontrue><onfalse>edf517f1-9b77-474f-95e8-779b2ce939de</onfalse></stage><stage stageid="f702b285-6122-42ee-82e4-375143fdca08" name="EMKAN - Extract Defaults Table (Collection)" type="SubSheetInfo"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="c36fb392-6fde-4a32-9b79-e6c68559038c" name="End" type="End"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><loginhibit /><display x="0" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="da030f9c-621b-4a97-b86b-08ff33153978" name="Start" type="Start"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><loginhibit /><display x="0" y="-120" /><inputs><input type="text" name="PDF Path" stage="PDF Path" /></inputs><onsuccess>9262a326-2b9f-4f7f-b3a4-aa488241395c</onsuccess></stage><stage stageid="437e2ed9-edd0-42bc-988d-a87a0686adc7" name="EMKAN - Extract Defaults Table (Collection)" type="Code"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><loginhibit /><display x="0" y="45" /><inputs><input type="text" name="PdfText" expr="[Message]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>c36fb392-6fde-4a32-9b79-e6c68559038c</onsuccess><code><![CDATA[ string defaultsSection = ExtractDefaultsTable.ExtractDefaultsSection(PdfText);
 Result = ExtractDefaultsTable.ParseDefaultsDetailsToDataTable(defaultsSection);]]></code></stage><stage stageid="f35db562-912d-4fdb-80b1-e590bdff1f64" name="PDF Path" type="Data"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><display x="-225" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7c139a6-b50d-4bd2-8025-1051c2f05829" name="Success" type="Data"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><display x="-240" y="120" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="03c7f2ce-521a-4a78-836b-f2d62c97ff52" name="Message" type="Data"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><display x="-180" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a348dfd6-eb7d-45dc-9138-8f03a2704606" name="Result" type="Collection"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><display x="-240" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="dfbe2f5a-0a73-4dc3-b9c5-567ceea31703" name="End" type="End"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><loginhibit /><display x="150" y="-15" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="20e4e26d-d691-4e5e-90f1-efbb901582fa" name="Successfully Extracted Data?" type="Decision"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><loginhibit /><display x="0" y="-15" /><decision expression="[Success]" /><ontrue>437e2ed9-edd0-42bc-988d-a87a0686adc7</ontrue><onfalse>dfbe2f5a-0a73-4dc3-b9c5-567ceea31703</onfalse></stage><stage stageid="04c6240a-fd8e-45fd-b1da-1199f487a4fb" name="EMKAN - Extract Credit Table (Collection)" type="SubSheetInfo"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="dad0116a-0c82-4848-aa56-82ff1a80c799" name="End" type="End"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><loginhibit /><display x="0" y="105" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="f96ff408-d72a-4106-949a-b20cde195ad9" name="Start" type="Start"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><loginhibit /><display x="0" y="-120" /><inputs><input type="text" name="PDF Path" stage="PDF Path" /></inputs><onsuccess>07f5af4a-f3ae-4d0b-8ae2-1c1be3a6bc5e</onsuccess></stage><stage stageid="1b8276bd-3449-4051-9882-340eaea17279" name="EMKAN - Extract Credit Table (Collection)" type="Code"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><loginhibit /><display x="0" y="45" /><inputs><input type="text" name="inputText" expr="[Message]" /></inputs><outputs><output type="collection" name="Result" stage="Result" /></outputs><onsuccess>dad0116a-0c82-4848-aa56-82ff1a80c799</onsuccess><code><![CDATA[ // Place your actual input text here

        // Replace "Total Defaults" with "End Here"
        string pattern = @"Total Defaults";
        string replacement = "End Here";
        inputText = Regex.Replace(inputText, pattern, replacement);

        // Extract the relevant section between "Credit Instrument Details" and "Defaults"
        int startIndexOfDetails = inputText.IndexOf("Credit Instrument Details");
        int endIndexOfDefaults = inputText.IndexOf(" Defaults", startIndexOfDetails);
        string relevantText = inputText.Substring(startIndexOfDetails, endIndexOfDefaults - startIndexOfDetails);

        // Define keys for parsing
        var keys = new List<string> {
            "Creditor", "Issue Date", "Product Type", "Expiry Date", "Account Number",
            "Closed Date", "Limit", "Status", "Tenure", "Payment Frequency",
            "Installment Amount", "Salary Flag", "Security Type", "Past Due",
            "Outstanding Balance", "Last Payment Date", "Last Amount Paid", "Next Due date",
            "As Of Date", "Last 24 Cycles"
        };
		
		
        // Parse the relevant text into records
       var records = ExtractCreditTable.ParseTextIntoRecords(relevantText, keys);
	    
		DataTable table1 = ExtractCreditTable.CreateDataTable(keys);
        ExtractCreditTable.PopulateDataTable(table1, records);
		
		Result = table1;]]></code></stage><stage stageid="c4c7a93d-d0f7-4b9f-afd3-48bc674689b3" name="PDF Path" type="Data"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><display x="-225" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="625d9746-cb48-45cf-83a5-f50abb6ecae7" name="Success" type="Data"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><display x="-240" y="120" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d9ccd585-bf96-4af9-a755-a847c314a851" name="Message" type="Data"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><display x="-180" y="120" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ebf66b01-60ea-42db-b4de-546c32b19a40" name="Result" type="Collection"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><display x="-240" y="45" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="201ef268-bd39-47ed-80bf-898bc46f0a25" name="End" type="End"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><loginhibit /><display x="150" y="-15" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /><output type="collection" name="Result" stage="Result" /></outputs></stage><stage stageid="aa6160ba-4af6-4c34-9523-507c53b36b46" name="Successfully Extracted Data?" type="Decision"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><loginhibit /><display x="0" y="-15" /><decision expression="[Success]" /><ontrue>1b8276bd-3449-4051-9882-340eaea17279</ontrue><onfalse>201ef268-bd39-47ed-80bf-898bc46f0a25</onfalse></stage><stage stageid="a134a103-2701-4aa3-983d-a33d2715f0d7" name="Extract Text" type="SubSheetInfo"><subsheetid>7a118868-bf09-49b5-8306-176c72cc19cd</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="16a6aca9-844d-4641-8fa8-c6e5637ceaa7" name="Extract TEXT" type="Code"><subsheetid>7a118868-bf09-49b5-8306-176c72cc19cd</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="text" name="pdfPath" expr="[PDF Path]" /></inputs><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs><onsuccess>c679adcc-ee14-433c-b628-d446a6b2193c</onsuccess><code><![CDATA[var result = PdfTextExtractorUtility.ExtractTextFromPdfData(pdfPath);

Success = result.Item1;
Message = result.Item2;]]></code></stage><stage stageid="ab11b28d-2398-4630-8bf5-0ddae3789e3d" name="Message" type="Data"><subsheetid>7a118868-bf09-49b5-8306-176c72cc19cd</subsheetid><display x="-225" y="15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="bd083c7d-6547-4615-ba00-50ae62b794de" name="Success" type="Data"><subsheetid>7a118868-bf09-49b5-8306-176c72cc19cd</subsheetid><display x="-165" y="15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2b51a5b8-a3e0-46ea-9c5d-244f05219577" name="Start" type="Start"><subsheetid>7a118868-bf09-49b5-8306-176c72cc19cd</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="text" name="PDF Path" stage="PDF Path" /></inputs><onsuccess>16a6aca9-844d-4641-8fa8-c6e5637ceaa7</onsuccess></stage><stage stageid="00f22a90-6a1b-43ee-b6cb-3998bf351dd5" name="PDF Path" type="Data"><subsheetid>7a118868-bf09-49b5-8306-176c72cc19cd</subsheetid><display x="-210" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c679adcc-ee14-433c-b628-d446a6b2193c" name="End" type="End"><subsheetid>7a118868-bf09-49b5-8306-176c72cc19cd</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="flag" name="Success" stage="Success" /><output type="text" name="Message" stage="Message" /></outputs></stage><stage stageid="9262a326-2b9f-4f7f-b3a4-aa488241395c" name="Extract Text" type="SubSheet"><subsheetid>3551b427-2829-405e-90ab-8116f816712a</subsheetid><loginhibit /><display x="0" y="-75" /><inputs><input type="text" name="PDF Path" friendlyname="PDF Path" expr="[PDF Path]" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" stage="Success" /><output type="text" name="Message" friendlyname="Message" stage="Message" /></outputs><onsuccess>20e4e26d-d691-4e5e-90f1-efbb901582fa</onsuccess><processid>7a118868-bf09-49b5-8306-176c72cc19cd</processid></stage><stage stageid="07f5af4a-f3ae-4d0b-8ae2-1c1be3a6bc5e" name="Extract Text" type="SubSheet"><subsheetid>2e67965f-8f39-4fb8-ae7d-8be4c7db4b80</subsheetid><loginhibit /><display x="0" y="-60" /><inputs><input type="text" name="PDF Path" friendlyname="PDF Path" expr="[PDF Path]" /></inputs><outputs><output type="flag" name="Success" friendlyname="Success" stage="Success" /><output type="text" name="Message" friendlyname="Message" stage="Message" /></outputs><onsuccess>aa6160ba-4af6-4c34-9523-507c53b36b46</onsuccess><processid>7a118868-bf09-49b5-8306-176c72cc19cd</processid></stage></process></object>
        <object id="b0ecc93a-a64b-4270-9e9d-e993d4117b8b" name="Utility - ScreenResolution" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - ScreenResolution" version="1.0" bpversion="7.0.1.49890" narrative="SetScreenResolution - Stores original resolution on first use and restores on cleanup automatically.&#xD;&#xA;zChangeDisplaySettings - Just change resolution without storing original.&#xD;&#xA;Input: Resolution w,h &#xD;&#xA;Output: Success flag, winapi return code and description.&#xD;&#xA;&#xD;&#xA;Use one or another - mixing them might not allow VBO to restore original resolution on process cleanup. " byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>806aaae6-ec62-43b0-a27e-e082ef9f7a10</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-8</camerax><cameray>10</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="948b20cf-ab87-4112-87b1-51cb44a94ba7" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="c688b163-10b5-4126-bdbd-f45acf744ece" type="Normal" published="True"><name>SetScreenResolution</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8e5b48da-0574-470c-95e1-1c2dfe4ac3b8" type="Normal" published="True"><name>zChangeDisplaySettings</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1" type="Normal" published="False"><name>EnumDisplaySettings</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="65d51cf0-ca72-48ec-b1a2-bd91316db9f1" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>b327250c-0bb7-4fb0-9333-9a8ae36c714f</onsuccess></stage><stage stageid="b327250c-0bb7-4fb0-9333-9a8ae36c714f" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="2b5b0406-a16e-428e-995e-31681193ee4a" name="Stage1" type="ProcessInfo"><display x="-180" y="0" w="300" h="240" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Runtime.InteropServices</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[[StructLayout(LayoutKind.Sequential)]
public struct DEVMODE1 
{
	[MarshalAs(UnmanagedType.ByValTStr,SizeConst=32)] public string dmDeviceName;
	public short  dmSpecVersion;
	public short  dmDriverVersion;
	public short  dmSize;
	public short  dmDriverExtra;
	public int    dmFields;

	public short dmOrientation;
	public short dmPaperSize;
	public short dmPaperLength;
	public short dmPaperWidth;

	public short dmScale;
	public short dmCopies;
	public short dmDefaultSource;
	public short dmPrintQuality;
	public short dmColor;
	public short dmDuplex;
	public short dmYResolution;
	public short dmTTOption;
	public short dmCollate;
	[MarshalAs(UnmanagedType.ByValTStr, SizeConst = 32)] public string dmFormName;
	public short dmLogPixels;
	public short dmBitsPerPel;
	public int   dmPelsWidth;
	public int   dmPelsHeight;

	public int   dmDisplayFlags;
	public int   dmDisplayFrequency;

	public int   dmICMMethod;
	public int   dmICMIntent;
	public int   dmMediaType;
	public int   dmDitherType;
	public int   dmReserved1;
	public int   dmReserved2;

	public int   dmPanningWidth;
	public int   dmPanningHeight;
};



class User32DLL
{
	[DllImport("user32.dll")]
	public static extern int EnumDisplaySettings (string deviceName, int modeNum, ref DEVMODE1 devMode );         
	[DllImport("user32.dll")]
	public static extern int ChangeDisplaySettings(ref DEVMODE1 devMode, int flags);

	public const int ENUM_CURRENT_SETTINGS 		= -1;
	public const int ENUM_REGISTRY_SETTINGS 	= -2;
	/* Flags for ChangeDisplaySettings */
	public const int CDS_UPDATEREGISTRY          = 0x00000001;
	public const int CDS_TEST                    = 0x00000002;
	public const int CDS_FULLSCREEN              = 0x00000004;
	public const int CDS_GLOBAL                  = 0x00000008;
	public const int CDS_SET_PRIMARY             = 0x00000010;
	public const int CDS_VIDEOPARAMETERS         = 0x00000020;
	public const int CDS_ENABLE_UNSAFE_MODES     = 0x00000100; /* WINVER >= 0x0600 */
	public const int CDS_DISABLE_UNSAFE_MODES    = 0x00000200; /* WINVER >= 0x0600 */
	public const int CDS_RESET                   = 0x40000000;
	public const int CDS_RESET_EX                = 0x20000000;
	public const int CDS_NORESET                 = 0x10000000;
	
	/* Return values for ChangeDisplaySettings */
	public const int DISP_CHANGE_SUCCESSFUL 	= 0;
	public const int DISP_CHANGE_RESTART 		= 1;
	public const int DISP_CHANGE_FAILED 		= -1;
	public const int DISP_CHANGE_BADMODE 		= -2;
	public const int DISP_CHANGE_NOTUPDATED 	= -3;
	public const int DISP_CHANGE_BADFLAGS 		= -4;
	public const int DISP_CHANGE_BADPARAM 		= -5;
	public const int DISP_CHANGE_BADDUALVIEW 	= -6;
}


]]></code></stage><stage stageid="f652bb96-4808-414a-bce4-0519bf96343b" name="Clean Up" type="SubSheetInfo"><subsheetid>948b20cf-ab87-4112-87b1-51cb44a94ba7</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1f941846-2686-4114-80f3-e86470f860ed" name="Start" type="Start"><subsheetid>948b20cf-ab87-4112-87b1-51cb44a94ba7</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>9daad697-69c6-40f9-a161-fcc9752405de</onsuccess></stage><stage stageid="66ee5b69-115d-4315-b884-24916df14341" name="End" type="End"><subsheetid>948b20cf-ab87-4112-87b1-51cb44a94ba7</subsheetid><loginhibit /><display x="15" y="75" /></stage><stage stageid="e47172bc-2bf7-4520-bf90-993ab87262c8" name="zChangeDisplaySettings" type="SubSheetInfo"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><narrative>Just change resolution and nothing else. Use SetScreenResolution action if you intend to set it back original after process exits.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="fec5702b-82b4-4b2f-a8a9-7ec4fdd84143" name="Start" type="Start"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><loginhibit /><display x="-60" y="-135" /><inputs><input type="number" name="w" stage="w" /><input type="number" name="h" stage="h" /></inputs><onsuccess>6255d98c-b592-4971-a1bd-bbb01183e677</onsuccess></stage><stage stageid="61384bb3-f939-422b-b00f-701239a17551" name="End" type="End"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><loginhibit /><display x="-60" y="-45" /><outputs><output type="text" name="retval" stage="retval" /><output type="text" name="desc" stage="desc" /><output type="flag" name="success" stage="success" /></outputs></stage><stage stageid="ff292937-407a-47dd-8695-d0069511d8e9" name="Note1" type="Note"><subsheetid>948b20cf-ab87-4112-87b1-51cb44a94ba7</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="6255d98c-b592-4971-a1bd-bbb01183e677" name="ChangeDisplaySettings" type="Code"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><inputs><input type="number" name="w" expr="[w]" /><input type="number" name="h" expr="[h]" /></inputs><outputs><output type="text" name="retval" stage="retval" /><output type="text" name="desc" stage="desc" /><output type="flag" name="success" stage="success" /></outputs><onsuccess>61384bb3-f939-422b-b00f-701239a17551</onsuccess><code><![CDATA[int iWidth = (int)w;
int iHeight = (int)h;
DEVMODE1 dm = new DEVMODE1();
dm.dmDeviceName = new String (new char[32]);
dm.dmFormName = new String (new char[32]);
dm.dmSize = (short)Marshal.SizeOf (dm);

//Blueprism complains
retval = "";
desc = ""; 
success = false;

if (0 != User32DLL.EnumDisplaySettings (null, User32DLL.ENUM_CURRENT_SETTINGS, ref dm))
{
	
	dm.dmPelsWidth = iWidth;
	dm.dmPelsHeight = iHeight;

	int iRet = User32DLL.ChangeDisplaySettings (ref dm, User32DLL.CDS_TEST);

	if (iRet == User32DLL.DISP_CHANGE_FAILED){
		success = false;
		retval = "DISP_CHANGE_FAILED";
		desc = "The display driver failed the specified graphics mode.";
	} else {
		iRet = User32DLL.ChangeDisplaySettings (ref dm, User32DLL.CDS_UPDATEREGISTRY);
		switch (iRet) {
			case User32DLL.DISP_CHANGE_SUCCESSFUL:
			{
				success = true;
				retval = "DISP_CHANGE_SUCCESSFUL";
				desc = "The settings change was successful.";
				break;
			}
			case User32DLL.DISP_CHANGE_RESTART:
			{
				success = true;
				retval = "DISP_CHANGE_RESTART";				
				desc = "The computer must be restarted for the graphics mode to work.";
				break;
			}
			case User32DLL.DISP_CHANGE_NOTUPDATED:
			{
				success = false;
				retval = "DISP_CHANGE_NOTUPDATED";				
				desc = "Unable to write settings to the registry.";
				break;
			}
			case User32DLL.DISP_CHANGE_FAILED:
			{
				success = false;
				retval = "DISP_CHANGE_FAILED";				
				desc = "The display driver failed the specified graphics mode.";
				break;
			}
			case User32DLL.DISP_CHANGE_BADPARAM:
			{
				success = false;
				retval = "DISP_CHANGE_BADPARAM";				
				desc = "An invalid parameter was passed in. This can include an invalid flag or combination of flags.";
				break;
			}
			case User32DLL.DISP_CHANGE_BADMODE:
			{
				success = false;
				retval = "DISP_CHANGE_BADMODE";				
				desc = "The graphics mode is not supported.";
				break;
			}
			case User32DLL.DISP_CHANGE_BADFLAGS:
			{
				success = false;
				retval = "DISP_CHANGE_BADFLAGS";				
				desc = "An invalid set of flags was passed in.";
				break;
			}
			case User32DLL.DISP_CHANGE_BADDUALVIEW:
			{
				success = false;
				retval = "DISP_CHANGE_BADDUALVIEW";				
				desc = "The settings change was unsuccessful because the system is DualView capable.";
				break;
			}
			default:
			{
				success = false;
				retval = "Unknown_"+iRet.ToString();
				desc = "Failed To Change The Resolution. Unknown retval.";
				break;
			}
		}
	}
}]]></code></stage><stage stageid="a069aa0f-70fe-4da5-acc1-4d3599e57820" name="desc" type="Data"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><display x="90" y="-45" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="83823d7d-ae3c-4cce-89e9-b87a47479b9d" name="w" type="Data"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><loginhibit /><display x="30" y="-135" /><datatype>number</datatype><initialvalue>1920</initialvalue><private /><alwaysinit /></stage><stage stageid="5aa8839e-b8b0-40e0-a5fe-8de0a32effb6" name="h" type="Data"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><loginhibit /><display x="90" y="-135" /><datatype>number</datatype><initialvalue>1080</initialvalue><private /><alwaysinit /></stage><stage stageid="9c15161a-059c-42f2-a86d-72e76f4a4f09" name="retval" type="Data"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><display x="90" y="-90" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="3567c96b-ae12-4274-91ca-4acd4f69a72c" name="SetScreenResolution" type="SubSheetInfo"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><narrative>Remembers original resolution and sets new one. Resets back to original on process cleanup.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="44302089-2c87-47db-997b-15ac18213e4b" name="Start" type="Start"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="number" name="w" narrative="Screen width" stage="w" /><input type="number" name="h" narrative="Screen height" stage="h" /></inputs><onsuccess>ed840b6c-ae69-4f02-8f7e-35ccdcab3f25</onsuccess></stage><stage stageid="82fae37e-3273-4211-abe1-7811e74d632d" name="End" type="End"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="flag" name="success" stage="success" /><output type="text" name="retval" stage="retval" /><output type="text" name="desc" stage="desc" /></outputs></stage><stage stageid="cf92bbd8-f56d-4dbe-ab72-a87e3d711ab3" name="ChangeDisplaySettings" type="SubSheet"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="number" name="w" expr="[w]" /><input type="number" name="h" expr="[h]" /></inputs><outputs><output type="text" name="retval" stage="retval" /><output type="text" name="desc" stage="desc" /><output type="flag" name="success" stage="success" /></outputs><onsuccess>82fae37e-3273-4211-abe1-7811e74d632d</onsuccess><processid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</processid></stage><stage stageid="fd0d2cd1-cfba-4937-934f-c068390926f4" name="w" type="Data"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><display x="90" y="-105" /><datatype>number</datatype><initialvalue>1600</initialvalue><private /><alwaysinit /></stage><stage stageid="57701ec6-dc5f-4c38-bebf-b7afd6312436" name="h" type="Data"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><display x="150" y="-105" /><datatype>number</datatype><initialvalue>900</initialvalue><private /><alwaysinit /></stage><stage stageid="691e95c6-77c9-4579-b41c-573f0075f308" name="EnumDisplaySettings" type="SubSheetInfo"><subsheetid>1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="d3b3e729-6a1a-4b9d-a30d-6cc1b7f5a758" name="Start" type="Start"><subsheetid>1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1</subsheetid><loginhibit /><display x="-60" y="-135" /><onsuccess>c9882e51-26e1-4325-a761-a087728cc1da</onsuccess></stage><stage stageid="4d288e3b-7164-4bc5-8fa5-9491b381bd07" name="End" type="End"><subsheetid>1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1</subsheetid><loginhibit /><display x="-60" y="-45" /></stage><stage stageid="c9882e51-26e1-4325-a761-a087728cc1da" name="EnumDisplaySettings" type="Code"><subsheetid>1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1</subsheetid><loginhibit /><display x="-60" y="-90" w="90" h="30" /><outputs><output type="number" name="w" stage="orig_w" /><output type="number" name="h" stage="orig_h" /></outputs><onsuccess>4d288e3b-7164-4bc5-8fa5-9491b381bd07</onsuccess><code><![CDATA[DEVMODE1 dm = new DEVMODE1();
dm.dmDeviceName = new String (new char[32]);
dm.dmFormName = new String (new char[32]);
dm.dmSize = (short)Marshal.SizeOf (dm);

//Blueprism complains
w=0; h=0;
if (0 != User32DLL.EnumDisplaySettings(null, User32DLL.ENUM_CURRENT_SETTINGS, ref dm))
{
	w = (decimal)dm.dmPelsWidth;
	h = (decimal)dm.dmPelsHeight;
}]]></code></stage><stage stageid="a8033876-f35b-4147-9c8b-b4fce236f584" name="orig_h" type="Data"><subsheetid>1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1</subsheetid><display x="90" y="-90" /><datatype>number</datatype><initialvalue>0</initialvalue><alwaysinit /></stage><stage stageid="da8a79f5-ff33-441f-9f3a-aaf88ffbc793" name="orig_w" type="Data"><subsheetid>1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1</subsheetid><display x="30" y="-90" /><datatype>number</datatype><initialvalue>0</initialvalue><alwaysinit /></stage><stage stageid="ed840b6c-ae69-4f02-8f7e-35ccdcab3f25" name="FirstUse?" type="Decision"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[orig_w] = 0 and [orig_h] = 0" /><ontrue>39f1afa8-8871-4562-828a-9e4ec49e1185</ontrue><onfalse>cf92bbd8-f56d-4dbe-ab72-a87e3d711ab3</onfalse></stage><stage stageid="39f1afa8-8871-4562-828a-9e4ec49e1185" name="EnumDisplaySettings" type="SubSheet"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><loginhibit /><display x="90" y="-60" /><onsuccess>cf92bbd8-f56d-4dbe-ab72-a87e3d711ab3</onsuccess><processid>1fcaebb4-09aa-40ed-ba1e-4c8f36b66fc1</processid></stage><stage stageid="201e26fc-59ba-4700-8a4b-38c3958a602d" name="ResetDisplaySettings" type="SubSheet"><subsheetid>948b20cf-ab87-4112-87b1-51cb44a94ba7</subsheetid><loginhibit /><display x="105" y="-15" /><inputs><input type="number" name="w" expr="[orig_w]" /><input type="number" name="h" expr="[orig_h]" /></inputs><outputs><output type="text" name="retval" stage="" /><output type="text" name="desc" stage="" /><output type="flag" name="success" stage="" /></outputs><onsuccess>66ee5b69-115d-4315-b884-24916df14341</onsuccess><processid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</processid></stage><stage stageid="050d9491-40fd-4879-90ee-5e9208410e18" name="retval" type="Data"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><display x="90" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4ff17dda-f587-4713-be9b-08540a1e75fe" name="desc" type="Data"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><display x="150" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="04af7e21-ba73-41fd-97ff-4986f8f72b7c" name="success" type="Data"><subsheetid>8e5b48da-0574-470c-95e1-1c2dfe4ac3b8</subsheetid><display x="225" y="-90" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9043d921-e579-4449-81de-d419c5b833f2" name="success" type="Data"><subsheetid>c688b163-10b5-4126-bdbd-f45acf744ece</subsheetid><display x="210" y="-15" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9daad697-69c6-40f9-a161-fcc9752405de" name="Original unknown?" type="Decision"><subsheetid>948b20cf-ab87-4112-87b1-51cb44a94ba7</subsheetid><loginhibit /><display x="15" y="-15" w="60" h="60" /><decision expression="[orig_w] = 0 and [orig_h] = 0" /><ontrue>66ee5b69-115d-4315-b884-24916df14341</ontrue><onfalse>201e26fc-59ba-4700-8a4b-38c3958a602d</onfalse></stage></process></object>
        <object id="2fe6c4fd-063c-4c70-87cf-4b64b8a6510a" name="Utility - Screenshots" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Screenshots" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>a2d6e812-75a0-49cf-863b-6b7fa4e19a4e</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="cab8946c-b50a-47dd-a1b6-72ce3ac940bf" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5b12550-6e6e-4416-91ec-9d9a6ba7daa9" type="Normal" published="True"><name>Save Image from Clipboard to Disk</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8807f80c-1c2a-4385-b626-5500216b41bb" type="Normal" published="True"><name>PrintScreen and Save</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="98801a98-0d09-45c6-a400-b6561f49ce37" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>f647ad43-7614-49c4-a50f-916533a67c99</onsuccess></stage><stage stageid="f647ad43-7614-49c4-a50f-916533a67c99" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="f7b33c78-febe-4ee9-ad47-c9e43ae17c3c" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.Windows.Forms.dll</reference><reference>mscorlib.dll</reference><reference>System.IO.FileSystem.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.Windows.Forms</import><import>System.IO</import><import>System.Drawing.Imaging</import></imports><language>csharp</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[private void saveScreenshot(string director, string nume, string format)
{
	if (Clipboard.GetDataObject() != null) 
            { 
                IDataObject data = Clipboard.GetDataObject(); 
 
                if (data.GetDataPresent(DataFormats.Bitmap)) 
                { 
                    Image image = (Image)data.GetData(DataFormats.Bitmap, true); 
                    switch (format) 
                    { 
                        case "Jpeg": 
                            { 
                                image.Save(director + "\\" + nume + "." + format, System.Drawing.Imaging.ImageFormat.Jpeg); 
                                break; 
                            } 
                        case "Bmp": 
                            { 
                                image.Save(director + "\\" + nume + "." + format, System.Drawing.Imaging.ImageFormat.Bmp); 
                                break; 
                            } 
                        case "Gif": 
                            { 
                                image.Save(director + "\\" + nume + "." + format, System.Drawing.Imaging.ImageFormat.Gif); 
                                break; 
                            } 
                        case "Png": 
                            { 
                                image.Save(director + "\\" + nume + "." + format, System.Drawing.Imaging.ImageFormat.Png); 
                                break; 
                            } 
                        case "Tiff": 
                            { 
                                image.Save(director + "\\" + nume + "." + format, System.Drawing.Imaging.ImageFormat.Tiff); 
                                break; 
                            } 
                        case "Exif": 
                            { 
                                image.Save(director + "\\" + nume + "." + format, System.Drawing.Imaging.ImageFormat.Exif); 
                                break; 
                            } 
                        case "Wmf": 
                            { 
                                image.Save(director + "\\" + nume + "." + format, System.Drawing.Imaging.ImageFormat.Wmf); 
                                break; 
                            } 
					} 
                 
                } 
            } 
    else 
    { 
		//return false;
    }
}



private void PrintScreen(string filename)

{  

    Bitmap printscreen = new Bitmap(Screen.PrimaryScreen.Bounds.Width, Screen.PrimaryScreen.Bounds.Height);

    Graphics graphics = Graphics.FromImage(printscreen as Image);

    graphics.CopyFromScreen(0, 0, 0, 0, printscreen.Size);

	printscreen.Save(filename, ImageFormat.Jpeg);

}]]></code></stage><stage stageid="78a2f4e2-3ab3-4bf1-b3f1-ed562fd1fa01" name="Clean Up" type="SubSheetInfo"><subsheetid>cab8946c-b50a-47dd-a1b6-72ce3ac940bf</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="8579dfcb-a4e0-4564-9a93-932da87f25d5" name="Start" type="Start"><subsheetid>cab8946c-b50a-47dd-a1b6-72ce3ac940bf</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>3f332c5d-a86f-4ac8-b6c1-ead41c2afbfe</onsuccess></stage><stage stageid="3f332c5d-a86f-4ac8-b6c1-ead41c2afbfe" name="End" type="End"><subsheetid>cab8946c-b50a-47dd-a1b6-72ce3ac940bf</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="c39bec97-5cd6-4890-9646-6357e9497070" name="Save Image from Clipboard to Disk" type="SubSheetInfo"><subsheetid>f5b12550-6e6e-4416-91ec-9d9a6ba7daa9</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ef2fd989-f7b1-4acd-b645-1f1299d8799e" name="Start" type="Start"><subsheetid>f5b12550-6e6e-4416-91ec-9d9a6ba7daa9</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Path to Save File" narrative="Enter the directory where you want to save the screenshot" stage="Path to Save File" /><input type="text" name="FileName" narrative="Enter the Screenshot File Name" stage="FileName" /><input type="text" name="Format" narrative="File Format Supported are: Jpeg,Bmp,Gif,Png,Tiff,Exif,Wmf" stage="Format" /></inputs><onsuccess>2266409d-cbf3-414d-bb07-0ab8b439b1e7</onsuccess></stage><stage stageid="dc03411c-10f0-44f2-b0eb-8e7d926fa7f0" name="End" type="End"><subsheetid>f5b12550-6e6e-4416-91ec-9d9a6ba7daa9</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="a5fd4833-9086-4775-aa20-e65f5777ebcc" name="Note1" type="Note"><subsheetid>cab8946c-b50a-47dd-a1b6-72ce3ac940bf</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="2c202489-12ae-42e1-9d62-c2885fa6916b" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="2266409d-cbf3-414d-bb07-0ab8b439b1e7" name="Code1" type="Code"><subsheetid>f5b12550-6e6e-4416-91ec-9d9a6ba7daa9</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Directory" expr="[Path to Save File]" /><input type="text" name="FileName" expr="[FileName]" /><input type="text" name="Format" expr="[Format]" /></inputs><onsuccess>dc03411c-10f0-44f2-b0eb-8e7d926fa7f0</onsuccess><code><![CDATA[saveScreenshot(Directory,FileName,Format);]]></code></stage><stage stageid="b4265c60-f05a-4a1a-af6f-bbce8ccbd26c" name="Path to Save File" type="Data"><subsheetid>f5b12550-6e6e-4416-91ec-9d9a6ba7daa9</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Temp</initialvalue><private /><alwaysinit /></stage><stage stageid="64500397-acbe-4b39-9002-e99c12457357" name="FileName" type="Data"><subsheetid>f5b12550-6e6e-4416-91ec-9d9a6ba7daa9</subsheetid><display x="-105" y="-30" /><datatype>text</datatype><initialvalue xml:space="preserve">abcd</initialvalue><private /><alwaysinit /></stage><stage stageid="626f425a-7022-46af-ba70-933bdc15dee5" name="Format" type="Data"><subsheetid>f5b12550-6e6e-4416-91ec-9d9a6ba7daa9</subsheetid><display x="150" y="-30" /><datatype>text</datatype><initialvalue xml:space="preserve">Jpeg</initialvalue><private /><alwaysinit /></stage><stage stageid="5b6f421c-89bf-425a-8c25-1c30e89c2b77" name="PrintScreen and Save" type="SubSheetInfo"><subsheetid>8807f80c-1c2a-4385-b626-5500216b41bb</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="356b3851-16fc-4e1c-82f3-5fdddf830082" name="Start" type="Start"><subsheetid>8807f80c-1c2a-4385-b626-5500216b41bb</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Filename" narrative="Enter the File Name with path " stage="Filename" /></inputs><onsuccess>01851561-63c7-4c50-ae77-f4d335112437</onsuccess></stage><stage stageid="c8eae310-c170-4870-a2d7-35cf68e57ac0" name="End" type="End"><subsheetid>8807f80c-1c2a-4385-b626-5500216b41bb</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="01851561-63c7-4c50-ae77-f4d335112437" name="Code2" type="Code"><subsheetid>8807f80c-1c2a-4385-b626-5500216b41bb</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Filename" expr="[Filename]" /></inputs><onsuccess>c8eae310-c170-4870-a2d7-35cf68e57ac0</onsuccess><code><![CDATA[PrintScreen(Filename);]]></code></stage><stage stageid="805655d6-bdbe-4cb1-81fd-8b1a2f2085f6" name="Filename" type="Data"><subsheetid>8807f80c-1c2a-4385-b626-5500216b41bb</subsheetid><display x="105" y="-15" /><datatype>text</datatype><initialvalue xml:space="preserve">C:\Temp\jkasjkas.Jpeg</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="0d84bbb4-8cac-4560-9e0b-fe4031a9f5df" name="Utility - String Customize Action" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - String Customize Action" version="6.2.1.4272" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>60</camerax><cameray>-35</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65117a41-f7ff-4f3f-abd1-7a3cbe18cfda" type="Normal" published="True"><name>Remove Non-word Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8fea7a8-24d9-41c8-9397-a3839e6ffdc1" type="Normal" published="True"><name>Generate New GUID</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e70e8f13-02df-4b14-bb74-6fd5c4c95928" type="Normal" published="True"><name>Delete Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a710d42-8f41-45d0-9e74-1eddf74c0e75" type="Normal" published="True"><name>Split Lines by Length</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e6bab90c-ddfd-48c0-af38-804fe4f770ed" type="Normal" published="True"><name>Split Lines</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a5871062-5ad2-4950-afbc-cb5b1b7a7f0b" type="Normal" published="True"><name>Split Text</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2c09338-7850-4daf-a545-8972d333b826" type="Normal" published="True"><name>Join Text</name><view><camerax>65</camerax><cameray>75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="66ef15bc-7fa4-4550-ab35-14029f6d89e3" type="Normal" published="True"><name>Split Text by tab</name><view><camerax>88</camerax><cameray>-32</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a854bb6a-4399-4e51-8fc3-64f9e1d4f896" type="Normal" published="True"><name>Join Lines</name><view><camerax>152</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fcddf4bf-83af-4431-88db-cc2c88390cec" type="Normal" published="True"><name>Get Newline Character</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="06780f7c-9622-4d84-9db3-bb56a2ff9f36" type="Normal" published="True"><name>Extract Regex Values</name><view><camerax>70</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a6b6398e-c21a-4c4e-9742-65ccad8370d9" type="Normal" published="True"><name>Test Regex Match</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5110b353-010b-4874-97bd-8b7621c24384" type="Normal" published="True"><name>Format Number</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef8de52d-842b-45f0-8f1b-619bc97d4bbc" type="Normal" published="True"><name>PadLeft</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="818441a5-ffec-4841-b0ea-00712caf63aa" type="Normal" published="True"><name>Get XML Elements</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e8af11f7-dfd4-4c86-9935-e83828b9e711" type="Normal" published="True"><name>Get XML Attribute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f9add4d4-31de-4c0f-a109-0b51fa576a23" type="Normal" published="True"><name>Get Collection as CSV</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5b26213-5463-4b2d-b10f-b188876b436f" type="Normal" published="True"><name>Get CSV As Collection</name><view><camerax>248</camerax><cameray>-87</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="040cc29a-27ac-402c-8a66-328554dd4bc0" type="Normal" published="True"><name>Escape Sendkeys String</name><view><camerax>0</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="527ca986-a03f-4231-880e-5b1c244b035e" type="Normal" published="True"><name>Compare Font Text</name><view><camerax>150</camerax><cameray>27</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0244396a-1d3d-4892-b6cb-461468f4c7e1" type="Normal" published="True"><name>InStr</name><view><camerax>0</camerax><cameray>-2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ab28c01-86eb-458d-b8d9-74f98926d266" type="Normal" published="True"><name>InStrRev</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Text</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic.FileIO</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

Private Function SplitStringInto( _
 ByVal fldName As String, _
 ByVal txt As String, _
 ByVal ParamArray splitters() As String) As DataTable
	Dim dt As New DataTable()
	dt.Columns.Add(fldName, GetType(String))

	For Each s As String In txt.Split(splitters, StringSplitOptions.None)
		dt.Rows.Add(New Object() {s})
	Next

	Return dt
End Function

Public Shared Function ParseCsvToList(ByVal csv As String) As List(Of String())
	Dim result = New List(Of String())()

	Using sr As New StringReader(csv)
		Using lineParser As New TextFieldParser(sr)
			lineParser.TextFieldType = FieldType.Delimited
			lineParser.SetDelimiters(",")
			While Not lineParser.EndOfData

				Dim fields As String() = lineParser.ReadFields()
				result.Add(fields)
			End While
		End Using
	End Using

	Return result
End Function


''' -----------------------------------------------------------------------------
''' <summary>
''' Serialises a datatable to the supplied stream.
''' </summary>
''' <param name="Writer">The stream writr to which the datatable should
''' be serialised. Eg this may correspond to a file stream.</param>
''' <param name="Table">The datatable to be serialised.</param>
''' <param name="IncludeHeaderRow">When true, the column headers will
''' be wrtten out on the first row.</param>
''' -----------------------------------------------------------------------------
Public Shared Sub WriteDataTable(ByVal Writer As StringBuilder, ByVal Table As DataTable, ByVal IncludeHeaderRow As Boolean)
	If IncludeHeaderRow Then
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Table.Columns(i).ColumnName)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(",")
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	End If

	For Each Row As DataRow In Table.Rows
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Row(i).ToString)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(",")
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	Next
End Sub



''' -----------------------------------------------------------------------------
''' <summary>
''' Writes a csv data cell, escaping quotes and new lines where necessary.
''' </summary>
''' <param name="Writer">The writer to which the item should be written.</param>
''' <param name="Value">The value to be written.</param>
''' -----------------------------------------------------------------------------
Private Shared Sub WriteItem(ByVal Writer As StringBuilder, ByVal Value As String)
	If Value.IndexOfAny(("""," & vbCrLf).ToCharArray) > -1 Then
		Writer.Append("""" & Value.Replace("""", """""") & """")
	Else
		Writer.Append(Value)
	End If
End Sub


'Splits text into lines of approximately equal length, looking for
'gaps between words as splitting points in order to avoid ugly
'line splitting in the middle of words. Useful for mainframe memos
'where a long message needs to be broken into lines of up to 80
'characters.
'
Private Shared Function SplitTextByLengthEngine(Texttosplit As String, MaxLineLength As Integer) As List(of String)
	Dim RetVal as New List(Of String)
	MaxLineLength =  Math.Min(MaxLineLength, TexttoSplit.Length)

	'We look for the last space within (MaxLineLength + 1) and then work backwards
	'(always by at least one) to find the last non-space character. We can then
	'chop at this point, assuming such exists. Otherwise we just chop at the
	'requested line length accepting we will be splitting a word.
	Dim LastIndex as integer = TexttoSplit.Substring(0, Math.Min(MaxLineLength + 1, TextToSplit.Length)).LastIndexOf(" ")

	If TextToSplit.Length <= MaxLineLength OrElse LastIndex = -1 Then
		RetVal.Add(TexttoSplit.Substring(0, MaxLineLength))
		Dim RemainingText As String = TexttoSplit.SubString(MaxLineLength,TextToSplit.Length - MaxLineLength).Trim()
		If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
	Else
		'Track backwards to find previous non-space character
		Dim Index As Integer = LastIndex - 1
		While Index >= 0 Andalso TextToSplit.SubString(Index, 1) = " "
			Index -=1
		End While
		If Index >= 0 Then
			RetVal.Add(TextToSplit.SubString(0, Index + 1))
			Dim RemainingText As String = TexttoSplit.SubString(Index + 1, TextToSplit.Length - (Index + 1)).Trim()
			If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
		Else
			'Must all be spaces. We assume this are to be ignored
		End If
	End If

	Return RetVal
End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b6df3b6c-090d-4126-a16c-8caa889b0646" name="Generate New GUID" type="SubSheetInfo"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><narrative>Generates a new globally unique identifier as text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be35a29d-2b71-42e1-9ca7-4534046d5dfc" name="Start" type="Start"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd80e756-d12c-4dc7-9d64-bbde733f60b7</onsuccess></stage><stage stageid="bd80e756-d12c-4dc7-9d64-bbde733f60b7" name="Get GUID" type="Code"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="id" stage="GUID" /></outputs><onsuccess>4930704e-00c1-456a-8aad-02220fd81c99</onsuccess><code><![CDATA[dim g as new Guid
id = guid.newguid.tostring]]></code></stage><stage stageid="695dad7d-b634-454c-9171-baf489698067" name="GUID" type="Data"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4930704e-00c1-456a-8aad-02220fd81c99" name="End1" type="End"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="GUID" narrative="The new guid" stage="GUID" /></outputs></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a130f3e8-fad5-413c-a068-75ac20600244" name="Remove Non-word Characters" type="SubSheetInfo"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><narrative>Trims non word characters from the begining and end of the text. Non word characters are any character that is NOT in the ranges a-z A-Z _ and 0-9</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dd85470c-e10b-4f0b-b729-c006136517eb" name="Start" type="Start"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="The text to remove the non word characters from" stage="Text" /></inputs><onsuccess>a2426b0a-eab8-4571-a6d9-fa89c49559be</onsuccess></stage><stage stageid="3eae8050-c325-49f6-9e3f-ee12400ca5d4" name="End" type="End"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Trimmed Text" narrative="The text with the non word characters removed" stage="Trimmed Text" /></outputs></stage><stage stageid="a2426b0a-eab8-4571-a6d9-fa89c49559be" name="Trim" type="Code"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="text" name="Trimmed Text" stage="Trimmed Text" /></outputs><onsuccess>3eae8050-c325-49f6-9e3f-ee12400ca5d4</onsuccess><code><![CDATA[
dim r as new regex("^\W*|\W*$")
Trimmed_Text = r.replace(text, "")
]]></code></stage><stage stageid="1f3570bd-8411-4e92-8fd3-1dd418411570" name="Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">    qwerqwer    </initialvalue><private /><alwaysinit /></stage><stage stageid="0967c44a-1a53-49a7-8bb4-e1f6733a41b0" name="Trimmed Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00a08897-25f2-48e0-aa88-e40bb27b94e7" name="Split Lines" type="SubSheetInfo"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><narrative>Splits multiple line text into a collection text values with a single row per line.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f6c9d2f-247d-42a7-bc18-8b4283b21c80" name="Start" type="Start"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /></inputs><onsuccess>ee14a8f3-9fd3-4342-abcf-3cbe1d57431a</onsuccess></stage><stage stageid="370a75cf-d54f-438d-b7b1-0f931038d7a2" name="End" type="End"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="b655e5fa-2cb9-487a-b4e8-8faf44531e8d" name="Text to Split" type="Data"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee14a8f3-9fd3-4342-abcf-3cbe1d57431a" name="Split" type="Code"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>370a75cf-d54f-438d-b7b1-0f931038d7a2</onsuccess><code><![CDATA[Split_Values = SplitStringInto("Value", _
 Text_to_Split, vbCrLf, vbLf, vbCr)]]></code></stage><stage stageid="5c6c7749-e4c1-45ef-9fb7-a7b7ca77214d" name="Split Values" type="Collection"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="120" y="90" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Value" type="text" /></collectioninfo></stage><stage stageid="99d3d4f8-598b-44be-9744-5142537aff99" name="Split Text" type="SubSheetInfo"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative>Splits text with a given delimiter into a collection of text values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="97069dc2-f2a1-4f61-a3f6-e26e88d1da58" name="Start" type="Start"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /><input type="text" name="Split Char" narrative="The split delimiter" stage="Split Char" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" stage="Collection Field Name" /></inputs><onsuccess>d1694d87-2fff-467b-9a07-5f5dd570bd41</onsuccess></stage><stage stageid="2972f0ee-292a-4bb0-bed5-c9a19f8945f6" name="End" type="End"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="33bff0c5-22b9-4ab3-ac0a-c352221a4f79" name="Text to Split" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="195" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1694d87-2fff-467b-9a07-5f5dd570bd41" name="Split Text" type="Code"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="text" name="Split Char" expr="[Split Char]" /><input type="text" name="Collection Field Name" expr="[Collection Field Name]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>2972f0ee-292a-4bb0-bed5-c9a19f8945f6</onsuccess><code><![CDATA[Split_Values = SplitStringInto( _
 Collection_Field_Name, _
 Text_to_Split, Split_Char)]]></code></stage><stage stageid="17ffca42-be51-4343-90e3-035d29366b7f" name="Split Values" type="Collection"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="225" y="90" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="05ba6aed-e91b-4383-9001-69b78a2e474d" name="Split Char" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="255" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20afce2f-59e1-4fc1-896c-ab71d2f871b2" name="Collection Field Name" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="786d2d47-37c8-4324-8e43-8fc75f0eca95" name="Join Text" type="SubSheetInfo"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative>Joins values from a collection into a single line of text using a given delimiter between values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ccd8aec8-19c3-4d48-a184-a8895ed1ebbf" name="Start" type="Start"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="text" name="Join Character" narrative="The delimeter between text values" stage="Join Character" /><input type="flag" name="Trim Values" narrative="Set true to apply trimming to the values" stage="Trim Values" /></inputs><onsuccess>b05ea94b-f0d1-4047-b854-04877801ef0b</onsuccess></stage><stage stageid="7dbff5b3-7cd4-406a-9650-265fb88988ef" name="End" type="End"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="13059fce-ee5a-4fbc-a76c-efc5db5d1240" name="Values" type="Collection"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item Value" type="text" /></collectioninfo></stage><stage stageid="b0cf2931-5486-4779-b457-e8af03062df8" name="Join Character" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="019a4343-9b5c-4400-8b76-5efbf2156032" name="Join Lines" type="SubSheetInfo"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative>Joins values from a collection into multiline text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f376101-4dd4-43b4-85a0-19dd1090df02" name="Start" type="Start"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="flag" name="Trim Lines" narrative="Set true to apply trimming to the lines" stage="Trim Lines" /></inputs><onsuccess>816591dd-a42d-436b-9fd0-4ca095d78e29</onsuccess></stage><stage stageid="f2d9cbef-9cdb-4daa-bbb6-5d3dc0548c2e" name="Values" type="Collection"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="579d0466-882d-47ce-a2c3-d4a7f25eaa8c" name="Joined Text" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="724a0223-71bd-48d0-bcca-f4d554fcf91b" name="End" type="End"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="8bcc24ca-f588-4c3c-b09b-fe08b425b5db" name="Joined Text" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3b84350-20a1-442e-bebb-0232a5b73299" name="Join Text" type="SubSheet"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" expr="[Values]" /><input type="text" name="Join Character" expr="[Join Character]" /><input type="flag" name="Trim Values" expr="[Trim Lines]" /></inputs><outputs><output type="text" name="Joined Text" stage="Joined Text" /></outputs><onsuccess>724a0223-71bd-48d0-bcca-f4d554fcf91b</onsuccess><processid>a2c09338-7850-4daf-a545-8972d333b826</processid></stage><stage stageid="816591dd-a42d-436b-9fd0-4ca095d78e29" name="Get Carriage Return" type="Code"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Join Character" stage="Join Character" /></outputs><onsuccess>e3b84350-20a1-442e-bebb-0232a5b73299</onsuccess><code><![CDATA[Join_Character = vbcrlf]]></code></stage><stage stageid="9a8e3b40-f136-4397-b62b-4a69cd010c37" name="Join Character" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="105" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13a0e17b-9b82-4dd6-8e3a-313890d8caf3" name="For Each Value" type="LoopStart"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e4c0da52-0523-4109-b705-3fadd035597b</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid><looptype>ForEach</looptype><loopdata>Values</loopdata></stage><stage stageid="98f2416b-599a-42d1-a76f-d41ea3e23572" name="Next Value" type="LoopEnd"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="195" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7dbff5b3-7cd4-406a-9650-265fb88988ef</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid></stage><stage stageid="b05ea94b-f0d1-4047-b854-04877801ef0b" name="Reset Output" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>13a0e17b-9b82-4dd6-8e3a-313890d8caf3</onsuccess><calculation expression="&quot;&quot;" stage="Joined Text" /></stage><stage stageid="49168356-8449-4cb3-9798-0796b15b77a3" name="Append Value" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>98f2416b-599a-42d1-a76f-d41ea3e23572</onsuccess><calculation expression="[Joined Text] &amp; [Values.Item Value] &amp; [Join Character]" stage="Joined Text" /></stage><stage stageid="54cf1a89-b26c-4916-ab45-8f1e80b9b86f" name="Trim Lines" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="150" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6aa04814-e2fd-4630-b391-bfe892ddc8df" name="Trim Values" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="210" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e4c0da52-0523-4109-b705-3fadd035597b" name="Trim?" type="Decision"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Trim Values]" /><ontrue>91ef5da4-e47e-4442-98ec-d46cbd8d8692</ontrue><onfalse>49168356-8449-4cb3-9798-0796b15b77a3</onfalse></stage><stage stageid="91ef5da4-e47e-4442-98ec-d46cbd8d8692" name="Do Trim" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>10ac89cc-d24c-4622-ad92-34ebe2365083</onsuccess><calculation expression="Trim([Values.Item Value])" stage="Values.Item Value" /></stage><stage stageid="10ac89cc-d24c-4622-ad92-34ebe2365083" name="anchor1" type="Anchor"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>49168356-8449-4cb3-9798-0796b15b77a3</onsuccess></stage><stage stageid="b837f601-57e9-4136-8dee-db8ca9ebf15f" name="Format Number" type="SubSheetInfo"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><narrative>Formats a number into comma-delimited triplets, as appropriate. Eg 123456.789 becomes 123,456.789</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df1e573a-3e89-43a8-8e6a-61f1840b3869" name="Start" type="Start"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The number will have been formatted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Input Number" narrative="The number to format" stage="Input Number" /></inputs><onsuccess>df4ce97f-4b9c-4087-a9bf-c6e35eba156b</onsuccess></stage><stage stageid="dd89bdff-2f14-4268-98f4-7ef3747a5233" name="End" type="End"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Formatted Currency Numbers" narrative="The resulting formatted number" stage="Formatted Currency Value" /></outputs></stage><stage stageid="b0f25370-1f87-4edd-b03a-0a3ac16537fb" name="Input Number" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>987654123456.789</initialvalue><private /><alwaysinit /></stage><stage stageid="df4ce97f-4b9c-4087-a9bf-c6e35eba156b" name="Format" type="Code"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Input" expr="[Input Number]" /></inputs><outputs><output type="text" name="Output" stage="Formatted Currency Value" /></outputs><onsuccess>dd89bdff-2f14-4268-98f4-7ef3747a5233</onsuccess><code><![CDATA[Output = Input.ToString("N")]]></code></stage><stage stageid="a6d6d631-89c5-4460-9771-6a15a0e1d7d5" name="Formatted Currency Value" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3013d63-9017-4dd9-bcf6-5e0d09ab372f" name="PadLeft" type="SubSheetInfo"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative>Ensures that a string (usually a number) is of fixed width, by padding with a special character on the left.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af05cd75-42db-4c09-875d-3fedfc3ca0a2" name="Start" type="Start"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The supplied text will have been padded to be at least the number of desired characters." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Input String" narrative="The string to pad" stage="Input String" /><input type="number" name="Target Width" narrative="The total number of characters required after padding" stage="Target Width" /><input type="text" name="Padding Character" narrative="The character to pad with" stage="Padding Character" /></inputs><onsuccess>6527cdd9-47d7-4784-bd96-e63afa4ec955</onsuccess></stage><stage stageid="f432b972-ae44-4485-943b-87848fd43487" name="End" type="End"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Padded String" narrative="The resultant padded string" stage="Input String" /></outputs></stage><stage stageid="888a814c-a03d-43f0-b6d6-30501b8b3250" name="Input String" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">123</initialvalue><private /><alwaysinit /></stage><stage stageid="ea8d90c7-c341-4859-919c-4ecc076162eb" name="Target Width" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="56c037f3-4ff0-4923-974c-e925c84e69c8" name="Padding Character" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="210" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6527cdd9-47d7-4784-bd96-e63afa4ec955" name="Blank Padding Character?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Padding Character]) = 0" /><ontrue>26f66718-649a-4472-965d-0e1e125e7473</ontrue><onfalse>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onfalse></stage><stage stageid="26f66718-649a-4472-965d-0e1e125e7473" name="Use Space for Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="&quot; &quot;" stage="Padding Character" /></stage><stage stageid="6acfdd2b-9298-4841-9111-003fc203edd0" name="anchor2" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onsuccess></stage><stage stageid="b6b30eec-0ee3-4316-a9af-d0a55d5ec137" name="anchor3" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e13c9c2d-2cbe-4262-828c-6307a805d9c1</onsuccess></stage><stage stageid="e13c9c2d-2cbe-4262-828c-6307a805d9c1" name="Long Enough?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Input String]) &gt;= [Target Width]" /><ontrue>f432b972-ae44-4485-943b-87848fd43487</ontrue><onfalse>87af11ea-fa7e-45cf-b02a-fd6edeae0b85</onfalse></stage><stage stageid="87af11ea-fa7e-45cf-b02a-fd6edeae0b85" name="Insert Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="[Padding Character] &amp; [Input String]" stage="Input String" /></stage><stage stageid="92edef27-4b78-40dd-97bd-e5a4f9169214" name="Get XML Elements" type="SubSheetInfo"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative>Gets a collection of xml elements with a given name from an xml document.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04bec0f1-e8bb-4c30-a5d1-b7eee243e6f9" name="Start" type="Start"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The xml to get elements from" stage="XML" /><input type="text" name="Element Name" narrative="The name of the xml elements to get" stage="Element Name" /></inputs><onsuccess>17f4a862-c7e3-44c3-a373-5b325fdaab8a</onsuccess></stage><stage stageid="e4b99f55-7171-46d6-992b-db797e99b1ed" name="End" type="End"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Elements" narrative="The collection of xml elements that match the given name and for each element its outer xml" stage="Elements" /></outputs></stage><stage stageid="31472749-70ee-477e-a042-fcf5a25a4099" name="XML" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;PotentialGrading&gt;  &lt;ServiceIdentifier&gt;ABC&lt;/ServiceIdentifier&gt;  &lt;Episode ID="a97fe424-0d1f-4e7c-9e9a-9b3c9e03d594"&gt;   &lt;Patient DateOfBirth="18/02/1970" Gender="M" PartPostcode="YO51" EthnicOrigin="W" Country="United Kingdom"    Region="North Yorkshire" RegisteredBlind="0" RegisteredPartiallySighted="1" HealthProvider="PCT"    Insurance="Cheap as Chips Insurance"&gt;The patient ID goes here&lt;/Patient&gt;   &lt;Screening Date="2007/09/06" GradingCodeSet="NGC" ImageCount="4"&gt;    &lt;Item Code="Examiner Classification" Value="1" /&gt;    &lt;Item Code="Eye Screening Urgency" Value="2" /&gt;    &lt;Item Code="Opthalmologist Care" Value="2" /&gt;    &lt;Item Code="Technical Gradability Code" Value="1" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="right" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="left" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="right" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="left" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="right" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="left" /&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="right"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="left"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="right" /&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="left" /&gt;    &lt;Image Length="104644" CameraID="Camera1" CameraModelID="CameraModel1" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(5)L.jpg&lt;/Image&gt;    &lt;Image Length="107565" CameraID="Camera2" CameraModelID="CameraModel2" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(6)L.jpg&lt;/Image&gt;    &lt;Image Length="107441" CameraID="Camera3" CameraModelID="CameraModel3" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(5)R.jpg&lt;/Image&gt;    &lt;Image Length="112472" CameraID="Camera4" CameraModelID="CameraModel4" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(6)R.jpg&lt;/Image&gt;   &lt;/Screening&gt;   &lt;Notes&gt;Free text notes go here&lt;/Notes&gt;  &lt;/Episode&gt; &lt;/PotentialGrading&gt; </initialvalue><private /><alwaysinit /></stage><stage stageid="68a0eeb2-9377-4b12-8f31-5ae52e7109e4" name="Element Name" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Image</initialvalue><private /><alwaysinit /></stage><stage stageid="7b46fe82-142a-411b-bf80-b2f0047952da" name="Get Elements" type="Code"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Element" expr="[Element Name]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess><code><![CDATA[
dim table as datatable = GetDataTable("XML", "System.String")
dim row as datarow
dim doc as new xmldocument
dim list as xmlnodelist

doc.loadxml(xml)
list = doc.getelementsbytagname(element)

for each n as xmlnode in list
	row = table.newrow()
	row("XML") = n.outerxml
	table.rows.Add(row)
next

Elements = table
]]></code></stage><stage stageid="d693d2fb-a196-4ddc-b2e9-b41cbe618fc3" name="Elements" type="Collection"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="165" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="17f4a862-c7e3-44c3-a373-5b325fdaab8a" name="Blank XML?" type="Decision"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([XML])) = 0" /><ontrue>6eb4f747-35c0-4e57-acbf-be93ac0a1bbb</ontrue><onfalse>7b46fe82-142a-411b-bf80-b2f0047952da</onfalse></stage><stage stageid="6eb4f747-35c0-4e57-acbf-be93ac0a1bbb" name="anchor1" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a460ec9b-8afb-4b37-8ae0-7545448b025d</onsuccess></stage><stage stageid="a460ec9b-8afb-4b37-8ae0-7545448b025d" name="anchor2" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="165" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess></stage><stage stageid="97b59270-9eda-4994-9fce-24d8b5d856a4" name="Get XML Attribute" type="SubSheetInfo"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative>Gets the value of an xml attribute with a given name from an xml document fragment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="802dd6e8-6b25-42b9-9af6-931049d4062a" name="Start" type="Start"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The xml document to get attributes from" stage="XML" /><input type="text" name="Attribute Name" narrative="The name of the xml attribute to get" stage="Attribute Name" /></inputs><onsuccess>76737597-b716-4a52-8cbc-dfe9b5ad1f0c</onsuccess></stage><stage stageid="bc64fcfd-4386-47ec-b799-19c5454d8374" name="End" type="End"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The text value of the requested attribute" stage="Attribute Value" /></outputs></stage><stage stageid="18f2ae57-8ed9-457b-8763-82dedb14a5e0" name="XML" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;iGrading&gt;&lt;Response transactionID="de3dc0b1-6b22-4b67-a13a-d42fff6188b9" status="Success" method="SubmitPotentialGradingWithImages" description="" /&gt;&lt;/iGrading&gt;</initialvalue><private /><alwaysinit /></stage><stage stageid="1941e7f9-164d-4aa2-b06e-cb3a579a30e4" name="Attribute Name" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">method</initialvalue><private /><alwaysinit /></stage><stage stageid="c9ec2a39-8f5d-42cc-856f-33bdb2c16477" name="Attribute Value" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76737597-b716-4a52-8cbc-dfe9b5ad1f0c" name="Get Attribute" type="Code"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Attribute" expr="[Attribute Name]" /></inputs><outputs><output type="text" name="Value" stage="Attribute Value" /></outputs><onsuccess>bc64fcfd-4386-47ec-b799-19c5454d8374</onsuccess><code><![CDATA[
dim i as integer = XML.indexof(Attribute)

if i > 0 then
	i += Attribute.length + 2
	value = XML.substring(i)
	value = value.substring(0, value.indexof(""""))
else
	value = ""
end if]]></code></stage><stage stageid="ebd306f5-f0a3-46cf-8a04-9bde5bf5cc3d" name="Get Collection as CSV" type="SubSheetInfo"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><narrative>Turns a collection into a list of comma seperated values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e2d9aba-666e-457b-adb8-c5991d17ba24" name="Start" type="Start"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to be converted to CSV" stage="Input Collection" /></inputs><onsuccess>e5946197-de00-4008-9491-d0ab28eaf2ee</onsuccess></stage><stage stageid="a619ae29-9260-47d3-b15c-f47342810991" name="End" type="End"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Collection CSV" narrative="The CSV representation of the Input Collection" stage="Output CSV" /></outputs></stage><stage stageid="18eea322-16ab-4d30-a555-5ac6638b468f" name="Input Collection" type="Collection"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="120" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5946197-de00-4008-9491-d0ab28eaf2ee" name="Serialise to CSV" type="Code"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="text" name="Output CSV" stage="Output CSV" /></outputs><onsuccess>a619ae29-9260-47d3-b15c-f47342810991</onsuccess><code><![CDATA[
Dim SB As New StringBuilder
WriteDataTable(SB, Input_Collection, True)
Output_CSV = SB.ToString()]]></code></stage><stage stageid="9e68e0db-adac-4a32-bd92-c7d5bfe31468" name="Output CSV" type="Data"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47ea7760-3b58-442b-8271-c90d3c08f114" name="Split Lines by Length" type="SubSheetInfo"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative>Splits text into lines of a given length using word boundries to find the split point.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="51996cc8-b76e-4de1-899a-66c678dbe1f3" name="Start" type="Start"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The single line of text that needs to be split" stage="Text to Split" /><input type="number" name="Maximum Line Length" narrative="The maximum length of the line" stage="Maximum Line Length" /><input type="flag" name="Split Strictly by Length" narrative="Set true if the line should be split at character boundries instead of words" stage="Split Strictly by Length" /></inputs><onsuccess>0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a</onsuccess></stage><stage stageid="52e75580-936a-4647-a154-e984ab8d199a" name="End" type="End"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Line Count" stage="Line Count" /><output type="collection" name="Split Lines" stage="Split Lines" /></outputs></stage><stage stageid="0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a" name="Split Lines By Length" type="Code"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="number" name="Maximum Line Length" expr="[Maximum Line Length]" /><input type="flag" name="Strict Split" expr="[Split Strictly by Length]" /></inputs><outputs><output type="collection" name="Split Lines" stage="Split Lines" /><output type="number" name="Line Count" stage="Line Count" /></outputs><onsuccess>52e75580-936a-4647-a154-e984ab8d199a</onsuccess><code><![CDATA[Dim Values as List(Of String) = Nothing
If Strict_Split Then
      Values = New List(Of String)
      While Text_to_Split.Length > 0
            Dim NewLine As String = Text_to_Split.SubString(0, Math.Min(Maximum_Line_Length, Text_to_Split.Length))
            NewLine = NewLine.Trim()
            Values.Add(NewLine)

            If Text_to_Split.Length > NewLine.Length Then
                  Text_to_Split = Text_to_Split.SubString(NewLine.Length, Text_to_Split.Length - NewLine.Length)
            Else
                  Text_to_Split = ""
            End If
            Text_to_Split = Text_to_Split.Trim()
      End While
Else
      Values = SplitTextByLengthEngine(Text_to_Split, Maximum_Line_length)
End If

Split_Lines = New DataTable()
Split_Lines.Columns.Add("Line Text", GetType(String))
For Each s as String in Values
      Split_Lines.Rows.Add(New Object() {s})
Next

Line_Count = Values.Count]]></code></stage><stage stageid="c20b3e81-de90-46c1-a347-f094034ff28c" name="Text to Split" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="75" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp</initialvalue><private /><alwaysinit /></stage><stage stageid="e329d1c6-7a17-4af0-aa33-d6fb517adb68" name="Split Lines" type="Collection"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="135" y="45" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line Text" type="text" /></collectioninfo></stage><stage stageid="50f47d4a-73f4-46d2-93e1-24a2470d2df9" name="Maximum Line Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="150" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="d1f11813-b465-4a95-9194-630fb1424d37" name="Line Count" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="90" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89c59225-5fb8-45a8-9fb8-a102420ddbc5" name="Split Strictly by Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="225" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8d911bb3-c87f-4748-b226-9d2faaf45c95" name="Get CSV As Collection" type="SubSheetInfo"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>Turns a list of comma seperated values into a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="90168461-d901-4bf7-886d-42176fe2fe34" name="Start" type="Start"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV" narrative="The CSV to be converted into a collection" stage="CSV" /><input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" stage="First Row Is Header" /><input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " stage="Schema" /></inputs><onsuccess>33e5caa5-61ec-4ef6-9ae8-01466a277896</onsuccess></stage><stage stageid="f06f6c62-eada-49b0-bf89-fdbb436e13fe" name="End" type="End"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="150" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs></stage><stage stageid="d5778bd8-695a-4c5e-8e8a-3764ae34f57f" name="CSV" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5b7df42-71fd-41f6-af35-62ed6f68caa0" name="Output Collection" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="45" y="15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="617f911a-8f73-4ce5-b428-f1441214c602" name="First Row Is Header" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="285" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ff699bd2-cd5a-4996-927a-e579b22b0313" name="Schema" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>The columns must appear in the same order as they appear in the CSV file</narrative><display x="390" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="e1587123-3967-4743-b475-5499f8c41803" name="Get Newline Character" type="SubSheetInfo"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><narrative>Gets the text representing the two newline characters used under windows (Carriage return followed by Line feed)</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b09f1e76-fb7c-4ef1-9a47-db4a1377d056" name="Start" type="Start"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>af411d25-0e83-4e28-b4f3-30f43beb9b88</onsuccess></stage><stage stageid="bee4d44f-957c-415f-be9c-614e97d6f255" name="End" type="End"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Newline Character" narrative="The new line text" stage="Newline Character" /></outputs></stage><stage stageid="af411d25-0e83-4e28-b4f3-30f43beb9b88" name="Get Newline Character" type="Code"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Newline Character" stage="Newline Character" /></outputs><onsuccess>bee4d44f-957c-415f-be9c-614e97d6f255</onsuccess><code><![CDATA[Newline_Character = VbCrLf]]></code></stage><stage stageid="dde302f4-2b62-45c0-a8f3-190c52116470" name="Newline Character" type="Data"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd7d11e6-2bc7-40ed-ab47-1180482d82ed" name="Delete Characters" type="SubSheetInfo"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative>Removes the given characters from the text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6e15c3f7-07db-4e3d-a24d-84be7e09b06e" name="Start" type="Start"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" stage="Text Sample" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" stage="Characters to Delete" /></inputs><onsuccess>89bfbefd-b0a3-472a-b72c-75105d0a7895</onsuccess></stage><stage stageid="c7719606-01b9-4626-9a24-4d9cf42d1e75" name="End" type="End"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Amended Sample" /></outputs></stage><stage stageid="78d405b1-aa60-46a6-af38-fb4bba55e752" name="Text Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66318e10-ff11-43c1-9b3c-6ce27546458f" name="Characters to Delete" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89bfbefd-b0a3-472a-b72c-75105d0a7895" name="Replace" type="Code"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" expr="[Text Sample]" /><input type="text" name="Characters to Delete" expr="[Characters to Delete]" /></inputs><outputs><output type="text" name="Amended Sample" stage="Amended Sample" /></outputs><onsuccess>c7719606-01b9-4626-9a24-4d9cf42d1e75</onsuccess><code><![CDATA[For Each C as Char in Characters_To_Delete.ToCharArray()
	Text_Sample = Text_Sample.Replace(C, "")
Next

Amended_Sample = Text_Sample]]></code></stage><stage stageid="930e7d0f-68a5-4d40-a291-e2dcfa4918c6" name="Amended Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a0bb945-2946-4e17-8e4a-b8d7eb5e1060" name="Escape Sendkeys String" type="SubSheetInfo"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><narrative>Escapes characters to be sent via the sendkeys method, to ensure that all characters are interpreted literally. If left unescaped, some characters such as % carry a special meaning rather than their literal value.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5bb1d666-6ef6-4371-a0f4-111fdf5ee69e" name="Start" type="Start"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sendkeys Text" narrative="The text to be escaped" stage="Sendkeys Text" /></inputs><onsuccess>5ea70bdd-732c-4a8e-b5cb-a747f97e1090</onsuccess></stage><stage stageid="7bfda30d-2f75-46ec-b5e2-88a965528b49" name="End" type="End"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Escaped Sendkeys Text" narrative="The escaped sendkeys text, which can be sent via the sendkeys method without fear of misinterpretation" stage="Escaped Sendkeys Text" /></outputs></stage><stage stageid="5ea70bdd-732c-4a8e-b5cb-a747f97e1090" name="Escape Text" type="Code"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SendKeys Text" expr="[Sendkeys Text]" /></inputs><outputs><output type="text" name="Escaped Sendkeys Text" stage="Escaped Sendkeys Text" /></outputs><onsuccess>7bfda30d-2f75-46ec-b5e2-88a965528b49</onsuccess><code><![CDATA[Escaped_Sendkeys_Text = Regex.Replace(SendKeys_Text, "[\[\]{}+^%~()]", "{$0}")]]></code></stage><stage stageid="c0e80092-2acc-4552-b6ab-9e3fa5abb07a" name="Escaped Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="150" y="90" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="172f06e8-629e-434a-9bee-084a177606eb" name="Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e2f3e3d-72e1-4483-b79e-49e9f1387d8a" name="Compare Font Text" type="SubSheetInfo"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative>Compares two items of text read using Font Recognition for equality, where "equality" means that the two text samples match following the removal of conflicting font characters.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a092a3a-7389-4bd7-8d31-a3ed761ff97c" name="Start" type="Start"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="None" /></postconditions><display x="150" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sample 1" narrative="The first item to be compared" stage="Sample 1" /><input type="text" name="Sample 2" narrative="The second item to be compared" stage="Sample 2" /><input type="collection" name="Conflicting Characters" narrative="A collection of conflicting font characters, as read from a read stage for the font of interest" stage="Conflicting Characters" /></inputs><onsuccess>2aac81fd-1231-450b-94e5-3a5928ddb08b</onsuccess></stage><stage stageid="f07d147e-0807-4996-8746-e6b232b63283" name="End" type="End"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="330" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Samples Equal" narrative="Indicates whether the samples are equal, once conflicting characters are removed" stage="Samples Equal" /><output type="text" name="Amended Sample 1" narrative="The first sample, with conflicting characters removed" stage="Sample 1" /><output type="text" name="Amended Sample 2" narrative="The second sample, with conflicting characters removed" stage="Sample 2" /></outputs></stage><stage stageid="fbb964d4-b0d6-4729-b88d-04d1cbfd0cb5" name="Sample 1" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4187bcbb-ee93-4b01-b7b6-4e4944c8967a" name="Sample 2" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="285" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="accd1aa8-9b1f-4fd9-9899-261c2cb84f68" name="Delete from Sample 1" type="Action"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 1]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 1" /></outputs><onsuccess>cb02a7ab-2cdb-4263-b5b9-e803d6647cf2</onsuccess><resource object="Utility - Strings" action="Delete Characters" /></stage><stage stageid="16d61c29-acde-49f1-a0dc-5b93885cb724" name="Conflicting Characters" type="Collection"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="0" y="-15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2aac81fd-1231-450b-94e5-3a5928ddb08b" name="For Each Character Group" type="LoopStart"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>accd1aa8-9b1f-4fd9-9899-261c2cb84f68</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid><looptype>ForEach</looptype><loopdata>Conflicting Characters</loopdata></stage><stage stageid="5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e" name="Next Character Group" type="LoopEnd"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cd3e8b56-7767-489d-96de-6c9d0740de02</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid></stage><stage stageid="cb02a7ab-2cdb-4263-b5b9-e803d6647cf2" name="Delete from Sample 2" type="Action"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 2]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 2" /></outputs><onsuccess>5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e</onsuccess><resource object="Utility - Strings" action="Delete Characters" /></stage><stage stageid="cd3e8b56-7767-489d-96de-6c9d0740de02" name="Determine Equality" type="Calculation"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f07d147e-0807-4996-8746-e6b232b63283</onsuccess><calculation expression="[Sample 1] = [Sample 2]" stage="Samples Equal" /></stage><stage stageid="7c680a7d-326b-4d7b-b298-02df94778092" name="Samples Equal" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="330" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a589a76f-6d45-4f76-a3d8-a7220c5409ed" name="Extract Regex Values" type="SubSheetInfo"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e85db034-efea-43db-9f60-c5d086ce0f5a" name="Start" type="Start"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /><input type="collection" name="Named Values" narrative="A collection of named values to extract from the target string" stage="Named Values" /></inputs><onsuccess>526b7aa5-2df6-4a52-a8d5-fef9e3c9e776</onsuccess></stage><stage stageid="78d491bd-ce28-422a-8d1f-334ba9248f4e" name="End" type="End"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Named Values" narrative="Results of the named values extracted from the regex" stage="Named Values" /></outputs></stage><stage stageid="e0d2e8e4-b2f1-4cab-a39c-7252cd042e68" name="Regex Pattern" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="-105" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">(?&lt;Lower&gt;\d+)\s*(-|to)\s*(?&lt;Upper&gt;\d+)</initialvalue><private /><alwaysinit /></stage><stage stageid="d1344ba9-2a6f-4a88-bc72-0188e2ead8b7" name="Target String" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="240" y="-60" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">100-200</initialvalue><private /><alwaysinit /></stage><stage stageid="70580e44-41d3-40b3-9b12-3460963b2f5f" name="Named Values" type="Collection"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="30" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" /><field name="Value" type="text" /></collectioninfo><initialvalue><row><field name="Name" type="text" value="Lower" /><field name="Value" type="text" value="" /></row><row><field name="Name" type="text" value="Upper" /><field name="Value" type="text" value="" /></row></initialvalue></stage><stage stageid="526b7aa5-2df6-4a52-a8d5-fef9e3c9e776" name="Extract Values" type="Code"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /><input type="collection" name="Named Values" expr="[Named Values]" /></inputs><outputs><output type="collection" name="Named Values Out" stage="Named Values" /></outputs><onsuccess>78d491bd-ce28-422a-8d1f-334ba9248f4e</onsuccess><code><![CDATA[For Each Row As DataRow in Named_Values.Rows
	Row("Value") = ""
Next


Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
If M IsNot Nothing AndAlso M.Success Then
	If M.Groups IsNot Nothing AndAlso M.Groups.Count > 0 Then
		For Each Row As DataRow in Named_Values.Rows
			Dim GroupName As String = CStr(Row("Name"))
			Dim G As Group = M.Groups(GroupName)
			If G.Success Then
				Row("Value") = G.Value
			End If
		Next
	End If
End If

Named_Values_Out = Named_Values]]></code></stage><stage stageid="33e5caa5-61ec-4ef6-9ae8-01466a277896" name="ParseCSV" type="Code"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="150" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV" expr="[CSV]" /><input type="collection" name="Schema" expr="[Schema]" /><input type="flag" name="FirstRowIsHeader" expr="[First Row Is Header]" /></inputs><outputs><output type="collection" name="outputCollection" stage="Output Collection" /></outputs><onsuccess>f06f6c62-eada-49b0-bf89-fdbb436e13fe</onsuccess><code><![CDATA[Const SchemaColumnName As String = "Column Name"
Const DefaultColumnName As String = "Column "
Const nonSchemaHeadingIndex As Integer = 0

Dim emptySchema As Boolean = Schema Is Nothing OrElse Schema.Rows.Count = 0

Dim csvValuesList = ParseCsvToList(CSV)

' If we want to parse with no schema and want the first row be used as headings 
' we need to know what the headings will be.
Dim nonSchemaHeadings = csvValuesList(nonSchemaHeadingIndex)

' Arrange the column headings into the table first.
If emptySchema Then
	For Each columnHeader As String In nonSchemaHeadings
		Dim colName As String = If(FirstRowIsHeader, columnHeader,
											 DefaultColumnName & outputCollection.Columns.Count)
		outputCollection.Columns.Add(colName, GetType(String))
	Next
Else
	For Each columnHeader As DataRow In Schema.Rows
		Dim colName As String = columnHeader(SchemaColumnName).ToString
		outputCollection.Columns.Add(colName, GetType(String))
	Next
End If

' If the first row is being used for headings then skip those headings / values in csvValuesList.
Dim startListIndex As Integer = If(FirstRowIsHeader, nonSchemaHeadingIndex + 1, nonSchemaHeadingIndex)

' Insert the csv values into the table row by row.
For i As Integer = startListIndex To csvValuesList.Count - 1
	Dim currentRow As Datarow = outputCollection.NewRow
	outputCollection.Rows.Add(currentRow)

	Dim csvArray = csvValuesList(i)
	For columnIndex As Integer = 0 To csvArray.Length - 1
		currentRow.Item(columnIndex) = csvArray(columnIndex)
	Next
Next]]></code></stage><stage stageid="feb4e385-2919-4066-86ad-53cb6226c867" name="InStr" type="SubSheetInfo"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text.</narrative><display x="-150" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="353f092b-3d6f-4fda-bdab-cd5798047c44" name="End" type="End"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text or -1 if not found" stage="Position" /></outputs></stage><stage stageid="f594335d-8723-4704-a8ae-e8dbcfe492c7" name="Text" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a43e2c2-c8c1-4dfd-b58f-2775e2ea7d0e" name="Search String" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9bbb24e-51f9-489f-9944-30d9612c396a" name="Start Byte" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="65e660c1-4379-4323-9e01-6cd7ae38f150" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="424c6e04-b000-4dce-8eb7-ba00b0fea671" name="InStr" type="Code"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>353f092b-3d6f-4fda-bdab-cd5798047c44</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStr(Start_Byte,InText, Search_String, 1)]]></code></stage><stage stageid="7f283fb0-e9fa-4e24-82d1-aae53fd5afe1" name="Position" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-165" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d00b9153-969d-4db4-b737-b1ac835c7b2a" name="Compare Method" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="4bbb2261-2d01-49a5-88e8-c8d37745fd60" name="InStrRev" type="SubSheetInfo"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text but matches in reverse.</narrative><display x="-150" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3ddcb7e5-570f-430d-8374-ed9066da51c0" name="Start" type="Start"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>4991333f-9a42-4dc3-b73b-a8bc97edab6d</onsuccess></stage><stage stageid="251f9278-c41e-44a0-835b-bfc48910933d" name="Text" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="393bbd43-ae95-438d-b358-f51cc69d5e5c" name="Search String" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a898a11a-c6ca-4a70-abcd-42f38192de24" name="Start Byte" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="73737012-9282-4e33-9d87-c4718367216d" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4991333f-9a42-4dc3-b73b-a8bc97edab6d" name="InStrRev" type="Code"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>ba288c3f-ff29-4df2-af77-a2823f65f60c</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStrRev(InText, Search_String, Start_Byte, 1)]]></code></stage><stage stageid="63d5b70d-b54a-4451-b957-9ea177292994" name="Position" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-165" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57a39985-6197-4f21-bdff-e46bd897faa6" name="Compare Method" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d0bb7b29-fbb3-43cd-ab69-7f76a9c657e5" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b27c7a93-8e3b-4ed8-b105-e08cd2c96fdf" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bc4f3574-a096-4b9f-b836-0bc100bf2a18" name="Start" type="Start"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>424c6e04-b000-4dce-8eb7-ba00b0fea671</onsuccess></stage><stage stageid="ba288c3f-ff29-4df2-af77-a2823f65f60c" name="End" type="End"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text from the end or -1 if not found" stage="Position" /></outputs></stage><stage stageid="73739a66-400b-488a-bd7a-63a2f0d2a4ef" name="Test Regex Match" type="SubSheetInfo"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>Check if a given Text value matches a regular expression.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="568b67f8-4216-4af4-bea8-1c83bbff7e16" name="Start" type="Start"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /></inputs><onsuccess>2ad0c111-6108-4ca5-945b-22aab4b6bb27</onsuccess></stage><stage stageid="46282093-d3a9-4e38-b030-95b332ec5371" name="End" type="End"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Matched?" narrative="Whether or not the regex match" stage="Regex Match" /></outputs></stage><stage stageid="32d3ef8a-d0b2-4093-afc5-98bad356c881" name="Regex Pattern" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="165" y="-120" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5747c96e-0ce3-4e78-b446-17b9cef5b655" name="Target String" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="165" y="-75" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ad0c111-6108-4ca5-945b-22aab4b6bb27" name="Test Regex Match1" type="Code"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /></inputs><outputs><output type="flag" name="Regex Match" stage="Regex Match" /></outputs><onsuccess>46282093-d3a9-4e38-b030-95b332ec5371</onsuccess><code><![CDATA[
Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
Regex_Match =  M IsNot Nothing AndAlso M.Success]]></code></stage><stage stageid="24d6e567-f121-4d8a-a4ee-1402f8f2832d" name="Regex Match" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="45" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b45bee15-23da-4943-b790-7eac7e547cbb" name="Split Text by tab" type="SubSheetInfo"><subsheetid>66ef15bc-7fa4-4550-ab35-14029f6d89e3</subsheetid><narrative>Splits text with a given delimiter into a collection of text values.</narrative><display x="-255" y="-150" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9f54d588-9dbe-473b-b484-46d29414592b" name="Start" type="Start"><subsheetid>66ef15bc-7fa4-4550-ab35-14029f6d89e3</subsheetid><loginhibit /><display x="75" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" stage="Collection Field Name" /></inputs><onsuccess>b7cb7ac7-efa1-45d7-84c5-9da91139ce05</onsuccess></stage><stage stageid="17063458-0c1b-4054-a8fb-824307189844" name="End" type="End"><subsheetid>66ef15bc-7fa4-4550-ab35-14029f6d89e3</subsheetid><loginhibit /><display x="75" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="d1873abf-e14b-4f91-b226-2d9cb548d460" name="Text to Split" type="Data"><subsheetid>66ef15bc-7fa4-4550-ab35-14029f6d89e3</subsheetid><display x="-135" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="637d185c-60e7-4dc2-8498-8638b70005be" name="Split Values" type="Collection"><subsheetid>66ef15bc-7fa4-4550-ab35-14029f6d89e3</subsheetid><display x="-135" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="947df7e0-da5c-43f4-9d47-1a8ad956ea4c" name="Collection Field Name" type="Data"><subsheetid>66ef15bc-7fa4-4550-ab35-14029f6d89e3</subsheetid><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b7cb7ac7-efa1-45d7-84c5-9da91139ce05" name="Split by tab" type="Code"><subsheetid>66ef15bc-7fa4-4550-ab35-14029f6d89e3</subsheetid><loginhibit /><display x="75" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="text" name="Collection Field Name" expr="[Collection Field Name]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>17063458-0c1b-4054-a8fb-824307189844</onsuccess><code><![CDATA[Split_Values = SplitStringInto( _
 Collection_Field_Name, _
 Text_to_Split, Convert.ToChar(9))]]></code></stage></process></object>
        <object id="1b13f5b8-01d1-441e-bd7f-54884a24d71f" name="Utility - Strings" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Strings" version="6.4.2.10610" bpversion="7.0.1.49890" narrative="Utility functions for manipulating text." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>60</camerax><cameray>-35</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65117a41-f7ff-4f3f-abd1-7a3cbe18cfda" type="Normal" published="True"><name>Remove Non-word Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8fea7a8-24d9-41c8-9397-a3839e6ffdc1" type="Normal" published="True"><name>Generate New GUID</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e70e8f13-02df-4b14-bb74-6fd5c4c95928" type="Normal" published="True"><name>Delete Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a710d42-8f41-45d0-9e74-1eddf74c0e75" type="Normal" published="True"><name>Split Lines by Length</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e6bab90c-ddfd-48c0-af38-804fe4f770ed" type="Normal" published="True"><name>Split Lines</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a5871062-5ad2-4950-afbc-cb5b1b7a7f0b" type="Normal" published="True"><name>Split Text</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2c09338-7850-4daf-a545-8972d333b826" type="Normal" published="True"><name>Join Text</name><view><camerax>65</camerax><cameray>75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a854bb6a-4399-4e51-8fc3-64f9e1d4f896" type="Normal" published="True"><name>Join Lines</name><view><camerax>152</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fcddf4bf-83af-4431-88db-cc2c88390cec" type="Normal" published="True"><name>Get Newline Character</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="06780f7c-9622-4d84-9db3-bb56a2ff9f36" type="Normal" published="True"><name>Extract Regex Values</name><view><camerax>70</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a6b6398e-c21a-4c4e-9742-65ccad8370d9" type="Normal" published="True"><name>Test Regex Match</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5110b353-010b-4874-97bd-8b7621c24384" type="Normal" published="True"><name>Format Number</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef8de52d-842b-45f0-8f1b-619bc97d4bbc" type="Normal" published="True"><name>PadLeft</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="818441a5-ffec-4841-b0ea-00712caf63aa" type="Normal" published="True"><name>Get XML Elements</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e8af11f7-dfd4-4c86-9935-e83828b9e711" type="Normal" published="True"><name>Get XML Attribute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f9add4d4-31de-4c0f-a109-0b51fa576a23" type="Normal" published="True"><name>Get Collection as CSV</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5b26213-5463-4b2d-b10f-b188876b436f" type="Normal" published="True"><name>Get CSV As Collection</name><view><camerax>248</camerax><cameray>-87</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="040cc29a-27ac-402c-8a66-328554dd4bc0" type="Normal" published="True"><name>Escape Sendkeys String</name><view><camerax>0</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="527ca986-a03f-4231-880e-5b1c244b035e" type="Normal" published="True"><name>Compare Font Text</name><view><camerax>150</camerax><cameray>139</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0244396a-1d3d-4892-b6cb-461468f4c7e1" type="Normal" published="True"><name>InStr</name><view><camerax>0</camerax><cameray>-2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ab28c01-86eb-458d-b8d9-74f98926d266" type="Normal" published="True"><name>InStrRev</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Text</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic.FileIO</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

Private Function SplitStringInto( _
 ByVal fldName As String, _
 ByVal txt As String, _
 ByVal ParamArray splitters() As String) As DataTable
	Dim dt As New DataTable()
	dt.Columns.Add(fldName, GetType(String))

	For Each s As String In txt.Split(splitters, StringSplitOptions.None)
		dt.Rows.Add(New Object() {s})
	Next

	Return dt
End Function

Public Shared Function ParseCsvToList(ByVal csv As String) As List(Of String())
	Dim result = New List(Of String())()

	Using sr As New StringReader(csv)
		Using lineParser As New TextFieldParser(sr)
			lineParser.TextFieldType = FieldType.Delimited
			lineParser.SetDelimiters(",")
			While Not lineParser.EndOfData

				Dim fields As String() = lineParser.ReadFields()
				result.Add(fields)
			End While
		End Using
	End Using

	Return result
End Function


''' -----------------------------------------------------------------------------
''' <summary>
''' Serialises a datatable to the supplied stream.
''' </summary>
''' <param name="Writer">The stream writr to which the datatable should
''' be serialised. Eg this may correspond to a file stream.</param>
''' <param name="Table">The datatable to be serialised.</param>
''' <param name="IncludeHeaderRow">When true, the column headers will
''' be wrtten out on the first row.</param>
''' -----------------------------------------------------------------------------
Public Shared Sub WriteDataTable(ByVal Writer As StringBuilder, ByVal Table As DataTable, ByVal IncludeHeaderRow As Boolean)
	If IncludeHeaderRow Then
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Table.Columns(i).ColumnName)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(",")
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	End If

	For Each Row As DataRow In Table.Rows
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Row(i).ToString)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(",")
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	Next
End Sub



''' -----------------------------------------------------------------------------
''' <summary>
''' Writes a csv data cell, escaping quotes and new lines where necessary.
''' </summary>
''' <param name="Writer">The writer to which the item should be written.</param>
''' <param name="Value">The value to be written.</param>
''' -----------------------------------------------------------------------------
Private Shared Sub WriteItem(ByVal Writer As StringBuilder, ByVal Value As String)
	If Value.IndexOfAny(("""," & vbCrLf).ToCharArray) > -1 Then
		Writer.Append("""" & Value.Replace("""", """""") & """")
	Else
		Writer.Append(Value)
	End If
End Sub


'Splits text into lines of approximately equal length, looking for
'gaps between words as splitting points in order to avoid ugly
'line splitting in the middle of words. Useful for mainframe memos
'where a long message needs to be broken into lines of up to 80
'characters.
'
Private Shared Function SplitTextByLengthEngine(Texttosplit As String, MaxLineLength As Integer) As List(of String)
	Dim RetVal as New List(Of String)
	MaxLineLength =  Math.Min(MaxLineLength, TexttoSplit.Length)

	'We look for the last space within (MaxLineLength + 1) and then work backwards
	'(always by at least one) to find the last non-space character. We can then
	'chop at this point, assuming such exists. Otherwise we just chop at the
	'requested line length accepting we will be splitting a word.
	Dim LastIndex as integer = TexttoSplit.Substring(0, Math.Min(MaxLineLength + 1, TextToSplit.Length)).LastIndexOf(" ")

	If TextToSplit.Length <= MaxLineLength OrElse LastIndex = -1 Then
		RetVal.Add(TexttoSplit.Substring(0, MaxLineLength))
		Dim RemainingText As String = TexttoSplit.SubString(MaxLineLength,TextToSplit.Length - MaxLineLength).Trim()
		If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
	Else
		'Track backwards to find previous non-space character
		Dim Index As Integer = LastIndex - 1
		While Index >= 0 Andalso TextToSplit.SubString(Index, 1) = " "
			Index -=1
		End While
		If Index >= 0 Then
			RetVal.Add(TextToSplit.SubString(0, Index + 1))
			Dim RemainingText As String = TexttoSplit.SubString(Index + 1, TextToSplit.Length - (Index + 1)).Trim()
			If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
		Else
			'Must all be spaces. We assume this are to be ignored
		End If
	End If

	Return RetVal
End Function

]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b6df3b6c-090d-4126-a16c-8caa889b0646" name="Generate New GUID" type="SubSheetInfo"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><narrative>Generates a new globally unique identifier as text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="be35a29d-2b71-42e1-9ca7-4534046d5dfc" name="Start" type="Start"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bd80e756-d12c-4dc7-9d64-bbde733f60b7</onsuccess></stage><stage stageid="bd80e756-d12c-4dc7-9d64-bbde733f60b7" name="Get GUID" type="Code"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="id" stage="GUID" /></outputs><onsuccess>4930704e-00c1-456a-8aad-02220fd81c99</onsuccess><code><![CDATA[dim g as new Guid
id = guid.newguid.tostring]]></code></stage><stage stageid="695dad7d-b634-454c-9171-baf489698067" name="GUID" type="Data"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><display x="-60" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4930704e-00c1-456a-8aad-02220fd81c99" name="End1" type="End"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="GUID" narrative="The new guid" stage="GUID" /></outputs></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a130f3e8-fad5-413c-a068-75ac20600244" name="Remove Non-word Characters" type="SubSheetInfo"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><narrative>Trims non word characters from the begining and end of the text. Non word characters are any character that is NOT in the ranges a-z A-Z _ and 0-9</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="dd85470c-e10b-4f0b-b729-c006136517eb" name="Start" type="Start"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="The text to remove the non word characters from" stage="Text" /></inputs><onsuccess>a2426b0a-eab8-4571-a6d9-fa89c49559be</onsuccess></stage><stage stageid="3eae8050-c325-49f6-9e3f-ee12400ca5d4" name="End" type="End"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Trimmed Text" narrative="The text with the non word characters removed" stage="Trimmed Text" /></outputs></stage><stage stageid="a2426b0a-eab8-4571-a6d9-fa89c49559be" name="Trim" type="Code"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="text" name="Trimmed Text" stage="Trimmed Text" /></outputs><onsuccess>3eae8050-c325-49f6-9e3f-ee12400ca5d4</onsuccess><code><![CDATA[
dim r as new regex("^\W*|\W*$")
Trimmed_Text = r.replace(text, "")
]]></code></stage><stage stageid="1f3570bd-8411-4e92-8fd3-1dd418411570" name="Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">    qwerqwer    </initialvalue><private /><alwaysinit /></stage><stage stageid="0967c44a-1a53-49a7-8bb4-e1f6733a41b0" name="Trimmed Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00a08897-25f2-48e0-aa88-e40bb27b94e7" name="Split Lines" type="SubSheetInfo"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><narrative>Splits multiple line text into a collection text values with a single row per line.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5f6c9d2f-247d-42a7-bc18-8b4283b21c80" name="Start" type="Start"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /></inputs><onsuccess>ee14a8f3-9fd3-4342-abcf-3cbe1d57431a</onsuccess></stage><stage stageid="370a75cf-d54f-438d-b7b1-0f931038d7a2" name="End" type="End"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="b655e5fa-2cb9-487a-b4e8-8faf44531e8d" name="Text to Split" type="Data"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee14a8f3-9fd3-4342-abcf-3cbe1d57431a" name="Split" type="Code"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>370a75cf-d54f-438d-b7b1-0f931038d7a2</onsuccess><code><![CDATA[Split_Values = SplitStringInto("Value", _
 Text_to_Split, vbCrLf, vbLf, vbCr)]]></code></stage><stage stageid="5c6c7749-e4c1-45ef-9fb7-a7b7ca77214d" name="Split Values" type="Collection"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="120" y="90" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Value" type="text" /></collectioninfo></stage><stage stageid="99d3d4f8-598b-44be-9744-5142537aff99" name="Split Text" type="SubSheetInfo"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative>Splits text with a given delimiter into a collection of text values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="97069dc2-f2a1-4f61-a3f6-e26e88d1da58" name="Start" type="Start"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /><input type="text" name="Split Char" narrative="The split delimiter" stage="Split Char" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" stage="Collection Field Name" /></inputs><onsuccess>d1694d87-2fff-467b-9a07-5f5dd570bd41</onsuccess></stage><stage stageid="2972f0ee-292a-4bb0-bed5-c9a19f8945f6" name="End" type="End"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="33bff0c5-22b9-4ab3-ac0a-c352221a4f79" name="Text to Split" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="195" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1694d87-2fff-467b-9a07-5f5dd570bd41" name="Split Text" type="Code"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="text" name="Split Char" expr="[Split Char]" /><input type="text" name="Collection Field Name" expr="[Collection Field Name]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>2972f0ee-292a-4bb0-bed5-c9a19f8945f6</onsuccess><code><![CDATA[Split_Values = SplitStringInto( _
 Collection_Field_Name, _
 Text_to_Split, Split_Char)]]></code></stage><stage stageid="17ffca42-be51-4343-90e3-035d29366b7f" name="Split Values" type="Collection"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="225" y="90" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="05ba6aed-e91b-4383-9001-69b78a2e474d" name="Split Char" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="255" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20afce2f-59e1-4fc1-896c-ab71d2f871b2" name="Collection Field Name" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="786d2d47-37c8-4324-8e43-8fc75f0eca95" name="Join Text" type="SubSheetInfo"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative>Joins values from a collection into a single line of text using a given delimiter between values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ccd8aec8-19c3-4d48-a184-a8895ed1ebbf" name="Start" type="Start"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="text" name="Join Character" narrative="The delimeter between text values" stage="Join Character" /><input type="flag" name="Trim Values" narrative="Set true to apply trimming to the values" stage="Trim Values" /></inputs><onsuccess>b05ea94b-f0d1-4047-b854-04877801ef0b</onsuccess></stage><stage stageid="7dbff5b3-7cd4-406a-9650-265fb88988ef" name="End" type="End"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="13059fce-ee5a-4fbc-a76c-efc5db5d1240" name="Values" type="Collection"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item Value" type="text" /></collectioninfo></stage><stage stageid="b0cf2931-5486-4779-b457-e8af03062df8" name="Join Character" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="019a4343-9b5c-4400-8b76-5efbf2156032" name="Join Lines" type="SubSheetInfo"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative>Joins values from a collection into multiline text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6f376101-4dd4-43b4-85a0-19dd1090df02" name="Start" type="Start"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="flag" name="Trim Lines" narrative="Set true to apply trimming to the lines" stage="Trim Lines" /></inputs><onsuccess>816591dd-a42d-436b-9fd0-4ca095d78e29</onsuccess></stage><stage stageid="f2d9cbef-9cdb-4daa-bbb6-5d3dc0548c2e" name="Values" type="Collection"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="579d0466-882d-47ce-a2c3-d4a7f25eaa8c" name="Joined Text" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="285" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="724a0223-71bd-48d0-bcca-f4d554fcf91b" name="End" type="End"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="8bcc24ca-f588-4c3c-b09b-fe08b425b5db" name="Joined Text" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="135" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3b84350-20a1-442e-bebb-0232a5b73299" name="Join Text" type="SubSheet"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Values" expr="[Values]" /><input type="text" name="Join Character" expr="[Join Character]" /><input type="flag" name="Trim Values" expr="[Trim Lines]" /></inputs><outputs><output type="text" name="Joined Text" stage="Joined Text" /></outputs><onsuccess>724a0223-71bd-48d0-bcca-f4d554fcf91b</onsuccess><processid>a2c09338-7850-4daf-a545-8972d333b826</processid></stage><stage stageid="816591dd-a42d-436b-9fd0-4ca095d78e29" name="Get Carriage Return" type="Code"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Join Character" stage="Join Character" /></outputs><onsuccess>e3b84350-20a1-442e-bebb-0232a5b73299</onsuccess><code><![CDATA[Join_Character = vbcrlf]]></code></stage><stage stageid="9a8e3b40-f136-4397-b62b-4a69cd010c37" name="Join Character" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="105" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13a0e17b-9b82-4dd6-8e3a-313890d8caf3" name="For Each Value" type="LoopStart"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e4c0da52-0523-4109-b705-3fadd035597b</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid><looptype>ForEach</looptype><loopdata>Values</loopdata></stage><stage stageid="98f2416b-599a-42d1-a76f-d41ea3e23572" name="Next Value" type="LoopEnd"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="195" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>7dbff5b3-7cd4-406a-9650-265fb88988ef</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid></stage><stage stageid="b05ea94b-f0d1-4047-b854-04877801ef0b" name="Reset Output" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>13a0e17b-9b82-4dd6-8e3a-313890d8caf3</onsuccess><calculation expression="&quot;&quot;" stage="Joined Text" /></stage><stage stageid="49168356-8449-4cb3-9798-0796b15b77a3" name="Append Value" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="150" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>98f2416b-599a-42d1-a76f-d41ea3e23572</onsuccess><calculation expression="[Joined Text] &amp; [Values.Item Value] &amp; [Join Character]" stage="Joined Text" /></stage><stage stageid="54cf1a89-b26c-4916-ab45-8f1e80b9b86f" name="Trim Lines" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="150" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6aa04814-e2fd-4630-b391-bfe892ddc8df" name="Trim Values" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="210" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e4c0da52-0523-4109-b705-3fadd035597b" name="Trim?" type="Decision"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Trim Values]" /><ontrue>91ef5da4-e47e-4442-98ec-d46cbd8d8692</ontrue><onfalse>49168356-8449-4cb3-9798-0796b15b77a3</onfalse></stage><stage stageid="91ef5da4-e47e-4442-98ec-d46cbd8d8692" name="Do Trim" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>10ac89cc-d24c-4622-ad92-34ebe2365083</onsuccess><calculation expression="Trim([Values.Item Value])" stage="Values.Item Value" /></stage><stage stageid="10ac89cc-d24c-4622-ad92-34ebe2365083" name="anchor1" type="Anchor"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="150" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>49168356-8449-4cb3-9798-0796b15b77a3</onsuccess></stage><stage stageid="b837f601-57e9-4136-8dee-db8ca9ebf15f" name="Format Number" type="SubSheetInfo"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><narrative>Formats a number into comma-delimited triplets, as appropriate. Eg 123456.789 becomes 123,456.789</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="df1e573a-3e89-43a8-8e6a-61f1840b3869" name="Start" type="Start"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The number will have been formatted." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Input Number" narrative="The number to format" stage="Input Number" /></inputs><onsuccess>df4ce97f-4b9c-4087-a9bf-c6e35eba156b</onsuccess></stage><stage stageid="dd89bdff-2f14-4268-98f4-7ef3747a5233" name="End" type="End"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Formatted Currency Numbers" narrative="The resulting formatted number" stage="Formatted Currency Value" /></outputs></stage><stage stageid="b0f25370-1f87-4edd-b03a-0a3ac16537fb" name="Input Number" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>987654123456.789</initialvalue><private /><alwaysinit /></stage><stage stageid="df4ce97f-4b9c-4087-a9bf-c6e35eba156b" name="Format" type="Code"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="number" name="Input" expr="[Input Number]" /></inputs><outputs><output type="text" name="Output" stage="Formatted Currency Value" /></outputs><onsuccess>dd89bdff-2f14-4268-98f4-7ef3747a5233</onsuccess><code><![CDATA[Output = Input.ToString("N")]]></code></stage><stage stageid="a6d6d631-89c5-4460-9771-6a15a0e1d7d5" name="Formatted Currency Value" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3013d63-9017-4dd9-bcf6-5e0d09ab372f" name="PadLeft" type="SubSheetInfo"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative>Ensures that a string (usually a number) is of fixed width, by padding with a special character on the left.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="af05cd75-42db-4c09-875d-3fedfc3ca0a2" name="Start" type="Start"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The supplied text will have been padded to be at least the number of desired characters." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Input String" narrative="The string to pad" stage="Input String" /><input type="number" name="Target Width" narrative="The total number of characters required after padding" stage="Target Width" /><input type="text" name="Padding Character" narrative="The character to pad with" stage="Padding Character" /></inputs><onsuccess>6527cdd9-47d7-4784-bd96-e63afa4ec955</onsuccess></stage><stage stageid="f432b972-ae44-4485-943b-87848fd43487" name="End" type="End"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Padded String" narrative="The resultant padded string" stage="Input String" /></outputs></stage><stage stageid="888a814c-a03d-43f0-b6d6-30501b8b3250" name="Input String" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">123</initialvalue><private /><alwaysinit /></stage><stage stageid="ea8d90c7-c341-4859-919c-4ecc076162eb" name="Target Width" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="56c037f3-4ff0-4923-974c-e925c84e69c8" name="Padding Character" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="210" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6527cdd9-47d7-4784-bd96-e63afa4ec955" name="Blank Padding Character?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Padding Character]) = 0" /><ontrue>26f66718-649a-4472-965d-0e1e125e7473</ontrue><onfalse>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onfalse></stage><stage stageid="26f66718-649a-4472-965d-0e1e125e7473" name="Use Space for Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="-45" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="&quot; &quot;" stage="Padding Character" /></stage><stage stageid="6acfdd2b-9298-4841-9111-003fc203edd0" name="anchor2" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onsuccess></stage><stage stageid="b6b30eec-0ee3-4316-a9af-d0a55d5ec137" name="anchor3" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="0" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e13c9c2d-2cbe-4262-828c-6307a805d9c1</onsuccess></stage><stage stageid="e13c9c2d-2cbe-4262-828c-6307a805d9c1" name="Long Enough?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len([Input String]) &gt;= [Target Width]" /><ontrue>f432b972-ae44-4485-943b-87848fd43487</ontrue><onfalse>87af11ea-fa7e-45cf-b02a-fd6edeae0b85</onfalse></stage><stage stageid="87af11ea-fa7e-45cf-b02a-fd6edeae0b85" name="Insert Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="[Padding Character] &amp; [Input String]" stage="Input String" /></stage><stage stageid="92edef27-4b78-40dd-97bd-e5a4f9169214" name="Get XML Elements" type="SubSheetInfo"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative>Gets a collection of xml elements with a given name from an xml document.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="04bec0f1-e8bb-4c30-a5d1-b7eee243e6f9" name="Start" type="Start"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The xml to get elements from" stage="XML" /><input type="text" name="Element Name" narrative="The name of the xml elements to get" stage="Element Name" /></inputs><onsuccess>17f4a862-c7e3-44c3-a373-5b325fdaab8a</onsuccess></stage><stage stageid="e4b99f55-7171-46d6-992b-db797e99b1ed" name="End" type="End"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Elements" narrative="The collection of xml elements that match the given name and for each element its outer xml" stage="Elements" /></outputs></stage><stage stageid="31472749-70ee-477e-a042-fcf5a25a4099" name="XML" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="60" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;PotentialGrading&gt;  &lt;ServiceIdentifier&gt;ABC&lt;/ServiceIdentifier&gt;  &lt;Episode ID="a97fe424-0d1f-4e7c-9e9a-9b3c9e03d594"&gt;   &lt;Patient DateOfBirth="18/02/1970" Gender="M" PartPostcode="YO51" EthnicOrigin="W" Country="United Kingdom"    Region="North Yorkshire" RegisteredBlind="0" RegisteredPartiallySighted="1" HealthProvider="PCT"    Insurance="Cheap as Chips Insurance"&gt;The patient ID goes here&lt;/Patient&gt;   &lt;Screening Date="2007/09/06" GradingCodeSet="NGC" ImageCount="4"&gt;    &lt;Item Code="Examiner Classification" Value="1" /&gt;    &lt;Item Code="Eye Screening Urgency" Value="2" /&gt;    &lt;Item Code="Opthalmologist Care" Value="2" /&gt;    &lt;Item Code="Technical Gradability Code" Value="1" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="right" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="left" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="right" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="left" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="right" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="left" /&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="right"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="left"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="right" /&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="left" /&gt;    &lt;Image Length="104644" CameraID="Camera1" CameraModelID="CameraModel1" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(5)L.jpg&lt;/Image&gt;    &lt;Image Length="107565" CameraID="Camera2" CameraModelID="CameraModel2" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(6)L.jpg&lt;/Image&gt;    &lt;Image Length="107441" CameraID="Camera3" CameraModelID="CameraModel3" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(5)R.jpg&lt;/Image&gt;    &lt;Image Length="112472" CameraID="Camera4" CameraModelID="CameraModel4" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(6)R.jpg&lt;/Image&gt;   &lt;/Screening&gt;   &lt;Notes&gt;Free text notes go here&lt;/Notes&gt;  &lt;/Episode&gt; &lt;/PotentialGrading&gt; </initialvalue><private /><alwaysinit /></stage><stage stageid="68a0eeb2-9377-4b12-8f31-5ae52e7109e4" name="Element Name" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="90" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Image</initialvalue><private /><alwaysinit /></stage><stage stageid="7b46fe82-142a-411b-bf80-b2f0047952da" name="Get Elements" type="Code"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Element" expr="[Element Name]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess><code><![CDATA[
dim table as datatable = GetDataTable("XML", "System.String")
dim row as datarow
dim doc as new xmldocument
dim list as xmlnodelist

doc.loadxml(xml)
list = doc.getelementsbytagname(element)

for each n as xmlnode in list
	row = table.newrow()
	row("XML") = n.outerxml
	table.rows.Add(row)
next

Elements = table
]]></code></stage><stage stageid="d693d2fb-a196-4ddc-b2e9-b41cbe618fc3" name="Elements" type="Collection"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="165" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="17f4a862-c7e3-44c3-a373-5b325fdaab8a" name="Blank XML?" type="Decision"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Len(Trim([XML])) = 0" /><ontrue>6eb4f747-35c0-4e57-acbf-be93ac0a1bbb</ontrue><onfalse>7b46fe82-142a-411b-bf80-b2f0047952da</onfalse></stage><stage stageid="6eb4f747-35c0-4e57-acbf-be93ac0a1bbb" name="anchor1" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="-30" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>a460ec9b-8afb-4b37-8ae0-7545448b025d</onsuccess></stage><stage stageid="a460ec9b-8afb-4b37-8ae0-7545448b025d" name="anchor2" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="165" w="10" h="10" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess></stage><stage stageid="97b59270-9eda-4994-9fce-24d8b5d856a4" name="Get XML Attribute" type="SubSheetInfo"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative>Gets the value of an xml attribute with a given name from an xml document fragment.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="802dd6e8-6b25-42b9-9af6-931049d4062a" name="Start" type="Start"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The xml document to get attributes from" stage="XML" /><input type="text" name="Attribute Name" narrative="The name of the xml attribute to get" stage="Attribute Name" /></inputs><onsuccess>76737597-b716-4a52-8cbc-dfe9b5ad1f0c</onsuccess></stage><stage stageid="bc64fcfd-4386-47ec-b799-19c5454d8374" name="End" type="End"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The text value of the requested attribute" stage="Attribute Value" /></outputs></stage><stage stageid="18f2ae57-8ed9-457b-8763-82dedb14a5e0" name="XML" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="75" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;iGrading&gt;&lt;Response transactionID="de3dc0b1-6b22-4b67-a13a-d42fff6188b9" status="Success" method="SubmitPotentialGradingWithImages" description="" /&gt;&lt;/iGrading&gt;</initialvalue><private /><alwaysinit /></stage><stage stageid="1941e7f9-164d-4aa2-b06e-cb3a579a30e4" name="Attribute Name" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="105" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">method</initialvalue><private /><alwaysinit /></stage><stage stageid="c9ec2a39-8f5d-42cc-856f-33bdb2c16477" name="Attribute Value" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76737597-b716-4a52-8cbc-dfe9b5ad1f0c" name="Get Attribute" type="Code"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Attribute" expr="[Attribute Name]" /></inputs><outputs><output type="text" name="Value" stage="Attribute Value" /></outputs><onsuccess>bc64fcfd-4386-47ec-b799-19c5454d8374</onsuccess><code><![CDATA[
dim i as integer = XML.indexof(Attribute)

if i > 0 then
	i += Attribute.length + 2
	value = XML.substring(i)
	value = value.substring(0, value.indexof(""""))
else
	value = ""
end if]]></code></stage><stage stageid="ebd306f5-f0a3-46cf-8a04-9bde5bf5cc3d" name="Get Collection as CSV" type="SubSheetInfo"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><narrative>Turns a collection into a list of comma seperated values.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1e2d9aba-666e-457b-adb8-c5991d17ba24" name="Start" type="Start"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" narrative="The collection to be converted to CSV" stage="Input Collection" /></inputs><onsuccess>e5946197-de00-4008-9491-d0ab28eaf2ee</onsuccess></stage><stage stageid="a619ae29-9260-47d3-b15c-f47342810991" name="End" type="End"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Collection CSV" narrative="The CSV representation of the Input Collection" stage="Output CSV" /></outputs></stage><stage stageid="18eea322-16ab-4d30-a555-5ac6638b468f" name="Input Collection" type="Collection"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="120" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5946197-de00-4008-9491-d0ab28eaf2ee" name="Serialise to CSV" type="Code"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="15" y="0" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /></inputs><outputs><output type="text" name="Output CSV" stage="Output CSV" /></outputs><onsuccess>a619ae29-9260-47d3-b15c-f47342810991</onsuccess><code><![CDATA[
Dim SB As New StringBuilder
WriteDataTable(SB, Input_Collection, True)
Output_CSV = SB.ToString()]]></code></stage><stage stageid="9e68e0db-adac-4a32-bd92-c7d5bfe31468" name="Output CSV" type="Data"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="47ea7760-3b58-442b-8271-c90d3c08f114" name="Split Lines by Length" type="SubSheetInfo"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative>Splits text into lines of a given length using word boundries to find the split point.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="51996cc8-b76e-4de1-899a-66c678dbe1f3" name="Start" type="Start"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" narrative="The single line of text that needs to be split" stage="Text to Split" /><input type="number" name="Maximum Line Length" narrative="The maximum length of the line" stage="Maximum Line Length" /><input type="flag" name="Split Strictly by Length" narrative="Set true if the line should be split at character boundries instead of words" stage="Split Strictly by Length" /></inputs><onsuccess>0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a</onsuccess></stage><stage stageid="52e75580-936a-4647-a154-e984ab8d199a" name="End" type="End"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Line Count" stage="Line Count" /><output type="collection" name="Split Lines" stage="Split Lines" /></outputs></stage><stage stageid="0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a" name="Split Lines By Length" type="Code"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="number" name="Maximum Line Length" expr="[Maximum Line Length]" /><input type="flag" name="Strict Split" expr="[Split Strictly by Length]" /></inputs><outputs><output type="collection" name="Split Lines" stage="Split Lines" /><output type="number" name="Line Count" stage="Line Count" /></outputs><onsuccess>52e75580-936a-4647-a154-e984ab8d199a</onsuccess><code><![CDATA[Dim Values as List(Of String) = Nothing
If Strict_Split Then
      Values = New List(Of String)
      While Text_to_Split.Length > 0
            Dim NewLine As String = Text_to_Split.SubString(0, Math.Min(Maximum_Line_Length, Text_to_Split.Length))
            NewLine = NewLine.Trim()
            Values.Add(NewLine)

            If Text_to_Split.Length > NewLine.Length Then
                  Text_to_Split = Text_to_Split.SubString(NewLine.Length, Text_to_Split.Length - NewLine.Length)
            Else
                  Text_to_Split = ""
            End If
            Text_to_Split = Text_to_Split.Trim()
      End While
Else
      Values = SplitTextByLengthEngine(Text_to_Split, Maximum_Line_length)
End If

Split_Lines = New DataTable()
Split_Lines.Columns.Add("Line Text", GetType(String))
For Each s as String in Values
      Split_Lines.Rows.Add(New Object() {s})
Next

Line_Count = Values.Count]]></code></stage><stage stageid="c20b3e81-de90-46c1-a347-f094034ff28c" name="Text to Split" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="75" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp</initialvalue><private /><alwaysinit /></stage><stage stageid="e329d1c6-7a17-4af0-aa33-d6fb517adb68" name="Split Lines" type="Collection"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="135" y="45" w="120" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line Text" type="text" /></collectioninfo></stage><stage stageid="50f47d4a-73f4-46d2-93e1-24a2470d2df9" name="Maximum Line Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="150" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="d1f11813-b465-4a95-9194-630fb1424d37" name="Line Count" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="90" y="-60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89c59225-5fb8-45a8-9fb8-a102420ddbc5" name="Split Strictly by Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="225" y="-135" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8d911bb3-c87f-4748-b226-9d2faaf45c95" name="Get CSV As Collection" type="SubSheetInfo"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>Turns a list of comma seperated values into a collection.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="90168461-d901-4bf7-886d-42176fe2fe34" name="Start" type="Start"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV" narrative="The CSV to be converted into a collection" stage="CSV" /><input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" stage="First Row Is Header" /><input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " stage="Schema" /></inputs><onsuccess>33e5caa5-61ec-4ef6-9ae8-01466a277896</onsuccess></stage><stage stageid="f06f6c62-eada-49b0-bf89-fdbb436e13fe" name="End" type="End"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="150" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs></stage><stage stageid="d5778bd8-695a-4c5e-8e8a-3764ae34f57f" name="CSV" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="225" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c5b7df42-71fd-41f6-af35-62ed6f68caa0" name="Output Collection" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="45" y="15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="617f911a-8f73-4ce5-b428-f1441214c602" name="First Row Is Header" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="285" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="ff699bd2-cd5a-4996-927a-e579b22b0313" name="Schema" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>The columns must appear in the same order as they appear in the CSV file</narrative><display x="390" y="-105" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="e1587123-3967-4743-b475-5499f8c41803" name="Get Newline Character" type="SubSheetInfo"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><narrative>Gets the text representing the two newline characters used under windows (Carriage return followed by Line feed)</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b09f1e76-fb7c-4ef1-9a47-db4a1377d056" name="Start" type="Start"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>af411d25-0e83-4e28-b4f3-30f43beb9b88</onsuccess></stage><stage stageid="bee4d44f-957c-415f-be9c-614e97d6f255" name="End" type="End"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Newline Character" narrative="The new line text" stage="Newline Character" /></outputs></stage><stage stageid="af411d25-0e83-4e28-b4f3-30f43beb9b88" name="Get Newline Character" type="Code"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Newline Character" stage="Newline Character" /></outputs><onsuccess>bee4d44f-957c-415f-be9c-614e97d6f255</onsuccess><code><![CDATA[Newline_Character = VbCrLf]]></code></stage><stage stageid="dde302f4-2b62-45c0-a8f3-190c52116470" name="Newline Character" type="Data"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd7d11e6-2bc7-40ed-ab47-1180482d82ed" name="Delete Characters" type="SubSheetInfo"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative>Removes the given characters from the text.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6e15c3f7-07db-4e3d-a24d-84be7e09b06e" name="Start" type="Start"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" stage="Text Sample" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" stage="Characters to Delete" /></inputs><onsuccess>89bfbefd-b0a3-472a-b72c-75105d0a7895</onsuccess></stage><stage stageid="c7719606-01b9-4626-9a24-4d9cf42d1e75" name="End" type="End"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Amended Sample" /></outputs></stage><stage stageid="78d405b1-aa60-46a6-af38-fb4bba55e752" name="Text Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66318e10-ff11-43c1-9b3c-6ce27546458f" name="Characters to Delete" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="150" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89bfbefd-b0a3-472a-b72c-75105d0a7895" name="Replace" type="Code"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text Sample" expr="[Text Sample]" /><input type="text" name="Characters to Delete" expr="[Characters to Delete]" /></inputs><outputs><output type="text" name="Amended Sample" stage="Amended Sample" /></outputs><onsuccess>c7719606-01b9-4626-9a24-4d9cf42d1e75</onsuccess><code><![CDATA[For Each C as Char in Characters_To_Delete.ToCharArray()
	Text_Sample = Text_Sample.Replace(C, "")
Next

Amended_Sample = Text_Sample]]></code></stage><stage stageid="930e7d0f-68a5-4d40-a291-e2dcfa4918c6" name="Amended Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a0bb945-2946-4e17-8e4a-b8d7eb5e1060" name="Escape Sendkeys String" type="SubSheetInfo"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><narrative>Escapes characters to be sent via the sendkeys method, to ensure that all characters are interpreted literally. If left unescaped, some characters such as % carry a special meaning rather than their literal value.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="5bb1d666-6ef6-4371-a0f4-111fdf5ee69e" name="Start" type="Start"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sendkeys Text" narrative="The text to be escaped" stage="Sendkeys Text" /></inputs><onsuccess>5ea70bdd-732c-4a8e-b5cb-a747f97e1090</onsuccess></stage><stage stageid="7bfda30d-2f75-46ec-b5e2-88a965528b49" name="End" type="End"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Escaped Sendkeys Text" narrative="The escaped sendkeys text, which can be sent via the sendkeys method without fear of misinterpretation" stage="Escaped Sendkeys Text" /></outputs></stage><stage stageid="5ea70bdd-732c-4a8e-b5cb-a747f97e1090" name="Escape Text" type="Code"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="SendKeys Text" expr="[Sendkeys Text]" /></inputs><outputs><output type="text" name="Escaped Sendkeys Text" stage="Escaped Sendkeys Text" /></outputs><onsuccess>7bfda30d-2f75-46ec-b5e2-88a965528b49</onsuccess><code><![CDATA[Escaped_Sendkeys_Text = Regex.Replace(SendKeys_Text, "[\[\]{}+^%~()]", "{$0}")]]></code></stage><stage stageid="c0e80092-2acc-4552-b6ab-9e3fa5abb07a" name="Escaped Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="150" y="90" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="172f06e8-629e-434a-9bee-084a177606eb" name="Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="90" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e2f3e3d-72e1-4483-b79e-49e9f1387d8a" name="Compare Font Text" type="SubSheetInfo"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative>Compares two items of text read using Font Recognition for equality, where "equality" means that the two text samples match following the removal of conflicting font characters.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="1a092a3a-7389-4bd7-8d31-a3ed761ff97c" name="Start" type="Start"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="None" /></postconditions><display x="150" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Sample 1" narrative="The first item to be compared" stage="Sample 1" /><input type="text" name="Sample 2" narrative="The second item to be compared" stage="Sample 2" /><input type="collection" name="Conflicting Characters" narrative="A collection of conflicting font characters, as read from a read stage for the font of interest" stage="Conflicting Characters" /></inputs><onsuccess>2aac81fd-1231-450b-94e5-3a5928ddb08b</onsuccess></stage><stage stageid="f07d147e-0807-4996-8746-e6b232b63283" name="End" type="End"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="330" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Samples Equal" narrative="Indicates whether the samples are equal, once conflicting characters are removed" stage="Samples Equal" /><output type="text" name="Amended Sample 1" narrative="The first sample, with conflicting characters removed" stage="Sample 1" /><output type="text" name="Amended Sample 2" narrative="The second sample, with conflicting characters removed" stage="Sample 2" /></outputs></stage><stage stageid="fbb964d4-b0d6-4729-b88d-04d1cbfd0cb5" name="Sample 1" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4187bcbb-ee93-4b01-b7b6-4e4944c8967a" name="Sample 2" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="285" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16d61c29-acde-49f1-a0dc-5b93885cb724" name="Conflicting Characters" type="Collection"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="0" y="-15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2aac81fd-1231-450b-94e5-3a5928ddb08b" name="For Each Character Group" type="LoopStart"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="45" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>dde2966f-3ac6-4a0a-9613-7f8c83db2d3a</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid><looptype>ForEach</looptype><loopdata>Conflicting Characters</loopdata></stage><stage stageid="5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e" name="Next Character Group" type="LoopEnd"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="180" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>cd3e8b56-7767-489d-96de-6c9d0740de02</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid></stage><stage stageid="cd3e8b56-7767-489d-96de-6c9d0740de02" name="Determine Equality" type="Calculation"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="240" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f07d147e-0807-4996-8746-e6b232b63283</onsuccess><calculation expression="[Sample 1] = [Sample 2]" stage="Samples Equal" /></stage><stage stageid="7c680a7d-326b-4d7b-b298-02df94778092" name="Samples Equal" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="330" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a589a76f-6d45-4f76-a3d8-a7220c5409ed" name="Extract Regex Values" type="SubSheetInfo"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e85db034-efea-43db-9f60-c5d086ce0f5a" name="Start" type="Start"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /><input type="collection" name="Named Values" narrative="A collection of named values to extract from the target string" stage="Named Values" /></inputs><onsuccess>526b7aa5-2df6-4a52-a8d5-fef9e3c9e776</onsuccess></stage><stage stageid="78d491bd-ce28-422a-8d1f-334ba9248f4e" name="End" type="End"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Named Values" narrative="Results of the named values extracted from the regex" stage="Named Values" /></outputs></stage><stage stageid="e0d2e8e4-b2f1-4cab-a39c-7252cd042e68" name="Regex Pattern" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="-105" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">(?&lt;Lower&gt;\d+)\s*(-|to)\s*(?&lt;Upper&gt;\d+)</initialvalue><private /><alwaysinit /></stage><stage stageid="d1344ba9-2a6f-4a88-bc72-0188e2ead8b7" name="Target String" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="240" y="-60" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">100-200</initialvalue><private /><alwaysinit /></stage><stage stageid="70580e44-41d3-40b3-9b12-3460963b2f5f" name="Named Values" type="Collection"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="30" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" /><field name="Value" type="text" /></collectioninfo><initialvalue><row><field name="Name" type="text" value="Lower" /><field name="Value" type="text" value="" /></row><row><field name="Name" type="text" value="Upper" /><field name="Value" type="text" value="" /></row></initialvalue></stage><stage stageid="526b7aa5-2df6-4a52-a8d5-fef9e3c9e776" name="Extract Values" type="Code"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /><input type="collection" name="Named Values" expr="[Named Values]" /></inputs><outputs><output type="collection" name="Named Values Out" stage="Named Values" /></outputs><onsuccess>78d491bd-ce28-422a-8d1f-334ba9248f4e</onsuccess><code><![CDATA[For Each Row As DataRow in Named_Values.Rows
	Row("Value") = ""
Next


Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
If M IsNot Nothing AndAlso M.Success Then
	If M.Groups IsNot Nothing AndAlso M.Groups.Count > 0 Then
		For Each Row As DataRow in Named_Values.Rows
			Dim GroupName As String = CStr(Row("Name"))
			Dim G As Group = M.Groups(GroupName)
			If G.Success Then
				Row("Value") = G.Value
			End If
		Next
	End If
End If

Named_Values_Out = Named_Values]]></code></stage><stage stageid="33e5caa5-61ec-4ef6-9ae8-01466a277896" name="ParseCSV" type="Code"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="150" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="CSV" expr="[CSV]" /><input type="collection" name="Schema" expr="[Schema]" /><input type="flag" name="FirstRowIsHeader" expr="[First Row Is Header]" /></inputs><outputs><output type="collection" name="outputCollection" stage="Output Collection" /></outputs><onsuccess>f06f6c62-eada-49b0-bf89-fdbb436e13fe</onsuccess><code><![CDATA[Const SchemaColumnName As String = "Column Name"
Const DefaultColumnName As String = "Column "
Const nonSchemaHeadingIndex As Integer = 0

Dim emptySchema As Boolean = Schema Is Nothing OrElse Schema.Rows.Count = 0

Dim csvValuesList = ParseCsvToList(CSV)

' If we want to parse with no schema and want the first row be used as headings 
' we need to know what the headings will be.
Dim nonSchemaHeadings = csvValuesList(nonSchemaHeadingIndex)

' Arrange the column headings into the table first.
If emptySchema Then
	For Each columnHeader As String In nonSchemaHeadings
		Dim colName As String = If(FirstRowIsHeader, columnHeader,
											 DefaultColumnName & outputCollection.Columns.Count)
		outputCollection.Columns.Add(colName, GetType(String))
	Next
Else
	For Each columnHeader As DataRow In Schema.Rows
		Dim colName As String = columnHeader(SchemaColumnName).ToString
		outputCollection.Columns.Add(colName, GetType(String))
	Next
End If

' If the first row is being used for headings then skip those headings / values in csvValuesList.
Dim startListIndex As Integer = If(FirstRowIsHeader, nonSchemaHeadingIndex + 1, nonSchemaHeadingIndex)

' Insert the csv values into the table row by row.
For i As Integer = startListIndex To csvValuesList.Count - 1
	Dim currentRow As Datarow = outputCollection.NewRow
	outputCollection.Rows.Add(currentRow)

	Dim csvArray = csvValuesList(i)
	For columnIndex As Integer = 0 To csvArray.Length - 1
		currentRow.Item(columnIndex) = csvArray(columnIndex)
	Next
Next]]></code></stage><stage stageid="feb4e385-2919-4066-86ad-53cb6226c867" name="InStr" type="SubSheetInfo"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text.</narrative><display x="-150" y="-180" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="353f092b-3d6f-4fda-bdab-cd5798047c44" name="End" type="End"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text or -1 if not found" stage="Position" /></outputs></stage><stage stageid="f594335d-8723-4704-a8ae-e8dbcfe492c7" name="Text" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a43e2c2-c8c1-4dfd-b58f-2775e2ea7d0e" name="Search String" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9bbb24e-51f9-489f-9944-30d9612c396a" name="Start Byte" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="65e660c1-4379-4323-9e01-6cd7ae38f150" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="424c6e04-b000-4dce-8eb7-ba00b0fea671" name="InStr" type="Code"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>353f092b-3d6f-4fda-bdab-cd5798047c44</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStr(Start_Byte,InText, Search_String, 1)]]></code></stage><stage stageid="7f283fb0-e9fa-4e24-82d1-aae53fd5afe1" name="Position" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-165" y="165" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d00b9153-969d-4db4-b737-b1ac835c7b2a" name="Compare Method" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="4bbb2261-2d01-49a5-88e8-c8d37745fd60" name="InStrRev" type="SubSheetInfo"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text but matches in reverse.</narrative><display x="-150" y="-135" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="3ddcb7e5-570f-430d-8374-ed9066da51c0" name="Start" type="Start"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>4991333f-9a42-4dc3-b73b-a8bc97edab6d</onsuccess></stage><stage stageid="251f9278-c41e-44a0-835b-bfc48910933d" name="Text" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="393bbd43-ae95-438d-b358-f51cc69d5e5c" name="Search String" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a898a11a-c6ca-4a70-abcd-42f38192de24" name="Start Byte" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="73737012-9282-4e33-9d87-c4718367216d" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4991333f-9a42-4dc3-b73b-a8bc97edab6d" name="InStrRev" type="Code"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>ba288c3f-ff29-4df2-af77-a2823f65f60c</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStrRev(InText, Search_String, Start_Byte, 1)]]></code></stage><stage stageid="63d5b70d-b54a-4451-b957-9ea177292994" name="Position" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-165" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57a39985-6197-4f21-bdff-e46bd897faa6" name="Compare Method" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d0bb7b29-fbb3-43cd-ab69-7f76a9c657e5" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="120" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="b27c7a93-8e3b-4ed8-b105-e08cd2c96fdf" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="135" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bc4f3574-a096-4b9f-b836-0bc100bf2a18" name="Start" type="Start"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>424c6e04-b000-4dce-8eb7-ba00b0fea671</onsuccess></stage><stage stageid="ba288c3f-ff29-4df2-af77-a2823f65f60c" name="End" type="End"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text from the end or -1 if not found" stage="Position" /></outputs></stage><stage stageid="73739a66-400b-488a-bd7a-63a2f0d2a4ef" name="Test Regex Match" type="SubSheetInfo"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>Check if a given Text value matches a regular expression.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="568b67f8-4216-4af4-bea8-1c83bbff7e16" name="Start" type="Start"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /></inputs><onsuccess>2ad0c111-6108-4ca5-945b-22aab4b6bb27</onsuccess></stage><stage stageid="46282093-d3a9-4e38-b030-95b332ec5371" name="End" type="End"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Matched?" narrative="Whether or not the regex match" stage="Regex Match" /></outputs></stage><stage stageid="32d3ef8a-d0b2-4093-afc5-98bad356c881" name="Regex Pattern" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="165" y="-120" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5747c96e-0ce3-4e78-b446-17b9cef5b655" name="Target String" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="165" y="-75" w="300" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ad0c111-6108-4ca5-945b-22aab4b6bb27" name="Test Regex Match1" type="Code"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /></inputs><outputs><output type="flag" name="Regex Match" stage="Regex Match" /></outputs><onsuccess>46282093-d3a9-4e38-b030-95b332ec5371</onsuccess><code><![CDATA[
Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
Regex_Match =  M IsNot Nothing AndAlso M.Success]]></code></stage><stage stageid="24d6e567-f121-4d8a-a4ee-1402f8f2832d" name="Regex Match" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="45" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dde2966f-3ac6-4a0a-9613-7f8c83db2d3a" name="Delete from Sample 1" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="90" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 1]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 1" /></outputs><onsuccess>50c19466-f7e4-4066-a4c1-d18f65876de0</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage><stage stageid="50c19466-f7e4-4066-a4c1-d18f65876de0" name="Delete from Sample 2" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="135" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 2]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 2" /></outputs><onsuccess>5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage></process></object>
        <object id="5e566acf-abaf-4448-bef3-49a604a319fe" name="Utility - Strings (Extended)" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Strings (Extended)" version="1.0" bpversion="7.0.1.49890" narrative="Additional utility functions for manipulating text." byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Application Root"><id>3fdcc361-862c-4e5d-82db-82a037084b19</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="0315723f-4388-4f49-956f-65d1435e7c7c" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="66b58de7-ec22-4b14-8b2d-103e8b4da62f" type="Normal" published="True"><name>Extract Text Field</name><view><camerax>-59</camerax><cameray>204</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="1921ed79-4b90-4517-a86b-75cd5d1cacd8" type="Normal" published="True"><name>Extract Text Fields</name><view><camerax>0</camerax><cameray>63</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="dc554f75-a0a5-42f3-b799-a73f184a03cb" type="Normal" published="True"><name>Regex V2</name><view><camerax>0</camerax><cameray>38</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="63263435-42f4-4945-9ba9-2f307b1b8601" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>67e3ab7e-99fb-48af-8653-62b2890ff41a</onsuccess></stage><stage stageid="67e3ab7e-99fb-48af-8653-62b2890ff41a" name="End" type="End"><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="cfa62254-a667-427a-8799-eb88b3e79bd0" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>system.text.regularexpressions</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="3a58c844-e5bb-440a-aee8-1afca15b6897" name="Clean Up" type="SubSheetInfo"><subsheetid>0315723f-4388-4f49-956f-65d1435e7c7c</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="a84aeea2-8796-4076-9c12-541245e85e07" name="Start" type="Start"><subsheetid>0315723f-4388-4f49-956f-65d1435e7c7c</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>31e5b011-2273-41b0-b67d-6a9aa07b0d34</onsuccess></stage><stage stageid="31e5b011-2273-41b0-b67d-6a9aa07b0d34" name="End" type="End"><subsheetid>0315723f-4388-4f49-956f-65d1435e7c7c</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="85670409-475c-4405-85a6-97f15dca5040" name="new" type="Note"><subsheetid>0315723f-4388-4f49-956f-65d1435e7c7c</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2c1b421f-cc69-4405-b832-ce13b76723fb" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="03d245b4-15d7-490b-922b-4932ad458625" name="Regex V2" type="SubSheetInfo"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><narrative>Improved regular expression action.</narrative><display x="-180" y="-150" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="8f437022-0969-4dc9-953a-c917d19cd470" name="Extract Text Field" type="SubSheetInfo"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="-195" y="-195" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="2fa630a3-d54a-42c7-bb89-a3415e1f6713" name="Start" type="Start"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="15" y="-195" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Full Text" narrative="the text from which to extract data" stage="Full Text" /><input type="text" name="Pre-Text" narrative="text before the text to extract.  For example a label" stage="Pre-Text" /><input type="text" name="Post-Text" narrative="text after the text to extract.  This might be the next label or a Chr() value" stage="Post-Text" /></inputs><onsuccess>227a3ef2-6822-4124-ba0d-c05c432d7abe</onsuccess></stage><stage stageid="bedb8819-7548-46b9-8e1c-62b99a1c3d1e" name="End" type="End"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="15" y="330" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Text Field" narrative="the extracted text" stage="Text Field" /></outputs></stage><stage stageid="587ad863-67cd-4e80-a1ea-be70b4f228b6" name="Full Text" type="Data"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="-150" y="-75" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f8d52ce6-970f-4e40-8bab-7ee3e19547f8" name="Pre-Text" type="Data"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="-150" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="80b652e9-1385-49a9-9d14-21922baba4af" name="Post-Text" type="Data"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="-150" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ac668093-6d50-4aa4-801e-c22120ff11a2" name="Note1" type="Note"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-150" y="-120" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="227a3ef2-6822-4124-ba0d-c05c432d7abe" name="Get Pre-Text Position" type="Calculation"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="15" y="-135" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>82a4d289-b08f-4eb4-8d7b-17eb815ffc03</onsuccess><calculation expression="InStr([Full Text],[Pre-Text])" stage="Pre-Text Position" /></stage><stage stageid="a05b1162-ffb2-4cea-b06b-6c3fbc9de036" name="Pre-Text Position" type="Data"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="150" y="-135" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8a4c2d4b-f645-4feb-b7f0-bbc228c34805" name="Post-Text Position" type="Data"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="180" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e698c2d5-2572-4cb5-8bfa-86671b8b06f3" name="Cut Text Field" type="Calculation"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="15" y="270" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>bedb8819-7548-46b9-8e1c-62b99a1c3d1e</onsuccess><calculation expression="Trim(Mid([Full Text],[Pre-Text Position]+Len([Pre-Text]),[Post-Text Position]-[Pre-Text Position]-Len([Pre-Text])))" stage="Text Field" /></stage><stage stageid="33a86ae3-a1ab-4874-82de-10482c76c0e3" name="Text Field" type="Data"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="-150" y="240" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="f9c2e357-2ad4-4e7f-8eb7-58b2315e096b" name="Get Post-Text Position" type="Action"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="15" y="165" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Text" narrative="Text to search in" expr="[Full Text]" /><input type="number" name="Start Byte" narrative="Where in the string to search from" expr="[Pre-Text Position]" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" expr="1" /><input type="text" name="Search String" narrative="The text to search for" expr="[Post-Text]" /></inputs><outputs><output type="number" name="Position" narrative="The index of the sub text within the text or -1 if not found" stage="Post-Text Position" /></outputs><onsuccess>301bb337-2865-4e3e-8015-b9bcfefd1292</onsuccess><resource object="Utility - Strings" action="InStr" /></stage><stage stageid="5ccfed36-5869-4d8b-b09e-ef97be3d887f" name="Extract Text Fields" type="SubSheetInfo"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><display x="-210" y="-270" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="4c12cf6f-83a2-4a8b-99a5-18cdfd3299f9" name="Start" type="Start"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Full Text" narrative="the text from which to extract data" stage="Full Text" /><input type="collection" name="Texts to Find" narrative="A collection detailing texts to find" stage="Texts to Find" /><input type="flag" name="Exception on missing field" narrative="True= throw exception if field not found, false=ignore missing fields" stage="Exception on missing field" /></inputs><onsuccess>4529632c-e5a8-47ee-8535-2b7f30f20bd1</onsuccess></stage><stage stageid="e0b2d74e-5200-4115-9989-ffe2bdaf3071" name="End" type="End"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="15" y="270" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Key Values" narrative="Collection of text values extracted" stage="Key Values" /></outputs></stage><stage stageid="a8217885-e78d-4ffe-b178-acd98a0e32c9" name="Note1" type="Note"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><narrative>Output</narrative><display x="-150" y="210" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="82a4d289-b08f-4eb4-8d7b-17eb815ffc03" name="Pre-Text Found?" type="Decision"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="15" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Pre-Text Position]&gt;0" /><ontrue>30cf6813-8187-4d39-8a82-74dbc9d39a7b</ontrue><onfalse>6989315f-a017-4022-9400-f336bbdc8a48</onfalse></stage><stage stageid="6989315f-a017-4022-9400-f336bbdc8a48" name="SE - Invalid Format" type="Exception"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="105" y="-75" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;The text '&quot; &amp; [Pre-Text] &amp; &quot;' was not found in the full document text&quot;" /></stage><stage stageid="301bb337-2865-4e3e-8015-b9bcfefd1292" name="Post-Text Found?" type="Decision"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="15" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Post-Text Position]&gt;0" /><ontrue>e698c2d5-2572-4cb5-8bfa-86671b8b06f3</ontrue><onfalse>0a4e34c8-052b-42c6-9eed-e9b6404e710b</onfalse></stage><stage stageid="0a4e34c8-052b-42c6-9eed-e9b6404e710b" name="SE - Invalid Format" type="Exception"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="105" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception type="System Exception" detail="&quot;The text '&quot; &amp; [Post-Text] &amp; &quot;' was not found in the full document text after the text &quot; &amp; [Pre-Text]" /></stage><stage stageid="c668a289-7d44-4eff-8ce7-b498eff6ef45" name="Full Text" type="Data"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><display x="-150" y="-135" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="033918b7-8ccc-40dc-ae36-96f6d3743f76" name="Note1" type="Note"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-150" y="-180" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="6a11d4d6-295d-4caf-8583-97d27a09e66d" name="Note1" type="Note"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-150" y="150" w="150" h="30" /><font family="Tahoma" size="10" style="Bold" color="000000" /></stage><stage stageid="51c1de63-a0d6-4a4c-b497-909ff349efac" name="Texts to Find" type="Collection"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><narrative>A collection of text search requests</narrative><display x="-150" y="-60" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Key" type="text" description="A label or identifier to recognise the data." /><field name="Pre-Text" type="text" description="text before the text to extract.  For example a label" /><field name="Post-Text" type="text" description="text after the text to extract.  This might be the next label or a Chr() value" /></collectioninfo></stage><stage stageid="a50358ee-7989-422b-bdfc-20565ed4aa15" name="Key Values" type="Collection"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><narrative>A collection of text search requests</narrative><display x="-150" y="210" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Field Key" type="text" description="A label or identifier to recognise the data." /><field name="Value" type="text" description="The text extracted" /></collectioninfo></stage><stage stageid="4529632c-e5a8-47ee-8535-2b7f30f20bd1" name="Texts to Find" type="LoopStart"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e44f1c71-372f-40a4-a146-757495e26883</onsuccess><groupid>c6d599b9-6a45-4453-9350-65cc83d10f86</groupid><looptype>ForEach</looptype><loopdata>Texts to Find</loopdata></stage><stage stageid="4112d9ba-3377-4dca-a95a-783ac53fb416" name="Texts to Find" type="LoopEnd"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="15" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>e0b2d74e-5200-4115-9989-ffe2bdaf3071</onsuccess><groupid>c6d599b9-6a45-4453-9350-65cc83d10f86</groupid></stage><stage stageid="e44f1c71-372f-40a4-a146-757495e26883" name="Extract Text Field" type="SubSheet"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="15" y="45" w="90" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Full Text" narrative="the text from which to extract data" expr="[Full Text]" /><input type="text" name="Pre-Text" narrative="text before the text to extract.  For example a label" expr="[Texts to Find.Pre-Text]" /><input type="text" name="Post-Text" narrative="text after the text to extract.  This might be the next label or a Chr() value" expr="[Texts to Find.Post-Text]" /></inputs><outputs><output type="text" name="Text Field" narrative="the extracted text" stage="This found text" /></outputs><onsuccess>31b900bb-c1f2-4a68-9275-f54c30d59bd7</onsuccess><processid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</processid></stage><stage stageid="56e463ad-3c1a-47f5-817d-afd0bb50841f" name="This found text" type="Data"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><display x="255" y="-15" w="150" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c13d1399-0e50-4b0a-8831-77c0620295a9" name="Extraction Block" type="Block"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="-75" y="0" w="240" h="90" /><font family="Tahoma" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="44f0eb81-b5b3-48dd-bd26-604d8c816513" name="Exception on missing field" type="Data"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="-150" y="15" w="120" h="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="56ab088e-b6f1-4122-aba0-039c9ca755d0" name="Recover" type="Recover"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="105" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>33bd8da0-997c-48bb-91c1-8e952ff20993</onsuccess></stage><stage stageid="33bd8da0-997c-48bb-91c1-8e952ff20993" name="Throw?" type="Decision"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="210" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="[Exception on missing field]" /><ontrue>e715caa3-8896-424f-89a2-0bbbe76b2f3b</ontrue><onfalse>a37b3bde-0993-420a-9b77-b92d0a0ade3e</onfalse></stage><stage stageid="e715caa3-8896-424f-89a2-0bbbe76b2f3b" name="Throw" type="Exception"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><display x="300" y="45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><exception localized="yes" type="" detail="" usecurrent="yes" /></stage><stage stageid="a37b3bde-0993-420a-9b77-b92d0a0ade3e" name="Resume" type="Resume"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="210" y="210" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4112d9ba-3377-4dca-a95a-783ac53fb416</onsuccess></stage><stage stageid="31b900bb-c1f2-4a68-9275-f54c30d59bd7" name="Add output row" type="Action"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Collection Name" narrative="The name of the collection to act upon" expr="&quot;Key Values&quot;" /></inputs><onsuccess>9b667aca-f5ec-40e0-9c31-335e2a7480b2</onsuccess><resource object="Blueprism.AutomateProcessCore.clsCollectionActions" action="Add Row" /></stage><stage stageid="9b667aca-f5ec-40e0-9c31-335e2a7480b2" name="Set Output" type="MultipleCalculation"><subsheetid>1921ed79-4b90-4517-a86b-75cd5d1cacd8</subsheetid><loginhibit /><display x="15" y="165" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>4112d9ba-3377-4dca-a95a-783ac53fb416</onsuccess><steps><calculation expression="[Texts to Find.Field Key]" stage="Key Values.Field Key" /><calculation expression="[This found text]" stage="Key Values.Value" /></steps></stage><stage stageid="f3fb32e2-f4a2-4c3b-8ccf-398b24c2aacf" name="Chr?" type="Decision"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="15" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Left([Post-Text],4)=&quot;Chr(&quot; AND Right([Post-Text],1)=&quot;)&quot;" /><ontrue>e141e473-3f56-49d0-a184-fb0568dc8c57</ontrue><onfalse>f9c2e357-2ad4-4e7f-8eb7-58b2315e096b</onfalse></stage><stage stageid="e141e473-3f56-49d0-a184-fb0568dc8c57" name="Fix Chr" type="MultipleCalculation"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="90" y="105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>f9c2e357-2ad4-4e7f-8eb7-58b2315e096b</onsuccess><steps><calculation expression="Mid([Post-Text],5,InStr([Post-Text],&quot;)&quot;)-5)" stage="Chr Number" /><calculation expression="Chr([Chr Number])" stage="Post-Text" /></steps></stage><stage stageid="30cf6813-8187-4d39-8a82-74dbc9d39a7b" name="Note2" type="Note"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><narrative>Pretext Chr Check</narrative><display x="15" y="-30" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>61900089-2729-4857-ac18-3f982df9479a</onsuccess></stage><stage stageid="ddfb35de-1311-474b-b842-8bd0a5342d98" name="Note2" type="Note"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><narrative>Pretext Chr Check</narrative><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="0000FF" /><onsuccess>f3fb32e2-f4a2-4c3b-8ccf-398b24c2aacf</onsuccess></stage><stage stageid="61900089-2729-4857-ac18-3f982df9479a" name="Chr?" type="Decision"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><decision expression="Left([Pre-Text],4)=&quot;Chr(&quot; AND Right([Pre-Text],1)=&quot;)&quot;" /><ontrue>b01035dd-2d07-4709-894f-90272f854678</ontrue><onfalse>ddfb35de-1311-474b-b842-8bd0a5342d98</onfalse></stage><stage stageid="b01035dd-2d07-4709-894f-90272f854678" name="Fix Chr" type="MultipleCalculation"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><loginhibit /><display x="90" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>ddfb35de-1311-474b-b842-8bd0a5342d98</onsuccess><steps><calculation expression="Mid([Pre-Text],5,InStr([Pre-Text],&quot;)&quot;)-5)" stage="Chr Number" /><calculation expression="Chr([Chr Number])" stage="Pre-Text" /></steps></stage><stage stageid="1ecb675a-7eef-43a9-b401-6a0d70ec6c56" name="Chr Number" type="Data"><subsheetid>66b58de7-ec22-4b14-8b2d-103e8b4da62f</subsheetid><display x="180" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57777f09-4f23-4c6c-a6cd-6dbcea46b67e" name="Start" type="Start"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex" narrative="The regular expression to match with" stage="Regex" /><input type="text" name="String" narrative="The text to test against the given regular expression" stage="String" /><input type="flag" name="Ignore Case" narrative="True to make the regex match case insensitive, false to make it case-sensitive. Default is False, ie. case sensitive." stage="Ignore Case" /></inputs><onsuccess>9302c1c7-78db-44b1-aea8-965178667f3f</onsuccess></stage><stage stageid="02cc5490-2d90-4b0a-96d6-a44d61f1fbab" name="End" type="End"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="flag" name="Is Match" narrative="Flag indicating whether the given string matched the given regular expression or not" stage="Match" /><output type="collection" name="Groups" narrative="A collection, with a single column 'Group', type Text, which contains all the matches found by the regex which existed in the specified string." stage="Groups" /></outputs></stage><stage stageid="ce923810-3cef-4884-838c-e6c4ab199339" name="Regex" type="Data"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><display x="-195" y="30" w="240" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6256b27c-a0e3-483a-a1c1-07f7c8038ca9" name="String" type="Data"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><display x="-195" y="60" w="240" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="afb6a763-2c4a-447d-b491-7f4210fc6f74" name="Note1" type="Note"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-195" y="0" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9302c1c7-78db-44b1-aea8-965178667f3f" name="Perform Regex And Return Matches" type="Code"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><loginhibit /><display x="15" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="flag" name="IgnoreCase" expr="[Ignore Case]" /><input type="text" name="Rx" expr="[Regex]" /><input type="text" name="Str" expr="[String]" /></inputs><outputs><output type="flag" name="IsMatch" stage="Match" /><output type="collection" name="RxGroups" stage="Groups" /></outputs><onsuccess>02cc5490-2d90-4b0a-96d6-a44d61f1fbab</onsuccess><code><![CDATA[
Dim options as RegexOptions = 0
If IgnoreCase Then options = RegexOptions.IgnoreCase

Dim rex as New Regex(Rx, options)
Dim matches as MatchCollection = rex.matches(Str)

RxGroups = New DataTable()
RxGroups.Columns.Add("Group", GetType(String))

For Each match as Match In matches
  RxGroups.Rows.Add(New Object() {match.Groups(0).Value})
	IsMatch = True
Next
]]></code></stage><stage stageid="8cfaedc5-40e0-4ad3-acba-b1731f7ea91f" name="Match" type="Data"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><display x="-180" y="165" w="240" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b54ff169-3310-4b31-8248-e95427d2d811" name="Groups" type="Collection"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><display x="-180" y="195" w="240" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Group" type="text" /></collectioninfo></stage><stage stageid="0507da78-393f-436b-89e3-1183416f43bf" name="Note1" type="Note"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-180" y="135" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="596a1f85-6dc2-4b82-9728-caedc1cf6a8e" name="Ignore Case" type="Data"><subsheetid>dc554f75-a0a5-42f3-b799-a73f184a03cb</subsheetid><display x="-195" y="90" w="240" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage></process></object>
        <object id="edb04517-4ab5-49b7-afb6-64b0ccb4ca6c" name="Utility - Strings Extended" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Strings Extended" version="6.5.1.14401" bpversion="7.0.1.49890" narrative="Utility functions for manipulating text." byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>b30f5d67-5c3c-49c9-8f9b-66d573097498</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>60</camerax><cameray>-35</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="9a74af4c-280a-4e30-bdbb-21295b6256ca" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="24e065bd-d14b-4880-bfd7-f8f540f7544b" type="Normal" published="True"><name>Calculate Distance</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="527ca986-a03f-4231-880e-5b1c244b035e" type="Normal" published="True"><name>Compare Font Text</name><view><camerax>150</camerax><cameray>13</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e70e8f13-02df-4b14-bb74-6fd5c4c95928" type="Normal" published="True"><name>Delete Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="040cc29a-27ac-402c-8a66-328554dd4bc0" type="Normal" published="True"><name>Escape Sendkeys String</name><view><camerax>0</camerax><cameray>5</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b46f178f-06c1-499f-942f-b92cf0df140c" type="Normal" published="True"><name>Extract Regex All Matches</name><view><camerax>0</camerax><cameray>25</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="06780f7c-9622-4d84-9db3-bb56a2ff9f36" type="Normal" published="True"><name>Extract Regex Values</name><view><camerax>70</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="5110b353-010b-4874-97bd-8b7621c24384" type="Normal" published="True"><name>Format Number</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d8fea7a8-24d9-41c8-9397-a3839e6ffdc1" type="Normal" published="True"><name>Generate New GUID</name><view><camerax>0</camerax><cameray>-84</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f9add4d4-31de-4c0f-a109-0b51fa576a23" type="Normal" published="True"><name>Get Collection as CSV</name><view><camerax>0</camerax><cameray>2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f34fc98d-a02f-4f58-92d4-c4688513439b" type="Normal" published="True"><name>Get Collection as Delimited Text</name><view><camerax>-118</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="f5b26213-5463-4b2d-b10f-b188876b436f" type="Normal" published="True"><name>Get CSV As Collection</name><view><camerax>-74</camerax><cameray>14</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="b30fe729-3663-4fd9-b97a-505752b1e33f" type="Normal" published="True"><name>Get Delimited Text As Collection</name><view><camerax>-9</camerax><cameray>3</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="fcddf4bf-83af-4431-88db-cc2c88390cec" type="Normal" published="True"><name>Get Newline Character</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e8af11f7-dfd4-4c86-9935-e83828b9e711" type="Normal" published="True"><name>Get XML Attribute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="818441a5-ffec-4841-b0ea-00712caf63aa" type="Normal" published="True"><name>Get XML Elements</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="0244396a-1d3d-4892-b6cb-461468f4c7e1" type="Normal" published="True"><name>InStr</name><view><camerax>0</camerax><cameray>-2</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9ab28c01-86eb-458d-b8d9-74f98926d266" type="Normal" published="True"><name>InStrRev</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a854bb6a-4399-4e51-8fc3-64f9e1d4f896" type="Normal" published="True"><name>Join Lines</name><view><camerax>152</camerax><cameray>42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a2c09338-7850-4daf-a545-8972d333b826" type="Normal" published="True"><name>Join Text</name><view><camerax>65</camerax><cameray>75</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ef8de52d-842b-45f0-8f1b-619bc97d4bbc" type="Normal" published="True"><name>PadLeft</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="85fc5bb4-eee8-4509-8217-26fcb149a291" type="Normal" published="True"><name>Regex Replace</name><view><camerax>0</camerax><cameray>21</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="65117a41-f7ff-4f3f-abd1-7a3cbe18cfda" type="Normal" published="True"><name>Remove Non-word Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="052cf5ee-03af-4a55-b198-6caa90b8c5ed" type="Normal" published="True"><name>Replace Characters</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="e6bab90c-ddfd-48c0-af38-804fe4f770ed" type="Normal" published="True"><name>Split Lines</name><view><camerax>0</camerax><cameray>-6</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="6a710d42-8f41-45d0-9e74-1eddf74c0e75" type="Normal" published="True"><name>Split Lines by Length</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a5871062-5ad2-4950-afbc-cb5b1b7a7f0b" type="Normal" published="True"><name>Split Text</name><view><camerax>0</camerax><cameray>-56</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="a6b6398e-c21a-4c4e-9742-65ccad8370d9" type="Normal" published="True"><name>Test Regex Match</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="d8c547cc-60d0-459b-876f-90bf696a5757" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>807e7d33-91e2-4241-a85e-ea0718fc487d</onsuccess></stage><stage stageid="807e7d33-91e2-4241-a85e-ea0718fc487d" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="1a8c9ebd-54e1-442f-a6c7-e87df3b59232" name="Stage1" type="ProcessInfo"><display x="-180" y="-105" w="180" h="90" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>System.Diagnostics</import><import>Microsoft.VisualBasic</import><import>System.Data</import><import>system.text.regularexpressions</import><import>System.Text</import><import>System.Collections.Generic</import><import>Microsoft.VisualBasic.FileIO</import></imports><language>visualbasic</language><globalcode><![CDATA[


]]></globalcode><code><![CDATA[Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function

Private Function SplitStringInto( _
 ByVal fldName As String, _
 ByVal txt As String, _
 ByVal ParamArray splitters() As String) As DataTable
	Dim dt As New DataTable()
	dt.Columns.Add(fldName, GetType(String))

	For Each s As String In txt.Split(splitters, StringSplitOptions.None)
		dt.Rows.Add(New Object() {s})
	Next

	Return dt
End Function

Public Shared Function ParseCsvToList(ByVal csv As String, ByVal delimiter As String) As List(Of String())
	Dim result = New List(Of String())()

	Using sr As New StringReader(csv)
		Using lineParser As New TextFieldParser(sr)
			lineParser.TextFieldType = FieldType.Delimited
			lineParser.SetDelimiters(delimiter)
			While Not lineParser.EndOfData

				Dim fields As String() = lineParser.ReadFields()
				result.Add(fields)
			End While
		End Using
	End Using

	Return result
End Function


''' -----------------------------------------------------------------------------
''' <summary>
''' Serialises a datatable to the supplied stream.
''' </summary>
''' <param name="Writer">The stream writr to which the datatable should
''' be serialised. Eg this may correspond to a file stream.</param>
''' <param name="Table">The datatable to be serialised.</param>
''' <param name="IncludeHeaderRow">When true, the column headers will
''' be wrtten out on the first row.</param>
''' -----------------------------------------------------------------------------
Public Shared Sub WriteDataTable(ByVal Writer As StringBuilder, ByVal Table As DataTable, ByVal IncludeHeaderRow As Boolean, ByVal delimiter As String)
	If (delimiter.Trim().Length = 0)
		delimiter = ","
	End If

	If IncludeHeaderRow Then
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Table.Columns(i).ColumnName)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(delimiter)
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	End If

	For Each Row As DataRow In Table.Rows
		For i As Integer = 0 To Table.Columns.Count - 1
			WriteItem(Writer, Row(i).ToString)
			If i < Table.Columns.Count - 1 Then
				Writer.Append(delimiter)
			Else
				Writer.Append(vbCrLf)
			End If
		Next
	Next
End Sub



''' -----------------------------------------------------------------------------
''' <summary>
''' Writes a csv data cell, escaping quotes and new lines where necessary.
''' </summary>
''' <param name="Writer">The writer to which the item should be written.</param>
''' <param name="Value">The value to be written.</param>
''' -----------------------------------------------------------------------------
Private Shared Sub WriteItem(ByVal Writer As StringBuilder, ByVal Value As String)
	If Value.IndexOfAny(("""," & vbCrLf).ToCharArray) > -1 Then
		Writer.Append("""" & Value.Replace("""", """""") & """")
	Else
		Writer.Append(Value)
	End If
End Sub


'Splits text into lines of approximately equal length, looking for
'gaps between words as splitting points in order to avoid ugly
'line splitting in the middle of words. Useful for mainframe memos
'where a long message needs to be broken into lines of up to 80
'characters.
'
Private Shared Function SplitTextByLengthEngine(Texttosplit As String, MaxLineLength As Integer) As List(of String)
	Dim RetVal as New List(Of String)
	MaxLineLength =  Math.Min(MaxLineLength, TexttoSplit.Length)

	'We look for the last space within (MaxLineLength + 1) and then work backwards
	'(always by at least one) to find the last non-space character. We can then
	'chop at this point, assuming such exists. Otherwise we just chop at the
	'requested line length accepting we will be splitting a word.
	Dim LastIndex as integer = TexttoSplit.Substring(0, Math.Min(MaxLineLength + 1, TextToSplit.Length)).LastIndexOf(" ")

	If TextToSplit.Length <= MaxLineLength OrElse LastIndex = -1 Then
		RetVal.Add(TexttoSplit.Substring(0, MaxLineLength))
		Dim RemainingText As String = TexttoSplit.SubString(MaxLineLength,TextToSplit.Length - MaxLineLength).Trim()
		If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
	Else
		'Track backwards to find previous non-space character
		Dim Index As Integer = LastIndex - 1
		While Index >= 0 Andalso TextToSplit.SubString(Index, 1) = " "
			Index -=1
		End While
		If Index >= 0 Then
			RetVal.Add(TextToSplit.SubString(0, Index + 1))
			Dim RemainingText As String = TexttoSplit.SubString(Index + 1, TextToSplit.Length - (Index + 1)).Trim()
			If RemainingText.Length > 0 Then RetVal.AddRange(SplitTextByLengthEngine(RemainingText, MaxLineLength))
		Else
			'Must all be spaces. We assume this are to be ignored
		End If
	End If

	Return RetVal
End Function

Private Shared Function CreateRegexOptions(Singleline As Boolean, IgnoreCase As Boolean, IgnoreWhitespace As Boolean, CultureInvariant As Boolean, ExplicitCapture As Boolean, RightToLeft As Boolean, ECMAScript As Boolean) As RegexOptions
        If Singleline Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.Singleline
        End If

        If IgnoreCase Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.IgnoreCase
        End If

        If IgnoreWhitespace Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.IgnorePatternWhitespace
        End If

        If CultureInvariant Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.CultureInvariant
        End If

        If ExplicitCapture Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.ExplicitCapture
        End If

        If RightToLeft Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.RightToLeft
        End If

        If ECMAScript Then
            CreateRegexOptions = CreateRegexOptions Or RegexOptions.ECMAScript
        End If

        Return CreateRegexOptions
    End Function]]></code></stage><stage stageid="0bf7814a-647b-4bcb-b6a6-3d24dfd5b736" name="Clean Up" type="SubSheetInfo"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b6df3b6c-090d-4126-a16c-8caa889b0646" name="Generate New GUID" type="SubSheetInfo"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><narrative>Generates a new globally unique identifier as text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="0c56e2f8-68ce-48a3-97ad-81e1f076e9ce" name="new" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="be35a29d-2b71-42e1-9ca7-4534046d5dfc" name="Start" type="Start"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>bd80e756-d12c-4dc7-9d64-bbde733f60b7</onsuccess></stage><stage stageid="bd80e756-d12c-4dc7-9d64-bbde733f60b7" name="Get GUID" type="Code"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="-45" /><outputs><output type="text" name="id" stage="GUID" /></outputs><onsuccess>4930704e-00c1-456a-8aad-02220fd81c99</onsuccess><code><![CDATA[dim g as new Guid
id = guid.newguid.tostring]]></code></stage><stage stageid="695dad7d-b634-454c-9171-baf489698067" name="GUID" type="Data"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><display x="-60" y="-45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4930704e-00c1-456a-8aad-02220fd81c99" name="End1" type="End"><subsheetid>d8fea7a8-24d9-41c8-9397-a3839e6ffdc1</subsheetid><loginhibit /><display x="15" y="15" /><outputs><output type="text" name="GUID" narrative="The new guid" stage="GUID" /></outputs></stage><stage stageid="2271a79e-27e5-4434-b5be-146e02946317" name="new" type="Note"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="36451c72-b274-4817-a153-beb1e8a6e76a" name="Start" type="Start"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="-120" /><onsuccess>9a8c4505-8606-4a0c-b118-09a6b9932b3b</onsuccess></stage><stage stageid="9a8c4505-8606-4a0c-b118-09a6b9932b3b" name="End" type="End"><subsheetid>9a74af4c-280a-4e30-bdbb-21295b6256ca</subsheetid><loginhibit /><display x="30" y="90" /></stage><stage stageid="a130f3e8-fad5-413c-a068-75ac20600244" name="Remove Non-word Characters" type="SubSheetInfo"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><narrative>Trims non word characters from the begining and end of the text. Non word characters are any character that is NOT in the ranges a-z A-Z _ and 0-9</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="dd85470c-e10b-4f0b-b729-c006136517eb" name="Start" type="Start"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text" narrative="The text to remove the non word characters from" stage="Text" /></inputs><onsuccess>a2426b0a-eab8-4571-a6d9-fa89c49559be</onsuccess></stage><stage stageid="3eae8050-c325-49f6-9e3f-ee12400ca5d4" name="End" type="End"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Trimmed Text" narrative="The text with the non word characters removed" stage="Trimmed Text" /></outputs></stage><stage stageid="a2426b0a-eab8-4571-a6d9-fa89c49559be" name="Trim" type="Code"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Text" expr="[Text]" /></inputs><outputs><output type="text" name="Trimmed Text" stage="Trimmed Text" /></outputs><onsuccess>3eae8050-c325-49f6-9e3f-ee12400ca5d4</onsuccess><code><![CDATA[
dim r as new regex("^\W*|\W*$")
Trimmed_Text = r.replace(text, "")
]]></code></stage><stage stageid="1f3570bd-8411-4e92-8fd3-1dd418411570" name="Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">    qwerqwer    </initialvalue><private /><alwaysinit /></stage><stage stageid="0967c44a-1a53-49a7-8bb4-e1f6733a41b0" name="Trimmed Text" type="Data"><subsheetid>65117a41-f7ff-4f3f-abd1-7a3cbe18cfda</subsheetid><display x="90" y="-15" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="00a08897-25f2-48e0-aa88-e40bb27b94e7" name="Split Lines" type="SubSheetInfo"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><narrative>Splits multiple line text into a collection text values with a single row per line.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5f6c9d2f-247d-42a7-bc18-8b4283b21c80" name="Start" type="Start"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /></inputs><onsuccess>ee14a8f3-9fd3-4342-abcf-3cbe1d57431a</onsuccess></stage><stage stageid="370a75cf-d54f-438d-b7b1-0f931038d7a2" name="End" type="End"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="b655e5fa-2cb9-487a-b4e8-8faf44531e8d" name="Text to Split" type="Data"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="ee14a8f3-9fd3-4342-abcf-3cbe1d57431a" name="Split" type="Code"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><loginhibit /><display x="15" y="0" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>370a75cf-d54f-438d-b7b1-0f931038d7a2</onsuccess><code><![CDATA[Split_Values = SplitStringInto("Value", _
 Text_to_Split, vbCrLf, vbLf, vbCr)]]></code></stage><stage stageid="5c6c7749-e4c1-45ef-9fb7-a7b7ca77214d" name="Split Values" type="Collection"><subsheetid>e6bab90c-ddfd-48c0-af38-804fe4f770ed</subsheetid><display x="120" y="90" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Value" type="text" /></collectioninfo></stage><stage stageid="99d3d4f8-598b-44be-9744-5142537aff99" name="Split Text" type="SubSheetInfo"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><narrative>Splits text with a given delimiter into a collection of text values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="97069dc2-f2a1-4f61-a3f6-e26e88d1da58" name="Start" type="Start"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="-105" /><inputs><input type="text" name="Text to Split" narrative="The text to split" stage="Text to Split" /><input type="text" name="Split Char" narrative="The split delimiter" stage="Split Char" /><input type="text" name="Collection Field Name" narrative="The name of the field for the resulting collection" stage="Collection Field Name" /></inputs><onsuccess>d1694d87-2fff-467b-9a07-5f5dd570bd41</onsuccess></stage><stage stageid="2972f0ee-292a-4bb0-bed5-c9a19f8945f6" name="End" type="End"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="90" /><outputs><output type="collection" name="Split Values" narrative="The resulting collection containing the split values" stage="Split Values" /></outputs></stage><stage stageid="33bff0c5-22b9-4ab3-ac0a-c352221a4f79" name="Text to Split" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="195" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d1694d87-2fff-467b-9a07-5f5dd570bd41" name="Split Text" type="Code"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><loginhibit /><display x="120" y="0" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="text" name="Split Char" expr="[Split Char]" /><input type="text" name="Collection Field Name" expr="[Collection Field Name]" /></inputs><outputs><output type="collection" name="Split Values" stage="Split Values" /></outputs><onsuccess>2972f0ee-292a-4bb0-bed5-c9a19f8945f6</onsuccess><code><![CDATA[Split_Values = SplitStringInto( _
 Collection_Field_Name, _
 Text_to_Split, Split_Char)]]></code></stage><stage stageid="17ffca42-be51-4343-90e3-035d29366b7f" name="Split Values" type="Collection"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="225" y="90" w="90" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="05ba6aed-e91b-4383-9001-69b78a2e474d" name="Split Char" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="255" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20afce2f-59e1-4fc1-896c-ab71d2f871b2" name="Collection Field Name" type="Data"><subsheetid>a5871062-5ad2-4950-afbc-cb5b1b7a7f0b</subsheetid><display x="45" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="786d2d47-37c8-4324-8e43-8fc75f0eca95" name="Join Text" type="SubSheetInfo"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><narrative>Joins values from a collection into a single line of text using a given delimiter between values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="ccd8aec8-19c3-4d48-a184-a8895ed1ebbf" name="Start" type="Start"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-105" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="text" name="Join Character" narrative="The delimeter between text values" stage="Join Character" /><input type="flag" name="Trim Values" narrative="Set true to apply trimming to the values" stage="Trim Values" /></inputs><onsuccess>b05ea94b-f0d1-4047-b854-04877801ef0b</onsuccess></stage><stage stageid="7dbff5b3-7cd4-406a-9650-265fb88988ef" name="End" type="End"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="285" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="13059fce-ee5a-4fbc-a76c-efc5db5d1240" name="Values" type="Collection"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="-105" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Item Value" type="text" /></collectioninfo></stage><stage stageid="b0cf2931-5486-4779-b457-e8af03062df8" name="Join Character" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="019a4343-9b5c-4400-8b76-5efbf2156032" name="Join Lines" type="SubSheetInfo"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><narrative>Joins values from a collection into multiline text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6f376101-4dd4-43b4-85a0-19dd1090df02" name="Start" type="Start"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="-75" /><inputs><input type="collection" name="Values" narrative="The text values collection to join" stage="Values" /><input type="flag" name="Trim Lines" narrative="Set true to apply trimming to the lines" stage="Trim Lines" /></inputs><onsuccess>816591dd-a42d-436b-9fd0-4ca095d78e29</onsuccess></stage><stage stageid="f2d9cbef-9cdb-4daa-bbb6-5d3dc0548c2e" name="Values" type="Collection"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="-75" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="579d0466-882d-47ce-a2c3-d4a7f25eaa8c" name="Joined Text" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="90" y="285" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="724a0223-71bd-48d0-bcca-f4d554fcf91b" name="End" type="End"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="135" /><outputs><output type="text" name="Joined Text" narrative="The resulting joined text" stage="Joined Text" /></outputs></stage><stage stageid="8bcc24ca-f588-4c3c-b09b-fe08b425b5db" name="Joined Text" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="90" y="135" w="90" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e3b84350-20a1-442e-bebb-0232a5b73299" name="Join Text" type="SubSheet"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="60" /><inputs><input type="collection" name="Values" expr="[Values]" /><input type="text" name="Join Character" expr="[Join Character]" /><input type="flag" name="Trim Values" expr="[Trim Lines]" /></inputs><outputs><output type="text" name="Joined Text" stage="Joined Text" /></outputs><onsuccess>724a0223-71bd-48d0-bcca-f4d554fcf91b</onsuccess><processid>a2c09338-7850-4daf-a545-8972d333b826</processid></stage><stage stageid="816591dd-a42d-436b-9fd0-4ca095d78e29" name="Get Carriage Return" type="Code"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><loginhibit /><display x="15" y="0" w="90" h="30" /><outputs><output type="text" name="Join Character" stage="Join Character" /></outputs><onsuccess>e3b84350-20a1-442e-bebb-0232a5b73299</onsuccess><code><![CDATA[Join_Character = vbcrlf]]></code></stage><stage stageid="9a8e3b40-f136-4397-b62b-4a69cd010c37" name="Join Character" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="105" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="13a0e17b-9b82-4dd6-8e3a-313890d8caf3" name="For Each Value" type="LoopStart"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="15" w="90" h="30" /><onsuccess>e4c0da52-0523-4109-b705-3fadd035597b</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid><looptype>ForEach</looptype><loopdata>Values</loopdata></stage><stage stageid="98f2416b-599a-42d1-a76f-d41ea3e23572" name="Next Value" type="LoopEnd"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="195" w="90" h="30" /><onsuccess>7dbff5b3-7cd4-406a-9650-265fb88988ef</onsuccess><groupid>fffab271-8052-4aaf-9a1e-1402d77939ea</groupid></stage><stage stageid="b05ea94b-f0d1-4047-b854-04877801ef0b" name="Reset Output" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="-45" /><onsuccess>13a0e17b-9b82-4dd6-8e3a-313890d8caf3</onsuccess><calculation expression="&quot;&quot;" stage="Joined Text" /></stage><stage stageid="49168356-8449-4cb3-9798-0796b15b77a3" name="Append Value" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="150" /><onsuccess>98f2416b-599a-42d1-a76f-d41ea3e23572</onsuccess><calculation expression="[Joined Text] &amp; [Values.Item Value] &amp; [Join Character]" stage="Joined Text" /></stage><stage stageid="54cf1a89-b26c-4916-ab45-8f1e80b9b86f" name="Trim Lines" type="Data"><subsheetid>a854bb6a-4399-4e51-8fc3-64f9e1d4f896</subsheetid><display x="150" y="-75" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6aa04814-e2fd-4630-b391-bfe892ddc8df" name="Trim Values" type="Data"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><display x="210" y="-105" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="e4c0da52-0523-4109-b705-3fadd035597b" name="Trim?" type="Decision"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="15" y="75" /><decision expression="[Trim Values]" /><ontrue>91ef5da4-e47e-4442-98ec-d46cbd8d8692</ontrue><onfalse>49168356-8449-4cb3-9798-0796b15b77a3</onfalse></stage><stage stageid="91ef5da4-e47e-4442-98ec-d46cbd8d8692" name="Do Trim" type="Calculation"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="75" /><onsuccess>10ac89cc-d24c-4622-ad92-34ebe2365083</onsuccess><calculation expression="Trim([Values.Item Value])" stage="Values.Item Value" /></stage><stage stageid="10ac89cc-d24c-4622-ad92-34ebe2365083" name="anchor1" type="Anchor"><subsheetid>a2c09338-7850-4daf-a545-8972d333b826</subsheetid><loginhibit /><display x="105" y="150" w="10" h="10" /><onsuccess>49168356-8449-4cb3-9798-0796b15b77a3</onsuccess></stage><stage stageid="b837f601-57e9-4136-8dee-db8ca9ebf15f" name="Format Number" type="SubSheetInfo"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><narrative>Formats a number into comma-delimited triplets, as appropriate. Eg 123456.789 becomes 123,456.789</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="df1e573a-3e89-43a8-8e6a-61f1840b3869" name="Start" type="Start"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The number will have been formatted." /></postconditions><display x="15" y="-105" /><inputs><input type="number" name="Input Number" narrative="The number to format" stage="Input Number" /></inputs><onsuccess>df4ce97f-4b9c-4087-a9bf-c6e35eba156b</onsuccess></stage><stage stageid="dd89bdff-2f14-4268-98f4-7ef3747a5233" name="End" type="End"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Formatted Currency Numbers" narrative="The resulting formatted number" stage="Formatted Currency Value" /></outputs></stage><stage stageid="b0f25370-1f87-4edd-b03a-0a3ac16537fb" name="Input Number" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="-105" /><datatype>number</datatype><initialvalue>987654123456.789</initialvalue><private /><alwaysinit /></stage><stage stageid="df4ce97f-4b9c-4087-a9bf-c6e35eba156b" name="Format" type="Code"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><loginhibit /><display x="15" y="-30" /><inputs><input type="number" name="Input" expr="[Input Number]" /></inputs><outputs><output type="text" name="Output" stage="Formatted Currency Value" /></outputs><onsuccess>dd89bdff-2f14-4268-98f4-7ef3747a5233</onsuccess><code><![CDATA[Output = Input.ToString("N")]]></code></stage><stage stageid="a6d6d631-89c5-4460-9771-6a15a0e1d7d5" name="Formatted Currency Value" type="Data"><subsheetid>5110b353-010b-4874-97bd-8b7621c24384</subsheetid><display x="90" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b3013d63-9017-4dd9-bcf6-5e0d09ab372f" name="PadLeft" type="SubSheetInfo"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><narrative>Ensures that a string (usually a number) is of fixed width, by padding with a special character on the left.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="af05cd75-42db-4c09-875d-3fedfc3ca0a2" name="Start" type="Start"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="The supplied text will have been padded to be at least the number of desired characters." /></postconditions><display x="15" y="-105" /><inputs><input type="text" name="Input String" narrative="The string to pad" stage="Input String" /><input type="number" name="Target Width" narrative="The total number of characters required after padding" stage="Target Width" /><input type="text" name="Padding Character" narrative="The character to pad with" stage="Padding Character" /></inputs><onsuccess>6527cdd9-47d7-4784-bd96-e63afa4ec955</onsuccess></stage><stage stageid="f432b972-ae44-4485-943b-87848fd43487" name="End" type="End"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="165" /><outputs><output type="text" name="Padded String" narrative="The resultant padded string" stage="Input String" /></outputs></stage><stage stageid="888a814c-a03d-43f0-b6d6-30501b8b3250" name="Input String" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue xml:space="preserve">123</initialvalue><private /><alwaysinit /></stage><stage stageid="ea8d90c7-c341-4859-919c-4ecc076162eb" name="Target Width" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="150" y="-105" /><datatype>number</datatype><initialvalue>5</initialvalue><private /><alwaysinit /></stage><stage stageid="56c037f3-4ff0-4923-974c-e925c84e69c8" name="Padding Character" type="Data"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><display x="210" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6527cdd9-47d7-4784-bd96-e63afa4ec955" name="Blank Padding Character?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="-45" w="90" h="30" /><decision expression="Len([Padding Character]) = 0" /><ontrue>26f66718-649a-4472-965d-0e1e125e7473</ontrue><onfalse>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onfalse></stage><stage stageid="26f66718-649a-4472-965d-0e1e125e7473" name="Use Space for Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="-45" w="90" h="30" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="&quot; &quot;" stage="Padding Character" /></stage><stage stageid="6acfdd2b-9298-4841-9111-003fc203edd0" name="anchor2" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="0" w="10" h="10" /><onsuccess>b6b30eec-0ee3-4316-a9af-d0a55d5ec137</onsuccess></stage><stage stageid="b6b30eec-0ee3-4316-a9af-d0a55d5ec137" name="anchor3" type="Anchor"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="0" w="10" h="10" /><onsuccess>e13c9c2d-2cbe-4262-828c-6307a805d9c1</onsuccess></stage><stage stageid="e13c9c2d-2cbe-4262-828c-6307a805d9c1" name="Long Enough?" type="Decision"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="15" y="60" /><decision expression="Len([Input String]) &gt;= [Target Width]" /><ontrue>f432b972-ae44-4485-943b-87848fd43487</ontrue><onfalse>87af11ea-fa7e-45cf-b02a-fd6edeae0b85</onfalse></stage><stage stageid="87af11ea-fa7e-45cf-b02a-fd6edeae0b85" name="Insert Padding" type="Calculation"><subsheetid>ef8de52d-842b-45f0-8f1b-619bc97d4bbc</subsheetid><loginhibit /><display x="135" y="60" /><onsuccess>6acfdd2b-9298-4841-9111-003fc203edd0</onsuccess><calculation expression="[Padding Character] &amp; [Input String]" stage="Input String" /></stage><stage stageid="92edef27-4b78-40dd-97bd-e5a4f9169214" name="Get XML Elements" type="SubSheetInfo"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><narrative>Gets a collection of xml elements with a given name from an xml document.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="04bec0f1-e8bb-4c30-a5d1-b7eee243e6f9" name="Start" type="Start"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-120" /><inputs><input type="text" name="XML" narrative="The xml to get elements from" stage="XML" /><input type="text" name="Element Name" narrative="The name of the xml elements to get" stage="Element Name" /></inputs><onsuccess>17f4a862-c7e3-44c3-a373-5b325fdaab8a</onsuccess></stage><stage stageid="e4b99f55-7171-46d6-992b-db797e99b1ed" name="End" type="End"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="165" /><outputs><output type="collection" name="Elements" narrative="The collection of xml elements that match the given name and for each element its outer xml" stage="Elements" /></outputs></stage><stage stageid="31472749-70ee-477e-a042-fcf5a25a4099" name="XML" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;?xml version="1.0" encoding="utf-8" ?&gt; &lt;PotentialGrading&gt;  &lt;ServiceIdentifier&gt;ABC&lt;/ServiceIdentifier&gt;  &lt;Episode ID="a97fe424-0d1f-4e7c-9e9a-9b3c9e03d594"&gt;   &lt;Patient DateOfBirth="18/02/1970" Gender="M" PartPostcode="YO51" EthnicOrigin="W" Country="United Kingdom"    Region="North Yorkshire" RegisteredBlind="0" RegisteredPartiallySighted="1" HealthProvider="PCT"    Insurance="Cheap as Chips Insurance"&gt;The patient ID goes here&lt;/Patient&gt;   &lt;Screening Date="2007/09/06" GradingCodeSet="NGC" ImageCount="4"&gt;    &lt;Item Code="Examiner Classification" Value="1" /&gt;    &lt;Item Code="Eye Screening Urgency" Value="2" /&gt;    &lt;Item Code="Opthalmologist Care" Value="2" /&gt;    &lt;Item Code="Technical Gradability Code" Value="1" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="right" /&gt;    &lt;Item Code="01 Visual Acuity Pinhole" Value="0" Laterality="left" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="right" /&gt;    &lt;Item Code="02 Visual Acuity Spectacles" Value="0" Laterality="left" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="right" /&gt;    &lt;Item Code="03 Visual Acuity Standard" Value="1" Laterality="left" /&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="right"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="04 Visual Acuity" Value="" Laterality="left"&gt;Free text entry&lt;/Item&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="right" /&gt;    &lt;Item Code="06 Dilation" Value="1" Laterality="left" /&gt;    &lt;Image Length="104644" CameraID="Camera1" CameraModelID="CameraModel1" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(5)L.jpg&lt;/Image&gt;    &lt;Image Length="107565" CameraID="Camera2" CameraModelID="CameraModel2" CaptureDateTime="2007/09/06T01:54:59"     Eye="L"&gt;1121017(6)L.jpg&lt;/Image&gt;    &lt;Image Length="107441" CameraID="Camera3" CameraModelID="CameraModel3" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(5)R.jpg&lt;/Image&gt;    &lt;Image Length="112472" CameraID="Camera4" CameraModelID="CameraModel4" CaptureDateTime="2007/09/06T01:54:59"     Eye="R"&gt;1121017(6)R.jpg&lt;/Image&gt;   &lt;/Screening&gt;   &lt;Notes&gt;Free text notes go here&lt;/Notes&gt;  &lt;/Episode&gt; &lt;/PotentialGrading&gt; </initialvalue><private /><alwaysinit /></stage><stage stageid="68a0eeb2-9377-4b12-8f31-5ae52e7109e4" name="Element Name" type="Data"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="90" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">Image</initialvalue><private /><alwaysinit /></stage><stage stageid="7b46fe82-142a-411b-bf80-b2f0047952da" name="Get Elements" type="Code"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="60" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Element" expr="[Element Name]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess><code><![CDATA[
dim table as datatable = GetDataTable("XML", "System.String")
dim row as datarow
dim doc as new xmldocument
dim list as xmlnodelist

doc.loadxml(xml)
list = doc.getelementsbytagname(element)

for each n as xmlnode in list
	row = table.newrow()
	row("XML") = n.outerxml
	table.rows.Add(row)
next

Elements = table
]]></code></stage><stage stageid="d693d2fb-a196-4ddc-b2e9-b41cbe618fc3" name="Elements" type="Collection"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><display x="-75" y="165" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="17f4a862-c7e3-44c3-a373-5b325fdaab8a" name="Blank XML?" type="Decision"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="135" y="-30" /><decision expression="Len(Trim([XML])) = 0" /><ontrue>6eb4f747-35c0-4e57-acbf-be93ac0a1bbb</ontrue><onfalse>7b46fe82-142a-411b-bf80-b2f0047952da</onfalse></stage><stage stageid="6eb4f747-35c0-4e57-acbf-be93ac0a1bbb" name="anchor1" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="-30" w="10" h="10" /><onsuccess>a460ec9b-8afb-4b37-8ae0-7545448b025d</onsuccess></stage><stage stageid="a460ec9b-8afb-4b37-8ae0-7545448b025d" name="anchor2" type="Anchor"><subsheetid>818441a5-ffec-4841-b0ea-00712caf63aa</subsheetid><loginhibit /><display x="240" y="165" w="10" h="10" /><onsuccess>e4b99f55-7171-46d6-992b-db797e99b1ed</onsuccess></stage><stage stageid="97b59270-9eda-4994-9fce-24d8b5d856a4" name="Get XML Attribute" type="SubSheetInfo"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><narrative>Gets the value of an xml attribute with a given name from an xml document fragment.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="802dd6e8-6b25-42b9-9af6-931049d4062a" name="Start" type="Start"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-105" /><inputs><input type="text" name="XML" narrative="The xml document to get attributes from" stage="XML" /><input type="text" name="Attribute Name" narrative="The name of the xml attribute to get" stage="Attribute Name" /></inputs><onsuccess>76737597-b716-4a52-8cbc-dfe9b5ad1f0c</onsuccess></stage><stage stageid="bc64fcfd-4386-47ec-b799-19c5454d8374" name="End" type="End"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="90" /><outputs><output type="text" name="Value" narrative="The text value of the requested attribute" stage="Attribute Value" /></outputs></stage><stage stageid="18f2ae57-8ed9-457b-8763-82dedb14a5e0" name="XML" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="75" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">&lt;iGrading&gt;&lt;Response transactionID="de3dc0b1-6b22-4b67-a13a-d42fff6188b9" status="Success" method="SubmitPotentialGradingWithImages" description="" /&gt;&lt;/iGrading&gt;</initialvalue><private /><alwaysinit /></stage><stage stageid="1941e7f9-164d-4aa2-b06e-cb3a579a30e4" name="Attribute Name" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="105" w="150" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">method</initialvalue><private /><alwaysinit /></stage><stage stageid="c9ec2a39-8f5d-42cc-856f-33bdb2c16477" name="Attribute Value" type="Data"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><display x="-90" y="135" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="76737597-b716-4a52-8cbc-dfe9b5ad1f0c" name="Get Attribute" type="Code"><subsheetid>e8af11f7-dfd4-4c86-9935-e83828b9e711</subsheetid><loginhibit /><display x="120" y="-15" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Attribute" expr="[Attribute Name]" /></inputs><outputs><output type="text" name="Value" stage="Attribute Value" /></outputs><onsuccess>bc64fcfd-4386-47ec-b799-19c5454d8374</onsuccess><code><![CDATA[
dim i as integer = XML.indexof(Attribute)

if i > 0 then
	i += Attribute.length + 2
	value = XML.substring(i)
	value = value.substring(0, value.indexof(""""))
else
	value = ""
end if]]></code></stage><stage stageid="ebd306f5-f0a3-46cf-8a04-9bde5bf5cc3d" name="Get Collection as CSV" type="SubSheetInfo"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><narrative>Turns a collection into a list of comma seperated values.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="47ea7760-3b58-442b-8271-c90d3c08f114" name="Split Lines by Length" type="SubSheetInfo"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><narrative>Splits text into lines of a given length using word boundries to find the split point.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="51996cc8-b76e-4de1-899a-66c678dbe1f3" name="Start" type="Start"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-135" /><inputs><input type="text" name="Text to Split" narrative="The single line of text that needs to be split" stage="Text to Split" /><input type="number" name="Maximum Line Length" narrative="The maximum length of the line" stage="Maximum Line Length" /><input type="flag" name="Split Strictly by Length" narrative="Set true if the line should be split at character boundries instead of words" stage="Split Strictly by Length" /></inputs><onsuccess>0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a</onsuccess></stage><stage stageid="52e75580-936a-4647-a154-e984ab8d199a" name="End" type="End"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="60" /><outputs><output type="number" name="Line Count" stage="Line Count" /><output type="collection" name="Split Lines" stage="Split Lines" /></outputs></stage><stage stageid="0fd3f2cd-7fff-49c7-b4d9-4cfc3476793a" name="Split Lines By Length" type="Code"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><loginhibit /><display x="0" y="-45" w="90" h="60" /><inputs><input type="text" name="Text to Split" expr="[Text to Split]" /><input type="number" name="Maximum Line Length" expr="[Maximum Line Length]" /><input type="flag" name="Strict Split" expr="[Split Strictly by Length]" /></inputs><outputs><output type="collection" name="Split Lines" stage="Split Lines" /><output type="number" name="Line Count" stage="Line Count" /></outputs><onsuccess>52e75580-936a-4647-a154-e984ab8d199a</onsuccess><code><![CDATA[Dim Values as List(Of String) = Nothing
If Strict_Split Then
      Values = New List(Of String)
      While Text_to_Split.Length > 0
            Dim NewLine As String = Text_to_Split.SubString(0, Math.Min(Maximum_Line_Length, Text_to_Split.Length))
            NewLine = NewLine.Trim()
            Values.Add(NewLine)

            If Text_to_Split.Length > NewLine.Length Then
                  Text_to_Split = Text_to_Split.SubString(NewLine.Length, Text_to_Split.Length - NewLine.Length)
            Else
                  Text_to_Split = ""
            End If
            Text_to_Split = Text_to_Split.Trim()
      End While
Else
      Values = SplitTextByLengthEngine(Text_to_Split, Maximum_Line_length)
End If

Split_Lines = New DataTable()
Split_Lines.Columns.Add("Line Text", GetType(String))
For Each s as String in Values
      Split_Lines.Rows.Add(New Object() {s})
Next

Line_Count = Values.Count]]></code></stage><stage stageid="c20b3e81-de90-46c1-a347-f094034ff28c" name="Text to Split" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="75" y="-135" /><datatype>text</datatype><initialvalue xml:space="preserve">aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp</initialvalue><private /><alwaysinit /></stage><stage stageid="e329d1c6-7a17-4af0-aa33-d6fb517adb68" name="Split Lines" type="Collection"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="135" y="45" w="120" h="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Line Text" type="text" /></collectioninfo></stage><stage stageid="50f47d4a-73f4-46d2-93e1-24a2470d2df9" name="Maximum Line Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="150" y="-135" /><datatype>number</datatype><initialvalue>6</initialvalue><private /><alwaysinit /></stage><stage stageid="d1f11813-b465-4a95-9194-630fb1424d37" name="Line Count" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="90" y="-60" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89c59225-5fb8-45a8-9fb8-a102420ddbc5" name="Split Strictly by Length" type="Data"><subsheetid>6a710d42-8f41-45d0-9e74-1eddf74c0e75</subsheetid><display x="225" y="-135" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="8d911bb3-c87f-4748-b226-9d2faaf45c95" name="Get CSV As Collection" type="SubSheetInfo"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>Turns a list of comma seperated values into a collection.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e1587123-3967-4743-b475-5499f8c41803" name="Get Newline Character" type="SubSheetInfo"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><narrative>Gets the text representing the two newline characters used under windows (Carriage return followed by Line feed)</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b09f1e76-fb7c-4ef1-9a47-db4a1377d056" name="Start" type="Start"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>af411d25-0e83-4e28-b4f3-30f43beb9b88</onsuccess></stage><stage stageid="bee4d44f-957c-415f-be9c-614e97d6f255" name="End" type="End"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Newline Character" narrative="The new line text" stage="Newline Character" /></outputs></stage><stage stageid="af411d25-0e83-4e28-b4f3-30f43beb9b88" name="Get Newline Character" type="Code"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><loginhibit /><display x="15" y="0" w="90" h="60" /><outputs><output type="text" name="Newline Character" stage="Newline Character" /></outputs><onsuccess>bee4d44f-957c-415f-be9c-614e97d6f255</onsuccess><code><![CDATA[Newline_Character = VbCrLf]]></code></stage><stage stageid="dde302f4-2b62-45c0-a8f3-190c52116470" name="Newline Character" type="Data"><subsheetid>fcddf4bf-83af-4431-88db-cc2c88390cec</subsheetid><display x="90" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dd7d11e6-2bc7-40ed-ab47-1180482d82ed" name="Delete Characters" type="SubSheetInfo"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><narrative>Removes the given characters from the text.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="6e15c3f7-07db-4e3d-a24d-84be7e09b06e" name="Start" type="Start"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" stage="Text Sample" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" stage="Characters to Delete" /></inputs><onsuccess>89bfbefd-b0a3-472a-b72c-75105d0a7895</onsuccess></stage><stage stageid="c7719606-01b9-4626-9a24-4d9cf42d1e75" name="End" type="End"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Amended Sample" /></outputs></stage><stage stageid="78d405b1-aa60-46a6-af38-fb4bba55e752" name="Text Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66318e10-ff11-43c1-9b3c-6ce27546458f" name="Characters to Delete" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="150" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="89bfbefd-b0a3-472a-b72c-75105d0a7895" name="Delete" type="Code"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Text Sample" expr="[Text Sample]" /><input type="text" name="Characters to Delete" expr="[Characters to Delete]" /></inputs><outputs><output type="text" name="Amended Sample" stage="Amended Sample" /></outputs><onsuccess>c7719606-01b9-4626-9a24-4d9cf42d1e75</onsuccess><code><![CDATA[For Each C as Char in Characters_To_Delete.ToCharArray()
	Text_Sample = Text_Sample.Replace(C, "")
Next

Amended_Sample = Text_Sample]]></code></stage><stage stageid="930e7d0f-68a5-4d40-a291-e2dcfa4918c6" name="Amended Sample" type="Data"><subsheetid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</subsheetid><display x="90" y="90" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6a0bb945-2946-4e17-8e4a-b8d7eb5e1060" name="Escape Sendkeys String" type="SubSheetInfo"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><narrative>Escapes characters to be sent via the sendkeys method, to ensure that all characters are interpreted literally. If left unescaped, some characters such as % carry a special meaning rather than their literal value.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5bb1d666-6ef6-4371-a0f4-111fdf5ee69e" name="Start" type="Start"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Sendkeys Text" narrative="The text to be escaped" stage="Sendkeys Text" /></inputs><onsuccess>5ea70bdd-732c-4a8e-b5cb-a747f97e1090</onsuccess></stage><stage stageid="7bfda30d-2f75-46ec-b5e2-88a965528b49" name="End" type="End"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Escaped Sendkeys Text" narrative="The escaped sendkeys text, which can be sent via the sendkeys method without fear of misinterpretation" stage="Escaped Sendkeys Text" /></outputs></stage><stage stageid="5ea70bdd-732c-4a8e-b5cb-a747f97e1090" name="Escape Text" type="Code"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><loginhibit /><display x="15" y="-30" w="90" h="30" /><inputs><input type="text" name="SendKeys Text" expr="[Sendkeys Text]" /></inputs><outputs><output type="text" name="Escaped Sendkeys Text" stage="Escaped Sendkeys Text" /></outputs><onsuccess>7bfda30d-2f75-46ec-b5e2-88a965528b49</onsuccess><code><![CDATA[Escaped_Sendkeys_Text = Regex.Replace(SendKeys_Text, "[\[\]{}+^%~()]", "{$0}")]]></code></stage><stage stageid="c0e80092-2acc-4552-b6ab-9e3fa5abb07a" name="Escaped Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="150" y="90" w="180" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="172f06e8-629e-434a-9bee-084a177606eb" name="Sendkeys Text" type="Data"><subsheetid>040cc29a-27ac-402c-8a66-328554dd4bc0</subsheetid><display x="90" y="-105" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4e2f3e3d-72e1-4483-b79e-49e9f1387d8a" name="Compare Font Text" type="SubSheetInfo"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><narrative>Compares two items of text read using Font Recognition for equality, where "equality" means that the two text samples match following the removal of conflicting font characters.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="1a092a3a-7389-4bd7-8d31-a3ed761ff97c" name="Start" type="Start"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><preconditions><condition narrative="None" /></preconditions><postconditions><condition narrative="None" /></postconditions><display x="150" y="-30" /><inputs><input type="text" name="Sample 1" narrative="The first item to be compared" stage="Sample 1" /><input type="text" name="Sample 2" narrative="The second item to be compared" stage="Sample 2" /><input type="collection" name="Conflicting Characters" narrative="A collection of conflicting font characters, as read from a read stage for the font of interest" stage="Conflicting Characters" /></inputs><onsuccess>2aac81fd-1231-450b-94e5-3a5928ddb08b</onsuccess></stage><stage stageid="f07d147e-0807-4996-8746-e6b232b63283" name="End" type="End"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="330" /><outputs><output type="flag" name="Samples Equal" narrative="Indicates whether the samples are equal, once conflicting characters are removed" stage="Samples Equal" /><output type="text" name="Amended Sample 1" narrative="The first sample, with conflicting characters removed" stage="Sample 1" /><output type="text" name="Amended Sample 2" narrative="The second sample, with conflicting characters removed" stage="Sample 2" /></outputs></stage><stage stageid="fbb964d4-b0d6-4729-b88d-04d1cbfd0cb5" name="Sample 1" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4187bcbb-ee93-4b01-b7b6-4e4944c8967a" name="Sample 2" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="285" y="-30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="16d61c29-acde-49f1-a0dc-5b93885cb724" name="Conflicting Characters" type="Collection"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="0" y="-15" w="120" h="60" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="2aac81fd-1231-450b-94e5-3a5928ddb08b" name="For Each Character Group" type="LoopStart"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="45" w="120" h="30" /><onsuccess>dde2966f-3ac6-4a0a-9613-7f8c83db2d3a</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid><looptype>ForEach</looptype><loopdata>Conflicting Characters</loopdata></stage><stage stageid="5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e" name="Next Character Group" type="LoopEnd"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="180" w="120" h="30" /><onsuccess>cd3e8b56-7767-489d-96de-6c9d0740de02</onsuccess><groupid>d5a546ca-79ce-4ba9-917c-4165b543a787</groupid></stage><stage stageid="cd3e8b56-7767-489d-96de-6c9d0740de02" name="Determine Equality" type="Calculation"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="240" /><onsuccess>f07d147e-0807-4996-8746-e6b232b63283</onsuccess><calculation expression="[Sample 1] = [Sample 2]" stage="Samples Equal" /></stage><stage stageid="7c680a7d-326b-4d7b-b298-02df94778092" name="Samples Equal" type="Data"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><display x="225" y="330" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a589a76f-6d45-4f76-a3d8-a7220c5409ed" name="Extract Regex Values" type="SubSheetInfo"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative>Use this action to extract named capture groups. The group names should specified in the input Collection in the 'Name' column.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="e85db034-efea-43db-9f60-c5d086ce0f5a" name="Start" type="Start"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-105" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /><input type="collection" name="Named Values" narrative="A collection of named values to extract from the target string. Note, the Collection should contain two text columns defined as 'Name' and 'Value'." stage="Named Values" /></inputs><onsuccess>526b7aa5-2df6-4a52-a8d5-fef9e3c9e776</onsuccess></stage><stage stageid="78d491bd-ce28-422a-8d1f-334ba9248f4e" name="End" type="End"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="90" /><outputs><output type="collection" name="Named Values" narrative="Results of the named values extracted from the regex" stage="Named Values" /></outputs></stage><stage stageid="e0d2e8e4-b2f1-4cab-a39c-7252cd042e68" name="Regex Pattern" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="-105" w="300" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">(?&lt;Lower&gt;\d+)\s*(-|to)\s*(?&lt;Upper&gt;\d+)</initialvalue><private /><alwaysinit /></stage><stage stageid="d1344ba9-2a6f-4a88-bc72-0188e2ead8b7" name="Target String" type="Data"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="240" y="-60" w="300" h="30" /><datatype>text</datatype><initialvalue xml:space="preserve">100-200</initialvalue><private /><alwaysinit /></stage><stage stageid="70580e44-41d3-40b3-9b12-3460963b2f5f" name="Named Values" type="Collection"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><display x="240" y="30" w="150" h="90" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" /><field name="Value" type="text" /></collectioninfo><initialvalue><row><field name="Name" type="text" value="Lower" /><field name="Value" type="text" value="" /></row><row><field name="Name" type="text" value="Upper" /><field name="Value" type="text" value="" /></row></initialvalue></stage><stage stageid="526b7aa5-2df6-4a52-a8d5-fef9e3c9e776" name="Extract Values" type="Code"><subsheetid>06780f7c-9622-4d84-9db3-bb56a2ff9f36</subsheetid><loginhibit /><display x="45" y="-15" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /><input type="collection" name="Named Values" expr="[Named Values]" /></inputs><outputs><output type="collection" name="Named Values Out" stage="Named Values" /></outputs><onsuccess>78d491bd-ce28-422a-8d1f-334ba9248f4e</onsuccess><code><![CDATA[For Each Row As DataRow in Named_Values.Rows
	Row("Value") = ""
Next

Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
If M IsNot Nothing AndAlso M.Success Then
	If M.Groups IsNot Nothing AndAlso M.Groups.Count > 0 Then
		For Each Row As DataRow in Named_Values.Rows
			Dim GroupName As String = CStr(Row("Name"))
			Dim G As Group = M.Groups(GroupName)
			If G.Success Then
				Row("Value") = G.Value
			End If
		Next
	End If
End If

Named_Values_Out = Named_Values]]></code></stage><stage stageid="feb4e385-2919-4066-86ad-53cb6226c867" name="InStr" type="SubSheetInfo"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text.</narrative><display x="-150" y="-180" w="150" h="90" /></stage><stage stageid="353f092b-3d6f-4fda-bdab-cd5798047c44" name="End" type="End"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="60" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text or -1 if not found" stage="Position" /></outputs></stage><stage stageid="f594335d-8723-4704-a8ae-e8dbcfe492c7" name="Text" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a43e2c2-c8c1-4dfd-b58f-2775e2ea7d0e" name="Search String" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c9bbb24e-51f9-489f-9944-30d9612c396a" name="Start Byte" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="65e660c1-4379-4323-9e01-6cd7ae38f150" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /></stage><stage stageid="424c6e04-b000-4dce-8eb7-ba00b0fea671" name="InStr" type="Code"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>353f092b-3d6f-4fda-bdab-cd5798047c44</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStr(Start_Byte,InText, Search_String, 1)]]></code></stage><stage stageid="7f283fb0-e9fa-4e24-82d1-aae53fd5afe1" name="Position" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><display x="-165" y="165" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d00b9153-969d-4db4-b737-b1ac835c7b2a" name="Compare Method" type="Data"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="4bbb2261-2d01-49a5-88e8-c8d37745fd60" name="InStrRev" type="SubSheetInfo"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><narrative>Tests to see if one peice of text contains another peice of sub text but matches in reverse.</narrative><display x="-150" y="-135" w="150" h="90" /></stage><stage stageid="3ddcb7e5-570f-430d-8374-ed9066da51c0" name="Start" type="Start"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>4991333f-9a42-4dc3-b73b-a8bc97edab6d</onsuccess></stage><stage stageid="251f9278-c41e-44a0-835b-bfc48910933d" name="Text" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="393bbd43-ae95-438d-b358-f51cc69d5e5c" name="Search String" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a898a11a-c6ca-4a70-abcd-42f38192de24" name="Start Byte" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-180" y="30" w="150" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="73737012-9282-4e33-9d87-c4718367216d" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Inputs</narrative><display x="-180" y="-60" w="150" h="30" /></stage><stage stageid="4991333f-9a42-4dc3-b73b-a8bc97edab6d" name="InStrRev" type="Code"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="InText" expr="[Text]" /><input type="text" name="Search String" expr="[Search String]" /><input type="number" name="Start Byte" expr="[Start Byte]" /><input type="number" name="Compare Method" expr="[Compare Method]" /></inputs><outputs><output type="number" name="Position" stage="Position" /></outputs><onsuccess>ba288c3f-ff29-4df2-af77-a2823f65f60c</onsuccess><code><![CDATA[  Position = Microsoft.VisualBasic.InStrRev(InText, Search_String, Start_Byte, 1)]]></code></stage><stage stageid="63d5b70d-b54a-4451-b957-9ea177292994" name="Position" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><display x="-165" y="150" w="150" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="57a39985-6197-4f21-bdff-e46bd897faa6" name="Compare Method" type="Data"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>1 = text, 0 = binary</narrative><display x="-180" y="60" w="150" h="30" /><datatype>number</datatype><initialvalue>1</initialvalue><private /><alwaysinit /></stage><stage stageid="d0bb7b29-fbb3-43cd-ab69-7f76a9c657e5" name="Note1" type="Note"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="120" w="150" h="30" /></stage><stage stageid="b27c7a93-8e3b-4ed8-b105-e08cd2c96fdf" name="Note1" type="Note"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><narrative>Outputs</narrative><display x="-165" y="135" w="150" h="30" /></stage><stage stageid="bc4f3574-a096-4b9f-b836-0bc100bf2a18" name="Start" type="Start"><subsheetid>0244396a-1d3d-4892-b6cb-461468f4c7e1</subsheetid><loginhibit /><preconditions><condition narrative="" /></preconditions><display x="15" y="-90" /><inputs><input type="text" name="Text" narrative="Text to search in" stage="Text" /><input type="text" name="Search String" narrative="The text to search for" stage="Search String" /><input type="number" name="Start Byte" narrative="Where in the string to search from" stage="Start Byte" /><input type="number" name="Compare Method" narrative="1=text, 0=binary" stage="Compare Method" /></inputs><onsuccess>424c6e04-b000-4dce-8eb7-ba00b0fea671</onsuccess></stage><stage stageid="ba288c3f-ff29-4df2-af77-a2823f65f60c" name="End" type="End"><subsheetid>9ab28c01-86eb-458d-b8d9-74f98926d266</subsheetid><loginhibit /><display x="15" y="75" /><outputs><output type="number" name="Position" narrative="The index of the sub text within the text from the end or -1 if not found" stage="Position" /></outputs></stage><stage stageid="73739a66-400b-488a-bd7a-63a2f0d2a4ef" name="Test Regex Match" type="SubSheetInfo"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>Check if a given Text value matches a regular expression.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="568b67f8-4216-4af4-bea8-1c83bbff7e16" name="Start" type="Start"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-120" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern to apply" stage="Regex Pattern" /><input type="text" name="Target String" narrative="The target string to which apply the pattern and extract values" stage="Target String" /></inputs><onsuccess>2ad0c111-6108-4ca5-945b-22aab4b6bb27</onsuccess></stage><stage stageid="46282093-d3a9-4e38-b030-95b332ec5371" name="End" type="End"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="75" /><outputs><output type="flag" name="Matched?" narrative="Whether or not the regex match" stage="Regex Match" /></outputs></stage><stage stageid="32d3ef8a-d0b2-4093-afc5-98bad356c881" name="Regex Pattern" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="165" y="-120" w="300" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5747c96e-0ce3-4e78-b446-17b9cef5b655" name="Target String" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><narrative>100-200
56 to 99
400 - 600</narrative><display x="165" y="-75" w="300" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2ad0c111-6108-4ca5-945b-22aab4b6bb27" name="Test Regex Match1" type="Code"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><loginhibit /><display x="-30" y="-30" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Target String" expr="[Target String]" /></inputs><outputs><output type="flag" name="Regex Match" stage="Regex Match" /></outputs><onsuccess>46282093-d3a9-4e38-b030-95b332ec5371</onsuccess><code><![CDATA[
Dim R as New Regex(Regex_Pattern, RegexOptions.SingleLine)
Dim M as Match = R.Match(Target_String)
Regex_Match =  M IsNot Nothing AndAlso M.Success]]></code></stage><stage stageid="24d6e567-f121-4d8a-a4ee-1402f8f2832d" name="Regex Match" type="Data"><subsheetid>a6b6398e-c21a-4c4e-9742-65ccad8370d9</subsheetid><display x="45" y="-30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="dde2966f-3ac6-4a0a-9613-7f8c83db2d3a" name="Delete from Sample 1" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="90" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 1]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 1" /></outputs><onsuccess>50c19466-f7e4-4066-a4c1-d18f65876de0</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage><stage stageid="50c19466-f7e4-4066-a4c1-d18f65876de0" name="Delete from Sample 2" type="SubSheet"><subsheetid>527ca986-a03f-4231-880e-5b1c244b035e</subsheetid><loginhibit /><display x="150" y="135" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" expr="[Sample 2]" /><input type="text" name="Characters to Delete" narrative="A string of characters to be deleted from the Text Sample" expr="[Conflicting Characters.Character Group]" /></inputs><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters deleted" stage="Sample 2" /></outputs><onsuccess>5f4d2cf9-a6a3-47c1-beed-8c8912b3f81e</onsuccess><processid>e70e8f13-02df-4b14-bb74-6fd5c4c95928</processid></stage><stage stageid="976e1ff6-abbb-41dd-b61c-e5906831327e" name="Start" type="Start"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="collection" name="Input Collection" narrative="The collection to be converted to CSV" stage="Input Collection" /></inputs><onsuccess>c61bbe42-0aa1-44c6-a081-311d65351241</onsuccess></stage><stage stageid="2ab5ecf3-268e-4703-af0b-b628d074a395" name="End" type="End"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="text" name="Collection CSV" narrative="The CSV representation of the Input Collection" stage="Output CSV" /></outputs></stage><stage stageid="70fca360-60a6-43df-ac14-f2e89132d005" name="Input Collection" type="Collection"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4890c0f6-ccee-4acc-a4fb-991a6de7f430" name="Output CSV" type="Data"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><display x="-195" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="85f97df6-6547-462a-97ec-4dcf85d77897" name="Input Data Items" type="Block"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="d74dee9e-caae-41da-af9b-a81ce7ad09c6" name="Output Data Items" type="Block"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-270" y="30" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="c61bbe42-0aa1-44c6-a081-311d65351241" name="Get Collection as Delimited Text" type="SubSheet"><subsheetid>f9add4d4-31de-4c0f-a109-0b51fa576a23</subsheetid><loginhibit /><display x="-30" y="-60" w="90" h="60" /><inputs><input type="collection" name="Input Collection" friendlyname="Input Collection" narrative="The collection to be converted to CSV" expr="[Input Collection]" /><input type="text" name="Delimiter Character" friendlyname="Delimiter Character" narrative="The character used for delimiting fields in the string" expr="&quot;,&quot;" /></inputs><outputs><output type="text" name="Output Delimited Text" friendlyname="Output Delimited Text" narrative="The delimited text representation of the Input Collection" stage="Output CSV" /></outputs><onsuccess>2ab5ecf3-268e-4703-af0b-b628d074a395</onsuccess><processid>f34fc98d-a02f-4f58-92d4-c4688513439b</processid></stage><stage stageid="d2485b03-90eb-4e91-b1ef-ff830767650c" name="Get Collection as Delimited Text" type="SubSheetInfo"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><narrative>Turns a collection into a list of values separated by the provided delimiter character.</narrative><display x="-255" y="-75" w="150" h="60" /></stage><stage stageid="026fac81-dc81-4612-8dfd-2e4a86f95ebb" name="Start" type="Start"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-60" y="-90" /><inputs><input type="collection" name="Input Collection" narrative="The collection to be converted to CSV" stage="Input Collection" /><input type="text" name="Delimiter Character" narrative="The character used for delimiting fields in the string" stage="Delimiter Character" /></inputs><onsuccess>4e202cad-2b99-4f15-88bc-b9914b0e341b</onsuccess></stage><stage stageid="5a98b789-1c80-4f08-b2bb-e638009f643c" name="End" type="End"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-60" y="90" /><outputs><output type="text" name="Output Delimited Text" narrative="The delimited text representation of the Input Collection" stage="Output Delimited Text" /></outputs></stage><stage stageid="225a4930-49aa-428f-b7e3-7dc9c2629c72" name="Input Collection" type="Collection"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><display x="-255" y="0" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="4e202cad-2b99-4f15-88bc-b9914b0e341b" name="Serialise to Delimited Text" type="Code"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-60" y="0" w="120" h="60" /><inputs><input type="collection" name="Input Collection" expr="[Input Collection]" /><input type="text" name="Delimiter" expr="[Delimiter Character]" /></inputs><outputs><output type="text" name="Output CSV" stage="Output Delimited Text" /></outputs><onsuccess>5a98b789-1c80-4f08-b2bb-e638009f643c</onsuccess><code><![CDATA[
Dim SB As New StringBuilder
WriteDataTable(SB, Input_Collection, True, Delimiter)
Output_CSV = SB.ToString()]]></code></stage><stage stageid="e9fd160f-2e2e-4a5f-88fb-6fc3513e74fe" name="Output Delimited Text" type="Data"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><display x="-255" y="105" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4744a27a-9351-4f3e-ad80-149e1689f2fa" name="Input Data Items" type="Block"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-330" y="-30" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="928f8f18-5970-4f09-a329-a58be75ce629" name="Output Data Items" type="Block"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><loginhibit /><display x="-330" y="75" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="640470fa-acdf-402e-90e0-9468b23d4f18" name="Delimiter Character" type="Data"><subsheetid>f34fc98d-a02f-4f58-92d4-c4688513439b</subsheetid><display x="-255" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7879714e-32e3-4741-8e03-4f6c39f8947d" name="Get Delimited Text As Collection" type="SubSheetInfo"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><narrative>Turns a list of seperated values into a collection.</narrative><display x="-240" y="-105" w="150" h="60" /></stage><stage stageid="a6279d74-31be-4cac-829f-206bcf6ec53c" name="Start" type="Start"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-60" y="-120" /><inputs><input type="text" name="Delimited Text" narrative="The delimited text to be converted into a collection" stage="Delimited Text" /><input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" stage="First Row Is Header" /><input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " stage="Schema" /><input type="text" name="Delimiter Character" narrative="The character used for delimiting fields in the string" stage="Delimiter Character" /></inputs><onsuccess>e9ffc61e-59d9-4936-a2ac-ea0e7afa1518</onsuccess></stage><stage stageid="1a304c1f-c3f0-43fc-9d73-a8d6ad98926b" name="End" type="End"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-60" y="30" /><outputs><output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs></stage><stage stageid="a04b094f-b7c5-4143-a738-23d3cb123fbf" name="Output Collection" type="Collection"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-240" y="-30" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="e5a32658-f2aa-487f-9520-fbe3ad1d6561" name="First Row Is Header" type="Data"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-240" y="0" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="068c2eb9-29cc-4798-8c12-6229866675b4" name="Schema" type="Collection"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><narrative>The columns must appear in the same order as they appear in the CSV file</narrative><display x="-240" y="30" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="e9ffc61e-59d9-4936-a2ac-ea0e7afa1518" name="Parse Delimited String" type="Code"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-60" y="-45" w="120" h="60" /><inputs><input type="text" name="DelimitedText" expr="[Delimited Text]" /><input type="collection" name="Schema" expr="[Schema]" /><input type="flag" name="FirstRowIsHeader" expr="[First Row Is Header]" /><input type="text" name="Delimiter" expr="[Delimiter Character]" /></inputs><outputs><output type="collection" name="outputCollection" stage="Output Collection" /></outputs><onsuccess>1a304c1f-c3f0-43fc-9d73-a8d6ad98926b</onsuccess><code><![CDATA[Const SchemaColumnName As String = "Column Name"
Const DefaultColumnName As String = "Column "
Const nonSchemaHeadingIndex As Integer = 0

Dim emptySchema As Boolean = Schema Is Nothing OrElse Schema.Rows.Count = 0

Dim csvValuesList = ParseCsvToList(DelimitedText, Delimiter)

' If we want to parse with no schema and want the first row be used as headings 
' we need to know what the headings will be.
Dim nonSchemaHeadings = csvValuesList(nonSchemaHeadingIndex)

' Arrange the column headings into the table first.
If emptySchema Then
	For Each columnHeader As String In nonSchemaHeadings
		Dim colName As String = If(FirstRowIsHeader, columnHeader,
											 DefaultColumnName & outputCollection.Columns.Count)
		outputCollection.Columns.Add(colName, GetType(String))
	Next
Else
	For Each columnHeader As DataRow In Schema.Rows
		Dim colName As String = columnHeader(SchemaColumnName).ToString
		outputCollection.Columns.Add(colName, GetType(String))
	Next
End If

' If the first row is being used for headings then skip those headings / values in csvValuesList.
Dim startListIndex As Integer = If(FirstRowIsHeader, nonSchemaHeadingIndex + 1, nonSchemaHeadingIndex)

' Insert the csv values into the table row by row.
For i As Integer = startListIndex To csvValuesList.Count - 1
	Dim currentRow As Datarow = outputCollection.NewRow
	outputCollection.Rows.Add(currentRow)

	Dim csvArray = csvValuesList(i)
	For columnIndex As Integer = 0 To csvArray.Length - 1
		currentRow.Item(columnIndex) = csvArray(columnIndex)
	Next
Next]]></code></stage><stage stageid="53421100-ece2-4711-bfa9-afeeffad4baf" name="Delimiter Character" type="Data"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><display x="-240" y="60" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cf95689-6df0-4e1c-a167-4cc146a2c016" name="Input Data Items" type="Block"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-315" y="-60" w="150" h="150" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="776cb146-9f13-4f86-99c1-6eed378a8f28" name="Output Data Items" type="Block"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><loginhibit /><display x="-315" y="105" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="fe70d981-5190-4495-a46c-fc979a57b76b" name="Delimited Text" type="Data"><subsheetid>b30fe729-3663-4fd9-b97a-505752b1e33f</subsheetid><display x="-240" y="135" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="71b888d4-11ad-46d2-ad4e-fba499f6cab1" name="Start" type="Start"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-30" y="-135" /><inputs><input type="text" name="CSV" narrative="The CSV to be converted into a collection" stage="CSV" /><input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" stage="First Row Is Header" /><input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " stage="Schema" /></inputs><onsuccess>d57edb5e-14a5-441c-9c36-cccd9d53e9e8</onsuccess></stage><stage stageid="ad1bb716-336e-4089-9c65-9459b70b494b" name="End" type="End"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-30" y="15" /><outputs><output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs></stage><stage stageid="b666475d-1b3c-4983-ad7c-38413df6ad58" name="CSV" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="5d236cf6-5519-4fb4-a438-8cbf13c17669" name="Output Collection" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-195" y="120" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="3dfd39ce-9b05-4260-b1b6-055ab6c40716" name="First Row Is Header" type="Data"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-195" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="c5fe44d4-2102-4105-b452-9727d21c254f" name="Schema" type="Collection"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><narrative>The columns must appear in the same order as they appear in the CSV file</narrative><display x="-195" y="45" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Column Name" type="text" /></collectioninfo></stage><stage stageid="d57edb5e-14a5-441c-9c36-cccd9d53e9e8" name="Get Delimited Text As Collection" type="SubSheet"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-30" y="-60" w="90" h="60" /><inputs><input type="flag" name="First Row Is Header" friendlyname="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="[First Row Is Header]" /><input type="collection" name="Schema" friendlyname="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="[Schema]" /><input type="text" name="Delimiter Character" friendlyname="Delimiter Character" narrative="The character used for delimiting fields in the string" expr="&quot;,&quot;" /><input type="text" name="Delimited Text" friendlyname="Delimited Text" narrative="The delimited text to be converted into a collection" expr="[CSV]" /></inputs><outputs><output type="collection" name="Output Collection" friendlyname="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" /></outputs><onsuccess>ad1bb716-336e-4089-9c65-9459b70b494b</onsuccess><processid>b30fe729-3663-4fd9-b97a-505752b1e33f</processid></stage><stage stageid="5b594ddf-1941-4657-a34a-2bab652e2f21" name="Input Data Items" type="Block"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="15a87913-2a1d-4d77-ab02-550d80a81f30" name="Output Data Items" type="Block"><subsheetid>f5b26213-5463-4b2d-b10f-b188876b436f</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="9ffb8a8f-cd64-4b57-b80c-e9fea69ce920" name="Note2" type="Note"><narrative>© 2022 Blue Prism Limited
Licensed under the Blue Prism Asset License and Support Terms
https://digitalexchange.blueprism.com/fileMedia/download/a9111324-3192-43ff-9166-566620ca1182</narrative><display x="240" y="0" w="300" h="90" /><font family="Segoe UI" size="12" style="Regular" color="0000FF" /></stage><stage stageid="1c60e3fa-014e-4fae-a0ea-93947f6d427f" name="Replace Characters" type="SubSheetInfo"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><narrative>Replaces the specified existing characters in the text with the new characetrs.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="45580f5a-07b0-486d-91ab-d186c0c9fa27" name="Start" type="Start"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Text Sample" narrative="The piece of text to be operated on" stage="Text Sample" /><input type="text" name="Characters to Replace" narrative="A string of characters to be replaced in the Text Sample" stage="Characters to Replace" /><input type="text" name="Replacement Characters" narrative="The new characters to add to the Text Sample in place the original characters." stage="Replacement Characters" /></inputs><onsuccess>b2559855-53c1-4d69-896c-b181d4b35c9a</onsuccess></stage><stage stageid="7def3868-a40b-4dda-8817-cd2d1e491957" name="End" type="End"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Amended Sample" narrative="The amended sample, with the characters replaced" stage="Amended Sample" /></outputs></stage><stage stageid="86751a91-07a2-41b7-b4c8-fed2fa2fa2de" name="Text Sample" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="-30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="7241ca56-c2de-415d-893b-85ee41a8c112" name="Characters to Replace" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="0" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2559855-53c1-4d69-896c-b181d4b35c9a" name="Replace" type="Code"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><loginhibit /><display x="15" y="-15" /><inputs><input type="text" name="Text Sample" expr="[Text Sample]" /><input type="text" name="Characters to Replace" expr="[Characters to Replace]" /><input type="text" name="Replacement Characters" expr="[Replacement Characters]" /></inputs><outputs><output type="text" name="Amended Sample" stage="Amended Sample" /></outputs><onsuccess>7def3868-a40b-4dda-8817-cd2d1e491957</onsuccess><code><![CDATA[For Each C as Char in Characters_To_Replace.ToCharArray()
	Text_Sample = Text_Sample.Replace(C, Replacement_Characters)
Next

Amended_Sample = Text_Sample]]></code></stage><stage stageid="1d83c1a6-688b-4ebb-bfcd-41f050ea7072" name="Amended Sample" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="90" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c8ef4699-c724-47ab-bb80-c1aa55f260a8" name="Replacement Characters" type="Data"><subsheetid>052cf5ee-03af-4a55-b198-6caa90b8c5ed</subsheetid><display x="-195" y="30" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="fd079b46-d2c2-42c3-b9e0-ea6228ce4a29" name="Extract Regex All Matches" type="SubSheetInfo"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><narrative>Returns a collection with groups as columns and matches as rows.</narrative><display x="-195" y="-105" w="270" h="90" /></stage><stage stageid="d84801e6-49a7-41e9-bf9b-b798a824043f" name="End" type="End"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="45" y="90" /><outputs><output type="collection" name="Regex Matches" narrative="A collection of regex search results." stage="Regex Matches" /><output type="flag" name="Success" narrative="True if there was a match. False if not." stage="Success" /></outputs></stage><stage stageid="2fe5469c-2b07-492a-9133-f9a8048040f4" name="Regex Pattern" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="c97452e5-4981-40dc-a818-0e04845b2c34" name="Text To Perform Search On" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="09291fc1-b6d1-491a-b567-323804f123d0" name="Extract All Matches" type="Code"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="45" y="-15" w="120" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Regex Pattern" expr="[Regex Pattern]" /><input type="text" name="Text To Perform Search On" expr="[Text To Perform Search On]" /><input type="flag" name="Singleline" expr="[Singleline]" /><input type="flag" name="Ignore Case" expr="[Ignore Case]" /><input type="flag" name="Explicit Capture" expr="[Explicit Capture]" /></inputs><outputs><output type="collection" name="Regex Matches" stage="Regex Matches" /><output type="flag" name="Success" stage="Success" /></outputs><onsuccess>d84801e6-49a7-41e9-bf9b-b798a824043f</onsuccess><code><![CDATA[Dim fullMatchColumnName As String = "Full Match"

Regex_Matches = New DataTable()
Regex_Matches.Columns.Add(fullMatchColumnName, GetType(String))

Dim regexOptionConfiguration As RegexOptions = CreateRegexOptions(Singleline, Ignore_Case, False, False, Explicit_Capture, False, False)
Dim regexObject As New Regex(Regex_Pattern, regexOptionConfiguration)
Dim regexMatches As MatchCollection = regexObject.Matches(Text_To_Perform_Search_On)

Success = regexMatches IsNot Nothing AndAlso regexMatches.Count > 0
If Success Then

	Dim groupNames() As String = regexObject.GetGroupNames()
	groupNames(0) = fullMatchColumnName

	For groupIndex As Integer = 1 To groupNames.GetUpperBound(0)
		Regex_Matches.Columns.Add(groupNames(groupIndex), GetType(String))
	Next

	For Each regexMatch As Match In regexMatches

		Dim resultRow As DataRow = Regex_Matches.NewRow()
		Dim groupIndex As Integer = 0

		For Each regexGroup As Group In regexMatch.Groups
				resultRow(groupNames(groupIndex)) = regexGroup.Value			
			groupIndex += 1
		Next
		Regex_Matches.Rows.Add(resultRow)
	Next
End If]]></code></stage><stage stageid="593d8dea-ec8a-4440-82f2-094489196f1b" name="Regex Matches" type="Collection"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="300" y="-15" w="120" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="6a697699-5893-4417-8e1f-ec768b580204" name="Singleline" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="59961a59-2948-456e-930f-8b963c57022b" name="Ignore Case" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="75" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f28c22c8-b2dc-4656-87bc-a8781885fa50" name="Explicit Capture" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="-210" y="105" w="120" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="4e4c7d0c-ab56-4a3c-9f4e-12eb5da2942a" name="Start" type="Start"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="45" y="-105" /><inputs><input type="text" name="Regex Pattern" narrative="The regex pattern you want to search with." stage="Regex Pattern" /><input type="text" name="Text To Perform Search On" narrative="The text you want to perform the regex search on." stage="Text To Perform Search On" /><input type="flag" name="Singleline" narrative="OPTIONAL: (Default False) Perform search in “Singleline” mode?" stage="Singleline" /><input type="flag" name="Ignore Case" narrative="OPTIONAL: (Default False) Perform search in “Ignore Case” mode?" stage="Ignore Case" /><input type="flag" name="Explicit Capture" narrative="OPTIONAL: (Default False) Perform search in “Explicit Capture” mode?" stage="Explicit Capture" /></inputs><onsuccess>09291fc1-b6d1-491a-b567-323804f123d0</onsuccess></stage><stage stageid="095ae743-add8-43a0-ace2-cb7de737b1d5" name="Success" type="Data"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><display x="300" y="15" w="120" h="30" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="986ddde8-876c-47e1-a219-e883b60988ca" name="Input Data Items" type="Block"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="-285" y="-45" w="165" h="180" /><font family="Segoe UI" size="10" style="Regular" color="FFCC00" /></stage><stage stageid="a4549ed5-92d5-4dc9-9b5c-5f8eef0e3db4" name="Output Data Items" type="Block"><subsheetid>b46f178f-06c1-499f-942f-b92cf0df140c</subsheetid><loginhibit /><display x="225" y="-45" w="150" h="105" /><font family="Segoe UI" size="10" style="Regular" color="800000" /></stage><stage stageid="b6c539a3-a875-47c9-80f8-56fb6ba8532b" name="Regex Replace" type="SubSheetInfo"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><narrative>Use this action to replace a sub string(s) within another string using a Regular Expression.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="bc5e73a5-0f83-4f73-b78f-4176fded5a7d" name="Start" type="Start"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Pattern" narrative="The regular expression to use to match for replacement." stage="Pattern" /><input type="text" name="Input Data" narrative="The string to perform the replacement pattern match on." stage="Input Data" /><input type="text" name="Replacement Data" narrative="The string to use as the replacement data." stage="Replacement Data" /><input type="number" name="Max Count" narrative="OPTIONAL: The maximum number of replacements to perform. Default value is unlimited (-1)." stage="Max Count" /><input type="number" name="Start Position" narrative="OPTIONAL: The starting position with the input data to start the replacement match. Default value is position 0." stage="Start Position" /></inputs><onsuccess>604442f0-1e00-4636-a429-44bad3435f7f</onsuccess></stage><stage stageid="a36f09fc-0570-4324-9867-4ce4350b4e54" name="End" type="End"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="90" /><outputs><output type="text" name="Output Data" narrative="The new string data after the replacement has been performed." stage="Output Data" /></outputs></stage><stage stageid="92025e0d-8f23-4ba1-b4d6-c9ffdcd19236" name="Pattern" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2313715-a1d8-47ad-bd75-fc39b6d77f68" name="Input Data" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6603cd7c-b19d-4995-be45-181432c3adac" name="Replacement Data" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="500fe4fd-5905-44ae-961a-0eb23fceaf21" name="Max Count" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="75" w="120" h="30" /><datatype>number</datatype><initialvalue>-1</initialvalue><private /><alwaysinit /></stage><stage stageid="4f3f3deb-c24c-4adb-a5f0-8d1850d40d79" name="Start Position" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="105" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="9b3d4f06-e783-4784-9a62-a752d2491d78" name="Input" type="Block"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="180" /><font family="Segoe UI" size="10" style="Regular" color="7FB2E5" /></stage><stage stageid="604442f0-1e00-4636-a429-44bad3435f7f" name="Check Max Count" type="Decision"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="-60" /><decision expression="[Max Count] &gt;= -1" /><ontrue>47c7d896-c1c6-400a-9142-6504228eeb85</ontrue><onfalse>ff25f887-6321-4b60-9c77-baa1a7f62a6d</onfalse></stage><stage stageid="47c7d896-c1c6-400a-9142-6504228eeb85" name="Check Start Pos" type="Decision"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="-15" /><decision expression="[Start Position] &gt;= 0" /><ontrue>65e76cd9-cb01-4faa-8684-4504512f1125</ontrue><onfalse>ff25f887-6321-4b60-9c77-baa1a7f62a6d</onfalse></stage><stage stageid="ff25f887-6321-4b60-9c77-baa1a7f62a6d" name="Invalid Input Data" type="Exception"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="120" y="-60" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Please verify your input data.&quot;" /></stage><stage stageid="65e76cd9-cb01-4faa-8684-4504512f1125" name="Perform Replace" type="Code"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="15" y="30" /><inputs><input type="text" name="pattern" expr="[Pattern]" /><input type="text" name="input" expr="[Input Data]" /><input type="text" name="replacement" expr="[Replacement Data]" /><input type="number" name="max" expr="[Max Count]" /><input type="number" name="start" expr="[Start Position]" /></inputs><outputs><output type="text" name="output" stage="Output Data" /></outputs><onsuccess>a36f09fc-0570-4324-9867-4ce4350b4e54</onsuccess><code><![CDATA[Dim rgx As New Regex(pattern)

If (max > 0) And (start > 0) Then
	output = rgx.Replace(input, replacement, CInt(max), CInt(start))
ElseIf (max > 0) Then
	output = rgx.Replace(input, replacement, CInt(max))
Else
	output = rgx.Replace(input, replacement)
End If
]]></code></stage><stage stageid="853278cd-9f9e-4cf3-8435-6adfe121838f" name="Output Data" type="Data"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><display x="-195" y="180" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6533cd51-5783-4c0c-9c48-5c5f622e2a9f" name="Output" type="Block"><subsheetid>85fc5bb4-eee8-4509-8217-26fcb149a291</subsheetid><loginhibit /><display x="-270" y="150" w="150" h="60" /><font family="Segoe UI" size="10" style="Regular" color="CCFFCC" /></stage><stage stageid="f94fff3d-8659-43e7-9d35-d06596042a40" name="Calculate Distance" type="SubSheetInfo"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><narrative>An implementation of the Levenshtein distance algorithm. This is used to calculate the distance between two strings. In this case, distance refers to the number of edits needed to make one string match another. 

Example: The distance between "Sam" and "Samantha" would be 5. That means 5 edits would be necessary to make either of these strings match the other. You could remove 5 characters from "Samantha" or add 5 characters to "Sam". 

This is based on the Microsoft TechNet article: https://social.technet.microsoft.com/wiki/contents/articles/26805.c-calculating-percentage-similarity-of-2-strings.aspx</narrative><display x="-195" y="-120" w="240" h="120" /></stage><stage stageid="0cb8e1ca-4671-4be4-9fe1-f291485d3884" name="Start" type="Start"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="15" y="-105" /><inputs><input type="text" name="Source" narrative="The string to compare against the Target string." stage="Source" /><input type="text" name="Target" narrative="The string that is being compared against." stage="Target" /><input type="flag" name="Case Sensitive" narrative="A flag indicating whether the comparison should take the case (i.e. Upper vs Lower) into account. Default value is True." stage="Case Sensitive" /></inputs><onsuccess>d636827f-825d-400b-a5b5-322a2031c867</onsuccess></stage><stage stageid="ba097ab2-cced-4eef-a2ca-1fe84ffbaae7" name="End" type="End"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="15" y="30" /><outputs><output type="number" name="Distance" narrative="The distance between the two strings." stage="Distance" /><output type="number" name="Similarity" narrative="The percentage similarity of the two input strings." stage="Similarity" /></outputs></stage><stage stageid="d7dd5ca2-6f35-4efd-8c9a-b4aeb549cee6" name="Source" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="-15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="84278e10-e173-4cbd-b620-a8bee7ec5b41" name="Target" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="15" w="120" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="165e05f7-97e7-457a-8728-9c8ba9ada978" name="Input" type="Block"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="-270" y="-45" w="150" h="120" /><font family="Segoe UI" size="10" style="Regular" color="FF99CC" /></stage><stage stageid="e4ea6b45-26eb-45bc-8492-46ed760abe6b" name="Output" type="Block"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="-270" y="90" w="150" h="90" /><font family="Segoe UI" size="10" style="Regular" color="FFFF99" /></stage><stage stageid="7249670a-28bc-4fb7-9b27-d9a528ce0263" name="Similarity" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="-195" y="150" w="120" h="30" /><datatype>number</datatype><initialvalue>0</initialvalue><private /><alwaysinit /></stage><stage stageid="76309d2d-4557-4204-84f0-8fb210066e37" name="Calculate Levenshtein Distance" type="Code"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><display x="15" y="-15" w="90" h="30" /><inputs><input type="text" name="source" expr="[Source]" /><input type="text" name="target" expr="[Target]" /><input type="flag" name="caseSensitive" expr="[Case Sensitive]" /></inputs><outputs><output type="number" name="distance" stage="Distance" /><output type="number" name="similarity" stage="Similarity" /></outputs><onsuccess>ba097ab2-cced-4eef-a2ca-1fe84ffbaae7</onsuccess><code><![CDATA['*****************************************************
' Yes, GoTo statements are generally frowned upon, but
' in this case they work well.
'*****************************************************
Dim sourceCharCount As Integer = source.Length
Dim targetCharCount As Integer = target.Length
Dim numOfEdits As Integer(,) = New Integer(sourceCharCount + 1 - 1, targetCharCount + 1 - 1) {}
Dim i As Integer = 0
Dim j As Integer = 0

If (caseSensitive = False) Then
	source = source.ToLower()
	target = target.ToLower()
End If

' There are various checks that we would normally perform on the input strings, but which aren't required here because
' of the Decision stage check to ensure input was actually provied.
'
' Are the string identical? If they are, there's no reason to calculate a distance becauase we already no it's 0 (zero).
If source = target Then
	distance = 0
	Goto JumpPoint
End If

While i <= sourceCharCount
	numOfEdits(i, 0) = Math.Min(System.Threading.Interlocked.Increment(i), i - 1)
End While

While j <= targetCharCount
	numOfEdits(0, j) = Math.Min(System.Threading.Interlocked.Increment(j), j - 1)
End While

For i = 1 To sourceCharCount
	For j = 1 To targetCharCount
		Dim cost As Integer = If((target(j - 1) = source(i - 1)), 0, 1)
		numOfEdits(i, j) = Math.Min(Math.Min(numOfEdits(i - 1, j) + 1, numOfEdits(i, j - 1) + 1), numOfEdits(i - 1, j - 1) + cost)
	Next
Next

distance = numOfEdits(sourceCharCount, targetCharCount)

JumpPoint:

similarity = Math.Round(1.0 - (distance / CDec(Math.Max(source.Length, target.Length))),4)
]]></code></stage><stage stageid="414e8122-bef8-44b8-8811-eccc0d0d683b" name="Distance" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="120" w="120" h="30" /><datatype>number</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="d636827f-825d-400b-a5b5-322a2031c867" name="Check Input" type="Decision"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><loginhibit /><narrative>Was input provided?</narrative><display x="15" y="-60" /><decision expression="(Len(Trim([Source])) &gt; 0) AND (Len(Trim([Target])) &gt; 0)" /><ontrue>76309d2d-4557-4204-84f0-8fb210066e37</ontrue><onfalse>581b0dad-54f8-4c90-9999-f2165f63abda</onfalse></stage><stage stageid="581b0dad-54f8-4c90-9999-f2165f63abda" name="Invalid Input" type="Exception"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="120" y="-60" w="90" h="30" /><exception localized="yes" type="Invalid Input Parameter" detail="&quot;Please review and correct your input. Values must be provided for both Source and Target.&quot;" /></stage><stage stageid="0ba1c79d-9a2c-442e-9cb4-0939c6d0ed7b" name="Case Sensitive" type="Data"><subsheetid>24e065bd-d14b-4880-bfd7-f8f540f7544b</subsheetid><display x="-195" y="45" w="120" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="baeb5b9f-ad8a-4ac0-ba61-1c107d40763f" name="Note3" type="Note"><loginhibit /><narrative>Version 10.0</narrative><display x="15" y="-180" w="120" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="b71e99c3-94a3-4c4a-a1b6-a8f013fcb96b" name="Utility - Windows Compressed File" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - Windows Compressed File" version="7.0.1.49890" bpversion="7.0.1.49890" narrative="The VBO utility to manage Windows Compressed files" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>a2f9b8bd-885a-454f-8920-1bfb80d1e30d</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>46</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions><condition narrative="The object uses the following system dll: System.IO.Compression.dll, System.IO.Compression.FileSystem.dll" /></preconditions><endpoint narrative="" /><subsheet subsheetid="a8c54015-2025-4723-aefa-2bb6f3b3c82e" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="cba14fb2-1425-4834-b382-ac9cea30c23e" type="Normal" published="True"><name>Create Zip from Folder</name><view><camerax>13</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="ae2b448f-a968-4bda-a664-20a9149cb9dc" type="Normal" published="True"><name>Add File to Zip</name><view><camerax>0</camerax><cameray>9</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6" type="Normal" published="True"><name>Extract All from Zip</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="9f52e71b-02ee-46c3-be9e-aabc3292fcee" type="Normal" published="True"><name>Extract File from Zip</name><view><camerax>-4</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="384cbfc3-88e8-41ab-8878-b2bac7146be0" type="Normal" published="True"><name>Delete File from Zip</name><view><camerax>159</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4ae23c8c-54a6-4a86-a148-2175c86923b8" type="Normal" published="True"><name>Get Zip Contents</name><view><camerax>-17</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e" type="Normal" published="True"><name>Find File in Zip</name><view><camerax>-324</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="de2a9469-aaff-47a3-b6ab-a3f9655ba178" name="Start" type="Start"><loginhibit onsuccess="true" /><display x="15" y="-105" /><onsuccess>5038e902-5abf-4672-a1eb-db05a9a64573</onsuccess></stage><stage stageid="5038e902-5abf-4672-a1eb-db05a9a64573" name="End" type="End"><loginhibit onsuccess="true" /><display x="15" y="90" /></stage><stage stageid="b923ffc0-d01c-4d44-8de1-d6e7ce0fa1bd" name="Stage1" type="ProcessInfo"><loginhibit onsuccess="true" /><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference><reference>System.IO.Compression.dll</reference><reference>System.IO.Compression.FileSystem.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO.Compression</import><import>System.IO</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="311e15cd-3b4f-4437-882d-c780422f4eba" name="Clean Up" type="SubSheetInfo"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b1151e12-bd2b-4313-9510-a7e7e23270ab" name="Start" type="Start"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><onsuccess>974309d2-4236-40ed-8fb3-d5022f214e75</onsuccess></stage><stage stageid="974309d2-4236-40ed-8fb3-d5022f214e75" name="End" type="End"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="90" /></stage><stage stageid="f3bb5c44-9e21-44b3-87bb-2c13e43d4ee4" name="Create Zip from Folder" type="SubSheetInfo"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>Creates a zip archive that contains the files and directories from the specified directory and optionally includes the base directory.
The directory structure from the file system is preserved in the archive. If the directory is empty, an empty archive is created.
If the archive already exists, an exception is thrown. If an entry with the specified name already exists in the archive, a second entry is created with an identical name.
If a file in the directory cannot be added to the archive, the archive is left incomplete and invalid, and the method throws an exception.</narrative><display x="-195" y="-105" w="210" h="150" /></stage><stage stageid="2b33354e-4b3c-45fc-983b-469e5f4c1112" name="Start" type="Start"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source Folder Name" narrative="Mandatory: The path to the directory to be archived, specified as an absolute path" stage="Source Folder Name" /><input type="text" name="Destination Zip File Name" narrative="Mandatory: The path and name of the archive to be created, specified as an absolute path" stage="Destination Zip File Name" /><input type="flag" name="Include Base Folder" narrative="Optional: True to include the directory name from [Source Folder Name] at the root of the archive; False to include only the contents of the directory. Default False" stage="Include Base Folder" /></inputs><onsuccess>ab1ebb75-538f-4b88-86db-cbc9ec59ec7f</onsuccess></stage><stage stageid="d85e5bc8-34f9-47f4-a90b-1c121cade800" name="End" type="End"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="d3bbabee-48ed-4a02-8ba2-ea6f26120dd3" name="Note1" type="Note"><subsheetid>a8c54015-2025-4723-aefa-2bb6f3b3c82e</subsheetid><loginhibit onsuccess="true" /><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="a691fffd-16c4-45d9-8857-19c63fc3df21" name="Note2" type="Note"><loginhibit onsuccess="true" /><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="ab1ebb75-538f-4b88-86db-cbc9ec59ec7f" name="CreateFromDirectory" type="Code"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="sourcePath" expr="[Source Folder Name]" /><input type="text" name="destinationPath" expr="[Destination Zip File Name]" /><input type="flag" name="includeFolder" expr="[Include Base Folder]" /></inputs><onsuccess>d85e5bc8-34f9-47f4-a90b-1c121cade800</onsuccess><code><![CDATA[ZipFile.CreateFromDirectory(sourcePath, destinationPath, CompressionLevel.Fastest, includeFolder)]]></code></stage><stage stageid="c2a2fa27-6dfb-48ed-a0ac-093c908df743" name="Source Folder Name" type="Data"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>The path to the directory to be archived, specified as an absolute path</narrative><display x="-195" y="0" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="801f9184-f52a-4658-9f7a-651ee0500101" name="Destination Zip File Name" type="Data"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the archive to be created, specified as an absolute path</narrative><display x="-195" y="45" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="6440cb36-2e97-4c3c-b42d-8f77984a6253" name="Add File to Zip" type="SubSheetInfo"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>Archives a file by compressing it and adding it to the zip archive. If an entry with the specified name already exists in the archive, a second entry is created with an identical name.</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="9654be57-b0eb-490b-bd0f-2cef3d08368c" name="End" type="End"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><display x="15" y="30" /></stage><stage stageid="25f35431-4b28-4c14-b45e-48b3844f6baa" name="CreateEntryFromFile" type="Code"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="sourcePath" expr="[Source File Name]" /><input type="text" name="destinationPath" expr="[Destination Zip File Name]" /><input type="text" name="destinationName" expr="[Destination File Name]" /></inputs><onsuccess>9654be57-b0eb-490b-bd0f-2cef3d08368c</onsuccess><code><![CDATA[Dim f As New FileInfo(sourcePath)
Using archive As ZipArchive = ZipFile.Open(destinationPath, ZipArchiveMode.Update)
If destinationName <> "" Then
	destinationName = destinationName.Replace("\", "/")
	archive.CreateEntryFromFile(sourcePath, destinationName, CompressionLevel.Fastest)
Else
	archive.CreateEntryFromFile(sourcePath, f.Name, CompressionLevel.Fastest)
End If
End Using]]></code></stage><stage stageid="1e5d5703-3998-4708-beab-7e74b905098a" name="Source File Name" type="Data"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the file to be archived, specify as an absolute path</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8c8d36df-3d94-49c9-b7b2-c8a5b4931cf5" name="Destination Zip File Name" type="Data"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to add the file to, specified as an absolute path</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="24dbb76c-b80e-4bc1-a91b-1edff6d414e8" name="Start" type="Start"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source File Name" narrative="Mandatory: The path and name of the file to be archived, specified as an absolute path" stage="Source File Name" /><input type="text" name="Destination Zip File Name" narrative="Mandatory: The path and name of the zip archive to add the file to, specified as an absolute path" stage="Destination Zip File Name" /><input type="text" name="Destination File Name" narrative="Optional: The path and name of the added file as it will be stored in the zip file. Path can be specified a relative or absolute path. If not specified, the file will be stored in the root folder of the zip archive file with its original name" stage="Destination File Name" /></inputs><onsuccess>25f35431-4b28-4c14-b45e-48b3844f6baa</onsuccess></stage><stage stageid="69b3f3a6-22d9-4434-82c8-91267d1f8e5f" name="Include Base Folder" type="Data"><subsheetid>cba14fb2-1425-4834-b382-ac9cea30c23e</subsheetid><loginhibit onsuccess="true" /><narrative>-true- to include the directory name from [Source Folder Name] at the root of the archive; -false- to include only the contents of the directory.</narrative><display x="-195" y="90" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="f6393684-039c-4cb4-9d15-bef3fccfabe0" name="Extract All from Zip" type="SubSheetInfo"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><narrative>Extracts all the files in the specified zip archive to a directory on the file system</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="f353f740-6721-4910-b393-5bf8c85f4890" name="End" type="End"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="a11db9ca-5780-4400-8e14-26d0e638e2a7" name="ExtractToDirectory" type="Code"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="sourcePath" expr="[Source Zip File Name]" /><input type="text" name="destinationPath" expr="[Destination Folder Name]" /></inputs><onsuccess>f353f740-6721-4910-b393-5bf8c85f4890</onsuccess><code><![CDATA[ZipFile.ExtractToDirectory(sourcePath, destinationPath)]]></code></stage><stage stageid="8b916105-3bcc-47d7-ac6c-3c5f499b5a29" name="Source Zip File Name" type="Data"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="32f81ae0-9a03-45df-8dfe-a72db5269d07" name="Destination Folder Name" type="Data"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><narrative>The path to the directory in which to place the extracted files, specified as a absolute path</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="8e8ed20c-ca5d-4447-96cc-8a40bad4d590" name="Start" type="Start"><subsheetid>4b8d01fc-6c2f-4fd8-b898-ae83af14c4e6</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Source Zip File Name" /><input type="text" name="Destination Folder Name" narrative="Mandatory: The path to the directory in which to place the extracted files, specified as a absolute path" stage="Destination Folder Name" /></inputs><onsuccess>a11db9ca-5780-4400-8e14-26d0e638e2a7</onsuccess></stage><stage stageid="8a5997b0-2204-4cdc-a5b9-232ef9e8d580" name="Get Zip Contents" type="SubSheetInfo"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><narrative>Reads the details of the entries of a zip file into a collection</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="14faa9d4-8ced-4d2b-b6ad-3fa355ce0f41" name="Start" type="Start"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Zip File Name" /></inputs><onsuccess>1107bae2-b326-4987-852a-63accf822f46</onsuccess></stage><stage stageid="166051b1-a675-4188-a195-b225947d8cbd" name="End" type="End"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><outputs><output type="collection" name="Contents" narrative="The files in the zip archive" stage="Contents" /></outputs></stage><stage stageid="1107bae2-b326-4987-852a-63accf822f46" name="GetZipContents" type="Code"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="path" expr="[Zip File Name]" /></inputs><outputs><output type="collection" name="Contents" stage="Contents" /></outputs><onsuccess>166051b1-a675-4188-a195-b225947d8cbd</onsuccess><code><![CDATA[Dim dt As New DataTable
With dt.Columns
    .Add("Name", GetType(String))
    .Add("Path", GetType(String))
    .Add("Length", GetType(Long))
    .Add("CompressedLength", GetType(Long))
End With

Using archive As ZipArchive = ZipFile.OpenRead(path)
	For Each entry As ZipArchiveEntry In archive.Entries
		Dim dr As Data.DataRow = dt.NewRow
		dr(0) = entry.Name
		dr(1) = entry.FullName
		dr(2) = entry.Length
		dr(3) = entry.CompressedLength
		dt.Rows.Add(dr)
	Next
End Using

Contents = dt]]></code></stage><stage stageid="f577fc93-b8cc-4ed8-8de6-ceac00a1a0bf" name="Contents" type="Collection"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><narrative>The list of files contained in the zip archive</narrative><display x="-195" y="30" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" description="The file name" /><field name="Path" type="text" description="The file path within the zip archive" /><field name="Length" type="number" description="The original file size" /><field name="CompressedLength" type="number" description="The compressed file size" /></collectioninfo></stage><stage stageid="0fcbe61b-7770-4f5f-b1bc-67bee177e610" name="Extract File from Zip" type="SubSheetInfo"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>Extracts an entry in the zip archive to a file, and optionally overwrites an existing file that has the same name</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="5ce56c02-f357-4f04-93b1-e8807172f3a6" name="End" type="End"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="63d43b33-8fc2-426f-a51a-79b181c5d39e" name="Start" type="Start"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Source File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Source File Name" /><input type="text" name="Source Zip File Name" narrative="Mandatory: The file name (and its path within the zip archive if necessary) to extract" stage="Source Zip File Name" /><input type="text" name="Destination File Path" narrative="Mandatory: The path and name of the file to create from the contents of the entry (absolute path)" stage="Destination File Name" /><input type="flag" name="Overwrite Destination File" narrative="Optional: True to overwrite an existing file that has the same name as the destination file; otherwise, False. Default True" stage="Overwrite Destination File" /></inputs><onsuccess>355ff556-1f34-4d39-b0c9-e20c6d46a1cb</onsuccess></stage><stage stageid="db77b30a-f8d6-4bc4-9f16-b0d979a56d0d" name="Destination File Name" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the file to create from the contents of the entry (absolute path)</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e146c445-49ef-430f-b415-89c1e4044de4" name="Source File Name" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>The file name (and its path within the zip archive if necessary) to extract</narrative><display x="-195" y="15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="493af76c-d917-47cf-9ca1-95f580d8fd82" name="Source Zip File Name" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="355ff556-1f34-4d39-b0c9-e20c6d46a1cb" name="GetFile" type="Code"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="zipPath" expr="[Source Zip File Name]" /><input type="text" name="sourcePath" expr="[Source File Name]" /><input type="text" name="destinationPath" expr="[Destination File Name]" /><input type="flag" name="overwrite" expr="[Overwrite Destination File]" /></inputs><onsuccess>5ce56c02-f357-4f04-93b1-e8807172f3a6</onsuccess><code><![CDATA[sourcePath = sourcePath.Replace("\", "/")

Using archive As ZipArchive = ZipFile.OpenRead(zipPath)
	For Each entry As ZipArchiveEntry In archive.Entries
		If String.Equals(entry.FullName, sourcePath, StringComparison.OrdinalIgnoreCase) Then
			entry.ExtractToFile(destinationPath, overwrite)
			Exit Sub
		End If
	Next
End Using
Throw New Exception("File not found in archive: " + sourcePath)]]></code></stage><stage stageid="7dedd1d6-152c-4e65-8f1b-9436749da135" name="Overwrite Destination File" type="Data"><subsheetid>9f52e71b-02ee-46c3-be9e-aabc3292fcee</subsheetid><loginhibit onsuccess="true" /><narrative>True to overwrite an existing file that has the same name as the destination file; otherwise, False</narrative><display x="-195" y="105" w="150" h="30" /><datatype>flag</datatype><initialvalue>True</initialvalue><private /><alwaysinit /></stage><stage stageid="ea5ce3ca-0ce0-49e0-a8bf-421fa853d4c5" name="Extract File from Zip" type="SubSheetInfo"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><narrative>Deletes the entry from the zip archive</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="b2567083-5ffa-4ee6-81f3-743d2ff807d5" name="End" type="End"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /></stage><stage stageid="643b1483-c5c2-433c-936e-77ac1af120d9" name="Start" type="Start"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Zip File Name" /><input type="text" name="File Name" narrative="Mandatory: The file name (and its path within the zip archive if necessary) to delete" stage="File Name" /></inputs><onsuccess>a88b5869-dd86-4665-b65d-a978a09487d2</onsuccess></stage><stage stageid="a88b5869-dd86-4665-b65d-a978a09487d2" name="DeleteFile" type="Code"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="zipPath" expr="[Zip File Name]" /><input type="text" name="sourcePath" expr="[File Name]" /></inputs><onsuccess>b2567083-5ffa-4ee6-81f3-743d2ff807d5</onsuccess><code><![CDATA[sourcePath = sourcePath.Replace("\", "/")

Using archive As ZipArchive = ZipFile.Open(zipPath, ZipArchiveMode.Update)
	For Each entry As ZipArchiveEntry In archive.Entries
		If String.Equals(entry.FullName, sourcePath, StringComparison.OrdinalIgnoreCase) Then
			entry.Delete
			Exit Sub
		End If
	Next
End Using
Throw New Exception("File not found in archive: " + sourcePath)]]></code></stage><stage stageid="6f9ade2f-5c0d-4d45-a78b-fdaa04fe961d" name="File Name" type="Data"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><narrative>The file name (and its path within the zip archive if necessary) to delete</narrative><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="20021330-607d-4145-b42f-fa0d5931e080" name="Zip File Name" type="Data"><subsheetid>384cbfc3-88e8-41ab-8878-b2bac7146be0</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="4c62b494-7f4e-4444-993d-bb5717e49cd2" name="Zip File Name" type="Data"><subsheetid>4ae23c8c-54a6-4a86-a148-2175c86923b8</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e93650ad-a9f2-4a38-b5fc-0d3dc1daf818" name="Find File in Zip" type="SubSheetInfo"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>Check if a file exists in the Zip Archive</narrative><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="4de67c14-ac7c-44c0-86b9-376b76499209" name="End" type="End"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="15" /><outputs><output type="flag" name="Found" narrative="True if the file exists in the Zip Archive file, otherwise False" stage="Found" /></outputs></stage><stage stageid="0418a4c1-99c5-45b7-bb82-cfce74f10de8" name="FindFile" type="Code"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-45" w="120" h="30" /><inputs><input type="text" name="path" expr="[Zip File Name]" /><input type="text" name="file" expr="[File Name]" /></inputs><outputs><output type="flag" name="Found" stage="Found" /></outputs><onsuccess>4de67c14-ac7c-44c0-86b9-376b76499209</onsuccess><code><![CDATA[file = file.Replace("\", "/")

Dim dt As New DataTable
dt.Columns.Add("Path", Type.GetType("System.String"))
found = false

Using archive As ZipArchive = ZipFile.OpenRead(path)
	For Each entry As ZipArchiveEntry In archive.Entries
		If entry.FullName = file Then
			found = true
			Exit For
		End If
	Next
End Using]]></code></stage><stage stageid="8aa98f62-8978-41ea-9630-8db70ace9246" name="Zip File Name" type="Data"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the zip archive to open, specified as an absolute path</narrative><display x="-195" y="-15" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1141bb0a-b624-4b18-aff8-c9811f614f30" name="File Name" type="Data"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>The file name (and its path within the zip archive if necessary) to delete</narrative><display x="-195" y="30" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0cd0782c-3296-4f6e-b34c-fc338a3936c3" name="Found" type="Data"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><narrative>True if the file exists in the Zip Archive file, otherwise False</narrative><display x="-195" y="75" w="150" h="30" /><datatype>flag</datatype><initialvalue>False</initialvalue><private /><alwaysinit /></stage><stage stageid="5445aaf9-872d-4e36-917e-236f24830f33" name="Start" type="Start"><subsheetid>09530b1d-93d7-49b4-9a7c-ff1f3e9c6b7e</subsheetid><loginhibit onsuccess="true" /><display x="15" y="-105" /><inputs><input type="text" name="Zip File Name" narrative="Mandatory: The path and name of the zip archive to open, specified as an absolute path" stage="Zip File Name" /><input type="text" name="File Name" narrative="Mandatory: The file name (and its path within the zip archive if necessary) to delete" stage="File Name" /></inputs><onsuccess>0418a4c1-99c5-45b7-bb82-cfce74f10de8</onsuccess></stage><stage stageid="3e0fb337-31e8-4c10-be19-ace7fc440e8a" name="Destination File Name" type="Data"><subsheetid>ae2b448f-a968-4bda-a664-20a9149cb9dc</subsheetid><loginhibit onsuccess="true" /><narrative>The path and name of the added file as it will be stored in the zip file. Path can be specified a relative or absolute path. If not specified, the file will be stored in the root folder of the zip archive file with its original name.</narrative><display x="-195" y="60" w="150" h="30" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object id="50afe2c4-6c05-44dd-92e7-a4925cfa62e0" name="Utility - XML" xmlns="http://www.blueprism.co.uk/product/process"><process name="Utility - XML" version="1.0" bpversion="7.0.1.49890" narrative="Utility functions for manipulating XML.&#xD;&#xA;&#xD;&#xA;Version: 2.0" byrefcollection="true" type="object" runmode="Background"><appdef><element name="Application Root"><id>0876de4c-edd4-4f7c-a628-a3a1e1051395</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element></appdef><view><camerax>-4</camerax><cameray>-70</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="80f6917a-0130-44c3-9e26-e731a0e54b21" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="da647308-92ea-4cb3-9d56-cb6c53bae010" type="Normal" published="True"><name>Get Attribute</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="859d4d77-5c6d-4ceb-8d62-98c599be7517" type="Normal" published="True"><name>Get Child Elements</name><view><camerax>0</camerax><cameray>-42</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="4472983a-4f70-49a9-adbe-8f84339fa4d9" type="Normal" published="True"><name>Get Element</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83" type="Normal" published="True"><name>Get Elements</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="df33ab05-d833-42e9-9902-5487f992d63e" type="Normal" published="True"><name>Get Elements By XPath</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="8760ff28-2dfc-4595-952e-1784e098c0bb" type="Normal" published="True"><name>Read File</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="d3eeaf9d-5380-47a6-95b0-f54d43b083e6" type="Normal" published="True"><name>Strip Tags</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="a19cb5e0-2f5a-437b-96f9-cf046d8390c5" name="Start" type="Start"><loginhibit /><display x="-30" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>98252a38-afd4-410f-9105-85b8d5754cca</onsuccess></stage><stage stageid="98252a38-afd4-410f-9105-85b8d5754cca" name="End" type="End"><loginhibit /><display x="-30" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="db9dd53d-234f-49ec-a86f-f255b8c94701" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><references><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import><import>System.IO</import><import>System.XML</import><import>Microsoft.VisualBasic</import><import>System.Text.RegularExpressions</import></imports><language>visualbasic</language><globalcode><![CDATA[

]]></globalcode><code><![CDATA[

Public Function GetDataTable(ByVal ColumnNamesCSV As String, ByVal ColumnTypesCSV As String) As DataTable

	Dim objTable As DataTable
	Dim objColumn As DataColumn
	Dim aColumnNames As String() = ColumnNamesCSV.Split(",")
	Dim aColumnTypes As String() = ColumnTypesCSV.Split(",")

	Try
		objTable = New DataTable
		For i As Integer = 0 To aColumnNames.Length - 1
			objColumn = New DataColumn 
			objColumn.DataType = System.Type.GetType(aColumnTypes(i).Trim)
			objColumn.ColumnName = aColumnNames(i).Trim
			objTable.Columns.Add(objColumn)
		Next
		
	Catch e As Exception
		objTable = nothing	
	End Try

	Return objTable

End Function


]]></code></stage><stage stageid="ee3ef258-b041-4d2e-a0c3-f15d164668cd" name="Clean Up" type="SubSheetInfo"><subsheetid>80f6917a-0130-44c3-9e26-e731a0e54b21</subsheetid><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="0697db0a-2430-49ab-9843-c62cca14fbcb" name="Start" type="Start"><subsheetid>80f6917a-0130-44c3-9e26-e731a0e54b21</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>9be9d134-83ed-48c5-b854-866da172fb02</onsuccess></stage><stage stageid="9be9d134-83ed-48c5-b854-866da172fb02" name="End" type="End"><subsheetid>80f6917a-0130-44c3-9e26-e731a0e54b21</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9b6f82d4-4408-41b1-bc68-7227405b7672" name="Get Attribute" type="SubSheetInfo"><subsheetid>da647308-92ea-4cb3-9d56-cb6c53bae010</subsheetid><narrative>Returns the value of the specified attribute.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="9b3a98d6-f06b-4392-abde-64afae690ba5" name="new" type="Note"><subsheetid>80f6917a-0130-44c3-9e26-e731a0e54b21</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="e6aad9a0-1c02-42d1-87c2-4ec704afb85e" name="Start" type="Start"><subsheetid>da647308-92ea-4cb3-9d56-cb6c53bae010</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The XML containing the attribute you want to interrogate." stage="XML" /><input type="text" name="Attribute Name" narrative="The name of the attribute to read." stage="Attribute Name" /></inputs><onsuccess>1a5111a8-b8ba-4c1f-8ba0-7bde3eb73096</onsuccess></stage><stage stageid="290154f9-ff43-4fc5-b0fd-33815ae7aedf" name="End" type="End"><subsheetid>da647308-92ea-4cb3-9d56-cb6c53bae010</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Value" narrative="The value of the specified attribute." stage="Attribute Value" /></outputs></stage><stage stageid="3aea12ff-52b0-42ed-8b15-2a4d1f43753a" name="XML" type="Data"><subsheetid>da647308-92ea-4cb3-9d56-cb6c53bae010</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="9626bf37-0254-4589-b5af-e6e99448e28a" name="Attribute Name" type="Data"><subsheetid>da647308-92ea-4cb3-9d56-cb6c53bae010</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">method</initialvalue><private /><alwaysinit /></stage><stage stageid="8590e2b5-308f-4d4d-bd86-d39423bd4608" name="Attribute Value" type="Data"><subsheetid>da647308-92ea-4cb3-9d56-cb6c53bae010</subsheetid><display x="-195" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1a5111a8-b8ba-4c1f-8ba0-7bde3eb73096" name="Get Attribute" type="Code"><subsheetid>da647308-92ea-4cb3-9d56-cb6c53bae010</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Attribute" expr="[Attribute Name]" /></inputs><outputs><output type="text" name="Value" stage="Attribute Value" /></outputs><onsuccess>290154f9-ff43-4fc5-b0fd-33815ae7aedf</onsuccess><code><![CDATA[dim i as integer = XML.indexof(Attribute)

if i > 0 then
	i += Attribute.length + 2
	value = XML.substring(i)
	value = value.substring(0, value.indexof(""""))
else
	value = ""
end if]]></code></stage><stage stageid="79814047-e0b8-4336-9d22-cb849c17b97d" name="Get Elements" type="SubSheetInfo"><subsheetid>79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83</subsheetid><narrative>Returns a collection containing all of the elements found in the input XML that match the specified element name.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="bcb63f10-da65-4f36-9e6d-fdcca4d6b0fd" name="Start" type="Start"><subsheetid>79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The XML containing the elements you are interested in." stage="XML" /><input type="text" name="Element Name" narrative="The name of the specific element type you want to get." stage="Element Name" /></inputs><onsuccess>2526b4b4-e39b-4f5d-9bfb-ec1d99b09d7b</onsuccess></stage><stage stageid="fcc3d605-0e59-4266-bbb6-cfa4d17a2583" name="End" type="End"><subsheetid>79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Elements" narrative="A collection of all elements contained in the input XML that match based on element name." stage="Elements" /></outputs></stage><stage stageid="fd3f4c70-58d8-4397-9395-7cb315b7fce3" name="XML" type="Data"><subsheetid>79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="63d1352b-4761-4e40-aaf8-051de9f6be58" name="Element Name" type="Data"><subsheetid>79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue xml:space="preserve">Image</initialvalue><private /><alwaysinit /></stage><stage stageid="2526b4b4-e39b-4f5d-9bfb-ec1d99b09d7b" name="Get Elements" type="Code"><subsheetid>79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="Element" expr="[Element Name]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>fcc3d605-0e59-4266-bbb6-cfa4d17a2583</onsuccess><code><![CDATA[dim table as datatable = GetDataTable("XML", "System.String")
dim row as datarow
dim doc as new xmldocument
dim list as xmlnodelist

try

	doc.loadxml(xml)
	list = doc.getelementsbytagname(element)

	for each n as xmlnode in list
		row = table.newrow()
		row("XML") = n.outerxml
		table.rows.Add(row)
	next

catch e as exception
finally
	Elements = table
end try
]]></code></stage><stage stageid="a9b78a27-0e27-4f57-9799-7fa7d0d480e8" name="Elements" type="Collection"><subsheetid>79f4bc2b-8193-4c62-be1b-6cc0f8ebfd83</subsheetid><display x="-195" y="90" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="XML" type="text" /></collectioninfo></stage><stage stageid="500c8db0-c451-4062-8026-a12066d2eacd" name="Get Child Elements" type="SubSheetInfo"><subsheetid>859d4d77-5c6d-4ceb-8d62-98c599be7517</subsheetid><narrative>Returns a collection containing all child elements of the input XML.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="7af2c0fb-7b1c-47d2-b894-95c95b5eeb11" name="Start" type="Start"><subsheetid>859d4d77-5c6d-4ceb-8d62-98c599be7517</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The XML to check for child elements." stage="XML" /></inputs><onsuccess>58317b93-8dff-4cbc-ad5a-264e90f266b6</onsuccess></stage><stage stageid="ca9137d8-962a-4ef9-88cf-7838459e05cd" name="End" type="End"><subsheetid>859d4d77-5c6d-4ceb-8d62-98c599be7517</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Elements" narrative="A collection containing all child elements contained in the input XML." stage="Elements" /></outputs></stage><stage stageid="ee47a1e5-ee32-4b73-ac5a-63d5d7f3a0a4" name="XML" type="Data"><subsheetid>859d4d77-5c6d-4ceb-8d62-98c599be7517</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="58317b93-8dff-4cbc-ad5a-264e90f266b6" name="Get Child Elements" type="Code"><subsheetid>859d4d77-5c6d-4ceb-8d62-98c599be7517</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>ca9137d8-962a-4ef9-88cf-7838459e05cd</onsuccess><code><![CDATA[dim table as datatable = GetDataTable("XML", "System.String")
dim row as datarow
dim doc as new xmldocument

try

	doc.loadxml(xml)
	for each n as xmlnode in doc.childnodes
		for each nn as xmlnode in n.childnodes
			row = table.newrow()
			row("XML") = nn.outerxml
			table.rows.Add(row)
		next
	next

catch e as exception
finally
	Elements = table
end try
]]></code></stage><stage stageid="8f54f0a0-6247-485b-9442-0357e2ae5460" name="Read File" type="SubSheetInfo"><subsheetid>8760ff28-2dfc-4595-952e-1784e098c0bb</subsheetid><narrative>Read the contents of an XML file.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="304b8b3f-8f27-470d-9ce0-1ec0819e7b0a" name="Start" type="Start"><subsheetid>8760ff28-2dfc-4595-952e-1784e098c0bb</subsheetid><loginhibit /><preconditions><condition narrative="You must provide the fully qualified path and name of the XML file." /></preconditions><postconditions><condition narrative="Returns the text contents of the XML file." /></postconditions><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Path" narrative="The fully qualified path to and name of the target XML file." stage="Path" /></inputs><onsuccess>a87867d0-8288-41e3-958b-b825578c6238</onsuccess></stage><stage stageid="e43ab352-c812-4f60-a78d-3f6624d361c7" name="End" type="End"><subsheetid>8760ff28-2dfc-4595-952e-1784e098c0bb</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="XML" narrative="The contents of the XML file." stage="XML" /></outputs></stage><stage stageid="08499145-66e3-43b3-94e2-f575e1f0695b" name="Path" type="Data"><subsheetid>8760ff28-2dfc-4595-952e-1784e098c0bb</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="a87867d0-8288-41e3-958b-b825578c6238" name="Read File" type="Code"><subsheetid>8760ff28-2dfc-4595-952e-1784e098c0bb</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="Path" expr="[Path]" /></inputs><outputs><output type="text" name="XML" stage="XML" /></outputs><onsuccess>e43ab352-c812-4f60-a78d-3f6624d361c7</onsuccess><code><![CDATA[XML = File.ReadAllText(Path)]]></code></stage><stage stageid="498e71a0-9486-4606-bd54-592cc9be52af" name="XML" type="Data"><subsheetid>8760ff28-2dfc-4595-952e-1784e098c0bb</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="1072824a-9e75-4ecd-9f29-140b060c854b" name="Elements" type="Collection"><subsheetid>859d4d77-5c6d-4ceb-8d62-98c599be7517</subsheetid><display x="-195" y="75" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="XML" type="text" /></collectioninfo></stage><stage stageid="d6fa3916-1e43-4632-864c-b601b1425075" name="Get Element" type="SubSheetInfo"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><narrative>Returns the name and value of an XML element.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="ec07dc46-21af-44be-b98f-6c08c1341aab" name="Start" type="Start"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The XML containing the element." stage="XML" /></inputs><onsuccess>06f3cfec-6f2d-4a4d-a03f-93358c8f01d9</onsuccess></stage><stage stageid="35059544-fb11-49fd-8840-66e9aa9b54da" name="End" type="End"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><loginhibit /><display x="15" y="120" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Name" narrative="The name of the element." stage="Name" /><output type="text" name="Value" narrative="The value of the element." stage="Value" /></outputs></stage><stage stageid="97832d34-d33a-4bc2-9e1a-e832495ccdf8" name="XML" type="Data"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="60341310-cbd2-4402-83ff-08904a5d105f" name="Name" type="Data"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><display x="-195" y="15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="cc198e02-03cf-44db-89d8-49701f934f9c" name="Value" type="Data"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><display x="-195" y="45" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="06f3cfec-6f2d-4a4d-a03f-93358c8f01d9" name="Name" type="Calculation"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><loginhibit /><display x="15" y="-45" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>b85012c4-e048-47b4-8044-e33d78bace51</onsuccess><calculation expression="Mid([XML], 2, InStr([XML], &quot;&gt;&quot;) - 2)" stage="Name" /></stage><stage stageid="b85012c4-e048-47b4-8044-e33d78bace51" name="Value" type="Calculation"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><loginhibit /><display x="15" y="15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>c502a32e-6fb9-42a6-ad41-9f08e7a2e88a</onsuccess><calculation expression="Mid([XML], InStr([XML], &quot;&gt;&quot;) + 1, Len([XML]))" stage="Value" /></stage><stage stageid="c502a32e-6fb9-42a6-ad41-9f08e7a2e88a" name="Value" type="Calculation"><subsheetid>4472983a-4f70-49a9-adbe-8f84339fa4d9</subsheetid><loginhibit /><display x="15" y="60" /><font family="Tahoma" size="10" style="Regular" color="000000" /><onsuccess>35059544-fb11-49fd-8840-66e9aa9b54da</onsuccess><calculation expression="Left([Value], InStr([Value], &quot;&lt;&quot;) - 1)" stage="Value" /></stage><stage stageid="b457f3f1-a9d9-4ddd-b1c5-688333505047" name="Strip Tags" type="SubSheetInfo"><subsheetid>d3eeaf9d-5380-47a6-95b0-f54d43b083e6</subsheetid><narrative>Strips all tags from the input XML.</narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="6e2f6417-27e9-4ef1-a768-2b1a2a3ed396" name="Start" type="Start"><subsheetid>d3eeaf9d-5380-47a6-95b0-f54d43b083e6</subsheetid><loginhibit /><display x="15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The XML to strip of all tags." stage="XML" /></inputs><onsuccess>0c91203e-20a6-4cd1-a51a-8d5b7dff72a4</onsuccess></stage><stage stageid="1831b09b-d373-4311-9ac2-d6164d9c349a" name="End" type="End"><subsheetid>d3eeaf9d-5380-47a6-95b0-f54d43b083e6</subsheetid><loginhibit /><display x="15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="text" name="Text" narrative="The final text after removing all XML tags." stage="Text" /></outputs></stage><stage stageid="7cfa61aa-1b0f-4fc7-9eeb-319e46a674f6" name="XML" type="Data"><subsheetid>d3eeaf9d-5380-47a6-95b0-f54d43b083e6</subsheetid><display x="-195" y="-15" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="21a495b3-eb0c-4b45-b55a-85a92a42f5cc" name="Text" type="Data"><subsheetid>d3eeaf9d-5380-47a6-95b0-f54d43b083e6</subsheetid><display x="-195" y="60" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="0c91203e-20a6-4cd1-a51a-8d5b7dff72a4" name="Code1" type="Code"><subsheetid>d3eeaf9d-5380-47a6-95b0-f54d43b083e6</subsheetid><loginhibit /><display x="15" y="-15" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /></inputs><outputs><output type="text" name="Text" stage="Text" /></outputs><onsuccess>1831b09b-d373-4311-9ac2-d6164d9c349a</onsuccess><code><![CDATA[
Text = Regex.Replace(XML, "<.*?>", "")
]]></code></stage><stage stageid="6e010598-fce4-4f00-8ce8-6628922ceb75" name="Get Elements By XPath" type="SubSheetInfo"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><narrative>Returns a collection containing all elements that match the input XPath query. NOTE: If the XML utilizes namespaces you will need to populate the input Namespace collection with the prefix and URI of those namespaces. </narrative><display x="-195" y="-105" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /></stage><stage stageid="573f826e-8772-4429-a3b0-fe9499b1cc8d" name="XML" type="Data"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><display x="-195" y="-30" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e53b8d8d-499f-4b9a-ab51-c2cf98a83ff6" name="XPath" type="Data"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><display x="-195" y="0" w="150" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="55e74d85-6940-4e06-b40d-6811a58d4811" name="Elements" type="Collection"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><display x="-195" y="165" w="150" h="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><datatype>collection</datatype><private /><alwaysinit /><collectioninfo><field name="Name" type="text" /><field name="Value" type="text" /><field name="Inner XML" type="text" /><field name="Outer XML" type="text" /></collectioninfo></stage><stage stageid="08273a8c-2e84-42b2-951a-fb7084bad902" name="Start" type="Start"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><loginhibit /><display x="-15" y="-105" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" narrative="The XML containing the elements you are interested in." stage="XML" /><input type="text" name="XPath" narrative="The XPath query to use for searching the XML." stage="XPath" /><input type="collection" name="Namespaces" narrative="A collection containing the definitions of any namespaces used in the XML. The collection must contain the text columns &quot;prefix&quot; and &quot;uri&quot;." stage="Namespaces" /></inputs><onsuccess>3015c532-2467-4c1a-878c-d69792f0bfdd</onsuccess></stage><stage stageid="d866d40d-b960-4462-a880-250ccd59fba2" name="End" type="End"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><loginhibit /><display x="-15" y="90" /><font family="Tahoma" size="10" style="Regular" color="000000" /><outputs><output type="collection" name="Elements" narrative="A collection containing the elements that matched the input XPath query for the specified XML." stage="Elements" /></outputs></stage><stage stageid="3015c532-2467-4c1a-878c-d69792f0bfdd" name="Get Elements By XPath" type="Code"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><loginhibit /><display x="-15" y="-15" w="180" h="30" /><font family="Tahoma" size="10" style="Regular" color="000000" /><inputs><input type="text" name="XML" expr="[XML]" /><input type="text" name="XPath" expr="[XPath]" /><input type="collection" name="Namespaces" expr="[Namespaces]" /></inputs><outputs><output type="collection" name="Elements" stage="Elements" /></outputs><onsuccess>d866d40d-b960-4462-a880-250ccd59fba2</onsuccess><code><![CDATA[dim table as DataTable = GetDataTable("Name,Value,Inner XML,Outer XML", "System.String,System.String,System.String,System.String")
dim row as DataRow
dim doc as new XmlDocument
dim list as XmlNodeList

try

	doc.loadxml(xml)
	
	if ((Namespaces IsNot Nothing) And (Namespaces.Rows.Count > 0)) then 
		dim nsmgr as XmlNamespaceManager = new XmlNamespaceManager(doc.NameTable)
		for each ns as DataRow in Namespaces.Rows
			nsmgr.AddNamespace(ns("prefix"), ns("uri"))
		next
		list = doc.SelectNodes(XPath, nsmgr)
	else
		list = doc.SelectNodes(XPath)
	end if

	for each n as xmlnode in list
		row = table.newrow()
		row("Name") = n.name
		row("Value") = n.innertext
		row("Inner XML") = n.innerxml
		row("Outer XML") = n.outerxml
		table.rows.Add(row)
	next

catch e as exception
finally
	Elements = table
end try]]></code></stage><stage stageid="f83a5c68-fda6-4d4d-827a-922f69c74dee" name="Note2" type="Note"><narrative>‘The MIT License’

© 2020 Blue Prism Limited

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE
</narrative><display x="210" y="-15" w="300" h="270" /><font family="Segoe UI" size="10" style="Regular" color="0000FF" /></stage><stage stageid="5c486365-98f1-4d7e-90c5-cc0c0764129a" name="Namespaces" type="Collection"><subsheetid>df33ab05-d833-42e9-9902-5487f992d63e</subsheetid><loginhibit /><display x="-195" y="30" w="150" h="30" /><datatype>collection</datatype><private /><alwaysinit /></stage><stage stageid="7f3e1190-5121-4581-9500-0e7cdc9732d5" name="Note1" type="Note"><loginhibit /><narrative>Version: 2.0.0</narrative><display x="-30" y="-195" w="90" h="30" /><font family="Segoe UI" size="14" style="Bold" color="FF0000" /></stage></process></object>
        <object id="d524d13c-3632-47df-8734-148ffc4d3dc0" name="Write_BOT_ID_File" xmlns="http://www.blueprism.co.uk/product/process"><process name="Write_BOT_ID_File" version="1.0" bpversion="7.0.1.49890" narrative="" byrefcollection="true" type="object" runmode="Exclusive"><appdef><element name="Test_Object"><id>5555ba78-1f6e-4338-864b-11aed791968f</id><type>Application</type><basetype>Application</basetype><datatype>unknown</datatype><diagnose>False</diagnose></element><apptypeinfo><id>BrowserLaunch</id><parameters><parameter><name>Path</name><value></value></parameter><parameter><name>CommandLineParams</name><value></value></parameter><parameter><name>ProcessMode</name><value>Internal</value></parameter><parameter><name>ExternalProcessTimeout</name><value>0</value></parameter></parameters></apptypeinfo></appdef><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view><preconditions /><endpoint narrative="" /><subsheet subsheetid="5dd5971b-e2e1-4b8a-b5fc-c67507216b72" type="CleanUp" published="True"><name>Clean Up</name><view><camerax>0</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><subsheet subsheetid="3fb0464f-0878-413f-ba62-65e58cc2c410" type="Normal" published="True"><name>WriteBOTFile</name><view><camerax>-8</camerax><cameray>0</cameray><zoom version="2">1.25</zoom></view></subsheet><stage stageid="db5653e8-da9e-4602-9f96-0c60dd7d9c0b" name="Start" type="Start"><loginhibit /><display x="15" y="-105" /><onsuccess>0ec93a58-0230-411f-98e1-3db469ef63fe</onsuccess></stage><stage stageid="0ec93a58-0230-411f-98e1-3db469ef63fe" name="End" type="End"><loginhibit /><display x="15" y="90" /></stage><stage stageid="3ad45c08-26e9-42d9-bff6-f2a09372bf5b" name="Stage1" type="ProcessInfo"><display x="-195" y="-105" w="150" h="90" /><references><reference>System.dll</reference><reference>System.Data.dll</reference><reference>System.Xml.dll</reference><reference>System.Drawing.dll</reference></references><imports><import>System</import><import>System.Drawing</import><import>System.Data</import></imports><language>visualbasic</language><globalcode><![CDATA[]]></globalcode><code><![CDATA[]]></code></stage><stage stageid="71e76475-54eb-4b0d-9a80-0757292b7073" name="Clean Up" type="SubSheetInfo"><subsheetid>5dd5971b-e2e1-4b8a-b5fc-c67507216b72</subsheetid><display x="-195" y="-105" w="150" h="90" /></stage><stage stageid="96e2fb9f-43f5-48f6-afcb-fb3ca213cc0e" name="Start" type="Start"><subsheetid>5dd5971b-e2e1-4b8a-b5fc-c67507216b72</subsheetid><loginhibit /><display x="15" y="-105" /><onsuccess>9f7c1679-2eb3-4f83-929b-a17f8dab32be</onsuccess></stage><stage stageid="9f7c1679-2eb3-4f83-929b-a17f8dab32be" name="End" type="End"><subsheetid>5dd5971b-e2e1-4b8a-b5fc-c67507216b72</subsheetid><loginhibit /><display x="15" y="90" /></stage><stage stageid="135afeec-a50b-461d-ac0b-66b67b08e03a" name="WriteBOTFile" type="SubSheetInfo"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><display x="-285" y="-105" w="150" h="90" /></stage><stage stageid="6d74acd5-de0f-4dbc-893d-2121834c01c2" name="Start" type="Start"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><loginhibit /><display x="15" y="-120" /><inputs><input type="text" name="BOT ID" stage="BOT_ID" /><input type="text" name="ResourceName" stage="ResourceName" /><input type="text" name="DossierNo" stage="DossierNo" /></inputs><onsuccess>e4e2090b-4499-441a-bd1d-fe72231a31bf</onsuccess></stage><stage stageid="9dff1c21-c345-495b-994e-03dc92d90e65" name="End" type="End"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><loginhibit /><display x="15" y="15" /></stage><stage stageid="065050cd-ab2f-4574-9b6e-65640d5e7355" name="Note1" type="Note"><subsheetid>5dd5971b-e2e1-4b8a-b5fc-c67507216b72</subsheetid><narrative>Clean Up Page

This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.

The cleanup action will be called automatically immediately after closing your business object at the end of a business process.

You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="73f7936a-e5f5-4d4a-b8bb-b1fa547f3fc8" name="Note2" type="Note"><narrative>Initialise Page

This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.

The initialise action will be called automatically immediately after loading your business object.

You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</narrative><display x="-180" y="60" w="180" h="230" /></stage><stage stageid="e4e2090b-4499-441a-bd1d-fe72231a31bf" name="Write File" type="Action"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><loginhibit /><display x="15" y="-60" /><inputs><input type="text" name="File Name" narrative="The full path to the file to write the text to" expr="&quot;\\robotics\Operations_Excellence\RPA\ProcessLogs\Prod\PO\Reports\Files\&quot;&amp;[ResourceName]&amp;&quot;_&quot;&amp;[BOT_ID]&amp;&quot;.txt&quot;" /><input type="text" name="Text" narrative="The text to write to the file" expr="[DossierNo]" /></inputs><outputs><output type="flag" name="Success" narrative="True if successful" stage="Success" /><output type="text" name="Message" narrative="An error message if unsuccessful" stage="Message" /></outputs><onsuccess>9dff1c21-c345-495b-994e-03dc92d90e65</onsuccess><resource object="Utility - File Management" action="Write Text File" /></stage><stage stageid="faf38430-b605-4b45-9dad-aecd8185d2e7" name="Success" type="Data"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><display x="-270" y="45" /><datatype>flag</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="e25c87bd-1296-4748-9e15-7608485c3e9c" name="Message" type="Data"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><display x="-210" y="45" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="b2d037a3-d3cf-431a-b3fa-6e1eb7a0f6e6" name="BOT_ID" type="Data"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><display x="-255" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="2a71ac44-f0a1-4463-902a-66e2388b77d9" name="ResourceName" type="Data"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><display x="-195" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage><stage stageid="66fb8560-c7da-4d36-b9d5-971e38aa7113" name="DossierNo" type="Data"><subsheetid>3fb0464f-0878-413f-ba62-65e58cc2c410</subsheetid><display x="-135" y="0" /><datatype>text</datatype><initialvalue /><private /><alwaysinit /></stage></process></object>
        <object-group id="62536c19-c84f-4f51-a3e8-d8b9a59eacc8" name="Default" isDefaultGroup="True" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="206bd0b4-0b91-4647-be25-53a6d932b0f5" />
                <object id="515c2352-3631-46e5-b1c2-ef37a846689d" />
                <object id="d42219b1-32a4-40e2-8b2e-5515c882d922" />
                <object id="f27078a2-b13e-4604-b7f7-a8b51581bf93" />
                <object id="47d64af5-9d53-4b29-acd7-934570122309" />
                <object id="e943a4a3-50f0-4b52-a1ae-9225084edaba" />
                <object id="0104a691-0740-4f3f-bfe6-96045186bb1d" />
                <object id="20646147-4b69-4f9a-8ce3-8c757dd4dc56" />
                <object id="745ca56a-386d-4a9f-be65-9ba76de1f1e6" />
                <object id="b60ea06d-f586-422e-abfa-b861e01ac106" />
                <object id="7d2e0267-34a8-4556-855a-ebd454335aa0" />
                <object id="61be0a71-a56c-484c-a748-1357636d3081" />
                <object id="27e791a6-6605-4cfc-84f4-5b8a7409bb49" />
                <object id="48f68549-1770-45ef-8357-46a3a53a4d1a" />
                <object id="e7707cff-2f70-4c61-8f60-be8537f12a2a" />
                <object id="223b1fe8-4d86-4b33-9183-82480741ec15" />
                <object id="d1b336e6-b4ca-4420-9d97-5ad9ef00916c" />
                <object id="d5a3949b-8a1e-432d-92f0-248991d3ef6e" />
                <object id="da5adf86-56dd-4736-afee-e41cf1ca9340" />
                <object id="198719dc-8546-4744-b8d9-8f18c81328c1" />
                <object id="b0ecc93a-a64b-4270-9e9d-e993d4117b8b" />
                <object id="2fe6c4fd-063c-4c70-87cf-4b64b8a6510a" />
                <object id="0d84bbb4-8cac-4560-9e0b-fe4031a9f5df" />
                <object id="5e566acf-abaf-4448-bef3-49a604a319fe" />
                <object id="edb04517-4ab5-49b7-afb6-64b0ccb4ca6c" />
                <object id="b71e99c3-94a3-4c4a-a1b6-a8f013fcb96b" />
                <object id="50afe2c4-6c05-44dd-92e7-a4925cfa62e0" />
                <object id="d524d13c-3632-47df-8734-148ffc4d3dc0" />
            </members>
        </object-group>
        <object-group id="29b41da8-0bdd-4e88-af68-28c4f27b915e" name="Default/Text to Voice" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="45d7738c-ae4a-4ae9-8165-d9441a63a2cd" />
            </members>
        </object-group>
        <object-group id="864282f7-f52a-41d2-ac54-8cfd0302b401" name="Utility" isDefaultGroup="False" xmlns="http://www.blueprism.co.uk/product/object-group">
            <members>
                <object id="9fc19dda-3610-454f-8713-a55af212d309" />
                <object id="29192c0f-d13c-4769-bed3-9c51217efab4" />
                <object id="1aa49fca-ab90-46cf-a662-a0489a0aa41b" />
                <object id="4c6f1aa0-20bf-43bf-a994-2e956c35c4e9" />
                <object id="57b9b8f7-57c8-43b2-984d-a656fd40ec9a" />
                <object id="66085a0f-6bf6-45e2-b5ed-6345f014f05b" />
                <object id="dd2e7562-42fe-4956-8e25-1193f2c3b1df" />
                <object id="e559fb86-9b63-4e0b-9399-972227189995" />
                <object id="b6c8b7d5-4eb0-4238-bd42-350415b818d7" />
                <object id="271d1ae1-f49d-447a-bb0a-40e7950010df" />
                <object id="ade8e3b4-d5bd-464e-90c6-e63097651833" />
                <object id="6f9680f1-616c-4884-b58c-42ed51446377" />
                <object id="92564613-f444-48c5-8ff7-abb4f7ea7548" />
                <object id="644e3c47-ed9c-4267-aed9-51e927db59d4" />
                <object id="f32ab518-c4ab-46ad-afd3-af58dfd14a0a" />
                <object id="1755dccf-ee8a-456b-86d6-6d83220f12de" />
                <object id="7c00fc3b-c10e-40dc-8d46-33f171ca3041" />
                <object id="3a5f7760-1621-4a03-bd1e-c7477b5a6de4" />
                <object id="88d28317-a894-42e7-b45c-abe265af61ce" />
                <object id="bf926e5b-5a53-4629-bf02-31a58a120117" />
                <object id="6efb1579-126a-4563-b2e9-3d9e432c1a79" />
                <object id="35ff84bb-c65a-4d40-b776-e77f90e721d2" />
                <object id="ffa813d2-dd88-485d-8a1f-9c0b321cda1d" />
                <object id="d39ef435-da5c-4e38-a846-b903b2cf3d8e" />
                <object id="6a51f403-f4ab-44ee-b4bf-15710f0dc9bb" />
                <object id="ba504fda-e81a-4ee6-a672-6200b55c48e0" />
                <object id="e290519e-5e15-4865-a384-bfb313c828d3" />
                <object id="1b13f5b8-01d1-441e-bd7f-54884a24d71f" />
            </members>
        </object-group>
    </bpr:contents>
</bpr:release>